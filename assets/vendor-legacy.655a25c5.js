;(function(){var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;function _wrapNativeSuper(Class){var _cache=typeof Map==="function"?new Map():undefined;_wrapNativeSuper=function _wrapNativeSuper(Class){if(Class===null||!_isNativeFunction(Class))return Class;if(typeof Class!=="function"){throw new TypeError("Super expression must either be null or a function");}if(typeof _cache!=="undefined"){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper);}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor);}Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf2(Wrapper,Class);};return _wrapNativeSuper(Class);}function _isNativeFunction(fn){return Function.toString.call(fn).indexOf("[native code]")!==-1;}function _construct(Parent,args,Class){if(_isNativeReflectConstruct()){_construct=Reflect.construct.bind();}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor();if(Class)_setPrototypeOf2(instance,Class.prototype);return instance;};}return _construct.apply(null,arguments);}function _toArray(arr){return _arrayWithHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableRest();}function _get(){if(typeof Reflect!=="undefined"&&Reflect.get){_get=Reflect.get.bind();}else{_get=function _get(target,property,receiver){var base=_superPropBase(target,property);if(!base)return;var desc=Object.getOwnPropertyDescriptor(base,property);if(desc.get){return desc.get.call(arguments.length<3?target:receiver);}return desc.value;};}return _get.apply(this,arguments);}function _superPropBase(object,property){while(!Object.prototype.hasOwnProperty.call(object,property)){object=_getPrototypeOf(object);if(object===null)break;}return object;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});Object.defineProperty(subClass,"prototype",{writable:false});if(superClass)_setPrototypeOf2(subClass,superClass);}function _setPrototypeOf2(o,p){_setPrototypeOf2=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf2(o,p);}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call;}else if(call!==void 0){throw new TypeError("Derived constructors may only return object or undefined");}return _assertThisInitialized2(self);}function _assertThisInitialized2(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e3){throw _e3;},f:F};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e4){didErr=true;err=_e4;},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return();}finally{if(didErr)throw err;}}};}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0);}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}function _defineEnumerableProperties(obj,descs){for(var key in descs){var desc=descs[key];desc.configurable=desc.enumerable=true;if("value"in desc)desc.writable=true;Object.defineProperty(obj,key,desc);}if(Object.getOwnPropertySymbols){var objectSymbols=Object.getOwnPropertySymbols(descs);for(var i=0;i<objectSymbols.length;i++){var sym=objectSymbols[i];var desc=descs[sym];desc.configurable=desc.enumerable=true;if("value"in desc)desc.writable=true;Object.defineProperty(obj,sym,desc);}}return obj;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}System.register([],function(exports){'use strict';return{execute:function execute(){var _isValidElement,_options,_Object$freeze,_mutatorMap,_Object$freeze2,_Object$freeze3,_styled$,_DocumentPosition,_Object$freeze4,_mutatorMap2,_Object$freeze5,_Object$freeze6,_Object$freeze7,_Object$freeze8,_Object$freeze9,_Object$freeze10,_SPECIAL_ELEMENTS,_Object$freeze11;exports({A:A$5,C:Ce,D:MdHd,K:useParams,L:useNavigate,N:MdFavorite,O:MdFavoriteBorder,Q:MdDone,R:MdOutlineRemoveRedEye,U:Ue,a1:MdOutlineFilterAlt,a3:MdDoubleArrow,a7:MdHome,a9:MdNightlight,aa:MdWbSunny,ab:MdSettings,af:useTheme,ag:useLocation,ai:MdMenu,aj:MdSearch,al:Outlet,am:MdSave,an:useSearchParams,aq:We,ar:createTheme,as:StyledEngineProvider,at:ThemeProvider,au:HashRouter,av:Routes,aw:Route,ax:CssBaseline,ay:S$3,e:s$1,f:l$4,g:g$4,h:F$5,m:MdPlayCircle,n:MdPauseCircle,o:MdReplay10,q:MdForward10,r:MdClose,v:videojs,w:MdSkipPrevious,x:MdSkipNext,y:y$3,z:MdSd});var n$5,l$5,u$5,i$2,t$6,r$8,o$2,f$4,e$5={},c$4=[],s$2=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function a$3(n,l){for(var u in l){n[u]=l[u];}return n;}function h$7(n){var l=n.parentNode;l&&l.removeChild(n);}function v$6(l,u,i){var t,r,o,f={};for(o in u){"key"==o?t=u[o]:"ref"==o?r=u[o]:f[o]=u[o];}if(arguments.length>2&&(f.children=arguments.length>3?n$5.call(arguments,2):i),"function"==typeof l&&null!=l.defaultProps)for(o in l.defaultProps){void 0===f[o]&&(f[o]=l.defaultProps[o]);}return y$4(l,f,t,r,null);}function y$4(n,i,t,r,o){var f={type:n,props:i,key:t,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++u$5:o};return null==o&&null!=l$5.vnode&&l$5.vnode(f),f;}function p$6(){return{current:null};}function d$4(n){return n.children;}function _$6(n,l){this.props=n,this.context=l;}function k$7(n,l){if(null==l)return n.__?k$7(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++){if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;}return"function"==typeof n.type?k$7(n):null;}function b$5(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++){if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break;}}return b$5(n);}}function m$4(n){(!n.__d&&(n.__d=!0)&&t$6.push(n)&&!g$6.__r++||o$2!==l$5.debounceRendering)&&((o$2=l$5.debounceRendering)||r$8)(g$6);}function g$6(){for(var n;g$6.__r=t$6.length;){n=t$6.sort(function(n,l){return n.__v.__b-l.__v.__b;}),t$6=[],n.some(function(n){var l,u,i,t,r,o;n.__d&&(r=(t=(l=n).__v).__e,(o=l.__P)&&(u=[],(i=a$3({},t)).__v=t.__v+1,j$4(o,t,i,l.__n,void 0!==o.ownerSVGElement,null!=t.__h?[r]:null,u,null==r?k$7(t):r,t.__h),z$5(u,t),t.__e!=r&&b$5(t)));});}}function w$7(n,l,u,i,t,r,o,f,s,a){var h,v,p,_,b,m,g,w=i&&i.__k||c$4,A=w.length;for(u.__k=[],h=0;h<l.length;h++){if(null!=(_=u.__k[h]=null==(_=l[h])||"boolean"==typeof _?null:"string"==typeof _||"number"==typeof _||"bigint"==typeof _?y$4(null,_,null,null,_):Array.isArray(_)?y$4(d$4,{children:_},null,null,null):_.__b>0?y$4(_.type,_.props,_.key,null,_.__v):_)){if(_.__=u,_.__b=u.__b+1,null===(p=w[h])||p&&_.key==p.key&&_.type===p.type)w[h]=void 0;else for(v=0;v<A;v++){if((p=w[v])&&_.key==p.key&&_.type===p.type){w[v]=void 0;break;}p=null;}j$4(n,_,p=p||e$5,t,r,o,f,s,a),b=_.__e,(v=_.ref)&&p.ref!=v&&(g||(g=[]),p.ref&&g.push(p.ref,null,_),g.push(v,_.__c||b,_)),null!=b?(null==m&&(m=b),"function"==typeof _.type&&_.__k===p.__k?_.__d=s=x$7(_,s,n):s=P$3(n,_,p,w,b,s),"function"==typeof u.type&&(u.__d=s)):s&&p.__e==s&&s.parentNode!=n&&(s=k$7(p));}}for(u.__e=m,h=A;h--;){null!=w[h]&&("function"==typeof u.type&&null!=w[h].__e&&w[h].__e==u.__d&&(u.__d=k$7(i,h+1)),N$2(w[h],w[h]));}if(g)for(h=0;h<g.length;h++){M$3(g[h],g[++h],g[++h]);}}function x$7(n,l,u){for(var i,t=n.__k,r=0;t&&r<t.length;r++){(i=t[r])&&(i.__=n,l="function"==typeof i.type?x$7(i,l,u):P$3(u,i,i,t,i.__e,l));}return l;}function A$6(n,l){return l=l||[],null==n||"boolean"==typeof n||(Array.isArray(n)?n.some(function(n){A$6(n,l);}):l.push(n)),l;}function P$3(n,l,u,i,t,r){var o,f,e;if(void 0!==l.__d)o=l.__d,l.__d=void 0;else if(null==u||t!=r||null==t.parentNode)n:if(null==r||r.parentNode!==n)n.appendChild(t),o=null;else{for(f=r,e=0;(f=f.nextSibling)&&e<i.length;e+=2){if(f==t)break n;}n.insertBefore(t,r),o=r;}return void 0!==o?o:t.nextSibling;}function C$4(n,l,u,i,t){var r;for(r in u){"children"===r||"key"===r||r in l||H$5(n,r,null,u[r],i);}for(r in l){t&&"function"!=typeof l[r]||"children"===r||"key"===r||"value"===r||"checked"===r||u[r]===l[r]||H$5(n,r,l[r],u[r],i);}}function $$4(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]=null==u?"":"number"!=typeof u||s$2.test(l)?u:u+"px";}function H$5(n,l,u,i,t){var r;n:if("style"===l){if("string"==typeof u)n.style.cssText=u;else{if("string"==typeof i&&(n.style.cssText=i=""),i)for(l in i){u&&l in u||$$4(n.style,l,"");}if(u)for(l in u){i&&u[l]===i[l]||$$4(n.style,l,u[l]);}}}else if("o"===l[0]&&"n"===l[1])r=l!==(l=l.replace(/Capture$/,"")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+r]=u,u?i||n.addEventListener(l,r?T$3:I$5,r):n.removeEventListener(l,r?T$3:I$5,r);else if("dangerouslySetInnerHTML"!==l){if(t)l=l.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==l&&"list"!==l&&"form"!==l&&"tabIndex"!==l&&"download"!==l&&l in n)try{n[l]=null==u?"":u;break n;}catch(n){}"function"==typeof u||(null!=u&&(!1!==u||"a"===l[0]&&"r"===l[1])?n.setAttribute(l,u):n.removeAttribute(l));}}function I$5(n){this.l[n.type+!1](l$5.event?l$5.event(n):n);}function T$3(n){this.l[n.type+!0](l$5.event?l$5.event(n):n);}function j$4(n,u,i,t,r,o,f,e,c){var s,h,v,y,p,k,b,m,g,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,o=[e]),(s=l$5.__b)&&s(u);try{n:if("function"==typeof P){if(m=u.props,g=(s=P.contextType)&&t[s.__c],x=s?g?g.props.value:s.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:("prototype"in P&&P.prototype.render?u.__c=h=new P(m,x):(u.__c=h=new _$6(m,x),h.constructor=P,h.render=O$3),g&&g.sub(h),h.props=m,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=P.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=a$3({},h.__s)),a$3(h.__s,P.getDerivedStateFromProps(m,h.__s))),y=h.props,p=h.state,v)null==P.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==P.getDerivedStateFromProps&&m!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,x)||u.__v===i.__v){h.props=m,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u);}),h.__h.length&&f.push(h);break n;}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,p,k);});}h.context=x,h.props=m,h.state=h.__s,(s=l$5.__r)&&s(u),h.__d=!1,h.__v=u,h.__P=n,s=h.render(h.props,h.state,h.context),h.state=h.__s,null!=h.getChildContext&&(t=a$3(a$3({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,p)),A=null!=s&&s.type===d$4&&null==s.key?s.props.children:s,w$7(n,Array.isArray(A)?A:[A],u,i,t,r,o,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1;}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L$3(i.__e,u,i,t,r,o,f,c);(s=l$5.diffed)&&s(u);}catch(n){u.__v=null,(c||null!=o)&&(u.__e=e,u.__h=!!c,o[o.indexOf(e)]=null),l$5.__e(n,u,i);}}function z$5(n,u){l$5.__c&&l$5.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u);});}catch(n){l$5.__e(n,u.__v);}});}function L$3(l,u,i,t,r,o,f,c){var s,a,v,y=i.props,p=u.props,d=u.type,_=0;if("svg"===d&&(r=!0),null!=o)for(;_<o.length;_++){if((s=o[_])&&(s===l||(d?s.localName==d:3==s.nodeType))){l=s,o[_]=null;break;}}if(null==l){if(null===d)return document.createTextNode(p);l=r?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,p.is&&p),o=null,c=!1;}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(o=o&&n$5.call(l.childNodes),a=(y=i.props||e$5).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=o)for(y={},_=0;_<l.attributes.length;_++){y[l.attributes[_].name]=l.attributes[_].value;}(v||a)&&(v&&(a&&v.__html==a.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||""));}if(C$4(l,p,y,r,c),v)u.__k=[];else if(_=u.props.children,w$7(l,Array.isArray(_)?_:[_],u,i,t,r&&"foreignObject"!==d,o,f,o?o[0]:i.__k&&k$7(i,0),c),null!=o)for(_=o.length;_--;){null!=o[_]&&h$7(o[_]);}c||("value"in p&&void 0!==(_=p.value)&&(_!==l.value||"progress"===d&&!_)&&H$5(l,"value",_,y.value,!1),"checked"in p&&void 0!==(_=p.checked)&&_!==l.checked&&H$5(l,"checked",_,y.checked,!1));}return l;}function M$3(n,u,i){try{"function"==typeof n?n(u):n.current=u;}catch(n){l$5.__e(n,i);}}function N$2(n,u,i){var t,r;if(l$5.unmount&&l$5.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M$3(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount();}catch(n){l$5.__e(n,u);}t.base=t.__P=null;}if(t=n.__k)for(r=0;r<t.length;r++){t[r]&&N$2(t[r],u,"function"!=typeof n.type);}i||null==n.__e||h$7(n.__e),n.__e=n.__d=void 0;}function O$3(n,l,u){return this.constructor(n,u);}function S$3(u,i,t){var r,o,f;l$5.__&&l$5.__(u,i),o=(r="function"==typeof t)?null:t&&t.__k||i.__k,f=[],j$4(i,u=(!r&&t||i).__k=v$6(d$4,null,[u]),o||e$5,e$5,void 0!==i.ownerSVGElement,!r&&t?[t]:o?null:i.firstChild?n$5.call(i.childNodes):null,f,!r&&t?t:o?o.__e:i.firstChild,r),z$5(f,u);}function q$8(n,l){S$3(n,l,q$8);}function B$5(l,u,i){var t,r,o,f=a$3({},l.props);for(o in u){"key"==o?t=u[o]:"ref"==o?r=u[o]:f[o]=u[o];}return arguments.length>2&&(f.children=arguments.length>3?n$5.call(arguments,2):i),y$4(l.type,f,t||l.key,r||l.ref,null);}function D$3(n,l){var u={__c:l="__cC"+f$4++,__:n,Consumer:function Consumer(n,l){return n.children(l);},Provider:function Provider(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i;},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(m$4);},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n);};}),n.children;}};return u.Provider.__=u.Consumer.contextType=u;}n$5=c$4.slice,l$5={__e:function __e(n,l){for(var u,i,t;l=l.__;){if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u;}catch(l){n=l;}}throw n;}},u$5=0,i$2=function i$2(n){return null!=n&&void 0===n.constructor;},_$6.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=a$3({},this.state),"function"==typeof n&&(n=n(a$3({},u),this.props)),n&&a$3(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),m$4(this));},_$6.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),m$4(this));},_$6.prototype.render=d$4,t$6=[],r$8="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,g$6.__r=0,f$4=0;var preact_module=/*#__PURE__*/Object.freeze((_Object$freeze={__proto__:null},_defineProperty(_Object$freeze,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze,"render",S$3),_defineProperty(_Object$freeze,"hydrate",q$8),_defineProperty(_Object$freeze,"createElement",v$6),_defineProperty(_Object$freeze,"h",v$6),_defineProperty(_Object$freeze,"Fragment",d$4),_defineProperty(_Object$freeze,"createRef",p$6),_isValidElement="isValidElement",_mutatorMap={},_mutatorMap[_isValidElement]=_mutatorMap[_isValidElement]||{},_mutatorMap[_isValidElement].get=function(){return i$2;},_defineProperty(_Object$freeze,"Component",_$6),_defineProperty(_Object$freeze,"cloneElement",B$5),_defineProperty(_Object$freeze,"createContext",D$3),_defineProperty(_Object$freeze,"toChildArray",A$6),_options="options",_mutatorMap[_options]=_mutatorMap[_options]||{},_mutatorMap[_options].get=function(){return l$5;},_defineEnumerableProperties(_Object$freeze,_mutatorMap),_Object$freeze));var common={black:'#000',white:'#fff'};var common$1=common;var red={50:'#ffebee',100:'#ffcdd2',200:'#ef9a9a',300:'#e57373',400:'#ef5350',500:'#f44336',600:'#e53935',700:'#d32f2f',800:'#c62828',900:'#b71c1c',A100:'#ff8a80',A200:'#ff5252',A400:'#ff1744',A700:'#d50000'};var red$1=red;var purple={50:'#f3e5f5',100:'#e1bee7',200:'#ce93d8',300:'#ba68c8',400:'#ab47bc',500:'#9c27b0',600:'#8e24aa',700:'#7b1fa2',800:'#6a1b9a',900:'#4a148c',A100:'#ea80fc',A200:'#e040fb',A400:'#d500f9',A700:'#aa00ff'};var purple$1=purple;var blue={50:'#e3f2fd',100:'#bbdefb',200:'#90caf9',300:'#64b5f6',400:'#42a5f5',500:'#2196f3',600:'#1e88e5',700:'#1976d2',800:'#1565c0',900:'#0d47a1',A100:'#82b1ff',A200:'#448aff',A400:'#2979ff',A700:'#2962ff'};var blue$1=blue;var lightBlue={50:'#e1f5fe',100:'#b3e5fc',200:'#81d4fa',300:'#4fc3f7',400:'#29b6f6',500:'#03a9f4',600:'#039be5',700:'#0288d1',800:'#0277bd',900:'#01579b',A100:'#80d8ff',A200:'#40c4ff',A400:'#00b0ff',A700:'#0091ea'};var lightBlue$1=lightBlue;var green={50:'#e8f5e9',100:'#c8e6c9',200:'#a5d6a7',300:'#81c784',400:'#66bb6a',500:'#4caf50',600:'#43a047',700:'#388e3c',800:'#2e7d32',900:'#1b5e20',A100:'#b9f6ca',A200:'#69f0ae',A400:'#00e676',A700:'#00c853'};var green$1=green;var orange={50:'#fff3e0',100:'#ffe0b2',200:'#ffcc80',300:'#ffb74d',400:'#ffa726',500:'#ff9800',600:'#fb8c00',700:'#f57c00',800:'#ef6c00',900:'#e65100',A100:'#ffd180',A200:'#ffab40',A400:'#ff9100',A700:'#ff6d00'};var orange$1=orange;var grey={50:'#fafafa',100:'#f5f5f5',200:'#eeeeee',300:'#e0e0e0',400:'#bdbdbd',500:'#9e9e9e',600:'#757575',700:'#616161',800:'#424242',900:'#212121',A100:'#f5f5f5',A200:'#eeeeee',A400:'#bdbdbd',A700:'#616161'};var grey$1=grey;function _extends$5(){_extends$5=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends$5.apply(this,arguments);}var _extends$6=/*#__PURE__*/Object.freeze((_Object$freeze2={__proto__:null},_defineProperty(_Object$freeze2,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze2,'default',_extends$5),_Object$freeze2));function _objectWithoutPropertiesLoose$1(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var t$5,u$4,r$7,o$1=0,i$1=[],c$3=l$5.__b,f$3=l$5.__r,e$4=l$5.diffed,a$2=l$5.__c,v$5=l$5.unmount;function m$3(t,r){l$5.__h&&l$5.__h(u$4,t,o$1||r),o$1=0;var i=u$4.__H||(u$4.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t];}function l$4(n){return o$1=1,p$5(w$6,n);}function p$5(n,r,o){var i=m$3(t$5++,2);return i.t=n,i.__c||(i.__=[o?o(r):w$6(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}));}],i.__c=u$4),i.__;}function y$3(r,o){var i=m$3(t$5++,3);!l$5.__s&&k$6(i.__H,o)&&(i.__=r,i.__H=o,u$4.__H.__h.push(i));}function h$6(r,o){var i=m$3(t$5++,4);!l$5.__s&&k$6(i.__H,o)&&(i.__=r,i.__H=o,u$4.__h.push(i));}function s$1(n){return o$1=5,A$5(function(){return{current:n};},[]);}function _$5(n,t,u){o$1=6,h$6(function(){"function"==typeof n?n(t()):n&&(n.current=t());},null==u?u:u.concat(n));}function A$5(n,u){var r=m$3(t$5++,7);return k$6(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__;}function F$5(n,t){return o$1=8,A$5(function(){return n;},t);}function T$2(n){var r=u$4.context[n.__c],o=m$3(t$5++,9);return o.c=n,r?(null==o.__&&(o.__=!0,r.sub(u$4)),r.props.value):n.__;}function d$3(t,u){l$5.useDebugValue&&l$5.useDebugValue(u?u(t):t);}function q$7(n){var r=m$3(t$5++,10),o=l$4();return r.__=n,u$4.componentDidCatch||(u$4.componentDidCatch=function(n){r.__&&r.__(n),o[1](n);}),[o[0],function(){o[1](void 0);}];}function x$6(){i$1.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g$5),t.__H.__h.forEach(j$3),t.__H.__h=[];}catch(u){t.__H.__h=[],l$5.__e(u,t.__v);}}),i$1=[];}l$5.__b=function(n){u$4=null,c$3&&c$3(n);},l$5.__r=function(n){f$3&&f$3(n),t$5=0;var r=(u$4=n.__c).__H;r&&(r.__h.forEach(g$5),r.__h.forEach(j$3),r.__h=[]);},l$5.diffed=function(t){e$4&&e$4(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i$1.push(o)&&r$7===l$5.requestAnimationFrame||((r$7=l$5.requestAnimationFrame)||function(n){var t,u=function u(){clearTimeout(r),b$4&&cancelAnimationFrame(t),setTimeout(n);},r=setTimeout(u,100);b$4&&(t=requestAnimationFrame(u));})(x$6)),u$4=null;},l$5.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g$5),t.__h=t.__h.filter(function(n){return!n.__||j$3(n);});}catch(r){u.some(function(n){n.__h&&(n.__h=[]);}),u=[],l$5.__e(r,t.__v);}}),a$2&&a$2(t,u);},l$5.unmount=function(t){v$5&&v$5(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g$5);}catch(t){l$5.__e(t,u.__v);}};var b$4="function"==typeof requestAnimationFrame;function g$5(n){var t=u$4;"function"==typeof n.__c&&n.__c(),u$4=t;}function j$3(n){var t=u$4;n.__c=n.__(),u$4=t;}function k$6(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u];});}function w$6(n,t){return"function"==typeof t?t(n):t;}function S$2(n,t){for(var e in t){n[e]=t[e];}return n;}function C$3(n,t){for(var e in n){if("__source"!==e&&!(e in t))return!0;}for(var r in t){if("__source"!==r&&n[r]!==t[r])return!0;}return!1;}function E$5(n){this.props=n;}function g$4(n,t){function e(n){var e=this.props.ref,r=e==n.ref;return!r&&e&&(e.call?e(null):e.current=null),t?!t(this.props,n)||!r:C$3(this.props,n);}function r(t){return this.shouldComponentUpdate=e,v$6(n,t);}return r.displayName="Memo("+(n.displayName||n.name)+")",r.prototype.isReactComponent=!0,r.__f=!0,r;}(E$5.prototype=new _$6()).isPureReactComponent=!0,E$5.prototype.shouldComponentUpdate=function(n,t){return C$3(this.props,n)||C$3(this.state,t);};var w$5=l$5.__b;l$5.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),w$5&&w$5(n);};var R$2="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.forward_ref")||3911;function x$5(n){function t(t,e){var r=S$2({},t);return delete r.ref,n(r,(e=t.ref||e)&&("object"!=_typeof(e)||"current"in e)?e:null);}return t.$$typeof=R$2,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName="ForwardRef("+(n.displayName||n.name)+")",t;}var N$1=function N$1(n,t){return null==n?null:A$6(A$6(n).map(t));},k$5={map:N$1,forEach:N$1,count:function count(n){return n?A$6(n).length:0;},only:function only(n){var t=A$6(n);if(1!==t.length)throw"Children.only";return t[0];},toArray:A$6},A$4=l$5.__e;l$5.__e=function(n,t,e){if(n.then)for(var r,u=t;u=u.__;){if((r=u.__c)&&r.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),r.__c(n,t);}A$4(n,t,e);};var O$2=l$5.unmount;function L$2(){this.__u=0,this.t=null,this.__b=null;}function U$2(n){var t=n.__.__c;return t&&t.__e&&t.__e(n);}function F$4(n){var t,e,r;function u(u){if(t||(t=n()).then(function(n){e=n.default||n;},function(n){r=n;}),r)throw r;if(!e)throw t;return v$6(e,u);}return u.displayName="Lazy",u.__f=!0,u;}function M$2(){this.u=null,this.o=null;}l$5.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),O$2&&O$2(n);},(L$2.prototype=new _$6()).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=U$2(r.__v),o=!1,i=function i(){o||(o=!0,e.__R=null,u?u(l):l());};e.__R=i;var l=function l(){if(! --r.__u){if(r.state.__e){var n=r.state.__e;r.__v.__k[0]=function n(t,e,r){return t&&(t.__v=null,t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r);}),t.__c&&t.__c.__P===e&&(t.__e&&r.insertBefore(t.__e,t.__d),t.__c.__e=!0,t.__c.__P=r)),t;}(n,n.__c.__P,n.__c.__O);}var t;for(r.setState({__e:r.__b=null});t=r.t.pop();){t.forceUpdate();}}},c=!0===t.__h;r.__u++||c||r.setState({__e:r.__b=r.__v.__k[0]}),n.then(i,i);},L$2.prototype.componentWillUnmount=function(){this.t=[];},L$2.prototype.render=function(n,t){if(this.__b){if(this.__v.__k){var e=document.createElement("div"),r=this.__v.__k[0].__c;this.__v.__k[0]=function n(t,e,r){return t&&(t.__c&&t.__c.__H&&(t.__c.__H.__.forEach(function(n){"function"==typeof n.__c&&n.__c();}),t.__c.__H=null),null!=(t=S$2({},t)).__c&&(t.__c.__P===r&&(t.__c.__P=e),t.__c=null),t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r);})),t;}(this.__b,e,r.__O=r.__P);}this.__b=null;}var u=t.__e&&v$6(d$4,null,n.fallback);return u&&(u.__h=null),[v$6(d$4,null,t.__e?null:n.children),u];};var T$1=function T$1(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&("t"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;){e.pop()();}if(e[1]<e[0])break;n.u=e=e[2];}};function D$2(n){return this.getChildContext=function(){return n.context;},n.children;}function I$4(n){var t=this,e=n.i;t.componentWillUnmount=function(){S$3(null,t.l),t.l=null,t.i=null;},t.i&&t.i!==e&&t.componentWillUnmount(),n.__v?(t.l||(t.i=e,t.l={nodeType:1,parentNode:e,childNodes:[],appendChild:function appendChild(n){this.childNodes.push(n),t.i.appendChild(n);},insertBefore:function insertBefore(n,e){this.childNodes.push(n),t.i.appendChild(n);},removeChild:function removeChild(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),t.i.removeChild(n);}}),S$3(v$6(D$2,{context:t.context},n.__v),t.l)):t.l&&t.componentWillUnmount();}function W$2(n,t){return v$6(I$4,{__v:n,i:t});}(M$2.prototype=new _$6()).__e=function(n){var t=this,e=U$2(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function o(){t.props.revealOrder?(r.push(u),T$1(t,n,r)):u();};e?e(o):o();};},M$2.prototype.render=function(n){this.u=null,this.o=new Map();var t=A$6(n.children);n.revealOrder&&"b"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;){this.o.set(t[e],this.u=[1,0,this.u]);}return n.children;},M$2.prototype.componentDidUpdate=M$2.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){T$1(n,e,t);});};var j$2="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,P$2=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,V$1="undefined"!=typeof document,z$4=function z$4(n){return("undefined"!=typeof Symbol&&"symbol"==_typeof(Symbol())?/fil|che|rad/i:/fil|che|ra/i).test(n);};function B$4(n,t,e){return null==t.__k&&(t.textContent=""),S$3(n,t),"function"==typeof e&&e(),n?n.__c:null;}function H$4(n,t,e){return q$8(n,t),"function"==typeof e&&e(),n?n.__c:null;}_$6.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(n){Object.defineProperty(_$6.prototype,n,{configurable:!0,get:function get(){return this["UNSAFE_"+n];},set:function set(t){Object.defineProperty(this,n,{configurable:!0,writable:!0,value:t});}});});var Z$2=l$5.event;function Y$1(){}function $$3(){return this.cancelBubble;}function q$6(){return this.defaultPrevented;}l$5.event=function(n){return Z$2&&(n=Z$2(n)),n.persist=Y$1,n.isPropagationStopped=$$3,n.isDefaultPrevented=q$6,n.nativeEvent=n;};var G$3,J$2={configurable:!0,get:function get(){return this.class;}},K$1=l$5.vnode;l$5.vnode=function(n){var t=n.type,e=n.props,r=e;if("string"==typeof t){var u=-1===t.indexOf("-");for(var o in r={},e){var i=e[o];V$1&&"children"===o&&"noscript"===t||"value"===o&&"defaultValue"in e&&null==i||("defaultValue"===o&&"value"in e&&null==e.value?o="value":"download"===o&&!0===i?i="":/ondoubleclick/i.test(o)?o="ondblclick":/^onchange(textarea|input)/i.test(o+t)&&!z$4(e.type)?o="oninput":/^on(Ani|Tra|Tou|BeforeInp)/.test(o)?o=o.toLowerCase():u&&P$2.test(o)?o=o.replace(/[A-Z0-9]/,"-$&").toLowerCase():null===i&&(i=void 0),r[o]=i);}"select"==t&&r.multiple&&Array.isArray(r.value)&&(r.value=A$6(e.children).forEach(function(n){n.props.selected=-1!=r.value.indexOf(n.props.value);})),"select"==t&&null!=r.defaultValue&&(r.value=A$6(e.children).forEach(function(n){n.props.selected=r.multiple?-1!=r.defaultValue.indexOf(n.props.value):r.defaultValue==n.props.value;})),n.props=r;}t&&e.class!=e.className&&(J$2.enumerable="className"in e,null!=e.className&&(r.class=e.className),Object.defineProperty(r,"className",J$2)),n.$$typeof=j$2,K$1&&K$1(n);};var Q$2=l$5.__r;l$5.__r=function(n){Q$2&&Q$2(n),G$3=n.__c;};var X$2={ReactCurrentDispatcher:{current:{readContext:function readContext(n){return G$3.__n[n.__c].props.value;}}}},nn$1="17.0.2";function tn$1(n){return v$6.bind(null,n);}function en$1(n){return!!n&&n.$$typeof===j$2;}function rn$1(n){return en$1(n)?B$5.apply(null,arguments):n;}function un$1(n){return!!n.__k&&(S$3(null,n),!0);}function on$2(n){return n&&(n.base||1===n.nodeType&&n)||null;}var ln=function ln(n,t){return n(t);},cn=function cn(n,t){return n(t);},fn$1=d$4;var t$4={useState:l$4,useReducer:p$5,useEffect:y$3,useLayoutEffect:h$6,useRef:s$1,useImperativeHandle:_$5,useMemo:A$5,useCallback:F$5,useContext:T$2,useDebugValue:d$3,version:"17.0.2",Children:k$5,render:B$4,hydrate:H$4,unmountComponentAtNode:un$1,createPortal:W$2,createElement:v$6,createContext:D$3,createFactory:tn$1,cloneElement:rn$1,createRef:p$6,Fragment:d$4,isValidElement:en$1,findDOMNode:on$2,Component:_$6,PureComponent:E$5,memo:g$4,forwardRef:x$5,flushSync:cn,unstable_batchedUpdates:ln,StrictMode:d$4,Suspense:L$2,SuspenseList:M$2,lazy:F$4,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:X$2};var compat_module=/*#__PURE__*/Object.freeze((_Object$freeze3={__proto__:null},_defineProperty(_Object$freeze3,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze3,'default',t$4),_defineProperty(_Object$freeze3,"version",nn$1),_defineProperty(_Object$freeze3,"Children",k$5),_defineProperty(_Object$freeze3,"render",B$4),_defineProperty(_Object$freeze3,"hydrate",H$4),_defineProperty(_Object$freeze3,"unmountComponentAtNode",un$1),_defineProperty(_Object$freeze3,"createPortal",W$2),_defineProperty(_Object$freeze3,"createFactory",tn$1),_defineProperty(_Object$freeze3,"cloneElement",rn$1),_defineProperty(_Object$freeze3,"isValidElement",en$1),_defineProperty(_Object$freeze3,"findDOMNode",on$2),_defineProperty(_Object$freeze3,"PureComponent",E$5),_defineProperty(_Object$freeze3,"memo",g$4),_defineProperty(_Object$freeze3,"forwardRef",x$5),_defineProperty(_Object$freeze3,"flushSync",cn),_defineProperty(_Object$freeze3,"unstable_batchedUpdates",ln),_defineProperty(_Object$freeze3,"StrictMode",fn$1),_defineProperty(_Object$freeze3,"Suspense",L$2),_defineProperty(_Object$freeze3,"SuspenseList",M$2),_defineProperty(_Object$freeze3,"lazy",F$4),_defineProperty(_Object$freeze3,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",X$2),_defineProperty(_Object$freeze3,"createElement",v$6),_defineProperty(_Object$freeze3,"createContext",D$3),_defineProperty(_Object$freeze3,"createRef",p$6),_defineProperty(_Object$freeze3,"Fragment",d$4),_defineProperty(_Object$freeze3,"Component",_$6),_defineProperty(_Object$freeze3,"useState",l$4),_defineProperty(_Object$freeze3,"useReducer",p$5),_defineProperty(_Object$freeze3,"useEffect",y$3),_defineProperty(_Object$freeze3,"useLayoutEffect",h$6),_defineProperty(_Object$freeze3,"useRef",s$1),_defineProperty(_Object$freeze3,"useImperativeHandle",_$5),_defineProperty(_Object$freeze3,"useMemo",A$5),_defineProperty(_Object$freeze3,"useCallback",F$5),_defineProperty(_Object$freeze3,"useContext",T$2),_defineProperty(_Object$freeze3,"useDebugValue",d$3),_defineProperty(_Object$freeze3,"useErrorBoundary",q$7),_Object$freeze3));function memoize$2(fn){var cache=Object.create(null);return function(arg){if(cache[arg]===undefined)cache[arg]=fn(arg);return cache[arg];};}var reactPropsRegex$1=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;// https://esbench.com/bench/5bfee68a4cd7e6009ef61d23
var isPropValid=/* #__PURE__ */memoize$2(function(prop){return reactPropsRegex$1.test(prop)||prop.charCodeAt(0)===111/* o */&&prop.charCodeAt(1)===110/* n */&&prop.charCodeAt(2)<91;}/* Z+1 */);/*

      Based off glamor's StyleSheet, thanks Sunil ❤️

      high performance StyleSheet for css-in-js systems

      - uses multiple style tags behind the scenes for millions of rules
      - uses `insertRule` for appending in production for *much* faster performance

      // usage

      import { StyleSheet } from '@emotion/sheet'

      let styleSheet = new StyleSheet({ key: '', container: document.head })

      styleSheet.insert('#box { border: 1px solid red; }')
      - appends a css rule into the stylesheet

      styleSheet.flush()
      - empties the stylesheet of all its contents

      */ // $FlowFixMe
function sheetForTag(tag){if(tag.sheet){// $FlowFixMe
return tag.sheet;}// this weirdness brought to you by firefox
/* istanbul ignore next */for(var i=0;i<document.styleSheets.length;i++){if(document.styleSheets[i].ownerNode===tag){// $FlowFixMe
return document.styleSheets[i];}}}function createStyleElement$1(options){var tag=document.createElement('style');tag.setAttribute('data-emotion',options.key);if(options.nonce!==undefined){tag.setAttribute('nonce',options.nonce);}tag.appendChild(document.createTextNode(''));tag.setAttribute('data-s','');return tag;}var StyleSheet=/*#__PURE__*/function(){function StyleSheet(options){var _this=this;this._insertTag=function(tag){var before;if(_this.tags.length===0){if(_this.insertionPoint){before=_this.insertionPoint.nextSibling;}else if(_this.prepend){before=_this.container.firstChild;}else{before=_this.before;}}else{before=_this.tags[_this.tags.length-1].nextSibling;}_this.container.insertBefore(tag,before);_this.tags.push(tag);};this.isSpeedy=options.speedy===undefined?"production"==='production':options.speedy;this.tags=[];this.ctr=0;this.nonce=options.nonce;// key is the value of the data-emotion attribute, it's used to identify different sheets
this.key=options.key;this.container=options.container;this.prepend=options.prepend;this.insertionPoint=options.insertionPoint;this.before=null;}var _proto=StyleSheet.prototype;_proto.hydrate=function hydrate(nodes){nodes.forEach(this._insertTag);};_proto.insert=function insert(rule){// the max length is how many rules we have per style tag, it's 65000 in speedy mode
// it's 1 in dev because we insert source maps that map a single rule to a location
// and you can only have one source map per style tag
if(this.ctr%(this.isSpeedy?65000:1)===0){this._insertTag(createStyleElement$1(this));}var tag=this.tags[this.tags.length-1];if(this.isSpeedy){var sheet=sheetForTag(tag);try{// this is the ultrafast version, works across browsers
// the big drawback is that the css won't be editable in devtools
sheet.insertRule(rule,sheet.cssRules.length);}catch(e){}}else{tag.appendChild(document.createTextNode(rule));}this.ctr++;};_proto.flush=function flush(){// $FlowFixMe
this.tags.forEach(function(tag){return tag.parentNode&&tag.parentNode.removeChild(tag);});this.tags=[];this.ctr=0;};return StyleSheet;}();var MS='-ms-';var MOZ='-moz-';var WEBKIT='-webkit-';var COMMENT='comm';var RULESET='rule';var DECLARATION='decl';var IMPORT='@import';var KEYFRAMES='@keyframes';/**
       * @param {number}
       * @return {number}
       */var abs=Math.abs;/**
       * @param {number}
       * @return {string}
       */var from$1=String.fromCharCode;/**
       * @param {object}
       * @return {object}
       */var assign$1=Object.assign;/**
       * @param {string} value
       * @param {number} length
       * @return {number}
       */function hash(value,length){return(((length<<2^charat(value,0))<<2^charat(value,1))<<2^charat(value,2))<<2^charat(value,3);}/**
       * @param {string} value
       * @return {string}
       */function trim$1(value){return value.trim();}/**
       * @param {string} value
       * @param {RegExp} pattern
       * @return {string?}
       */function match(value,pattern){return(value=pattern.exec(value))?value[0]:value;}/**
       * @param {string} value
       * @param {(string|RegExp)} pattern
       * @param {string} replacement
       * @return {string}
       */function replace(value,pattern,replacement){return value.replace(pattern,replacement);}/**
       * @param {string} value
       * @param {string} search
       * @return {number}
       */function indexof(value,search){return value.indexOf(search);}/**
       * @param {string} value
       * @param {number} index
       * @return {number}
       */function charat(value,index){return value.charCodeAt(index)|0;}/**
       * @param {string} value
       * @param {number} begin
       * @param {number} end
       * @return {string}
       */function substr(value,begin,end){return value.slice(begin,end);}/**
       * @param {string} value
       * @return {number}
       */function strlen(value){return value.length;}/**
       * @param {any[]} value
       * @return {number}
       */function sizeof(value){return value.length;}/**
       * @param {any} value
       * @param {any[]} array
       * @return {any}
       */function append$2(value,array){return array.push(value),value;}/**
       * @param {string[]} array
       * @param {function} callback
       * @return {string}
       */function combine(array,callback){return array.map(callback).join('');}var line=1;var column=1;var length=0;var position$2=0;var character=0;var characters='';/**
       * @param {string} value
       * @param {object | null} root
       * @param {object | null} parent
       * @param {string} type
       * @param {string[] | string} props
       * @param {object[] | string} children
       * @param {number} length
       */function node(value,root,parent,type,props,children,length){return{value:value,root:root,parent:parent,type:type,props:props,children:children,line:line,column:column,length:length,return:''};}/**
       * @param {object} root
       * @param {object} props
       * @return {object}
       */function copy$2(root,props){return assign$1(node('',null,null,'',null,null,0),root,{length:-root.length},props);}/**
       * @return {number}
       */function char(){return character;}/**
       * @return {number}
       */function prev$1(){character=position$2>0?charat(characters,--position$2):0;if(column--,character===10)column=1,line--;return character;}/**
       * @return {number}
       */function next$1(){character=position$2<length?charat(characters,position$2++):0;if(column++,character===10)column=1,line++;return character;}/**
       * @return {number}
       */function peek(){return charat(characters,position$2);}/**
       * @return {number}
       */function caret(){return position$2;}/**
       * @param {number} begin
       * @param {number} end
       * @return {string}
       */function slice$1(begin,end){return substr(characters,begin,end);}/**
       * @param {number} type
       * @return {number}
       */function token(type){switch(type){// \0 \t \n \r \s whitespace token
case 0:case 9:case 10:case 13:case 32:return 5;// ! + , / > @ ~ isolate token
case 33:case 43:case 44:case 47:case 62:case 64:case 126:// ; { } breakpoint token
case 59:case 123:case 125:return 4;// : accompanied token
case 58:return 3;// " ' ( [ opening delimit token
case 34:case 39:case 40:case 91:return 2;// ) ] closing delimit token
case 41:case 93:return 1;}return 0;}/**
       * @param {string} value
       * @return {any[]}
       */function alloc(value){return line=column=1,length=strlen(characters=value),position$2=0,[];}/**
       * @param {any} value
       * @return {any}
       */function dealloc(value){return characters='',value;}/**
       * @param {number} type
       * @return {string}
       */function delimit(type){return trim$1(slice$1(position$2-1,delimiter(type===91?type+2:type===40?type+1:type)));}/**
       * @param {number} type
       * @return {string}
       */function whitespace$1(type){while(character=peek()){if(character<33)next$1();else break;}return token(type)>2||token(character)>3?'':' ';}/**
       * @param {number} index
       * @param {number} count
       * @return {string}
       */function escaping(index,count){while(--count&&next$1()){// not 0-9 A-F a-f
if(character<48||character>102||character>57&&character<65||character>70&&character<97)break;}return slice$1(index,caret()+(count<6&&peek()==32&&next$1()==32));}/**
       * @param {number} type
       * @return {number}
       */function delimiter(type){while(next$1()){switch(character){// ] ) " '
case type:return position$2;// " '
case 34:case 39:if(type!==34&&type!==39)delimiter(character);break;// (
case 40:if(type===41)delimiter(type);break;// \
case 92:next$1();break;}}return position$2;}/**
       * @param {number} type
       * @param {number} index
       * @return {number}
       */function commenter(type,index){while(next$1()){// //
if(type+character===47+10)break;// /*
else if(type+character===42+42&&peek()===47)break;}return'/*'+slice$1(index,position$2-1)+'*'+from$1(type===47?type:next$1());}/**
       * @param {number} index
       * @return {string}
       */function identifier(index){while(!token(peek())){next$1();}return slice$1(index,position$2);}/**
       * @param {string} value
       * @return {object[]}
       */function compile$1(value){return dealloc(parse$7('',null,null,null,[''],value=alloc(value),0,[0],value));}/**
       * @param {string} value
       * @param {object} root
       * @param {object?} parent
       * @param {string[]} rule
       * @param {string[]} rules
       * @param {string[]} rulesets
       * @param {number[]} pseudo
       * @param {number[]} points
       * @param {string[]} declarations
       * @return {object}
       */function parse$7(value,root,parent,rule,rules,rulesets,pseudo,points,declarations){var index=0;var offset=0;var length=pseudo;var atrule=0;var property=0;var previous=0;var variable=1;var scanning=1;var ampersand=1;var character=0;var type='';var props=rules;var children=rulesets;var reference=rule;var characters=type;while(scanning){switch(previous=character,character=next$1()){// (
case 40:if(previous!=108&&characters.charCodeAt(length-1)==58){if(indexof(characters+=replace(delimit(character),'&','&\f'),'&\f')!=-1)ampersand=-1;break;}// " ' [
case 34:case 39:case 91:characters+=delimit(character);break;// \t \n \r \s
case 9:case 10:case 13:case 32:characters+=whitespace$1(previous);break;// \
case 92:characters+=escaping(caret()-1,7);continue;// /
case 47:switch(peek()){case 42:case 47:append$2(comment(commenter(next$1(),caret()),root,parent),declarations);break;default:characters+='/';}break;// {
case 123*variable:points[index++]=strlen(characters)*ampersand;// } ; \0
case 125*variable:case 59:case 0:switch(character){// \0 }
case 0:case 125:scanning=0;// ;
case 59+offset:if(property>0&&strlen(characters)-length)append$2(property>32?declaration(characters+';',rule,parent,length-1):declaration(replace(characters,' ','')+';',rule,parent,length-2),declarations);break;// @ ;
case 59:characters+=';';// { rule/at-rule
default:append$2(reference=ruleset(characters,root,parent,index,offset,rules,points,type,props=[],children=[],length),rulesets);if(character===123)if(offset===0)parse$7(characters,root,reference,reference,props,rulesets,length,points,children);else switch(atrule){// d m s
case 100:case 109:case 115:parse$7(value,reference,reference,rule&&append$2(ruleset(value,reference,reference,0,0,rules,points,type,rules,props=[],length),children),rules,children,length,points,rule?props:children);break;default:parse$7(characters,reference,reference,reference,[''],children,0,points,children);}}index=offset=property=0,variable=ampersand=1,type=characters='',length=pseudo;break;// :
case 58:length=1+strlen(characters),property=previous;default:if(variable<1)if(character==123)--variable;else if(character==125&&variable++==0&&prev$1()==125)continue;switch(characters+=from$1(character),character*variable){// &
case 38:ampersand=offset>0?1:(characters+='\f',-1);break;// ,
case 44:points[index++]=(strlen(characters)-1)*ampersand,ampersand=1;break;// @
case 64:// -
if(peek()===45)characters+=delimit(next$1());atrule=peek(),offset=length=strlen(type=characters+=identifier(caret())),character++;break;// -
case 45:if(previous===45&&strlen(characters)==2)variable=0;}}}return rulesets;}/**
       * @param {string} value
       * @param {object} root
       * @param {object?} parent
       * @param {number} index
       * @param {number} offset
       * @param {string[]} rules
       * @param {number[]} points
       * @param {string} type
       * @param {string[]} props
       * @param {string[]} children
       * @param {number} length
       * @return {object}
       */function ruleset(value,root,parent,index,offset,rules,points,type,props,children,length){var post=offset-1;var rule=offset===0?rules:[''];var size=sizeof(rule);for(var i=0,j=0,k=0;i<index;++i){for(var x=0,y=substr(value,post+1,post=abs(j=points[i])),z=value;x<size;++x){if(z=trim$1(j>0?rule[x]+' '+y:replace(y,/&\f/g,rule[x])))props[k++]=z;}}return node(value,root,parent,offset===0?RULESET:type,props,children,length);}/**
       * @param {number} value
       * @param {object} root
       * @param {object?} parent
       * @return {object}
       */function comment(value,root,parent){return node(value,root,parent,COMMENT,from$1(char()),substr(value,2,-2),0);}/**
       * @param {string} value
       * @param {object} root
       * @param {object?} parent
       * @param {number} length
       * @return {object}
       */function declaration(value,root,parent,length){return node(value,root,parent,DECLARATION,substr(value,0,length),substr(value,length+1,-1),length);}/**
       * @param {string} value
       * @param {number} length
       * @return {string}
       */function prefix(value,length){switch(hash(value,length)){// color-adjust
case 5103:return WEBKIT+'print-'+value+value;// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return WEBKIT+value+value;// appearance, user-select, transform, hyphens, text-size-adjust
case 5349:case 4246:case 4810:case 6968:case 2756:return WEBKIT+value+MOZ+value+MS+value+value;// flex, flex-direction
case 6828:case 4268:return WEBKIT+value+MS+value+value;// order
case 6165:return WEBKIT+value+MS+'flex-'+value+value;// align-items
case 5187:return WEBKIT+value+replace(value,/(\w+).+(:[^]+)/,WEBKIT+'box-$1$2'+MS+'flex-$1$2')+value;// align-self
case 5443:return WEBKIT+value+MS+'flex-item-'+replace(value,/flex-|-self/,'')+value;// align-content
case 4675:return WEBKIT+value+MS+'flex-line-pack'+replace(value,/align-content|flex-|-self/,'')+value;// flex-shrink
case 5548:return WEBKIT+value+MS+replace(value,'shrink','negative')+value;// flex-basis
case 5292:return WEBKIT+value+MS+replace(value,'basis','preferred-size')+value;// flex-grow
case 6060:return WEBKIT+'box-'+replace(value,'-grow','')+WEBKIT+value+MS+replace(value,'grow','positive')+value;// transition
case 4554:return WEBKIT+replace(value,/([^-])(transform)/g,'$1'+WEBKIT+'$2')+value;// cursor
case 6187:return replace(replace(replace(value,/(zoom-|grab)/,WEBKIT+'$1'),/(image-set)/,WEBKIT+'$1'),value,'')+value;// background, background-image
case 5495:case 3959:return replace(value,/(image-set\([^]*)/,WEBKIT+'$1'+'$`$1');// justify-content
case 4968:return replace(replace(value,/(.+:)(flex-)?(.*)/,WEBKIT+'box-pack:$3'+MS+'flex-pack:$3'),/s.+-b[^;]+/,'justify')+WEBKIT+value+value;// (margin|padding)-inline-(start|end)
case 4095:case 3583:case 4068:case 2532:return replace(value,/(.+)-inline(.+)/,WEBKIT+'$1$2')+value;// (min|max)?(width|height|inline-size|block-size)
case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:// stretch, max-content, min-content, fill-available
if(strlen(value)-1-length>6)switch(charat(value,length+1)){// (m)ax-content, (m)in-content
case 109:// -
if(charat(value,length+4)!==45)break;// (f)ill-available, (f)it-content
case 102:return replace(value,/(.+:)(.+)-([^]+)/,'$1'+WEBKIT+'$2-$3'+'$1'+MOZ+(charat(value,length+3)==108?'$3':'$2-$3'))+value;// (s)tretch
case 115:return~indexof(value,'stretch')?prefix(replace(value,'stretch','fill-available'),length)+value:value;}break;// position: sticky
case 4949:// (s)ticky?
if(charat(value,length+1)!==115)break;// display: (flex|inline-flex)
case 6444:switch(charat(value,strlen(value)-3-(~indexof(value,'!important')&&10))){// stic(k)y
case 107:return replace(value,':',':'+WEBKIT)+value;// (inline-)?fl(e)x
case 101:return replace(value,/(.+:)([^;!]+)(;|!.+)?/,'$1'+WEBKIT+(charat(value,14)===45?'inline-':'')+'box$3'+'$1'+WEBKIT+'$2$3'+'$1'+MS+'$2box$3')+value;}break;// writing-mode
case 5936:switch(charat(value,length+11)){// vertical-l(r)
case 114:return WEBKIT+value+MS+replace(value,/[svh]\w+-[tblr]{2}/,'tb')+value;// vertical-r(l)
case 108:return WEBKIT+value+MS+replace(value,/[svh]\w+-[tblr]{2}/,'tb-rl')+value;// horizontal(-)tb
case 45:return WEBKIT+value+MS+replace(value,/[svh]\w+-[tblr]{2}/,'lr')+value;}return WEBKIT+value+MS+value+value;}return value;}/**
       * @param {object[]} children
       * @param {function} callback
       * @return {string}
       */function serialize$2(children,callback){var output='';var length=sizeof(children);for(var i=0;i<length;i++){output+=callback(children[i],i,children,callback)||'';}return output;}/**
       * @param {object} element
       * @param {number} index
       * @param {object[]} children
       * @param {function} callback
       * @return {string}
       */function stringify$1(element,index,children,callback){switch(element.type){case IMPORT:case DECLARATION:return element.return=element.return||element.value;case COMMENT:return'';case KEYFRAMES:return element.return=element.value+'{'+serialize$2(element.children,callback)+'}';case RULESET:element.value=element.props.join(',');}return strlen(children=serialize$2(element.children,callback))?element.return=element.value+'{'+children+'}':'';}/**
       * @param {function[]} collection
       * @return {function}
       */function middleware(collection){var length=sizeof(collection);return function(element,index,children,callback){var output='';for(var i=0;i<length;i++){output+=collection[i](element,index,children,callback)||'';}return output;};}/**
       * @param {function} callback
       * @return {function}
       */function rulesheet(callback){return function(element){if(!element.root)if(element=element.return)callback(element);};}/**
       * @param {object} element
       * @param {number} index
       * @param {object[]} children
       * @param {function} callback
       */function prefixer(element,index,children,callback){if(element.length>-1)if(!element.return)switch(element.type){case DECLARATION:element.return=prefix(element.value,element.length);break;case KEYFRAMES:return serialize$2([copy$2(element,{value:replace(element.value,'@','@'+WEBKIT)})],callback);case RULESET:if(element.length)return combine(element.props,function(value){switch(match(value,/(::plac\w+|:read-\w+)/)){// :read-(only|write)
case':read-only':case':read-write':return serialize$2([copy$2(element,{props:[replace(value,/:(read-\w+)/,':'+MOZ+'$1')]})],callback);// :placeholder
case'::placeholder':return serialize$2([copy$2(element,{props:[replace(value,/:(plac\w+)/,':'+WEBKIT+'input-$1')]}),copy$2(element,{props:[replace(value,/:(plac\w+)/,':'+MOZ+'$1')]}),copy$2(element,{props:[replace(value,/:(plac\w+)/,MS+'input-$1')]})],callback);}return'';});}}var identifierWithPointTracking=function identifierWithPointTracking(begin,points,index){var previous=0;var character=0;while(true){previous=character;character=peek();// &\f
if(previous===38&&character===12){points[index]=1;}if(token(character)){break;}next$1();}return slice$1(begin,position$2);};var toRules=function toRules(parsed,points){// pretend we've started with a comma
var index=-1;var character=44;do{switch(token(character)){case 0:// &\f
if(character===38&&peek()===12){// this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
// stylis inserts \f after & to know when & where it should replace this sequence with the context selector
// and when it should just concatenate the outer and inner selectors
// it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
points[index]=1;}parsed[index]+=identifierWithPointTracking(position$2-1,points,index);break;case 2:parsed[index]+=delimit(character);break;case 4:// comma
if(character===44){// colon
parsed[++index]=peek()===58?'&\f':'';points[index]=parsed[index].length;break;}// fallthrough
default:parsed[index]+=from$1(character);}}while(character=next$1());return parsed;};var getRules=function getRules(value,points){return dealloc(toRules(alloc(value),points));};// WeakSet would be more appropriate, but only WeakMap is supported in IE11
var fixedElements=/* #__PURE__ */new WeakMap();var compat=function compat(element){if(element.type!=='rule'||!element.parent||// positive .length indicates that this rule contains pseudo
// negative .length indicates that this rule has been already prefixed
element.length<1){return;}var value=element.value,parent=element.parent;var isImplicitRule=element.column===parent.column&&element.line===parent.line;while(parent.type!=='rule'){parent=parent.parent;if(!parent)return;}// short-circuit for the simplest case
if(element.props.length===1&&value.charCodeAt(0)!==58/* colon */&&!fixedElements.get(parent)){return;}// if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
// then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"
if(isImplicitRule){return;}fixedElements.set(element,true);var points=[];var rules=getRules(value,points);var parentRules=parent.props;for(var i=0,k=0;i<rules.length;i++){for(var j=0;j<parentRules.length;j++,k++){element.props[k]=points[i]?rules[i].replace(/&\f/g,parentRules[j]):parentRules[j]+" "+rules[i];}}};var removeLabel=function removeLabel(element){if(element.type==='decl'){var value=element.value;if(// charcode for l
value.charCodeAt(0)===108&&// charcode for b
value.charCodeAt(2)===98){// this ignores label
element["return"]='';element.value='';}}};var defaultStylisPlugins=[prefixer];var createCache=function createCache(options){var key=options.key;if(key==='css'){var ssrStyles=document.querySelectorAll("style[data-emotion]:not([data-s])");// get SSRed styles out of the way of React's hydration
// document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
// note this very very intentionally targets all style elements regardless of the key to ensure
// that creating a cache works inside of render of a React component
Array.prototype.forEach.call(ssrStyles,function(node){// we want to only move elements which have a space in the data-emotion attribute value
// because that indicates that it is an Emotion 11 server-side rendered style elements
// while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
// Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
// so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
// will not result in the Emotion 10 styles being destroyed
var dataEmotionAttribute=node.getAttribute('data-emotion');if(dataEmotionAttribute.indexOf(' ')===-1){return;}document.head.appendChild(node);node.setAttribute('data-s','');});}var stylisPlugins=options.stylisPlugins||defaultStylisPlugins;var inserted={};// $FlowFixMe
var container;var nodesToHydrate=[];{container=options.container||document.head;Array.prototype.forEach.call(// this means we will ignore elements which don't have a space in them which
// means that the style elements we're looking at are only Emotion 11 server-rendered style elements
document.querySelectorAll("style[data-emotion^=\""+key+" \"]"),function(node){var attrib=node.getAttribute("data-emotion").split(' ');// $FlowFixMe
for(var i=1;i<attrib.length;i++){inserted[attrib[i]]=true;}nodesToHydrate.push(node);});}var _insert;var omnipresentPlugins=[compat,removeLabel];{var currentSheet;var finalizingPlugins=[stringify$1,rulesheet(function(rule){currentSheet.insert(rule);})];var serializer=middleware(omnipresentPlugins.concat(stylisPlugins,finalizingPlugins));var stylis=function stylis(styles){return serialize$2(compile$1(styles),serializer);};_insert=function insert(selector,serialized,sheet,shouldCache){currentSheet=sheet;stylis(selector?selector+"{"+serialized.styles+"}":serialized.styles);if(shouldCache){cache.inserted[serialized.name]=true;}};}var cache={key:key,sheet:new StyleSheet({key:key,container:container,nonce:options.nonce,speedy:options.speedy,prepend:options.prepend,insertionPoint:options.insertionPoint}),nonce:options.nonce,inserted:inserted,registered:{},insert:_insert};cache.sheet.hydrate(nodesToHydrate);return cache;};var createCache$1=createCache;var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function getAugmentedNamespace(n){if(n.__esModule)return n;var a=Object.defineProperty({},'__esModule',{value:true});Object.keys(n).forEach(function(k){var d=Object.getOwnPropertyDescriptor(n,k);Object.defineProperty(a,k,d.get?d:{enumerable:true,get:function get(){return n[k];}});});return a;}var reactIs$2={exports:{}};var reactIs_production_min$1={};/** @license React v16.13.1
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var b$3="function"===typeof Symbol&&Symbol.for,c$2=b$3?Symbol.for("react.element"):60103,d$2=b$3?Symbol.for("react.portal"):60106,e$3=b$3?Symbol.for("react.fragment"):60107,f$2=b$3?Symbol.for("react.strict_mode"):60108,g$3=b$3?Symbol.for("react.profiler"):60114,h$5=b$3?Symbol.for("react.provider"):60109,k$4=b$3?Symbol.for("react.context"):60110,l$3=b$3?Symbol.for("react.async_mode"):60111,m$2=b$3?Symbol.for("react.concurrent_mode"):60111,n$4=b$3?Symbol.for("react.forward_ref"):60112,p$4=b$3?Symbol.for("react.suspense"):60113,q$5=b$3?Symbol.for("react.suspense_list"):60120,r$6=b$3?Symbol.for("react.memo"):60115,t$3=b$3?Symbol.for("react.lazy"):60116,v$4=b$3?Symbol.for("react.block"):60121,w$4=b$3?Symbol.for("react.fundamental"):60117,x$4=b$3?Symbol.for("react.responder"):60118,y$2=b$3?Symbol.for("react.scope"):60119;function z$3(a){if("object"===_typeof(a)&&null!==a){var u=a.$$typeof;switch(u){case c$2:switch(a=a.type,a){case l$3:case m$2:case e$3:case g$3:case f$2:case p$4:return a;default:switch(a=a&&a.$$typeof,a){case k$4:case n$4:case t$3:case r$6:case h$5:return a;default:return u;}}case d$2:return u;}}}function A$3(a){return z$3(a)===m$2;}reactIs_production_min$1.AsyncMode=l$3;reactIs_production_min$1.ConcurrentMode=m$2;reactIs_production_min$1.ContextConsumer=k$4;reactIs_production_min$1.ContextProvider=h$5;reactIs_production_min$1.Element=c$2;reactIs_production_min$1.ForwardRef=n$4;reactIs_production_min$1.Fragment=e$3;reactIs_production_min$1.Lazy=t$3;reactIs_production_min$1.Memo=r$6;reactIs_production_min$1.Portal=d$2;reactIs_production_min$1.Profiler=g$3;reactIs_production_min$1.StrictMode=f$2;reactIs_production_min$1.Suspense=p$4;reactIs_production_min$1.isAsyncMode=function(a){return A$3(a)||z$3(a)===l$3;};reactIs_production_min$1.isConcurrentMode=A$3;reactIs_production_min$1.isContextConsumer=function(a){return z$3(a)===k$4;};reactIs_production_min$1.isContextProvider=function(a){return z$3(a)===h$5;};reactIs_production_min$1.isElement=function(a){return"object"===_typeof(a)&&null!==a&&a.$$typeof===c$2;};reactIs_production_min$1.isForwardRef=function(a){return z$3(a)===n$4;};reactIs_production_min$1.isFragment=function(a){return z$3(a)===e$3;};reactIs_production_min$1.isLazy=function(a){return z$3(a)===t$3;};reactIs_production_min$1.isMemo=function(a){return z$3(a)===r$6;};reactIs_production_min$1.isPortal=function(a){return z$3(a)===d$2;};reactIs_production_min$1.isProfiler=function(a){return z$3(a)===g$3;};reactIs_production_min$1.isStrictMode=function(a){return z$3(a)===f$2;};reactIs_production_min$1.isSuspense=function(a){return z$3(a)===p$4;};reactIs_production_min$1.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e$3||a===m$2||a===g$3||a===f$2||a===p$4||a===q$5||"object"===_typeof(a)&&null!==a&&(a.$$typeof===t$3||a.$$typeof===r$6||a.$$typeof===h$5||a.$$typeof===k$4||a.$$typeof===n$4||a.$$typeof===w$4||a.$$typeof===x$4||a.$$typeof===y$2||a.$$typeof===v$4);};reactIs_production_min$1.typeOf=z$3;{reactIs$2.exports=reactIs_production_min$1;}var reactIs$1=reactIs$2.exports;/**
       * Copyright 2015, Yahoo! Inc.
       * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
       */var REACT_STATICS={childContextTypes:true,contextType:true,contextTypes:true,defaultProps:true,displayName:true,getDefaultProps:true,getDerivedStateFromError:true,getDerivedStateFromProps:true,mixins:true,propTypes:true,type:true};var KNOWN_STATICS={name:true,length:true,prototype:true,caller:true,callee:true,arguments:true,arity:true};var FORWARD_REF_STATICS={'$$typeof':true,render:true,defaultProps:true,displayName:true,propTypes:true};var MEMO_STATICS={'$$typeof':true,compare:true,defaultProps:true,displayName:true,propTypes:true,type:true};var TYPE_STATICS={};TYPE_STATICS[reactIs$1.ForwardRef]=FORWARD_REF_STATICS;TYPE_STATICS[reactIs$1.Memo]=MEMO_STATICS;function getStatics(component){// React v16.11 and below
if(reactIs$1.isMemo(component)){return MEMO_STATICS;}// React v16.12 and above
return TYPE_STATICS[component['$$typeof']]||REACT_STATICS;}var defineProperty=Object.defineProperty;var getOwnPropertyNames=Object.getOwnPropertyNames;var getOwnPropertySymbols=Object.getOwnPropertySymbols;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var getPrototypeOf=Object.getPrototypeOf;var objectPrototype=Object.prototype;function hoistNonReactStatics(targetComponent,sourceComponent,blacklist){if(typeof sourceComponent!=='string'){// don't hoist over string (html) components
if(objectPrototype){var inheritedComponent=getPrototypeOf(sourceComponent);if(inheritedComponent&&inheritedComponent!==objectPrototype){hoistNonReactStatics(targetComponent,inheritedComponent,blacklist);}}var keys=getOwnPropertyNames(sourceComponent);if(getOwnPropertySymbols){keys=keys.concat(getOwnPropertySymbols(sourceComponent));}var targetStatics=getStatics(targetComponent);var sourceStatics=getStatics(sourceComponent);for(var i=0;i<keys.length;++i){var key=keys[i];if(!KNOWN_STATICS[key]&&!(blacklist&&blacklist[key])&&!(sourceStatics&&sourceStatics[key])&&!(targetStatics&&targetStatics[key])){var descriptor=getOwnPropertyDescriptor(sourceComponent,key);try{// Avoid failures from read-only properties
defineProperty(targetComponent,key,descriptor);}catch(e){}}}}return targetComponent;}var hoistNonReactStatics_cjs=hoistNonReactStatics;var isBrowser="object"!=='undefined';function getRegisteredStyles(registered,registeredStyles,classNames){var rawClassName='';classNames.split(' ').forEach(function(className){if(registered[className]!==undefined){registeredStyles.push(registered[className]+";");}else{rawClassName+=className+" ";}});return rawClassName;}var insertStyles=function insertStyles(cache,serialized,isStringTag){var className=cache.key+"-"+serialized.name;if(// we only need to add the styles to the registered cache if the
// class name could be used further down
// the tree but if it's a string tag, we know it won't
// so we don't have to add it to registered cache.
// this improves memory usage since we can avoid storing the whole style string
(isStringTag===false||// we need to always store it if we're in compat mode and
// in node since emotion-server relies on whether a style is in
// the registered cache to know whether a style is global or not
// also, note that this check will be dead code eliminated in the browser
isBrowser===false)&&cache.registered[className]===undefined){cache.registered[className]=serialized.styles;}if(cache.inserted[serialized.name]===undefined){var current=serialized;do{cache.insert(serialized===current?"."+className:'',current,cache.sheet,true);current=current.next;}while(current!==undefined);}};/* eslint-disable */ // Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str){// 'm' and 'r' are mixing constants generated offline.
// They're not really 'magic', they just happen to work well.
// const m = 0x5bd1e995;
// const r = 24;
// Initialize the hash
var h=0;// Mix 4 bytes at a time into the hash
var k,i=0,len=str.length;for(;len>=4;++i,len-=4){k=str.charCodeAt(i)&0xff|(str.charCodeAt(++i)&0xff)<<8|(str.charCodeAt(++i)&0xff)<<16|(str.charCodeAt(++i)&0xff)<<24;k=/* Math.imul(k, m): */(k&0xffff)*0x5bd1e995+((k>>>16)*0xe995<<16);k^=/* k >>> r: */k>>>24;h=/* Math.imul(k, m): */(k&0xffff)*0x5bd1e995+((k>>>16)*0xe995<<16)^/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);}// Handle the last few bytes of the input array
switch(len){case 3:h^=(str.charCodeAt(i+2)&0xff)<<16;case 2:h^=(str.charCodeAt(i+1)&0xff)<<8;case 1:h^=str.charCodeAt(i)&0xff;h=/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);}// Do a few final mixes of the hash to ensure the last few
// bytes are well-incorporated.
h^=h>>>13;h=/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);return((h^h>>>15)>>>0).toString(36);}var unitlessKeys={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,// SVG-related properties
fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var hyphenateRegex=/[A-Z]|^ms/g;var animationRegex=/_EMO_([^_]+?)_([^]*?)_EMO_/g;var isCustomProperty=function isCustomProperty(property){return property.charCodeAt(1)===45;};var isProcessableValue=function isProcessableValue(value){return value!=null&&typeof value!=='boolean';};var processStyleName=/* #__PURE__ */memoize$2(function(styleName){return isCustomProperty(styleName)?styleName:styleName.replace(hyphenateRegex,'-$&').toLowerCase();});var processStyleValue=function processStyleValue(key,value){switch(key){case'animation':case'animationName':{if(typeof value==='string'){return value.replace(animationRegex,function(match,p1,p2){cursor={name:p1,styles:p2,next:cursor};return p1;});}}}if(unitlessKeys[key]!==1&&!isCustomProperty(key)&&typeof value==='number'&&value!==0){return value+'px';}return value;};function handleInterpolation(mergedProps,registered,interpolation){if(interpolation==null){return'';}if(interpolation.__emotion_styles!==undefined){return interpolation;}switch(_typeof(interpolation)){case'boolean':{return'';}case'object':{if(interpolation.anim===1){cursor={name:interpolation.name,styles:interpolation.styles,next:cursor};return interpolation.name;}if(interpolation.styles!==undefined){var next=interpolation.next;if(next!==undefined){// not the most efficient thing ever but this is a pretty rare case
// and there will be very few iterations of this generally
while(next!==undefined){cursor={name:next.name,styles:next.styles,next:cursor};next=next.next;}}var styles=interpolation.styles+";";return styles;}return createStringFromObject(mergedProps,registered,interpolation);}case'function':{if(mergedProps!==undefined){var previousCursor=cursor;var result=interpolation(mergedProps);cursor=previousCursor;return handleInterpolation(mergedProps,registered,result);}break;}}// finalize string values (regular strings and functions interpolated into css calls)
if(registered==null){return interpolation;}var cached=registered[interpolation];return cached!==undefined?cached:interpolation;}function createStringFromObject(mergedProps,registered,obj){var string='';if(Array.isArray(obj)){for(var i=0;i<obj.length;i++){string+=handleInterpolation(mergedProps,registered,obj[i])+";";}}else{for(var _key in obj){var value=obj[_key];if(_typeof(value)!=='object'){if(registered!=null&&registered[value]!==undefined){string+=_key+"{"+registered[value]+"}";}else if(isProcessableValue(value)){string+=processStyleName(_key)+":"+processStyleValue(_key,value)+";";}}else{if(_key==='NO_COMPONENT_SELECTOR'&&"production"!=='production'){throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');}if(Array.isArray(value)&&typeof value[0]==='string'&&(registered==null||registered[value[0]]===undefined)){for(var _i=0;_i<value.length;_i++){if(isProcessableValue(value[_i])){string+=processStyleName(_key)+":"+processStyleValue(_key,value[_i])+";";}}}else{var interpolated=handleInterpolation(mergedProps,registered,value);switch(_key){case'animation':case'animationName':{string+=processStyleName(_key)+":"+interpolated+";";break;}default:{string+=_key+"{"+interpolated+"}";}}}}}}return string;}var labelPattern=/label:\s*([^\s;\n{]+)\s*(;|$)/g;// keyframes are stored on the SerializedStyles object as a linked list
var cursor;var serializeStyles=function serializeStyles(args,registered,mergedProps){if(args.length===1&&_typeof(args[0])==='object'&&args[0]!==null&&args[0].styles!==undefined){return args[0];}var stringMode=true;var styles='';cursor=undefined;var strings=args[0];if(strings==null||strings.raw===undefined){stringMode=false;styles+=handleInterpolation(mergedProps,registered,strings);}else{styles+=strings[0];}// we start at 1 since we've already handled the first arg
for(var i=1;i<args.length;i++){styles+=handleInterpolation(mergedProps,registered,args[i]);if(stringMode){styles+=strings[i];}}labelPattern.lastIndex=0;var identifierName='';var match;// https://esbench.com/bench/5b809c2cf2949800a0f61fb5
while((match=labelPattern.exec(styles))!==null){identifierName+='-'+// $FlowFixMe we know it's not null
match[1];}var name=murmur2(styles)+identifierName;return{name:name,styles:styles,next:cursor};};var EmotionCacheContext=/* #__PURE__ */D$3(// we're doing this to avoid preconstruct's dead code elimination in this one case
// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement!=='undefined'?/* #__PURE__ */createCache$1({key:'css'}):null);var CacheProvider=EmotionCacheContext.Provider;var withEmotionCache=function withEmotionCache(func){// $FlowFixMe
return/*#__PURE__*/x$5(function(props,ref){// the cache will never be null in the browser
var cache=T$2(EmotionCacheContext);return func(props,cache,ref);});};var ThemeContext$2=/* #__PURE__ */D$3({});// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag
var Global=/* #__PURE__ */withEmotionCache(function(props,cache){var styles=props.styles;var serialized=serializeStyles([styles],undefined,T$2(ThemeContext$2));// but it is based on a constant that will never change at runtime
// it's effectively like having two implementations and switching them out
// so it's not actually breaking anything
var sheetRef=s$1();h$6(function(){var key=cache.key+"-global";var sheet=new StyleSheet({key:key,nonce:cache.sheet.nonce,container:cache.sheet.container,speedy:cache.sheet.isSpeedy});var rehydrating=false;// $FlowFixMe
var node=document.querySelector("style[data-emotion=\""+key+" "+serialized.name+"\"]");if(cache.sheet.tags.length){sheet.before=cache.sheet.tags[0];}if(node!==null){rehydrating=true;// clear the hash so this node won't be recognizable as rehydratable by other <Global/>s
node.setAttribute('data-emotion',key);sheet.hydrate([node]);}sheetRef.current=[sheet,rehydrating];return function(){sheet.flush();};},[cache]);h$6(function(){var sheetRefCurrent=sheetRef.current;var sheet=sheetRefCurrent[0],rehydrating=sheetRefCurrent[1];if(rehydrating){sheetRefCurrent[1]=false;return;}if(serialized.next!==undefined){// insert keyframes
insertStyles(cache,serialized.next,true);}if(sheet.tags.length){// if this doesn't exist then it will be null so the style element will be appended
var element=sheet.tags[sheet.tags.length-1].nextElementSibling;sheet.before=element;sheet.flush();}cache.insert("",serialized,sheet,false);},[cache,serialized.name]);return null;});function css$1(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return serializeStyles(args);}var keyframes=function keyframes(){var insertable=css$1.apply(void 0,arguments);var name="animation-"+insertable.name;// $FlowFixMe
return{name:name,styles:"@keyframes "+name+"{"+insertable.styles+"}",anim:1,toString:function toString(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_";}};};var testOmitPropsOnStringTag=isPropValid;var testOmitPropsOnComponent=function testOmitPropsOnComponent(key){return key!=='theme';};var getDefaultShouldForwardProp=function getDefaultShouldForwardProp(tag){return typeof tag==='string'&&// 96 is one less than the char code
// for "a" so this is checking that
// it's a lowercase character
tag.charCodeAt(0)>96?testOmitPropsOnStringTag:testOmitPropsOnComponent;};var composeShouldForwardProps=function composeShouldForwardProps(tag,options,isReal){var shouldForwardProp;if(options){var optionsShouldForwardProp=options.shouldForwardProp;shouldForwardProp=tag.__emotion_forwardProp&&optionsShouldForwardProp?function(propName){return tag.__emotion_forwardProp(propName)&&optionsShouldForwardProp(propName);}:optionsShouldForwardProp;}if(typeof shouldForwardProp!=='function'&&isReal){shouldForwardProp=tag.__emotion_forwardProp;}return shouldForwardProp;};var Noop=function Noop(){return null;};var createStyled$1=function createStyled(tag,options){var isReal=tag.__emotion_real===tag;var baseTag=isReal&&tag.__emotion_base||tag;var identifierName;var targetClassName;if(options!==undefined){identifierName=options.label;targetClassName=options.target;}var shouldForwardProp=composeShouldForwardProps(tag,options,isReal);var defaultShouldForwardProp=shouldForwardProp||getDefaultShouldForwardProp(baseTag);var shouldUseAs=!defaultShouldForwardProp('as');return function(){var args=arguments;var styles=isReal&&tag.__emotion_styles!==undefined?tag.__emotion_styles.slice(0):[];if(identifierName!==undefined){styles.push("label:"+identifierName+";");}if(args[0]==null||args[0].raw===undefined){styles.push.apply(styles,args);}else{styles.push(args[0][0]);var len=args.length;var i=1;for(;i<len;i++){styles.push(args[i],args[0][i]);}}// $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class
var Styled=withEmotionCache(function(props,cache,ref){var finalTag=shouldUseAs&&props.as||baseTag;var className='';var classInterpolations=[];var mergedProps=props;if(props.theme==null){mergedProps={};for(var key in props){mergedProps[key]=props[key];}mergedProps.theme=T$2(ThemeContext$2);}if(typeof props.className==='string'){className=getRegisteredStyles(cache.registered,classInterpolations,props.className);}else if(props.className!=null){className=props.className+" ";}var serialized=serializeStyles(styles.concat(classInterpolations),cache.registered,mergedProps);insertStyles(cache,serialized,typeof finalTag==='string');className+=cache.key+"-"+serialized.name;if(targetClassName!==undefined){className+=" "+targetClassName;}var finalShouldForwardProp=shouldUseAs&&shouldForwardProp===undefined?getDefaultShouldForwardProp(finalTag):defaultShouldForwardProp;var newProps={};for(var _key in props){if(shouldUseAs&&_key==='as')continue;if(// $FlowFixMe
finalShouldForwardProp(_key)){newProps[_key]=props[_key];}}newProps.className=className;newProps.ref=ref;var ele=/*#__PURE__*/v$6(finalTag,newProps);var possiblyStyleElement=/*#__PURE__*/v$6(Noop,null);return/*#__PURE__*/v$6(d$4,null,possiblyStyleElement,ele);});Styled.displayName=identifierName!==undefined?identifierName:"Styled("+(typeof baseTag==='string'?baseTag:baseTag.displayName||baseTag.name||'Component')+")";Styled.defaultProps=tag.defaultProps;Styled.__emotion_real=Styled;Styled.__emotion_base=baseTag;Styled.__emotion_styles=styles;Styled.__emotion_forwardProp=shouldForwardProp;Object.defineProperty(Styled,'toString',{value:function value(){if(targetClassName===undefined&&"production"!=='production'){return'NO_COMPONENT_SELECTOR';}// $FlowFixMe: coerce undefined to string
return"."+targetClassName;}});Styled.withComponent=function(nextTag,nextOptions){return createStyled(nextTag,_extends$5({},options,nextOptions,{shouldForwardProp:composeShouldForwardProps(Styled,nextOptions,true)})).apply(void 0,styles);};return Styled;};};var tags=['a','abbr','address','area','article','aside','audio','b','base','bdi','bdo','big','blockquote','body','br','button','canvas','caption','cite','code','col','colgroup','data','datalist','dd','del','details','dfn','dialog','div','dl','dt','em','embed','fieldset','figcaption','figure','footer','form','h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','i','iframe','img','input','ins','kbd','keygen','label','legend','li','link','main','map','mark','marquee','menu','menuitem','meta','meter','nav','noscript','object','ol','optgroup','option','output','p','param','picture','pre','progress','q','rp','rt','ruby','s','samp','script','section','select','small','source','span','strong','style','sub','summary','sup','table','tbody','td','textarea','tfoot','th','thead','time','title','tr','track','u','ul','var','video','wbr',// SVG
'circle','clipPath','defs','ellipse','foreignObject','g','image','line','linearGradient','mask','path','pattern','polygon','polyline','radialGradient','rect','stop','svg','text','tspan'];var newStyled=createStyled$1.bind();tags.forEach(function(tagName){// $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type
newStyled[tagName]=newStyled(tagName);});var emStyled=newStyled;var require$$0$2=/*@__PURE__*/getAugmentedNamespace(preact_module);var jsxs$1;var jsx$1;var Fragment$1;var r$5=require$$0$2,_$4=0;function e$2(e,o,n,t,l){var u,f,i={};for(f in o){"ref"==f?u=o[f]:i[f]=o[f];}var p={type:e,props:i,key:n,ref:u,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--_$4,__source:t,__self:l};if("function"==typeof e&&(u=e.defaultProps))for(f in u){void 0===i[f]&&(i[f]=u[f]);}return r$5.options.vnode&&r$5.options.vnode(p),p;}Fragment$1=r$5.Fragment,jsx$1=e$2,jsxs$1=e$2;var jsx=exports('a',jsx$1);var jsxs=exports('j',jsxs$1);var Fragment=exports('F',Fragment$1);var cache$1=createCache$1({key:'css',prepend:true});function StyledEngineProvider(props){var injectFirst=props.injectFirst,children=props.children;return injectFirst?/*#__PURE__*/jsx(CacheProvider,{value:cache$1,children:children}):children;}function isEmpty$4(obj){return obj===undefined||obj===null||Object.keys(obj).length===0;}function GlobalStyles$1(props){var styles=props.styles,_props$defaultTheme=props.defaultTheme,defaultTheme=_props$defaultTheme===void 0?{}:_props$defaultTheme;var globalStyles=typeof styles==='function'?function(themeInput){return styles(isEmpty$4(themeInput)?defaultTheme:themeInput);}:styles;return/*#__PURE__*/jsx(Global,{styles:globalStyles});}/** @license MUI v5.3.0
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */function styled$3(tag,options){var stylesFactory=emStyled(tag,options);return stylesFactory;}function isPlainObject$1(item){return item!==null&&_typeof(item)==='object'&&item.constructor===Object;}function deepmerge(target,source){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{clone:true};var output=options.clone?_extends$5({},target):target;if(isPlainObject$1(target)&&isPlainObject$1(source)){Object.keys(source).forEach(function(key){// Avoid prototype pollution
if(key==='__proto__'){return;}if(isPlainObject$1(source[key])&&key in target&&isPlainObject$1(target[key])){// Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
output[key]=deepmerge(target[key],source[key],options);}else{output[key]=source[key];}});}return output;}/**
       * WARNING: Don't import this directly.
       * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.
       * @param {number} code
       */function formatMuiErrorMessage(code){// Apply babel-plugin-transform-template-literals in loose mode
// loose mode is safe iff we're concatenating primitives
// see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose
/* eslint-disable prefer-template */var url='https://mui.com/production-error/?code='+code;for(var _i2=1;_i2<arguments.length;_i2+=1){// rest params over-transpile for this case
// eslint-disable-next-line prefer-rest-params
url+='&args[]='+encodeURIComponent(arguments[_i2]);}return'Minified MUI error #'+code+'; visit '+url+' for the full message.';/* eslint-enable prefer-template */}var reactIs={exports:{}};var reactIs_production_min={};/** @license React v17.0.2
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var b$2=60103,c$1=60106,d$1=60107,e$1=60108,f$1=60114,g$2=60109,h$4=60110,k$3=60112,l$2=60113,m$1=60120,n$3=60115,p$3=60116,q$4=60121,r$4=60122,u$3=60117,v$3=60129,w$3=60131;if("function"===typeof Symbol&&Symbol.for){var x$3=Symbol.for;b$2=x$3("react.element");c$1=x$3("react.portal");d$1=x$3("react.fragment");e$1=x$3("react.strict_mode");f$1=x$3("react.profiler");g$2=x$3("react.provider");h$4=x$3("react.context");k$3=x$3("react.forward_ref");l$2=x$3("react.suspense");m$1=x$3("react.suspense_list");n$3=x$3("react.memo");p$3=x$3("react.lazy");q$4=x$3("react.block");r$4=x$3("react.server.block");u$3=x$3("react.fundamental");v$3=x$3("react.debug_trace_mode");w$3=x$3("react.legacy_hidden");}function y$1(a){if("object"===_typeof(a)&&null!==a){var t=a.$$typeof;switch(t){case b$2:switch(a=a.type,a){case d$1:case f$1:case e$1:case l$2:case m$1:return a;default:switch(a=a&&a.$$typeof,a){case h$4:case k$3:case p$3:case n$3:case g$2:return a;default:return t;}}case c$1:return t;}}}var z$2=g$2,A$2=b$2,B$3=k$3,C$2=d$1,D$1=p$3,E$4=n$3,F$3=c$1,G$2=f$1,H$3=e$1,I$3=l$2;reactIs_production_min.ContextConsumer=h$4;reactIs_production_min.ContextProvider=z$2;reactIs_production_min.Element=A$2;reactIs_production_min.ForwardRef=B$3;reactIs_production_min.Fragment=C$2;reactIs_production_min.Lazy=D$1;reactIs_production_min.Memo=E$4;reactIs_production_min.Portal=F$3;reactIs_production_min.Profiler=G$2;reactIs_production_min.StrictMode=H$3;reactIs_production_min.Suspense=I$3;reactIs_production_min.isAsyncMode=function(){return!1;};reactIs_production_min.isConcurrentMode=function(){return!1;};reactIs_production_min.isContextConsumer=function(a){return y$1(a)===h$4;};reactIs_production_min.isContextProvider=function(a){return y$1(a)===g$2;};reactIs_production_min.isElement=function(a){return"object"===_typeof(a)&&null!==a&&a.$$typeof===b$2;};reactIs_production_min.isForwardRef=function(a){return y$1(a)===k$3;};reactIs_production_min.isFragment=function(a){return y$1(a)===d$1;};reactIs_production_min.isLazy=function(a){return y$1(a)===p$3;};reactIs_production_min.isMemo=function(a){return y$1(a)===n$3;};reactIs_production_min.isPortal=function(a){return y$1(a)===c$1;};reactIs_production_min.isProfiler=function(a){return y$1(a)===f$1;};reactIs_production_min.isStrictMode=function(a){return y$1(a)===e$1;};reactIs_production_min.isSuspense=function(a){return y$1(a)===l$2;};reactIs_production_min.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===d$1||a===f$1||a===v$3||a===e$1||a===l$2||a===m$1||a===w$3||"object"===_typeof(a)&&null!==a&&(a.$$typeof===p$3||a.$$typeof===n$3||a.$$typeof===g$2||a.$$typeof===h$4||a.$$typeof===k$3||a.$$typeof===u$3||a.$$typeof===q$4||a[0]===r$4)?!0:!1;};reactIs_production_min.typeOf=y$1;{reactIs.exports=reactIs_production_min;}// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
//
// A strict capitalization should uppercase the first letter of each word in the sentence.
// We only handle the first word.
function capitalize(string){if(typeof string!=='string'){throw new Error(formatMuiErrorMessage(7));}return string.charAt(0).toUpperCase()+string.slice(1);}/**
       * Safe chained function.
       *
       * Will only create a new function if needed,
       * otherwise will pass back existing functions or null.
       */function createChainedFunction(){for(var _len2=arguments.length,funcs=new Array(_len2),_key2=0;_key2<_len2;_key2++){funcs[_key2]=arguments[_key2];}return funcs.reduce(function(acc,func){if(func==null){return acc;}return function chainedFunction(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}acc.apply(this,args);func.apply(this,args);};},function(){});}// Corresponds to 10 frames at 60 Hz.
// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
function debounce$1(func){var wait=arguments.length>1&&arguments[1]!==undefined?arguments[1]:166;var timeout;function debounced(){var _this5=this;for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}var later=function later(){func.apply(_this5,args);};clearTimeout(timeout);timeout=setTimeout(later,wait);}debounced.clear=function(){clearTimeout(timeout);};return debounced;}function isMuiElement(element,muiNames){return/*#__PURE__*/en$1(element)&&muiNames.indexOf(element.type.muiName)!==-1;}function ownerDocument(node){return node&&node.ownerDocument||document;}function ownerWindow(node){var doc=ownerDocument(node);return doc.defaultView||window;}/**
       * TODO v5: consider making it private
       *
       * passes {value} to {ref}
       *
       * WARNING: Be sure to only call this inside a callback that is passed as a ref.
       * Otherwise, make sure to cleanup the previous {ref} if it changes. See
       * https://github.com/mui-org/material-ui/issues/13539
       *
       * Useful if you want to expose the ref of an inner component to the public API
       * while still using it inside the component.
       * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
       */function setRef(ref,value){if(typeof ref==='function'){ref(value);}else if(ref){ref.current=value;}}var useEnhancedEffect=typeof window!=='undefined'?h$6:y$3;var useEnhancedEffect$1=useEnhancedEffect;var globalId=0;function useId(idOverride){var _l$=l$4(idOverride),_l$2=_slicedToArray(_l$,2),defaultId=_l$2[0],setDefaultId=_l$2[1];var id=idOverride||defaultId;y$3(function(){if(defaultId==null){// Fallback to this default id when possible.
// Use the incrementing value for client-side rendering only.
// We can't use it server-side.
// If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
globalId+=1;setDefaultId("mui-".concat(globalId));}},[defaultId]);return id;}/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */function useControlled(_ref5){var controlled=_ref5.controlled,defaultProp=_ref5.default,name=_ref5.name,_ref5$state=_ref5.state,state=_ref5$state===void 0?'value':_ref5$state;// isControlled is ignored in the hook dependency lists as it should never change.
var _s$=s$1(controlled!==undefined),isControlled=_s$.current;var _l$3=l$4(defaultProp),_l$4=_slicedToArray(_l$3,2),valueState=_l$4[0],setValue=_l$4[1];var value=isControlled?controlled:valueState;var setValueIfUncontrolled=F$5(function(newValue){if(!isControlled){setValue(newValue);}},[]);return[value,setValueIfUncontrolled];}/**
       * https://github.com/facebook/react/issues/14099#issuecomment-440013892
       */function useEventCallback(fn){var ref=s$1(fn);useEnhancedEffect$1(function(){ref.current=fn;});return F$5(function(){return(// @ts-expect-error hide `this`
// tslint:disable-next-line:ban-comma-operator
(0,ref.current).apply(void 0,arguments));},[]);}function useForkRef(refA,refB){/**
         * This will create a new function if the ref props change and are defined.
         * This means react will call the old forkRef with `null` and the new forkRef
         * with the ref. Cleanup naturally emerges from this behavior.
         */return A$5(function(){if(refA==null&&refB==null){return null;}return function(refValue){setRef(refA,refValue);setRef(refB,refValue);};},[refA,refB]);}// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js
var hadKeyboardEvent=true;var hadFocusVisibleRecently=false;var hadFocusVisibleRecentlyTimeout;var inputTypesWhitelist={text:true,search:true,url:true,tel:true,email:true,password:true,number:true,date:true,month:true,week:true,time:true,datetime:true,'datetime-local':true};/**
       * Computes whether the given element should automatically trigger the
       * `focus-visible` class being added, i.e. whether it should always match
       * `:focus-visible` when focused.
       * @param {Element} node
       * @returns {boolean}
       */function focusTriggersKeyboardModality(node){var type=node.type,tagName=node.tagName;if(tagName==='INPUT'&&inputTypesWhitelist[type]&&!node.readOnly){return true;}if(tagName==='TEXTAREA'&&!node.readOnly){return true;}if(node.isContentEditable){return true;}return false;}/**
       * Keep track of our keyboard modality state with `hadKeyboardEvent`.
       * If the most recent user interaction was via the keyboard;
       * and the key press did not include a meta, alt/option, or control key;
       * then the modality is keyboard. Otherwise, the modality is not keyboard.
       * @param {KeyboardEvent} event
       */function handleKeyDown(event){if(event.metaKey||event.altKey||event.ctrlKey){return;}hadKeyboardEvent=true;}/**
       * If at any point a user clicks with a pointing device, ensure that we change
       * the modality away from keyboard.
       * This avoids the situation where a user presses a key on an already focused
       * element, and then clicks on a different element, focusing it with a
       * pointing device, while we still think we're in keyboard modality.
       */function handlePointerDown(){hadKeyboardEvent=false;}function handleVisibilityChange(){if(this.visibilityState==='hidden'){// If the tab becomes active again, the browser will handle calling focus
// on the element (Safari actually calls it twice).
// If this tab change caused a blur on an element with focus-visible,
// re-apply the class when the user switches back to the tab.
if(hadFocusVisibleRecently){hadKeyboardEvent=true;}}}function prepare(doc){doc.addEventListener('keydown',handleKeyDown,true);doc.addEventListener('mousedown',handlePointerDown,true);doc.addEventListener('pointerdown',handlePointerDown,true);doc.addEventListener('touchstart',handlePointerDown,true);doc.addEventListener('visibilitychange',handleVisibilityChange,true);}function isFocusVisible(event){var target=event.target;try{return target.matches(':focus-visible');}catch(error){// Browsers not implementing :focus-visible will throw a SyntaxError.
// We use our own heuristic for those browsers.
// Rethrow might be better if it's not the expected error but do we really
// want to crash if focus-visible malfunctioned?
}// No need for validFocusTarget check. The user does that by attaching it to
// focusable events only.
return hadKeyboardEvent||focusTriggersKeyboardModality(target);}function useIsFocusVisible(){var ref=F$5(function(node){if(node!=null){prepare(node.ownerDocument);}},[]);var isFocusVisibleRef=s$1(false);/**
         * Should be called if a blur event is fired
         */function handleBlurVisible(){// checking against potential state variable does not suffice if we focus and blur synchronously.
// React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
// Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
// This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
// TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
if(isFocusVisibleRef.current){// To detect a tab/window switch, we look for a blur event followed
// rapidly by a visibility change.
// If we don't see a visibility change within 100ms, it's probably a
// regular focus change.
hadFocusVisibleRecently=true;window.clearTimeout(hadFocusVisibleRecentlyTimeout);hadFocusVisibleRecentlyTimeout=window.setTimeout(function(){hadFocusVisibleRecently=false;},100);isFocusVisibleRef.current=false;return true;}return false;}/**
         * Should be called if a blur event is fired
         */function handleFocusVisible(event){if(isFocusVisible(event)){isFocusVisibleRef.current=true;return true;}return false;}return{isFocusVisibleRef:isFocusVisibleRef,onFocus:handleFocusVisible,onBlur:handleBlurVisible,ref:ref};}// A change of the browser zoom change the scrollbar size.
// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18
function getScrollbarSize(doc){// https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
var documentWidth=doc.documentElement.clientWidth;return Math.abs(window.innerWidth-documentWidth);}/**
       * Add keys, values of `defaultProps` that does not exist in `props`
       * @param {object} defaultProps
       * @param {object} props
       * @returns {object} resolved props
       */function resolveProps(defaultProps,props){var output=_extends$5({},props);Object.keys(defaultProps).forEach(function(propName){if(output[propName]===undefined){output[propName]=defaultProps[propName];}});return output;}function merge$5(acc,item){if(!item){return acc;}return deepmerge(acc,item,{clone:false// No need to clone deep, it's way faster.
});}// For instance with the first breakpoint xs: [xs, sm[.
var values$3={xs:0,// phone
sm:600,// tablet
md:900,// small laptop
lg:1200,// desktop
xl:1536// large screen
};var defaultBreakpoints={// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
keys:['xs','sm','md','lg','xl'],up:function up(key){return"@media (min-width:".concat(values$3[key],"px)");}};function handleBreakpoints(props,propValue,styleFromPropValue){var theme=props.theme||{};if(Array.isArray(propValue)){var themeBreakpoints=theme.breakpoints||defaultBreakpoints;return propValue.reduce(function(acc,item,index){acc[themeBreakpoints.up(themeBreakpoints.keys[index])]=styleFromPropValue(propValue[index]);return acc;},{});}if(_typeof(propValue)==='object'){var _themeBreakpoints=theme.breakpoints||defaultBreakpoints;return Object.keys(propValue).reduce(function(acc,breakpoint){// key is breakpoint
if(Object.keys(_themeBreakpoints.values||values$3).indexOf(breakpoint)!==-1){var mediaKey=_themeBreakpoints.up(breakpoint);acc[mediaKey]=styleFromPropValue(propValue[breakpoint],breakpoint);}else{var cssKey=breakpoint;acc[cssKey]=propValue[cssKey];}return acc;},{});}var output=styleFromPropValue(propValue);return output;}function createEmptyBreakpointObject(){var breakpointsInput=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _breakpointsInput$key;var breakpointsInOrder=breakpointsInput==null?void 0:(_breakpointsInput$key=breakpointsInput.keys)==null?void 0:_breakpointsInput$key.reduce(function(acc,key){var breakpointStyleKey=breakpointsInput.up(key);acc[breakpointStyleKey]={};return acc;},{});return breakpointsInOrder||{};}function removeUnusedBreakpoints(breakpointKeys,style){return breakpointKeys.reduce(function(acc,key){var breakpointOutput=acc[key];var isBreakpointUnused=!breakpointOutput||Object.keys(breakpointOutput).length===0;if(isBreakpointUnused){delete acc[key];}return acc;},style);}function getPath(obj,path){if(!path||typeof path!=='string'){return null;}return path.split('.').reduce(function(acc,item){return acc&&acc[item]?acc[item]:null;},obj);}function getValue$1(themeMapping,transform,propValueFinal){var userValue=arguments.length>3&&arguments[3]!==undefined?arguments[3]:propValueFinal;var value;if(typeof themeMapping==='function'){value=themeMapping(propValueFinal);}else if(Array.isArray(themeMapping)){value=themeMapping[propValueFinal]||userValue;}else{value=getPath(themeMapping,propValueFinal)||userValue;}if(transform){value=transform(value);}return value;}function style$1(options){var prop=options.prop,_options$cssProperty=options.cssProperty,cssProperty=_options$cssProperty===void 0?options.prop:_options$cssProperty,themeKey=options.themeKey,transform=options.transform;var fn=function fn(props){if(props[prop]==null){return null;}var propValue=props[prop];var theme=props.theme;var themeMapping=getPath(theme,themeKey)||{};var styleFromPropValue=function styleFromPropValue(propValueFinal){var value=getValue$1(themeMapping,transform,propValueFinal);if(propValueFinal===value&&typeof propValueFinal==='string'){// Haven't found value
value=getValue$1(themeMapping,transform,"".concat(prop).concat(propValueFinal==='default'?'':capitalize(propValueFinal)),propValueFinal);}if(cssProperty===false){return value;}return _defineProperty({},cssProperty,value);};return handleBreakpoints(props,propValue,styleFromPropValue);};fn.propTypes={};fn.filterProps=[prop];return fn;}function compose(){for(var _len5=arguments.length,styles=new Array(_len5),_key5=0;_key5<_len5;_key5++){styles[_key5]=arguments[_key5];}var handlers=styles.reduce(function(acc,style){style.filterProps.forEach(function(prop){acc[prop]=style;});return acc;},{});var fn=function fn(props){return Object.keys(props).reduce(function(acc,prop){if(handlers[prop]){return merge$5(acc,handlers[prop](props));}return acc;},{});};fn.propTypes={};fn.filterProps=styles.reduce(function(acc,style){return acc.concat(style.filterProps);},[]);return fn;}function memoize$1(fn){var cache={};return function(arg){if(cache[arg]===undefined){cache[arg]=fn(arg);}return cache[arg];};}var properties={m:'margin',p:'padding'};var directions={t:'Top',r:'Right',b:'Bottom',l:'Left',x:['Left','Right'],y:['Top','Bottom']};var aliases$1={marginX:'mx',marginY:'my',paddingX:'px',paddingY:'py'};// memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec
var getCssProperties=memoize$1(function(prop){// It's not a shorthand notation.
if(prop.length>2){if(aliases$1[prop]){prop=aliases$1[prop];}else{return[prop];}}var _prop$split=prop.split(''),_prop$split2=_slicedToArray(_prop$split,2),a=_prop$split2[0],b=_prop$split2[1];var property=properties[a];var direction=directions[b]||'';return Array.isArray(direction)?direction.map(function(dir){return property+dir;}):[property+direction];});var marginKeys=['m','mt','mr','mb','ml','mx','my','margin','marginTop','marginRight','marginBottom','marginLeft','marginX','marginY','marginInline','marginInlineStart','marginInlineEnd','marginBlock','marginBlockStart','marginBlockEnd'];var paddingKeys=['p','pt','pr','pb','pl','px','py','padding','paddingTop','paddingRight','paddingBottom','paddingLeft','paddingX','paddingY','paddingInline','paddingInlineStart','paddingInlineEnd','paddingBlock','paddingBlockStart','paddingBlockEnd'];var spacingKeys=[].concat(marginKeys,paddingKeys);function createUnaryUnit(theme,themeKey,defaultValue,propName){var themeSpacing=getPath(theme,themeKey)||defaultValue;if(typeof themeSpacing==='number'){return function(abs){if(typeof abs==='string'){return abs;}return themeSpacing*abs;};}if(Array.isArray(themeSpacing)){return function(abs){if(typeof abs==='string'){return abs;}return themeSpacing[abs];};}if(typeof themeSpacing==='function'){return themeSpacing;}return function(){return undefined;};}function createUnarySpacing(theme){return createUnaryUnit(theme,'spacing',8);}function getValue(transformer,propValue){if(typeof propValue==='string'||propValue==null){return propValue;}var abs=Math.abs(propValue);var transformed=transformer(abs);if(propValue>=0){return transformed;}if(typeof transformed==='number'){return-transformed;}return"-".concat(transformed);}function getStyleFromPropValue(cssProperties,transformer){return function(propValue){return cssProperties.reduce(function(acc,cssProperty){acc[cssProperty]=getValue(transformer,propValue);return acc;},{});};}function resolveCssProperty(props,keys,prop,transformer){// Using a hash computation over an array iteration could be faster, but with only 28 items,
// it's doesn't worth the bundle size.
if(keys.indexOf(prop)===-1){return null;}var cssProperties=getCssProperties(prop);var styleFromPropValue=getStyleFromPropValue(cssProperties,transformer);var propValue=props[prop];return handleBreakpoints(props,propValue,styleFromPropValue);}function style(props,keys){var transformer=createUnarySpacing(props.theme);return Object.keys(props).map(function(prop){return resolveCssProperty(props,keys,prop,transformer);}).reduce(merge$5,{});}function spacing(props){return style(props,spacingKeys);}spacing.propTypes={};spacing.filterProps=spacingKeys;function getBorder(value){if(typeof value!=='number'){return value;}return"".concat(value,"px solid");}var border=style$1({prop:'border',themeKey:'borders',transform:getBorder});var borderTop=style$1({prop:'borderTop',themeKey:'borders',transform:getBorder});var borderRight=style$1({prop:'borderRight',themeKey:'borders',transform:getBorder});var borderBottom=style$1({prop:'borderBottom',themeKey:'borders',transform:getBorder});var borderLeft=style$1({prop:'borderLeft',themeKey:'borders',transform:getBorder});var borderColor=style$1({prop:'borderColor',themeKey:'palette'});var borderTopColor=style$1({prop:'borderTopColor',themeKey:'palette'});var borderRightColor=style$1({prop:'borderRightColor',themeKey:'palette'});var borderBottomColor=style$1({prop:'borderBottomColor',themeKey:'palette'});var borderLeftColor=style$1({prop:'borderLeftColor',themeKey:'palette'});var borderRadius=function borderRadius(props){if(props.borderRadius!==undefined&&props.borderRadius!==null){var transformer=createUnaryUnit(props.theme,'shape.borderRadius',4);var styleFromPropValue=function styleFromPropValue(propValue){return{borderRadius:getValue(transformer,propValue)};};return handleBreakpoints(props,props.borderRadius,styleFromPropValue);}return null;};borderRadius.propTypes={};borderRadius.filterProps=['borderRadius'];var borders=compose(border,borderTop,borderRight,borderBottom,borderLeft,borderColor,borderTopColor,borderRightColor,borderBottomColor,borderLeftColor,borderRadius);var borders$1=borders;var displayPrint=style$1({prop:'displayPrint',cssProperty:false,transform:function transform(value){return{'@media print':{display:value}};}});var displayRaw=style$1({prop:'display'});var overflow=style$1({prop:'overflow'});var textOverflow=style$1({prop:'textOverflow'});var visibility=style$1({prop:'visibility'});var whiteSpace=style$1({prop:'whiteSpace'});var display=compose(displayPrint,displayRaw,overflow,textOverflow,visibility,whiteSpace);var flexBasis=style$1({prop:'flexBasis'});var flexDirection=style$1({prop:'flexDirection'});var flexWrap=style$1({prop:'flexWrap'});var justifyContent=style$1({prop:'justifyContent'});var alignItems=style$1({prop:'alignItems'});var alignContent=style$1({prop:'alignContent'});var order=style$1({prop:'order'});var flex=style$1({prop:'flex'});var flexGrow=style$1({prop:'flexGrow'});var flexShrink=style$1({prop:'flexShrink'});var alignSelf=style$1({prop:'alignSelf'});var justifyItems=style$1({prop:'justifyItems'});var justifySelf=style$1({prop:'justifySelf'});var flexbox=compose(flexBasis,flexDirection,flexWrap,justifyContent,alignItems,alignContent,order,flex,flexGrow,flexShrink,alignSelf,justifyItems,justifySelf);var flexbox$1=flexbox;var gap=function gap(props){if(props.gap!==undefined&&props.gap!==null){var transformer=createUnaryUnit(props.theme,'spacing',8);var styleFromPropValue=function styleFromPropValue(propValue){return{gap:getValue(transformer,propValue)};};return handleBreakpoints(props,props.gap,styleFromPropValue);}return null;};gap.propTypes={};gap.filterProps=['gap'];var columnGap=function columnGap(props){if(props.columnGap!==undefined&&props.columnGap!==null){var transformer=createUnaryUnit(props.theme,'spacing',8);var styleFromPropValue=function styleFromPropValue(propValue){return{columnGap:getValue(transformer,propValue)};};return handleBreakpoints(props,props.columnGap,styleFromPropValue);}return null;};columnGap.propTypes={};columnGap.filterProps=['columnGap'];var rowGap=function rowGap(props){if(props.rowGap!==undefined&&props.rowGap!==null){var transformer=createUnaryUnit(props.theme,'spacing',8);var styleFromPropValue=function styleFromPropValue(propValue){return{rowGap:getValue(transformer,propValue)};};return handleBreakpoints(props,props.rowGap,styleFromPropValue);}return null;};rowGap.propTypes={};rowGap.filterProps=['rowGap'];var gridColumn=style$1({prop:'gridColumn'});var gridRow=style$1({prop:'gridRow'});var gridAutoFlow=style$1({prop:'gridAutoFlow'});var gridAutoColumns=style$1({prop:'gridAutoColumns'});var gridAutoRows=style$1({prop:'gridAutoRows'});var gridTemplateColumns=style$1({prop:'gridTemplateColumns'});var gridTemplateRows=style$1({prop:'gridTemplateRows'});var gridTemplateAreas=style$1({prop:'gridTemplateAreas'});var gridArea=style$1({prop:'gridArea'});var grid=compose(gap,columnGap,rowGap,gridColumn,gridRow,gridAutoFlow,gridAutoColumns,gridAutoRows,gridTemplateColumns,gridTemplateRows,gridTemplateAreas,gridArea);var grid$1=grid;var color=style$1({prop:'color',themeKey:'palette'});var bgcolor=style$1({prop:'bgcolor',cssProperty:'backgroundColor',themeKey:'palette'});var backgroundColor=style$1({prop:'backgroundColor',themeKey:'palette'});var palette=compose(color,bgcolor,backgroundColor);var palette$1=palette;var position$1=style$1({prop:'position'});var zIndex$2=style$1({prop:'zIndex',themeKey:'zIndex'});var top=style$1({prop:'top'});var right=style$1({prop:'right'});var bottom=style$1({prop:'bottom'});var left=style$1({prop:'left'});var positions=compose(position$1,zIndex$2,top,right,bottom,left);var boxShadow=style$1({prop:'boxShadow',themeKey:'shadows'});var shadows$2=boxShadow;function transform$1(value){return value<=1&&value!==0?"".concat(value*100,"%"):value;}var width=style$1({prop:'width',transform:transform$1});var maxWidth=function maxWidth(props){if(props.maxWidth!==undefined&&props.maxWidth!==null){var styleFromPropValue=function styleFromPropValue(propValue){var _props$theme,_props$theme$breakpoi,_props$theme$breakpoi2;var breakpoint=((_props$theme=props.theme)==null?void 0:(_props$theme$breakpoi=_props$theme.breakpoints)==null?void 0:(_props$theme$breakpoi2=_props$theme$breakpoi.values)==null?void 0:_props$theme$breakpoi2[propValue])||values$3[propValue];return{maxWidth:breakpoint||transform$1(propValue)};};return handleBreakpoints(props,props.maxWidth,styleFromPropValue);}return null;};maxWidth.filterProps=['maxWidth'];var minWidth=style$1({prop:'minWidth',transform:transform$1});var height=style$1({prop:'height',transform:transform$1});var maxHeight=style$1({prop:'maxHeight',transform:transform$1});var minHeight=style$1({prop:'minHeight',transform:transform$1});style$1({prop:'size',cssProperty:'width',transform:transform$1});style$1({prop:'size',cssProperty:'height',transform:transform$1});var boxSizing=style$1({prop:'boxSizing'});var sizing=compose(width,maxWidth,minWidth,height,maxHeight,minHeight,boxSizing);var sizing$1=sizing;var fontFamily=style$1({prop:'fontFamily',themeKey:'typography'});var fontSize=style$1({prop:'fontSize',themeKey:'typography'});var fontStyle=style$1({prop:'fontStyle',themeKey:'typography'});var fontWeight=style$1({prop:'fontWeight',themeKey:'typography'});var letterSpacing=style$1({prop:'letterSpacing'});var textTransform=style$1({prop:'textTransform'});var lineHeight=style$1({prop:'lineHeight'});var textAlign=style$1({prop:'textAlign'});var typographyVariant=style$1({prop:'typography',cssProperty:false,themeKey:'typography'});var typography=compose(typographyVariant,fontFamily,fontSize,fontStyle,fontWeight,letterSpacing,lineHeight,textAlign,textTransform);var typography$1=typography;var filterPropsMapping={borders:borders$1.filterProps,display:display.filterProps,flexbox:flexbox$1.filterProps,grid:grid$1.filterProps,positions:positions.filterProps,palette:palette$1.filterProps,shadows:shadows$2.filterProps,sizing:sizing$1.filterProps,spacing:spacing.filterProps,typography:typography$1.filterProps};var styleFunctionMapping={borders:borders$1,display:display,flexbox:flexbox$1,grid:grid$1,positions:positions,palette:palette$1,shadows:shadows$2,sizing:sizing$1,spacing:spacing,typography:typography$1};var propToStyleFunction=Object.keys(filterPropsMapping).reduce(function(acc,styleFnName){filterPropsMapping[styleFnName].forEach(function(propName){acc[propName]=styleFunctionMapping[styleFnName];});return acc;},{});function getThemeValue(prop,value,theme){var _inputProps;var inputProps=(_inputProps={},_defineProperty(_inputProps,prop,value),_defineProperty(_inputProps,"theme",theme),_inputProps);var styleFunction=propToStyleFunction[prop];return styleFunction?styleFunction(inputProps):_defineProperty({},prop,value);}function objectsHaveSameKeys(){for(var _len6=arguments.length,objects=new Array(_len6),_key6=0;_key6<_len6;_key6++){objects[_key6]=arguments[_key6];}var allKeys=objects.reduce(function(keys,object){return keys.concat(Object.keys(object));},[]);var union=new Set(allKeys);return objects.every(function(object){return union.size===Object.keys(object).length;});}function callIfFn(maybeFn,arg){return typeof maybeFn==='function'?maybeFn(arg):maybeFn;}function styleFunctionSx(props){var _ref8=props||{},sx=_ref8.sx,_ref8$theme=_ref8.theme,theme=_ref8$theme===void 0?{}:_ref8$theme;if(!sx){return null;// emotion & styled-components will neglect null
}/*
         * Receive `sxInput` as object or callback
         * and then recursively check keys & values to create media query object styles.
         * (the result will be used in `styled`)
         */function traverse(sxInput){var sxObject=sxInput;if(typeof sxInput==='function'){sxObject=sxInput(theme);}else if(_typeof(sxInput)!=='object'){// value
return sxInput;}var emptyBreakpoints=createEmptyBreakpointObject(theme.breakpoints);var breakpointsKeys=Object.keys(emptyBreakpoints);var css=emptyBreakpoints;Object.keys(sxObject).forEach(function(styleKey){var value=callIfFn(sxObject[styleKey],theme);if(value!==null&&value!==undefined){if(_typeof(value)==='object'){if(propToStyleFunction[styleKey]){css=merge$5(css,getThemeValue(styleKey,value,theme));}else{var breakpointsValues=handleBreakpoints({theme:theme},value,function(x){return _defineProperty({},styleKey,x);});if(objectsHaveSameKeys(breakpointsValues,value)){css[styleKey]=styleFunctionSx({sx:value,theme:theme});}else{css=merge$5(css,breakpointsValues);}}}else{css=merge$5(css,getThemeValue(styleKey,value,theme));}}});return removeUnusedBreakpoints(breakpointsKeys,css);}return Array.isArray(sx)?sx.map(traverse):traverse(sx);}styleFunctionSx.filterProps=['sx'];var _excluded$_=["sx"];var splitProps=function splitProps(props){var result={systemProps:{},otherProps:{}};Object.keys(props).forEach(function(prop){if(propToStyleFunction[prop]){result.systemProps[prop]=props[prop];}else{result.otherProps[prop]=props[prop];}});return result;};function extendSxProp(props){var inSx=props.sx,other=_objectWithoutPropertiesLoose$1(props,_excluded$_);var _splitProps=splitProps(other),systemProps=_splitProps.systemProps,otherProps=_splitProps.otherProps;var finalSx;if(Array.isArray(inSx)){finalSx=[systemProps].concat(_toConsumableArray(inSx));}else if(typeof inSx==='function'){finalSx=function finalSx(){var result=inSx.apply(void 0,arguments);if(!isPlainObject$1(result)){return systemProps;}return _extends$5({},systemProps,result);};}else{finalSx=_extends$5({},systemProps,inSx);}return _extends$5({},otherProps,{sx:finalSx});}function toVal(mix){var k,y,str='';if(typeof mix==='string'||typeof mix==='number'){str+=mix;}else if(_typeof(mix)==='object'){if(Array.isArray(mix)){for(k=0;k<mix.length;k++){if(mix[k]){if(y=toVal(mix[k])){str&&(str+=' ');str+=y;}}}}else{for(k in mix){if(mix[k]){str&&(str+=' ');str+=k;}}}}return str;}function clsx(){var i=0,tmp,x,str='';while(i<arguments.length){if(tmp=arguments[i++]){if(x=toVal(tmp)){str&&(str+=' ');str+=x;}}}return str;}var _excluded$Z=["values","unit","step"];function createBreakpoints(breakpoints){var _breakpoints$values=breakpoints.values,values=_breakpoints$values===void 0?{xs:0,// phone
sm:600,// tablet
md:900,// small laptop
lg:1200,// desktop
xl:1536// large screen
}:_breakpoints$values,_breakpoints$unit=breakpoints.unit,unit=_breakpoints$unit===void 0?'px':_breakpoints$unit,_breakpoints$step=breakpoints.step,step=_breakpoints$step===void 0?5:_breakpoints$step,other=_objectWithoutPropertiesLoose$1(breakpoints,_excluded$Z);var keys=Object.keys(values);function up(key){var value=typeof values[key]==='number'?values[key]:key;return"@media (min-width:".concat(value).concat(unit,")");}function down(key){var value=typeof values[key]==='number'?values[key]:key;return"@media (max-width:".concat(value-step/100).concat(unit,")");}function between(start,end){var endIndex=keys.indexOf(end);return"@media (min-width:".concat(typeof values[start]==='number'?values[start]:start).concat(unit,") and ")+"(max-width:".concat((endIndex!==-1&&typeof values[keys[endIndex]]==='number'?values[keys[endIndex]]:end)-step/100).concat(unit,")");}function only(key){if(keys.indexOf(key)+1<keys.length){return between(key,keys[keys.indexOf(key)+1]);}return up(key);}function not(key){// handle first and last key separately, for better readability
var keyIndex=keys.indexOf(key);if(keyIndex===0){return up(keys[1]);}if(keyIndex===keys.length-1){return down(keys[keyIndex]);}return between(key,keys[keys.indexOf(key)+1]).replace('@media','@media not all and');}return _extends$5({keys:keys,values:values,up:up,down:down,between:between,only:only,not:not,unit:unit},other);}var shape={borderRadius:4};var shape$1=shape;/* tslint:enable:unified-signatures */function createSpacing(){var spacingInput=arguments.length>0&&arguments[0]!==undefined?arguments[0]:8;// Already transformed.
if(spacingInput.mui){return spacingInput;}// Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
// Smaller components, such as icons, can align to a 4dp grid.
// https://material.io/design/layout/understanding-layout.html#usage
var transform=createUnarySpacing({spacing:spacingInput});var spacing=function spacing(){for(var _len7=arguments.length,argsInput=new Array(_len7),_key7=0;_key7<_len7;_key7++){argsInput[_key7]=arguments[_key7];}var args=argsInput.length===0?[1]:argsInput;return args.map(function(argument){var output=transform(argument);return typeof output==='number'?"".concat(output,"px"):output;}).join(' ');};spacing.mui=true;return spacing;}var _excluded$Y=["breakpoints","palette","spacing","shape"];function createTheme$1(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$breakpoints=options.breakpoints,breakpointsInput=_options$breakpoints===void 0?{}:_options$breakpoints,_options$palette=options.palette,paletteInput=_options$palette===void 0?{}:_options$palette,spacingInput=options.spacing,_options$shape=options.shape,shapeInput=_options$shape===void 0?{}:_options$shape,other=_objectWithoutPropertiesLoose$1(options,_excluded$Y);var breakpoints=createBreakpoints(breakpointsInput);var spacing=createSpacing(spacingInput);var muiTheme=deepmerge({breakpoints:breakpoints,direction:'ltr',components:{},// Inject component definitions.
palette:_extends$5({mode:'light'},paletteInput),spacing:spacing,shape:_extends$5({},shape$1,shapeInput)},other);for(var _len8=arguments.length,args=new Array(_len8>1?_len8-1:0),_key8=1;_key8<_len8;_key8++){args[_key8-1]=arguments[_key8];}muiTheme=args.reduce(function(acc,argument){return deepmerge(acc,argument);},muiTheme);return muiTheme;}var ThemeContext=/*#__PURE__*/D$3(null);var ThemeContext$1=ThemeContext;function useTheme$3(){var theme=T$2(ThemeContext$1);return theme;}var hasSymbol=typeof Symbol==='function'&&Symbol.for;var nested=hasSymbol?Symbol.for('mui.nested'):'__THEME_NESTED__';function mergeOuterLocalTheme(outerTheme,localTheme){if(typeof localTheme==='function'){var mergedTheme=localTheme(outerTheme);return mergedTheme;}return _extends$5({},outerTheme,localTheme);}/**
       * This component takes a `theme` prop.
       * It makes the `theme` available down the React tree thanks to React context.
       * This component should preferably be used at **the root of your component tree**.
       */function ThemeProvider$1(props){var children=props.children,localTheme=props.theme;var outerTheme=useTheme$3();var theme=A$5(function(){var output=outerTheme===null?localTheme:mergeOuterLocalTheme(outerTheme,localTheme);if(output!=null){output[nested]=outerTheme!==null;}return output;},[localTheme,outerTheme]);return/*#__PURE__*/jsx(ThemeContext$1.Provider,{value:theme,children:children});}function isObjectEmpty(obj){return Object.keys(obj).length===0;}function useTheme$2(){var defaultTheme=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var contextTheme=useTheme$3();return!contextTheme||isObjectEmpty(contextTheme)?defaultTheme:contextTheme;}var systemDefaultTheme$1=createTheme$1();function useTheme$1(){var defaultTheme=arguments.length>0&&arguments[0]!==undefined?arguments[0]:systemDefaultTheme$1;return useTheme$2(defaultTheme);}var _excluded$X=["className","component"];function createBox(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var defaultTheme=options.defaultTheme,_options$defaultClass=options.defaultClassName,defaultClassName=_options$defaultClass===void 0?'MuiBox-root':_options$defaultClass,generateClassName=options.generateClassName;var BoxRoot=styled$3('div')(styleFunctionSx);var Box=/*#__PURE__*/x$5(function Box(inProps,ref){var theme=useTheme$1(defaultTheme);var _extendSxProp=extendSxProp(inProps),className=_extendSxProp.className,_extendSxProp$compone=_extendSxProp.component,component=_extendSxProp$compone===void 0?'div':_extendSxProp$compone,other=_objectWithoutPropertiesLoose$1(_extendSxProp,_excluded$X);return/*#__PURE__*/jsx(BoxRoot,_extends$5({as:component,ref:ref,className:clsx(className,generateClassName?generateClassName(defaultClassName):defaultClassName),theme:theme},other));});return Box;}var Box$2=createBox();var Box$3=exports('ap',Box$2);var _excluded$W=["variant"];function isEmpty$3(string){return string.length===0;}/**
       * Generates string classKey based on the properties provided. It starts with the
       * variant if defined, and then it appends all other properties in alphabetical order.
       * @param {object} props - the properties for which the classKey should be created.
       */function propsToClassKey(props){var variant=props.variant,other=_objectWithoutPropertiesLoose$1(props,_excluded$W);var classKey=variant||'';Object.keys(other).sort().forEach(function(key){if(key==='color'){classKey+=isEmpty$3(classKey)?props[key]:capitalize(props[key]);}else{classKey+="".concat(isEmpty$3(classKey)?key:capitalize(key)).concat(capitalize(props[key].toString()));}});return classKey;}var _excluded$V=["name","slot","skipVariantsResolver","skipSx","overridesResolver"],_excluded2$4=["theme"],_excluded3=["theme"];function isEmpty$2(obj){return Object.keys(obj).length===0;}var getStyleOverrides=function getStyleOverrides(name,theme){if(theme.components&&theme.components[name]&&theme.components[name].styleOverrides){return theme.components[name].styleOverrides;}return null;};var getVariantStyles=function getVariantStyles(name,theme){var variants=[];if(theme&&theme.components&&theme.components[name]&&theme.components[name].variants){variants=theme.components[name].variants;}var variantsStyles={};variants.forEach(function(definition){var key=propsToClassKey(definition.props);variantsStyles[key]=definition.style;});return variantsStyles;};var variantsResolver=function variantsResolver(props,styles,theme,name){var _theme$components,_theme$components$nam;var _props$ownerState=props.ownerState,ownerState=_props$ownerState===void 0?{}:_props$ownerState;var variantsStyles=[];var themeVariants=theme==null?void 0:(_theme$components=theme.components)==null?void 0:(_theme$components$nam=_theme$components[name])==null?void 0:_theme$components$nam.variants;if(themeVariants){themeVariants.forEach(function(themeVariant){var isMatch=true;Object.keys(themeVariant.props).forEach(function(key){if(ownerState[key]!==themeVariant.props[key]&&props[key]!==themeVariant.props[key]){isMatch=false;}});if(isMatch){variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);}});}return variantsStyles;};function shouldForwardProp(prop){return prop!=='ownerState'&&prop!=='theme'&&prop!=='sx'&&prop!=='as';}var systemDefaultTheme=createTheme$1();function createStyled(){var input=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _input$defaultTheme=input.defaultTheme,defaultTheme=_input$defaultTheme===void 0?systemDefaultTheme:_input$defaultTheme,_input$rootShouldForw=input.rootShouldForwardProp,rootShouldForwardProp=_input$rootShouldForw===void 0?shouldForwardProp:_input$rootShouldForw,_input$slotShouldForw=input.slotShouldForwardProp,slotShouldForwardProp=_input$slotShouldForw===void 0?shouldForwardProp:_input$slotShouldForw;return function(tag){var inputOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var componentName=inputOptions.name,componentSlot=inputOptions.slot,inputSkipVariantsResolver=inputOptions.skipVariantsResolver,inputSkipSx=inputOptions.skipSx,overridesResolver=inputOptions.overridesResolver,options=_objectWithoutPropertiesLoose$1(inputOptions,_excluded$V);// if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
var skipVariantsResolver=inputSkipVariantsResolver!==undefined?inputSkipVariantsResolver:componentSlot&&componentSlot!=='Root'||false;var skipSx=inputSkipSx||false;var label;var shouldForwardPropOption=shouldForwardProp;if(componentSlot==='Root'){shouldForwardPropOption=rootShouldForwardProp;}else if(componentSlot){// any other slot specified
shouldForwardPropOption=slotShouldForwardProp;}var defaultStyledResolver=styled$3(tag,_extends$5({shouldForwardProp:shouldForwardPropOption,label:label},options));var muiStyledResolver=function muiStyledResolver(styleArg){for(var _len9=arguments.length,expressions=new Array(_len9>1?_len9-1:0),_key9=1;_key9<_len9;_key9++){expressions[_key9-1]=arguments[_key9];}var expressionsWithDefaultTheme=expressions?expressions.map(function(stylesArg){// On the server emotion doesn't use React.forwardRef for creating components, so the created
// component stays as a function. This condition makes sure that we do not interpolate functions
// which are basically components used as a selectors.
// eslint-disable-next-line no-underscore-dangle
return typeof stylesArg==='function'&&stylesArg.__emotion_real!==stylesArg?function(_ref){var themeInput=_ref.theme,other=_objectWithoutPropertiesLoose$1(_ref,_excluded2$4);return stylesArg(_extends$5({theme:isEmpty$2(themeInput)?defaultTheme:themeInput},other));}:stylesArg;}):[];var transformedStyleArg=styleArg;if(componentName&&overridesResolver){expressionsWithDefaultTheme.push(function(props){var theme=isEmpty$2(props.theme)?defaultTheme:props.theme;var styleOverrides=getStyleOverrides(componentName,theme);if(styleOverrides){var resolvedStyleOverrides={};Object.entries(styleOverrides).forEach(function(_ref10){var _ref11=_slicedToArray(_ref10,2),slotKey=_ref11[0],slotStyle=_ref11[1];resolvedStyleOverrides[slotKey]=typeof slotStyle==='function'?slotStyle(props):slotStyle;});return overridesResolver(props,resolvedStyleOverrides);}return null;});}if(componentName&&!skipVariantsResolver){expressionsWithDefaultTheme.push(function(props){var theme=isEmpty$2(props.theme)?defaultTheme:props.theme;return variantsResolver(props,getVariantStyles(componentName,theme),theme,componentName);});}if(!skipSx){expressionsWithDefaultTheme.push(function(props){var theme=isEmpty$2(props.theme)?defaultTheme:props.theme;return styleFunctionSx(_extends$5({},props,{theme:theme}));});}var numOfCustomFnsApplied=expressionsWithDefaultTheme.length-expressions.length;if(Array.isArray(styleArg)&&numOfCustomFnsApplied>0){var placeholders=new Array(numOfCustomFnsApplied).fill('');// If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.
transformedStyleArg=[].concat(_toConsumableArray(styleArg),_toConsumableArray(placeholders));transformedStyleArg.raw=[].concat(_toConsumableArray(styleArg.raw),_toConsumableArray(placeholders));}else if(typeof styleArg==='function'){// If the type is function, we need to define the default theme.
transformedStyleArg=function transformedStyleArg(_ref2){var themeInput=_ref2.theme,other=_objectWithoutPropertiesLoose$1(_ref2,_excluded3);return styleArg(_extends$5({theme:isEmpty$2(themeInput)?defaultTheme:themeInput},other));};}var Component=defaultStyledResolver.apply(void 0,[transformedStyleArg].concat(_toConsumableArray(expressionsWithDefaultTheme)));return Component;};if(defaultStyledResolver.withConfig){muiStyledResolver.withConfig=defaultStyledResolver.withConfig;}return muiStyledResolver;};}function getThemeProps(params){var theme=params.theme,name=params.name,props=params.props;if(!theme||!theme.components||!theme.components[name]||!theme.components[name].defaultProps){return props;}return resolveProps(theme.components[name].defaultProps,props);}function useThemeProps$1(_ref12){var props=_ref12.props,name=_ref12.name,defaultTheme=_ref12.defaultTheme;var theme=useTheme$1(defaultTheme);var mergedProps=getThemeProps({theme:theme,name:name,props:props});return mergedProps;}/**
       * Returns a number whose value is limited to the given range.
       * @param {number} value The value to be clamped
       * @param {number} min The lower boundary of the output range
       * @param {number} max The upper boundary of the output range
       * @returns {number} A number in the range [min, max]
       */function clamp$1(value){var min=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var max=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;return Math.min(Math.max(min,value),max);}/**
       * Converts a color from CSS hex format to CSS rgb format.
       * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
       * @returns {string} A CSS rgb color string
       */function hexToRgb(color){color=color.substr(1);var re=new RegExp(".{1,".concat(color.length>=6?2:1,"}"),'g');var colors=color.match(re);if(colors&&colors[0].length===1){colors=colors.map(function(n){return n+n;});}return colors?"rgb".concat(colors.length===4?'a':'',"(").concat(colors.map(function(n,index){return index<3?parseInt(n,16):Math.round(parseInt(n,16)/255*1000)/1000;}).join(', '),")"):'';}/**
       * Returns an object with the type and values of a color.
       *
       * Note: Does not support rgb % values.
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @returns {object} - A MUI color object: {type: string, values: number[]}
       */function decomposeColor(color){// Idempotent
if(color.type){return color;}if(color.charAt(0)==='#'){return decomposeColor(hexToRgb(color));}var marker=color.indexOf('(');var type=color.substring(0,marker);if(['rgb','rgba','hsl','hsla','color'].indexOf(type)===-1){throw new Error(formatMuiErrorMessage(9,color));}var values=color.substring(marker+1,color.length-1);var colorSpace;if(type==='color'){values=values.split(' ');colorSpace=values.shift();if(values.length===4&&values[3].charAt(0)==='/'){values[3]=values[3].substr(1);}if(['srgb','display-p3','a98-rgb','prophoto-rgb','rec-2020'].indexOf(colorSpace)===-1){throw new Error(formatMuiErrorMessage(10,colorSpace));}}else{values=values.split(',');}values=values.map(function(value){return parseFloat(value);});return{type:type,values:values,colorSpace:colorSpace};}/**
       * Converts a color object with type and values to a string.
       * @param {object} color - Decomposed color
       * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
       * @param {array} color.values - [n,n,n] or [n,n,n,n]
       * @returns {string} A CSS color string
       */function recomposeColor(color){var type=color.type,colorSpace=color.colorSpace;var values=color.values;if(type.indexOf('rgb')!==-1){// Only convert the first 3 values to int (i.e. not alpha)
values=values.map(function(n,i){return i<3?parseInt(n,10):n;});}else if(type.indexOf('hsl')!==-1){values[1]="".concat(values[1],"%");values[2]="".concat(values[2],"%");}if(type.indexOf('color')!==-1){values="".concat(colorSpace," ").concat(values.join(' '));}else{values="".concat(values.join(', '));}return"".concat(type,"(").concat(values,")");}/**
       * Converts a color from hsl format to rgb format.
       * @param {string} color - HSL color values
       * @returns {string} rgb color values
       */function hslToRgb(color){color=decomposeColor(color);var _color=color,values=_color.values;var h=values[0];var s=values[1]/100;var l=values[2]/100;var a=s*Math.min(l,1-l);var f=function f(n){var k=arguments.length>1&&arguments[1]!==undefined?arguments[1]:(n+h/30)%12;return l-a*Math.max(Math.min(k-3,9-k,1),-1);};var type='rgb';var rgb=[Math.round(f(0)*255),Math.round(f(8)*255),Math.round(f(4)*255)];if(color.type==='hsla'){type+='a';rgb.push(values[3]);}return recomposeColor({type:type,values:rgb});}/**
       * The relative brightness of any point in a color space,
       * normalized to 0 for darkest black and 1 for lightest white.
       *
       * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
       * @returns {number} The relative brightness of the color in the range 0 - 1
       */function getLuminance(color){color=decomposeColor(color);var rgb=color.type==='hsl'?decomposeColor(hslToRgb(color)).values:color.values;rgb=rgb.map(function(val){if(color.type!=='color'){val/=255;// normalized
}return val<=0.03928?val/12.92:Math.pow((val+0.055)/1.055,2.4);});// Truncate at 3 digits
return Number((0.2126*rgb[0]+0.7152*rgb[1]+0.0722*rgb[2]).toFixed(3));}/**
       * Calculates the contrast ratio between two colors.
       *
       * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
       * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @returns {number} A contrast ratio value in the range 0 - 21.
       */function getContrastRatio(foreground,background){var lumA=getLuminance(foreground);var lumB=getLuminance(background);return(Math.max(lumA,lumB)+0.05)/(Math.min(lumA,lumB)+0.05);}/**
       * Sets the absolute transparency of a color.
       * Any existing alpha values are overwritten.
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
       * @param {number} value - value to set the alpha channel to in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */function alpha(color,value){color=decomposeColor(color);value=clamp$1(value);if(color.type==='rgb'||color.type==='hsl'){color.type+='a';}if(color.type==='color'){color.values[3]="/".concat(value);}else{color.values[3]=value;}return recomposeColor(color);}/**
       * Darkens a color.
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
       * @param {number} coefficient - multiplier in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */function darken(color,coefficient){color=decomposeColor(color);coefficient=clamp$1(coefficient);if(color.type.indexOf('hsl')!==-1){color.values[2]*=1-coefficient;}else if(color.type.indexOf('rgb')!==-1||color.type.indexOf('color')!==-1){for(var _i3=0;_i3<3;_i3+=1){color.values[_i3]*=1-coefficient;}}return recomposeColor(color);}/**
       * Lightens a color.
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
       * @param {number} coefficient - multiplier in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */function lighten(color,coefficient){color=decomposeColor(color);coefficient=clamp$1(coefficient);if(color.type.indexOf('hsl')!==-1){color.values[2]+=(100-color.values[2])*coefficient;}else if(color.type.indexOf('rgb')!==-1){for(var _i4=0;_i4<3;_i4+=1){color.values[_i4]+=(255-color.values[_i4])*coefficient;}}else if(color.type.indexOf('color')!==-1){for(var _i5=0;_i5<3;_i5+=1){color.values[_i5]+=(1-color.values[_i5])*coefficient;}}return recomposeColor(color);}function InnerThemeProvider(props){var theme=useTheme$1();return/*#__PURE__*/jsx(ThemeContext$2.Provider,{value:_typeof(theme)==='object'?theme:{},children:props.children});}/**
       * This component makes the `theme` available down the React tree.
       * It should preferably be used at **the root of your component tree**.
       */function ThemeProvider(props){var children=props.children,localTheme=props.theme;return/*#__PURE__*/jsx(ThemeProvider$1,{theme:localTheme,children:/*#__PURE__*/jsx(InnerThemeProvider,{children:children})});}/**
       * Determines if a given element is a DOM element name (i.e. not a React component).
       */function isHostComponent(element){return typeof element==='string';}function composeClasses(slots,getUtilityClass,classes){var output={};Object.keys(slots).forEach(// `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
// @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
function(slot){output[slot]=slots[slot].reduce(function(acc,key){if(key){if(classes&&classes[key]){acc.push(classes[key]);}acc.push(getUtilityClass(key));}return acc;},[]).join(' ');});return output;}var defaultGenerator=function defaultGenerator(componentName){return componentName;};var createClassNameGenerator=function createClassNameGenerator(){var _generate=defaultGenerator;return{configure:function configure(generator){_generate=generator;},generate:function generate(componentName){return _generate(componentName);},reset:function reset(){_generate=defaultGenerator;}};};var ClassNameGenerator=createClassNameGenerator();var ClassNameGenerator$1=ClassNameGenerator;var globalStateClassesMapping={active:'Mui-active',checked:'Mui-checked',completed:'Mui-completed',disabled:'Mui-disabled',error:'Mui-error',expanded:'Mui-expanded',focused:'Mui-focused',focusVisible:'Mui-focusVisible',required:'Mui-required',selected:'Mui-selected'};function generateUtilityClass(componentName,slot){var globalStateClass=globalStateClassesMapping[slot];return globalStateClass||"".concat(ClassNameGenerator$1.generate(componentName),"-").concat(slot);}function generateUtilityClasses(componentName,slots){var result={};slots.forEach(function(slot){result[slot]=generateUtilityClass(componentName,slot);});return result;}function getBackdropUtilityClass(slot){return generateUtilityClass('MuiBackdrop',slot);}generateUtilityClasses('MuiBackdrop',['root','invisible']);var _excluded$U=["classes","className","invisible","component","components","componentsProps","theme"];var useUtilityClasses$D=function useUtilityClasses$D(ownerState){var classes=ownerState.classes,invisible=ownerState.invisible;var slots={root:['root',invisible&&'invisible']};return composeClasses(slots,getBackdropUtilityClass,classes);};var BackdropUnstyled=/*#__PURE__*/x$5(function BackdropUnstyled(props,ref){var classesProp=props.classes,className=props.className,_props$invisible=props.invisible,invisible=_props$invisible===void 0?false:_props$invisible,_props$component=props.component,component=_props$component===void 0?'div':_props$component,_props$components=props.components,components=_props$components===void 0?{}:_props$components,_props$componentsProp=props.componentsProps,componentsProps=_props$componentsProp===void 0?{}:_props$componentsProp,theme=props.theme,other=_objectWithoutPropertiesLoose$1(props,_excluded$U);var ownerState=_extends$5({},props,{classes:classesProp,invisible:invisible});var classes=useUtilityClasses$D(ownerState);var Root=components.Root||component;var rootProps=componentsProps.root||{};return/*#__PURE__*/jsx(Root,_extends$5({"aria-hidden":true},rootProps,!isHostComponent(Root)&&{as:component,ownerState:_extends$5({},ownerState,rootProps.ownerState),theme:theme},{ref:ref},other,{className:clsx(classes.root,rootProps.className,className)}));});var BackdropUnstyled$1=BackdropUnstyled;function getContainer$1(container){return typeof container==='function'?container():container;}/**
       * Portals provide a first-class way to render children into a DOM node
       * that exists outside the DOM hierarchy of the parent component.
       */var Portal=/*#__PURE__*/x$5(function Portal(props,ref){var children=props.children,container=props.container,_props$disablePortal=props.disablePortal,disablePortal=_props$disablePortal===void 0?false:_props$disablePortal;var _l$5=l$4(null),_l$6=_slicedToArray(_l$5,2),mountNode=_l$6[0],setMountNode=_l$6[1];var handleRef=useForkRef(/*#__PURE__*/en$1(children)?children.ref:null,ref);useEnhancedEffect$1(function(){if(!disablePortal){setMountNode(getContainer$1(container)||document.body);}},[container,disablePortal]);useEnhancedEffect$1(function(){if(mountNode&&!disablePortal){setRef(ref,mountNode);return function(){setRef(ref,null);};}return undefined;},[ref,mountNode,disablePortal]);if(disablePortal){if(/*#__PURE__*/en$1(children)){return/*#__PURE__*/rn$1(children,{ref:handleRef});}return children;}return mountNode?/*#__PURE__*/W$2(children,mountNode):mountNode;});var Portal$1=Portal;// Is a vertical scrollbar displayed?
function isOverflowing(container){var doc=ownerDocument(container);if(doc.body===container){return ownerWindow(container).innerWidth>doc.documentElement.clientWidth;}return container.scrollHeight>container.clientHeight;}function ariaHidden(element,show){if(show){element.setAttribute('aria-hidden','true');}else{element.removeAttribute('aria-hidden');}}function getPaddingRight(element){return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight,10)||0;}function ariaHiddenSiblings(container,mountElement,currentElement){var elementsToExclude=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var show=arguments.length>4?arguments[4]:undefined;var blacklist=[mountElement,currentElement].concat(_toConsumableArray(elementsToExclude));var blacklistTagNames=['TEMPLATE','SCRIPT','STYLE'];[].forEach.call(container.children,function(element){if(blacklist.indexOf(element)===-1&&blacklistTagNames.indexOf(element.tagName)===-1){ariaHidden(element,show);}});}function findIndexOf(items,callback){var idx=-1;items.some(function(item,index){if(callback(item)){idx=index;return true;}return false;});return idx;}function handleContainer(containerInfo,props){var restoreStyle=[];var container=containerInfo.container;if(!props.disableScrollLock){if(isOverflowing(container)){// Compute the size before applying overflow hidden to avoid any scroll jumps.
var scrollbarSize=getScrollbarSize(ownerDocument(container));restoreStyle.push({value:container.style.paddingRight,property:'padding-right',el:container});// Use computed style, here to get the real padding to add our scrollbar width.
container.style.paddingRight="".concat(getPaddingRight(container)+scrollbarSize,"px");// .mui-fixed is a global helper.
var _fixedElements=ownerDocument(container).querySelectorAll('.mui-fixed');[].forEach.call(_fixedElements,function(element){restoreStyle.push({value:element.style.paddingRight,property:'padding-right',el:element});element.style.paddingRight="".concat(getPaddingRight(element)+scrollbarSize,"px");});}// Improve Gatsby support
// https://css-tricks.com/snippets/css/force-vertical-scrollbar/
var _parent=container.parentElement;var containerWindow=ownerWindow(container);var scrollContainer=(_parent==null?void 0:_parent.nodeName)==='HTML'&&containerWindow.getComputedStyle(_parent).overflowY==='scroll'?_parent:container;// Block the scroll even if no scrollbar is visible to account for mobile keyboard
// screensize shrink.
restoreStyle.push({value:scrollContainer.style.overflow,property:'overflow',el:scrollContainer},{value:scrollContainer.style.overflowX,property:'overflow-x',el:scrollContainer},{value:scrollContainer.style.overflowY,property:'overflow-y',el:scrollContainer});scrollContainer.style.overflow='hidden';}var restore=function restore(){restoreStyle.forEach(function(_ref13){var value=_ref13.value,el=_ref13.el,property=_ref13.property;if(value){el.style.setProperty(property,value);}else{el.style.removeProperty(property);}});};return restore;}function getHiddenSiblings(container){var hiddenSiblings=[];[].forEach.call(container.children,function(element){if(element.getAttribute('aria-hidden')==='true'){hiddenSiblings.push(element);}});return hiddenSiblings;}/**
       * @ignore - do not document.
       *
       * Proper state management for containers and the modals in those containers.
       * Simplified, but inspired by react-overlay's ModalManager class.
       * Used by the Modal to ensure proper styling of containers.
       */var ModalManager=/*#__PURE__*/function(){function ModalManager(){_classCallCheck(this,ModalManager);this.containers=void 0;this.modals=void 0;this.modals=[];this.containers=[];}_createClass(ModalManager,[{key:"add",value:function add(modal,container){var modalIndex=this.modals.indexOf(modal);if(modalIndex!==-1){return modalIndex;}modalIndex=this.modals.length;this.modals.push(modal);// If the modal we are adding is already in the DOM.
if(modal.modalRef){ariaHidden(modal.modalRef,false);}var hiddenSiblings=getHiddenSiblings(container);ariaHiddenSiblings(container,modal.mount,modal.modalRef,hiddenSiblings,true);var containerIndex=findIndexOf(this.containers,function(item){return item.container===container;});if(containerIndex!==-1){this.containers[containerIndex].modals.push(modal);return modalIndex;}this.containers.push({modals:[modal],container:container,restore:null,hiddenSiblings:hiddenSiblings});return modalIndex;}},{key:"mount",value:function mount(modal,props){var containerIndex=findIndexOf(this.containers,function(item){return item.modals.indexOf(modal)!==-1;});var containerInfo=this.containers[containerIndex];if(!containerInfo.restore){containerInfo.restore=handleContainer(containerInfo,props);}}},{key:"remove",value:function remove(modal){var modalIndex=this.modals.indexOf(modal);if(modalIndex===-1){return modalIndex;}var containerIndex=findIndexOf(this.containers,function(item){return item.modals.indexOf(modal)!==-1;});var containerInfo=this.containers[containerIndex];containerInfo.modals.splice(containerInfo.modals.indexOf(modal),1);this.modals.splice(modalIndex,1);// If that was the last modal in a container, clean up the container.
if(containerInfo.modals.length===0){// The modal might be closed before it had the chance to be mounted in the DOM.
if(containerInfo.restore){containerInfo.restore();}if(modal.modalRef){// In case the modal wasn't in the DOM yet.
ariaHidden(modal.modalRef,true);}ariaHiddenSiblings(containerInfo.container,modal.mount,modal.modalRef,containerInfo.hiddenSiblings,false);this.containers.splice(containerIndex,1);}else{// Otherwise make sure the next top modal is visible to a screen reader.
var nextTop=containerInfo.modals[containerInfo.modals.length-1];// as soon as a modal is adding its modalRef is undefined. it can't set
// aria-hidden because the dom element doesn't exist either
// when modal was unmounted before modalRef gets null
if(nextTop.modalRef){ariaHidden(nextTop.modalRef,false);}}return modalIndex;}},{key:"isTopModal",value:function isTopModal(modal){return this.modals.length>0&&this.modals[this.modals.length-1]===modal;}}]);return ModalManager;}();/* eslint-disable @typescript-eslint/naming-convention, consistent-return, jsx-a11y/no-noninteractive-tabindex */var candidatesSelector=['input','select','textarea','a[href]','button','[tabindex]','audio[controls]','video[controls]','[contenteditable]:not([contenteditable="false"])'].join(',');function getTabIndex(node){var tabindexAttr=parseInt(node.getAttribute('tabindex'),10);if(!Number.isNaN(tabindexAttr)){return tabindexAttr;}// Browsers do not return `tabIndex` correctly for contentEditable nodes;
// https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2
// so if they don't have a tabindex attribute specifically set, assume it's 0.
// in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
//  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
//  yet they are still part of the regular tab order; in FF, they get a default
//  `tabIndex` of 0; since Chrome still puts those elements in the regular tab
//  order, consider their tab index to be 0.
if(node.contentEditable==='true'||(node.nodeName==='AUDIO'||node.nodeName==='VIDEO'||node.nodeName==='DETAILS')&&node.getAttribute('tabindex')===null){return 0;}return node.tabIndex;}function isNonTabbableRadio(node){if(node.tagName!=='INPUT'||node.type!=='radio'){return false;}if(!node.name){return false;}var getRadio=function getRadio(selector){return node.ownerDocument.querySelector("input[type=\"radio\"]".concat(selector));};var roving=getRadio("[name=\"".concat(node.name,"\"]:checked"));if(!roving){roving=getRadio("[name=\"".concat(node.name,"\"]"));}return roving!==node;}function isNodeMatchingSelectorFocusable(node){if(node.disabled||node.tagName==='INPUT'&&node.type==='hidden'||isNonTabbableRadio(node)){return false;}return true;}function defaultGetTabbable(root){var regularTabNodes=[];var orderedTabNodes=[];Array.from(root.querySelectorAll(candidatesSelector)).forEach(function(node,i){var nodeTabIndex=getTabIndex(node);if(nodeTabIndex===-1||!isNodeMatchingSelectorFocusable(node)){return;}if(nodeTabIndex===0){regularTabNodes.push(node);}else{orderedTabNodes.push({documentOrder:i,tabIndex:nodeTabIndex,node:node});}});return orderedTabNodes.sort(function(a,b){return a.tabIndex===b.tabIndex?a.documentOrder-b.documentOrder:a.tabIndex-b.tabIndex;}).map(function(a){return a.node;}).concat(regularTabNodes);}function defaultIsEnabled(){return true;}/**
       * Utility component that locks focus inside the component.
       */function Unstable_TrapFocus(props){var children=props.children,_props$disableAutoFoc=props.disableAutoFocus,disableAutoFocus=_props$disableAutoFoc===void 0?false:_props$disableAutoFoc,_props$disableEnforce=props.disableEnforceFocus,disableEnforceFocus=_props$disableEnforce===void 0?false:_props$disableEnforce,_props$disableRestore=props.disableRestoreFocus,disableRestoreFocus=_props$disableRestore===void 0?false:_props$disableRestore,_props$getTabbable=props.getTabbable,getTabbable=_props$getTabbable===void 0?defaultGetTabbable:_props$getTabbable,_props$isEnabled=props.isEnabled,isEnabled=_props$isEnabled===void 0?defaultIsEnabled:_props$isEnabled,open=props.open;var ignoreNextEnforceFocus=s$1();var sentinelStart=s$1(null);var sentinelEnd=s$1(null);var nodeToRestore=s$1(null);var reactFocusEventTarget=s$1(null);// This variable is useful when disableAutoFocus is true.
// It waits for the active element to move into the component to activate.
var activated=s$1(false);var rootRef=s$1(null);var handleRef=useForkRef(children.ref,rootRef);var lastKeydown=s$1(null);y$3(function(){// We might render an empty child.
if(!open||!rootRef.current){return;}activated.current=!disableAutoFocus;},[disableAutoFocus,open]);y$3(function(){// We might render an empty child.
if(!open||!rootRef.current){return;}var doc=ownerDocument(rootRef.current);if(!rootRef.current.contains(doc.activeElement)){if(!rootRef.current.hasAttribute('tabIndex')){rootRef.current.setAttribute('tabIndex',-1);}if(activated.current){rootRef.current.focus();}}return function(){// restoreLastFocus()
if(!disableRestoreFocus){// In IE11 it is possible for document.activeElement to be null resulting
// in nodeToRestore.current being null.
// Not all elements in IE11 have a focus method.
// Once IE11 support is dropped the focus() call can be unconditional.
if(nodeToRestore.current&&nodeToRestore.current.focus){ignoreNextEnforceFocus.current=true;nodeToRestore.current.focus();}nodeToRestore.current=null;}};// Missing `disableRestoreFocus` which is fine.
// We don't support changing that prop on an open TrapFocus
// eslint-disable-next-line react-hooks/exhaustive-deps
},[open]);y$3(function(){// We might render an empty child.
if(!open||!rootRef.current){return;}var doc=ownerDocument(rootRef.current);var contain=function contain(nativeEvent){var rootElement=rootRef.current;// Cleanup functions are executed lazily in React 17.
// Contain can be called between the component being unmounted and its cleanup function being run.
if(rootElement===null){return;}if(!doc.hasFocus()||disableEnforceFocus||!isEnabled()||ignoreNextEnforceFocus.current){ignoreNextEnforceFocus.current=false;return;}if(!rootElement.contains(doc.activeElement)){// if the focus event is not coming from inside the children's react tree, reset the refs
if(nativeEvent&&reactFocusEventTarget.current!==nativeEvent.target||doc.activeElement!==reactFocusEventTarget.current){reactFocusEventTarget.current=null;}else if(reactFocusEventTarget.current!==null){return;}if(!activated.current){return;}var tabbable=[];if(doc.activeElement===sentinelStart.current||doc.activeElement===sentinelEnd.current){tabbable=getTabbable(rootRef.current);}if(tabbable.length>0){var _lastKeydown$current,_lastKeydown$current2;var isShiftTab=Boolean(((_lastKeydown$current=lastKeydown.current)==null?void 0:_lastKeydown$current.shiftKey)&&((_lastKeydown$current2=lastKeydown.current)==null?void 0:_lastKeydown$current2.key)==='Tab');var focusNext=tabbable[0];var focusPrevious=tabbable[tabbable.length-1];if(isShiftTab){focusPrevious.focus();}else{focusNext.focus();}}else{rootElement.focus();}}};var loopFocus=function loopFocus(nativeEvent){lastKeydown.current=nativeEvent;if(disableEnforceFocus||!isEnabled()||nativeEvent.key!=='Tab'){return;}// Make sure the next tab starts from the right place.
// doc.activeElement referes to the origin.
if(doc.activeElement===rootRef.current&&nativeEvent.shiftKey){// We need to ignore the next contain as
// it will try to move the focus back to the rootRef element.
ignoreNextEnforceFocus.current=true;sentinelEnd.current.focus();}};doc.addEventListener('focusin',contain);doc.addEventListener('keydown',loopFocus,true);// With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.
// e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.
// Instead, we can look if the active element was restored on the BODY element.
//
// The whatwg spec defines how the browser should behave but does not explicitly mention any events:
// https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.
var interval=setInterval(function(){if(doc.activeElement.tagName==='BODY'){contain();}},50);return function(){clearInterval(interval);doc.removeEventListener('focusin',contain);doc.removeEventListener('keydown',loopFocus,true);};},[disableAutoFocus,disableEnforceFocus,disableRestoreFocus,isEnabled,open,getTabbable]);var onFocus=function onFocus(event){if(nodeToRestore.current===null){nodeToRestore.current=event.relatedTarget;}activated.current=true;reactFocusEventTarget.current=event.target;var childrenPropsHandler=children.props.onFocus;if(childrenPropsHandler){childrenPropsHandler(event);}};var handleFocusSentinel=function handleFocusSentinel(event){if(nodeToRestore.current===null){nodeToRestore.current=event.relatedTarget;}activated.current=true;};return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx("div",{tabIndex:0,onFocus:handleFocusSentinel,ref:sentinelStart,"data-test":"sentinelStart"}),/*#__PURE__*/rn$1(children,{ref:handleRef,onFocus:onFocus}),/*#__PURE__*/jsx("div",{tabIndex:0,onFocus:handleFocusSentinel,ref:sentinelEnd,"data-test":"sentinelEnd"})]});}function getModalUtilityClass(slot){return generateUtilityClass('MuiModal',slot);}generateUtilityClasses('MuiModal',['root','hidden']);var _excluded$T=["BackdropComponent","BackdropProps","children","classes","className","closeAfterTransition","component","components","componentsProps","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","open","theme","onTransitionEnter","onTransitionExited"];var useUtilityClasses$C=function useUtilityClasses$C(ownerState){var open=ownerState.open,exited=ownerState.exited,classes=ownerState.classes;var slots={root:['root',!open&&exited&&'hidden']};return composeClasses(slots,getModalUtilityClass,classes);};function getContainer(container){return typeof container==='function'?container():container;}function getHasTransition(props){return props.children?props.children.props.hasOwnProperty('in'):false;}// A modal manager used to track and manage the state of open Modals.
// Modals don't open on the server so this won't conflict with concurrent requests.
var defaultManager=new ModalManager();/**
       * Modal is a lower-level construct that is leveraged by the following components:
       *
       * - [Dialog](/api/dialog/)
       * - [Drawer](/api/drawer/)
       * - [Menu](/api/menu/)
       * - [Popover](/api/popover/)
       *
       * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
       * rather than directly using Modal.
       *
       * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
       */var ModalUnstyled=/*#__PURE__*/x$5(function ModalUnstyled(props,ref){var BackdropComponent=props.BackdropComponent,BackdropProps=props.BackdropProps,children=props.children,classesProp=props.classes,className=props.className,_props$closeAfterTran=props.closeAfterTransition,closeAfterTransition=_props$closeAfterTran===void 0?false:_props$closeAfterTran,_props$component2=props.component,component=_props$component2===void 0?'div':_props$component2,_props$components2=props.components,components=_props$components2===void 0?{}:_props$components2,_props$componentsProp2=props.componentsProps,componentsProps=_props$componentsProp2===void 0?{}:_props$componentsProp2,container=props.container,_props$disableAutoFoc2=props.disableAutoFocus,disableAutoFocus=_props$disableAutoFoc2===void 0?false:_props$disableAutoFoc2,_props$disableEnforce2=props.disableEnforceFocus,disableEnforceFocus=_props$disableEnforce2===void 0?false:_props$disableEnforce2,_props$disableEscapeK=props.disableEscapeKeyDown,disableEscapeKeyDown=_props$disableEscapeK===void 0?false:_props$disableEscapeK,_props$disablePortal2=props.disablePortal,disablePortal=_props$disablePortal2===void 0?false:_props$disablePortal2,_props$disableRestore2=props.disableRestoreFocus,disableRestoreFocus=_props$disableRestore2===void 0?false:_props$disableRestore2,_props$disableScrollL=props.disableScrollLock,disableScrollLock=_props$disableScrollL===void 0?false:_props$disableScrollL,_props$hideBackdrop=props.hideBackdrop,hideBackdrop=_props$hideBackdrop===void 0?false:_props$hideBackdrop,_props$keepMounted=props.keepMounted,keepMounted=_props$keepMounted===void 0?false:_props$keepMounted,_props$manager=props.manager,manager=_props$manager===void 0?defaultManager:_props$manager,onBackdropClick=props.onBackdropClick,onClose=props.onClose,onKeyDown=props.onKeyDown,open=props.open,theme=props.theme,onTransitionEnter=props.onTransitionEnter,onTransitionExited=props.onTransitionExited,other=_objectWithoutPropertiesLoose$1(props,_excluded$T);var _l$7=l$4(true),_l$8=_slicedToArray(_l$7,2),exited=_l$8[0],setExited=_l$8[1];var modal=s$1({});var mountNodeRef=s$1(null);var modalRef=s$1(null);var handleRef=useForkRef(modalRef,ref);var hasTransition=getHasTransition(props);var getDoc=function getDoc(){return ownerDocument(mountNodeRef.current);};var getModal=function getModal(){modal.current.modalRef=modalRef.current;modal.current.mountNode=mountNodeRef.current;return modal.current;};var handleMounted=function handleMounted(){manager.mount(getModal(),{disableScrollLock:disableScrollLock});// Fix a bug on Chrome where the scroll isn't initially 0.
modalRef.current.scrollTop=0;};var handleOpen=useEventCallback(function(){var resolvedContainer=getContainer(container)||getDoc().body;manager.add(getModal(),resolvedContainer);// The element was already mounted.
if(modalRef.current){handleMounted();}});var isTopModal=F$5(function(){return manager.isTopModal(getModal());},[manager]);var handlePortalRef=useEventCallback(function(node){mountNodeRef.current=node;if(!node){return;}if(open&&isTopModal()){handleMounted();}else{ariaHidden(modalRef.current,true);}});var handleClose=F$5(function(){manager.remove(getModal());},[manager]);y$3(function(){return function(){handleClose();};},[handleClose]);y$3(function(){if(open){handleOpen();}else if(!hasTransition||!closeAfterTransition){handleClose();}},[open,handleClose,hasTransition,closeAfterTransition,handleOpen]);var ownerState=_extends$5({},props,{classes:classesProp,closeAfterTransition:closeAfterTransition,disableAutoFocus:disableAutoFocus,disableEnforceFocus:disableEnforceFocus,disableEscapeKeyDown:disableEscapeKeyDown,disablePortal:disablePortal,disableRestoreFocus:disableRestoreFocus,disableScrollLock:disableScrollLock,exited:exited,hideBackdrop:hideBackdrop,keepMounted:keepMounted});var classes=useUtilityClasses$C(ownerState);if(!keepMounted&&!open&&(!hasTransition||exited)){return null;}var handleEnter=function handleEnter(){setExited(false);if(onTransitionEnter){onTransitionEnter();}};var handleExited=function handleExited(){setExited(true);if(onTransitionExited){onTransitionExited();}if(closeAfterTransition){handleClose();}};var handleBackdropClick=function handleBackdropClick(event){if(event.target!==event.currentTarget){return;}if(onBackdropClick){onBackdropClick(event);}if(onClose){onClose(event,'backdropClick');}};var handleKeyDown=function handleKeyDown(event){if(onKeyDown){onKeyDown(event);}// The handler doesn't take event.defaultPrevented into account:
//
// event.preventDefault() is meant to stop default behaviors like
// clicking a checkbox to check it, hitting a button to submit a form,
// and hitting left arrow to move the cursor in a text input etc.
// Only special HTML elements have these default behaviors.
if(event.key!=='Escape'||!isTopModal()){return;}if(!disableEscapeKeyDown){// Swallow the event, in case someone is listening for the escape key on the body.
event.stopPropagation();if(onClose){onClose(event,'escapeKeyDown');}}};var childProps={};if(children.props.tabIndex===undefined){childProps.tabIndex='-1';}// It's a Transition like component
if(hasTransition){childProps.onEnter=createChainedFunction(handleEnter,children.props.onEnter);childProps.onExited=createChainedFunction(handleExited,children.props.onExited);}var Root=components.Root||component;var rootProps=componentsProps.root||{};return/*#__PURE__*/jsx(Portal$1,{ref:handlePortalRef,container:container,disablePortal:disablePortal,children:/*#__PURE__*/jsxs(Root,_extends$5({role:"presentation"},rootProps,!isHostComponent(Root)&&{as:component,ownerState:_extends$5({},ownerState,rootProps.ownerState),theme:theme},other,{ref:handleRef,onKeyDown:handleKeyDown,className:clsx(classes.root,rootProps.className,className),children:[!hideBackdrop&&BackdropComponent?/*#__PURE__*/jsx(BackdropComponent,_extends$5({open:open,onClick:handleBackdropClick},BackdropProps)):null,/*#__PURE__*/jsx(Unstable_TrapFocus,{disableEnforceFocus:disableEnforceFocus,disableAutoFocus:disableAutoFocus,disableRestoreFocus:disableRestoreFocus,isEnabled:isTopModal,open:open,children:/*#__PURE__*/rn$1(children,childProps)})]}))});});var ModalUnstyled$1=ModalUnstyled;function NoSsr(props){var children=props.children,_props$defer=props.defer,defer=_props$defer===void 0?false:_props$defer,_props$fallback=props.fallback,fallback=_props$fallback===void 0?null:_props$fallback;var _l$9=l$4(false),_l$10=_slicedToArray(_l$9,2),mountedState=_l$10[0],setMountedState=_l$10[1];useEnhancedEffect$1(function(){if(!defer){setMountedState(true);}},[defer]);y$3(function(){if(defer){setMountedState(true);}},[defer]);// We need the Fragment here to force react-docgen to recognise NoSsr as a component.
return/*#__PURE__*/jsx(d$4,{children:mountedState?children:fallback});}var _excluded$S=["onChange","maxRows","minRows","style","value"];function getStyleValue(computedStyle,property){return parseInt(computedStyle[property],10)||0;}var styles$3={shadow:{// Visibility needed to hide the extra text area on iPads
visibility:'hidden',// Remove from the content flow
position:'absolute',// Ignore the scrollbar width
overflow:'hidden',height:0,top:0,left:0,// Create a new layer, increase the isolation of the computed values
transform:'translateZ(0)'}};var TextareaAutosize=/*#__PURE__*/x$5(function TextareaAutosize(props,ref){var onChange=props.onChange,maxRows=props.maxRows,_props$minRows=props.minRows,minRows=_props$minRows===void 0?1:_props$minRows,style=props.style,value=props.value,other=_objectWithoutPropertiesLoose$1(props,_excluded$S);var _s$2=s$1(value!=null),isControlled=_s$2.current;var inputRef=s$1(null);var handleRef=useForkRef(ref,inputRef);var shadowRef=s$1(null);var renders=s$1(0);var _l$11=l$4({}),_l$12=_slicedToArray(_l$11,2),state=_l$12[0],setState=_l$12[1];var syncHeight=F$5(function(){var input=inputRef.current;var containerWindow=ownerWindow(input);var computedStyle=containerWindow.getComputedStyle(input);// If input's width is shrunk and it's not visible, don't sync height.
if(computedStyle.width==='0px'){return;}var inputShallow=shadowRef.current;inputShallow.style.width=computedStyle.width;inputShallow.value=input.value||props.placeholder||'x';if(inputShallow.value.slice(-1)==='\n'){// Certain fonts which overflow the line height will cause the textarea
// to report a different scrollHeight depending on whether the last line
// is empty. Make it non-empty to avoid this issue.
inputShallow.value+=' ';}var boxSizing=computedStyle['box-sizing'];var padding=getStyleValue(computedStyle,'padding-bottom')+getStyleValue(computedStyle,'padding-top');var border=getStyleValue(computedStyle,'border-bottom-width')+getStyleValue(computedStyle,'border-top-width');// The height of the inner content
var innerHeight=inputShallow.scrollHeight;// Measure height of a textarea with a single row
inputShallow.value='x';var singleRowHeight=inputShallow.scrollHeight;// The height of the outer content
var outerHeight=innerHeight;if(minRows){outerHeight=Math.max(Number(minRows)*singleRowHeight,outerHeight);}if(maxRows){outerHeight=Math.min(Number(maxRows)*singleRowHeight,outerHeight);}outerHeight=Math.max(outerHeight,singleRowHeight);// Take the box sizing into account for applying this value as a style.
var outerHeightStyle=outerHeight+(boxSizing==='border-box'?padding+border:0);var overflow=Math.abs(outerHeight-innerHeight)<=1;setState(function(prevState){// Need a large enough difference to update the height.
// This prevents infinite rendering loop.
if(renders.current<20&&(outerHeightStyle>0&&Math.abs((prevState.outerHeightStyle||0)-outerHeightStyle)>1||prevState.overflow!==overflow)){renders.current+=1;return{overflow:overflow,outerHeightStyle:outerHeightStyle};}return prevState;});},[maxRows,minRows,props.placeholder]);y$3(function(){var handleResize=debounce$1(function(){renders.current=0;syncHeight();});var containerWindow=ownerWindow(inputRef.current);containerWindow.addEventListener('resize',handleResize);var resizeObserver;if(typeof ResizeObserver!=='undefined'){resizeObserver=new ResizeObserver(handleResize);resizeObserver.observe(inputRef.current);}return function(){handleResize.clear();containerWindow.removeEventListener('resize',handleResize);if(resizeObserver){resizeObserver.disconnect();}};},[syncHeight]);useEnhancedEffect$1(function(){syncHeight();});y$3(function(){renders.current=0;},[value]);var handleChange=function handleChange(event){renders.current=0;if(!isControlled){syncHeight();}if(onChange){onChange(event);}};return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx("textarea",_extends$5({value:value,onChange:handleChange,ref:handleRef// Apply the rows prop to get a "correct" first SSR paint
,rows:minRows,style:_extends$5({height:state.outerHeightStyle,// Need a large enough difference to allow scrolling.
// This prevents infinite rendering loop.
overflow:state.overflow?'hidden':null},style)},other)),/*#__PURE__*/jsx("textarea",{"aria-hidden":true,className:props.className,readOnly:true,ref:shadowRef,tabIndex:-1,style:_extends$5({},styles$3.shadow,style,{padding:0})})]});});var TextareaAutosize$1=TextareaAutosize;function createMixins(breakpoints,spacing,mixins){var _toolbar;return _extends$5({toolbar:(_toolbar={minHeight:56},_defineProperty(_toolbar,"".concat(breakpoints.up('xs')," and (orientation: landscape)"),{minHeight:48}),_defineProperty(_toolbar,breakpoints.up('sm'),{minHeight:64}),_toolbar)},mixins);}var _excluded$R=["mode","contrastThreshold","tonalOffset"];var light={// The colors used to style the text.
text:{// The most important text.
primary:'rgba(0, 0, 0, 0.87)',// Secondary text.
secondary:'rgba(0, 0, 0, 0.6)',// Disabled text have even lower visual prominence.
disabled:'rgba(0, 0, 0, 0.38)'},// The color used to divide different elements.
divider:'rgba(0, 0, 0, 0.12)',// The background colors used to style the surfaces.
// Consistency between these values is important.
background:{paper:common$1.white,default:common$1.white},// The colors used to style the action elements.
action:{// The color of an active action like an icon button.
active:'rgba(0, 0, 0, 0.54)',// The color of an hovered action.
hover:'rgba(0, 0, 0, 0.04)',hoverOpacity:0.04,// The color of a selected action.
selected:'rgba(0, 0, 0, 0.08)',selectedOpacity:0.08,// The color of a disabled action.
disabled:'rgba(0, 0, 0, 0.26)',// The background color of a disabled action.
disabledBackground:'rgba(0, 0, 0, 0.12)',disabledOpacity:0.38,focus:'rgba(0, 0, 0, 0.12)',focusOpacity:0.12,activatedOpacity:0.12}};var dark={text:{primary:common$1.white,secondary:'rgba(255, 255, 255, 0.7)',disabled:'rgba(255, 255, 255, 0.5)',icon:'rgba(255, 255, 255, 0.5)'},divider:'rgba(255, 255, 255, 0.12)',background:{paper:'#121212',default:'#121212'},action:{active:common$1.white,hover:'rgba(255, 255, 255, 0.08)',hoverOpacity:0.08,selected:'rgba(255, 255, 255, 0.16)',selectedOpacity:0.16,disabled:'rgba(255, 255, 255, 0.3)',disabledBackground:'rgba(255, 255, 255, 0.12)',disabledOpacity:0.38,focus:'rgba(255, 255, 255, 0.12)',focusOpacity:0.12,activatedOpacity:0.24}};function addLightOrDark(intent,direction,shade,tonalOffset){var tonalOffsetLight=tonalOffset.light||tonalOffset;var tonalOffsetDark=tonalOffset.dark||tonalOffset*1.5;if(!intent[direction]){if(intent.hasOwnProperty(shade)){intent[direction]=intent[shade];}else if(direction==='light'){intent.light=lighten(intent.main,tonalOffsetLight);}else if(direction==='dark'){intent.dark=darken(intent.main,tonalOffsetDark);}}}function getDefaultPrimary(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:blue$1[200],light:blue$1[50],dark:blue$1[400]};}return{main:blue$1[700],light:blue$1[400],dark:blue$1[800]};}function getDefaultSecondary(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:purple$1[200],light:purple$1[50],dark:purple$1[400]};}return{main:purple$1[500],light:purple$1[300],dark:purple$1[700]};}function getDefaultError(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:red$1[500],light:red$1[300],dark:red$1[700]};}return{main:red$1[700],light:red$1[400],dark:red$1[800]};}function getDefaultInfo(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:lightBlue$1[400],light:lightBlue$1[300],dark:lightBlue$1[700]};}return{main:lightBlue$1[700],light:lightBlue$1[500],dark:lightBlue$1[900]};}function getDefaultSuccess(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:green$1[400],light:green$1[300],dark:green$1[700]};}return{main:green$1[800],light:green$1[500],dark:green$1[900]};}function getDefaultWarning(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'light';if(mode==='dark'){return{main:orange$1[400],light:orange$1[300],dark:orange$1[700]};}return{main:'#ed6c02',// closest to orange[800] that pass 3:1.
light:orange$1[500],dark:orange$1[900]};}function createPalette(palette){var _palette$mode=palette.mode,mode=_palette$mode===void 0?'light':_palette$mode,_palette$contrastThre=palette.contrastThreshold,contrastThreshold=_palette$contrastThre===void 0?3:_palette$contrastThre,_palette$tonalOffset=palette.tonalOffset,tonalOffset=_palette$tonalOffset===void 0?0.2:_palette$tonalOffset,other=_objectWithoutPropertiesLoose$1(palette,_excluded$R);var primary=palette.primary||getDefaultPrimary(mode);var secondary=palette.secondary||getDefaultSecondary(mode);var error=palette.error||getDefaultError(mode);var info=palette.info||getDefaultInfo(mode);var success=palette.success||getDefaultSuccess(mode);var warning=palette.warning||getDefaultWarning(mode);// Use the same logic as
// Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
// and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
function getContrastText(background){var contrastText=getContrastRatio(background,dark.text.primary)>=contrastThreshold?dark.text.primary:light.text.primary;return contrastText;}var augmentColor=function augmentColor(_ref14){var color=_ref14.color,name=_ref14.name,_ref14$mainShade=_ref14.mainShade,mainShade=_ref14$mainShade===void 0?500:_ref14$mainShade,_ref14$lightShade=_ref14.lightShade,lightShade=_ref14$lightShade===void 0?300:_ref14$lightShade,_ref14$darkShade=_ref14.darkShade,darkShade=_ref14$darkShade===void 0?700:_ref14$darkShade;color=_extends$5({},color);if(!color.main&&color[mainShade]){color.main=color[mainShade];}if(!color.hasOwnProperty('main')){throw new Error(formatMuiErrorMessage(11,name?" (".concat(name,")"):'',mainShade));}if(typeof color.main!=='string'){throw new Error(formatMuiErrorMessage(12,name?" (".concat(name,")"):'',JSON.stringify(color.main)));}addLightOrDark(color,'light',lightShade,tonalOffset);addLightOrDark(color,'dark',darkShade,tonalOffset);if(!color.contrastText){color.contrastText=getContrastText(color.main);}return color;};var modes={dark:dark,light:light};var paletteOutput=deepmerge(_extends$5({// A collection of common colors.
common:common$1,// The palette mode, can be light or dark.
mode:mode,// The colors used to represent primary interface elements for a user.
primary:augmentColor({color:primary,name:'primary'}),// The colors used to represent secondary interface elements for a user.
secondary:augmentColor({color:secondary,name:'secondary',mainShade:'A400',lightShade:'A200',darkShade:'A700'}),// The colors used to represent interface elements that the user should be made aware of.
error:augmentColor({color:error,name:'error'}),// The colors used to represent potentially dangerous actions or important messages.
warning:augmentColor({color:warning,name:'warning'}),// The colors used to present information to the user that is neutral and not necessarily important.
info:augmentColor({color:info,name:'info'}),// The colors used to indicate the successful completion of an action that user triggered.
success:augmentColor({color:success,name:'success'}),// The grey colors.
grey:grey$1,// Used by `getContrastText()` to maximize the contrast between
// the background and the text.
contrastThreshold:contrastThreshold,// Takes a background color and returns the text color that maximizes the contrast.
getContrastText:getContrastText,// Generate a rich color object.
augmentColor:augmentColor,// Used by the functions below to shift a color's luminance by approximately
// two indexes within its tonal palette.
// E.g., shift from Red 500 to Red 300 or Red 700.
tonalOffset:tonalOffset},modes[mode]),other);return paletteOutput;}var _excluded$Q=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];function round(value){return Math.round(value*1e5)/1e5;}var caseAllCaps={textTransform:'uppercase'};var defaultFontFamily='"Roboto", "Helvetica", "Arial", sans-serif';/**
       * @see @link{https://material.io/design/typography/the-type-system.html}
       * @see @link{https://material.io/design/typography/understanding-typography.html}
       */function createTypography(palette,typography){var _ref=typeof typography==='function'?typography(palette):typography,_ref$fontFamily=_ref.fontFamily,fontFamily=_ref$fontFamily===void 0?defaultFontFamily:_ref$fontFamily,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?14:_ref$fontSize,_ref$fontWeightLight=_ref.fontWeightLight,fontWeightLight=_ref$fontWeightLight===void 0?300:_ref$fontWeightLight,_ref$fontWeightRegula=_ref.fontWeightRegular,fontWeightRegular=_ref$fontWeightRegula===void 0?400:_ref$fontWeightRegula,_ref$fontWeightMedium=_ref.fontWeightMedium,fontWeightMedium=_ref$fontWeightMedium===void 0?500:_ref$fontWeightMedium,_ref$fontWeightBold=_ref.fontWeightBold,fontWeightBold=_ref$fontWeightBold===void 0?700:_ref$fontWeightBold,_ref$htmlFontSize=_ref.htmlFontSize,htmlFontSize=_ref$htmlFontSize===void 0?16:_ref$htmlFontSize,allVariants=_ref.allVariants,pxToRem2=_ref.pxToRem,other=_objectWithoutPropertiesLoose$1(_ref,_excluded$Q);var coef=fontSize/14;var pxToRem=pxToRem2||function(size){return"".concat(size/htmlFontSize*coef,"rem");};var buildVariant=function buildVariant(fontWeight,size,lineHeight,letterSpacing,casing){return _extends$5({fontFamily:fontFamily,fontWeight:fontWeight,fontSize:pxToRem(size),// Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
lineHeight:lineHeight},fontFamily===defaultFontFamily?{letterSpacing:"".concat(round(letterSpacing/size),"em")}:{},casing,allVariants);};var variants={h1:buildVariant(fontWeightLight,96,1.167,-1.5),h2:buildVariant(fontWeightLight,60,1.2,-0.5),h3:buildVariant(fontWeightRegular,48,1.167,0),h4:buildVariant(fontWeightRegular,34,1.235,0.25),h5:buildVariant(fontWeightRegular,24,1.334,0),h6:buildVariant(fontWeightMedium,20,1.6,0.15),subtitle1:buildVariant(fontWeightRegular,16,1.75,0.15),subtitle2:buildVariant(fontWeightMedium,14,1.57,0.1),body1:buildVariant(fontWeightRegular,16,1.5,0.15),body2:buildVariant(fontWeightRegular,14,1.43,0.15),button:buildVariant(fontWeightMedium,14,1.75,0.4,caseAllCaps),caption:buildVariant(fontWeightRegular,12,1.66,0.4),overline:buildVariant(fontWeightRegular,12,2.66,1,caseAllCaps)};return deepmerge(_extends$5({htmlFontSize:htmlFontSize,pxToRem:pxToRem,fontFamily:fontFamily,fontSize:fontSize,fontWeightLight:fontWeightLight,fontWeightRegular:fontWeightRegular,fontWeightMedium:fontWeightMedium,fontWeightBold:fontWeightBold},variants),other,{clone:false// No need to clone deep
});}var shadowKeyUmbraOpacity=0.2;var shadowKeyPenumbraOpacity=0.14;var shadowAmbientShadowOpacity=0.12;function createShadow(){return["".concat(arguments.length<=0?undefined:arguments[0],"px ").concat(arguments.length<=1?undefined:arguments[1],"px ").concat(arguments.length<=2?undefined:arguments[2],"px ").concat(arguments.length<=3?undefined:arguments[3],"px rgba(0,0,0,").concat(shadowKeyUmbraOpacity,")"),"".concat(arguments.length<=4?undefined:arguments[4],"px ").concat(arguments.length<=5?undefined:arguments[5],"px ").concat(arguments.length<=6?undefined:arguments[6],"px ").concat(arguments.length<=7?undefined:arguments[7],"px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity,")"),"".concat(arguments.length<=8?undefined:arguments[8],"px ").concat(arguments.length<=9?undefined:arguments[9],"px ").concat(arguments.length<=10?undefined:arguments[10],"px ").concat(arguments.length<=11?undefined:arguments[11],"px rgba(0,0,0,").concat(shadowAmbientShadowOpacity,")")].join(',');}// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
var shadows=['none',createShadow(0,2,1,-1,0,1,1,0,0,1,3,0),createShadow(0,3,1,-2,0,2,2,0,0,1,5,0),createShadow(0,3,3,-2,0,3,4,0,0,1,8,0),createShadow(0,2,4,-1,0,4,5,0,0,1,10,0),createShadow(0,3,5,-1,0,5,8,0,0,1,14,0),createShadow(0,3,5,-1,0,6,10,0,0,1,18,0),createShadow(0,4,5,-2,0,7,10,1,0,2,16,1),createShadow(0,5,5,-3,0,8,10,1,0,3,14,2),createShadow(0,5,6,-3,0,9,12,1,0,3,16,2),createShadow(0,6,6,-3,0,10,14,1,0,4,18,3),createShadow(0,6,7,-4,0,11,15,1,0,4,20,3),createShadow(0,7,8,-4,0,12,17,2,0,5,22,4),createShadow(0,7,8,-4,0,13,19,2,0,5,24,4),createShadow(0,7,9,-4,0,14,21,2,0,5,26,4),createShadow(0,8,9,-5,0,15,22,2,0,6,28,5),createShadow(0,8,10,-5,0,16,24,2,0,6,30,5),createShadow(0,8,11,-5,0,17,26,2,0,6,32,5),createShadow(0,9,11,-5,0,18,28,2,0,7,34,6),createShadow(0,9,12,-6,0,19,29,2,0,7,36,6),createShadow(0,10,13,-6,0,20,31,3,0,8,38,7),createShadow(0,10,13,-6,0,21,33,3,0,8,40,7),createShadow(0,10,14,-6,0,22,35,3,0,8,42,7),createShadow(0,11,14,-7,0,23,36,3,0,9,44,8),createShadow(0,11,15,-7,0,24,38,3,0,9,46,8)];var shadows$1=shadows;var _excluded$P=["duration","easing","delay"];// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.
var easing={// This is the most common easing curve.
easeInOut:'cubic-bezier(0.4, 0, 0.2, 1)',// Objects enter the screen at full velocity from off-screen and
// slowly decelerate to a resting point.
easeOut:'cubic-bezier(0.0, 0, 0.2, 1)',// Objects leave the screen at full velocity. They do not decelerate when off-screen.
easeIn:'cubic-bezier(0.4, 0, 1, 1)',// The sharp curve is used by objects that may return to the screen at any time.
sharp:'cubic-bezier(0.4, 0, 0.6, 1)'};// Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing
var duration$1={shortest:150,shorter:200,short:250,// most basic recommended timing
standard:300,// this is to be used in complex animations
complex:375,// recommended when something is entering screen
enteringScreen:225,// recommended when something is leaving screen
leavingScreen:195};function formatMs(milliseconds){return"".concat(Math.round(milliseconds),"ms");}function getAutoHeightDuration(height){if(!height){return 0;}var constant=height/36;// https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
return Math.round((4+15*Math.pow(constant,0.25)+constant/5)*10);}function createTransitions(inputTransitions){var mergedEasing=_extends$5({},easing,inputTransitions.easing);var mergedDuration=_extends$5({},duration$1,inputTransitions.duration);var create=function create(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:['all'];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$duration=options.duration,durationOption=_options$duration===void 0?mergedDuration.standard:_options$duration,_options$easing=options.easing,easingOption=_options$easing===void 0?mergedEasing.easeInOut:_options$easing,_options$delay=options.delay,delay=_options$delay===void 0?0:_options$delay;_objectWithoutPropertiesLoose$1(options,_excluded$P);return(Array.isArray(props)?props:[props]).map(function(animatedProp){return"".concat(animatedProp," ").concat(typeof durationOption==='string'?durationOption:formatMs(durationOption)," ").concat(easingOption," ").concat(typeof delay==='string'?delay:formatMs(delay));}).join(',');};return _extends$5({getAutoHeightDuration:getAutoHeightDuration,create:create},inputTransitions,{easing:mergedEasing,duration:mergedDuration});}// We need to centralize the zIndex definitions as they work
// like global values in the browser.
var zIndex={mobileStepper:1000,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500};var zIndex$1=zIndex;var _excluded$O=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function createTheme(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$mixins=options.mixins,mixinsInput=_options$mixins===void 0?{}:_options$mixins,_options$palette2=options.palette,paletteInput=_options$palette2===void 0?{}:_options$palette2,_options$transitions=options.transitions,transitionsInput=_options$transitions===void 0?{}:_options$transitions,_options$typography=options.typography,typographyInput=_options$typography===void 0?{}:_options$typography,other=_objectWithoutPropertiesLoose$1(options,_excluded$O);var palette=createPalette(paletteInput);var systemTheme=createTheme$1(options);var muiTheme=deepmerge(systemTheme,{mixins:createMixins(systemTheme.breakpoints,systemTheme.spacing,mixinsInput),palette:palette,// Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
shadows:shadows$1.slice(),typography:createTypography(palette,typographyInput),transitions:createTransitions(transitionsInput),zIndex:_extends$5({},zIndex$1)});muiTheme=deepmerge(muiTheme,other);for(var _len10=arguments.length,args=new Array(_len10>1?_len10-1:0),_key10=1;_key10<_len10;_key10++){args[_key10-1]=arguments[_key10];}muiTheme=args.reduce(function(acc,argument){return deepmerge(acc,argument);},muiTheme);return muiTheme;}// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss
// Emulate the sass function "unit"
function getUnit(input){return String(input).match(/[\d.\-+]*\s*(.*)/)[1]||'';}// Emulate the sass function "unitless"
function toUnitless(length){return parseFloat(length);}// Convert any CSS <length> or <percentage> value to any another.
var defaultTheme$1=createTheme();var defaultTheme$2=defaultTheme$1;function useTheme(){var theme=useTheme$1(defaultTheme$2);return theme;}function useThemeProps(_ref15){var props=_ref15.props,name=_ref15.name;return useThemeProps$1({props:props,name:name,defaultTheme:defaultTheme$2});}var rootShouldForwardProp=function rootShouldForwardProp(prop){return shouldForwardProp(prop)&&prop!=='classes';};var slotShouldForwardProp=shouldForwardProp;var styled$1=createStyled({defaultTheme:defaultTheme$2,rootShouldForwardProp:rootShouldForwardProp});var styled$2=styled$1;function getSvgIconUtilityClass(slot){return generateUtilityClass('MuiSvgIcon',slot);}generateUtilityClasses('MuiSvgIcon',['root','colorPrimary','colorSecondary','colorAction','colorError','colorDisabled','fontSizeInherit','fontSizeSmall','fontSizeMedium','fontSizeLarge']);var _excluded$N=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"];var useUtilityClasses$B=function useUtilityClasses$B(ownerState){var color=ownerState.color,fontSize=ownerState.fontSize,classes=ownerState.classes;var slots={root:['root',color!=='inherit'&&"color".concat(capitalize(color)),"fontSize".concat(capitalize(fontSize))]};return composeClasses(slots,getSvgIconUtilityClass,classes);};var SvgIconRoot=styled$2('svg',{name:'MuiSvgIcon',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.color!=='inherit'&&styles["color".concat(capitalize(ownerState.color))],styles["fontSize".concat(capitalize(ownerState.fontSize))]];}})(function(_ref16){var theme=_ref16.theme,ownerState=_ref16.ownerState;var _theme$transitions,_theme$transitions$cr,_theme$transitions2,_theme$transitions2$d,_theme$typography,_theme$typography$pxT,_theme$typography2,_theme$typography2$px,_theme$typography3,_theme$typography3$px,_theme$palette$ownerS,_theme$palette,_theme$palette$ownerS2,_theme$palette2,_theme$palette2$actio,_theme$palette3,_theme$palette3$actio;return{userSelect:'none',width:'1em',height:'1em',display:'inline-block',fill:'currentColor',flexShrink:0,transition:(_theme$transitions=theme.transitions)==null?void 0:(_theme$transitions$cr=_theme$transitions.create)==null?void 0:_theme$transitions$cr.call(_theme$transitions,'fill',{duration:(_theme$transitions2=theme.transitions)==null?void 0:(_theme$transitions2$d=_theme$transitions2.duration)==null?void 0:_theme$transitions2$d.shorter}),fontSize:{inherit:'inherit',small:((_theme$typography=theme.typography)==null?void 0:(_theme$typography$pxT=_theme$typography.pxToRem)==null?void 0:_theme$typography$pxT.call(_theme$typography,20))||'1.25rem',medium:((_theme$typography2=theme.typography)==null?void 0:(_theme$typography2$px=_theme$typography2.pxToRem)==null?void 0:_theme$typography2$px.call(_theme$typography2,24))||'1.5rem',large:((_theme$typography3=theme.typography)==null?void 0:(_theme$typography3$px=_theme$typography3.pxToRem)==null?void 0:_theme$typography3$px.call(_theme$typography3,35))||'2.1875'}[ownerState.fontSize],// TODO v5 deprecate, v6 remove for sx
color:(_theme$palette$ownerS=(_theme$palette=theme.palette)==null?void 0:(_theme$palette$ownerS2=_theme$palette[ownerState.color])==null?void 0:_theme$palette$ownerS2.main)!=null?_theme$palette$ownerS:{action:(_theme$palette2=theme.palette)==null?void 0:(_theme$palette2$actio=_theme$palette2.action)==null?void 0:_theme$palette2$actio.active,disabled:(_theme$palette3=theme.palette)==null?void 0:(_theme$palette3$actio=_theme$palette3.action)==null?void 0:_theme$palette3$actio.disabled,inherit:undefined}[ownerState.color]};});var SvgIcon=/*#__PURE__*/x$5(function SvgIcon(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiSvgIcon'});var children=props.children,className=props.className,_props$color=props.color,color=_props$color===void 0?'inherit':_props$color,_props$component3=props.component,component=_props$component3===void 0?'svg':_props$component3,_props$fontSize=props.fontSize,fontSize=_props$fontSize===void 0?'medium':_props$fontSize,htmlColor=props.htmlColor,_props$inheritViewBox=props.inheritViewBox,inheritViewBox=_props$inheritViewBox===void 0?false:_props$inheritViewBox,titleAccess=props.titleAccess,_props$viewBox=props.viewBox,viewBox=_props$viewBox===void 0?'0 0 24 24':_props$viewBox,other=_objectWithoutPropertiesLoose$1(props,_excluded$N);var ownerState=_extends$5({},props,{color:color,component:component,fontSize:fontSize,inheritViewBox:inheritViewBox,viewBox:viewBox});var more={};if(!inheritViewBox){more.viewBox=viewBox;}var classes=useUtilityClasses$B(ownerState);return/*#__PURE__*/jsxs(SvgIconRoot,_extends$5({as:component,className:clsx(classes.root,className),ownerState:ownerState,focusable:"false",color:htmlColor,"aria-hidden":titleAccess?undefined:true,role:titleAccess?'img':undefined,ref:ref},more,other,{children:[children,titleAccess?/*#__PURE__*/jsx("title",{children:titleAccess}):null]}));});SvgIcon.muiName='SvgIcon';var SvgIcon$1=SvgIcon;function createSvgIcon(path,displayName){var Component=function Component(props,ref){return/*#__PURE__*/jsx(SvgIcon$1,_extends$5({"data-testid":"".concat(displayName,"Icon"),ref:ref},props,{children:path}));};Component.muiName=SvgIcon$1.muiName;return/*#__PURE__*/g$4(/*#__PURE__*/x$5(Component));}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;_setPrototypeOf(subClass,superClass);}var config={disabled:false};var TransitionGroupContext=t$4.createContext(null);var UNMOUNTED='unmounted';var EXITED='exited';var ENTERING='entering';var ENTERED='entered';var EXITING='exiting';/**
       * The Transition component lets you describe a transition from one component
       * state to another _over time_ with a simple declarative API. Most commonly
       * it's used to animate the mounting and unmounting of a component, but can also
       * be used to describe in-place transition states as well.
       *
       * ---
       *
       * **Note**: `Transition` is a platform-agnostic base component. If you're using
       * transitions in CSS, you'll probably want to use
       * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
       * instead. It inherits all the features of `Transition`, but contains
       * additional features necessary to play nice with CSS transitions (hence the
       * name of the component).
       *
       * ---
       *
       * By default the `Transition` component does not alter the behavior of the
       * component it renders, it only tracks "enter" and "exit" states for the
       * components. It's up to you to give meaning and effect to those states. For
       * example we can add styles to a component when it enters or exits:
       *
       * ```jsx
       * import { Transition } from 'react-transition-group';
       *
       * const duration = 300;
       *
       * const defaultStyle = {
       *   transition: `opacity ${duration}ms ease-in-out`,
       *   opacity: 0,
       * }
       *
       * const transitionStyles = {
       *   entering: { opacity: 1 },
       *   entered:  { opacity: 1 },
       *   exiting:  { opacity: 0 },
       *   exited:  { opacity: 0 },
       * };
       *
       * const Fade = ({ in: inProp }) => (
       *   <Transition in={inProp} timeout={duration}>
       *     {state => (
       *       <div style={{
       *         ...defaultStyle,
       *         ...transitionStyles[state]
       *       }}>
       *         I'm a fade Transition!
       *       </div>
       *     )}
       *   </Transition>
       * );
       * ```
       *
       * There are 4 main states a Transition can be in:
       *  - `'entering'`
       *  - `'entered'`
       *  - `'exiting'`
       *  - `'exited'`
       *
       * Transition state is toggled via the `in` prop. When `true` the component
       * begins the "Enter" stage. During this stage, the component will shift from
       * its current transition state, to `'entering'` for the duration of the
       * transition and then to the `'entered'` stage once it's complete. Let's take
       * the following example (we'll use the
       * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
       *
       * ```jsx
       * function App() {
       *   const [inProp, setInProp] = useState(false);
       *   return (
       *     <div>
       *       <Transition in={inProp} timeout={500}>
       *         {state => (
       *           // ...
       *         )}
       *       </Transition>
       *       <button onClick={() => setInProp(true)}>
       *         Click to Enter
       *       </button>
       *     </div>
       *   );
       * }
       * ```
       *
       * When the button is clicked the component will shift to the `'entering'` state
       * and stay there for 500ms (the value of `timeout`) before it finally switches
       * to `'entered'`.
       *
       * When `in` is `false` the same thing happens except the state moves from
       * `'exiting'` to `'exited'`.
       */var Transition=/*#__PURE__*/function(_React$Component){_inheritsLoose(Transition,_React$Component);function Transition(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var parentGroup=context;// In the context of a TransitionGroup all enters are really appears
var appear=parentGroup&&!parentGroup.isMounting?props.enter:props.appear;var initialStatus;_this.appearStatus=null;if(props.in){if(appear){initialStatus=EXITED;_this.appearStatus=ENTERING;}else{initialStatus=ENTERED;}}else{if(props.unmountOnExit||props.mountOnEnter){initialStatus=UNMOUNTED;}else{initialStatus=EXITED;}}_this.state={status:initialStatus};_this.nextCallback=null;return _this;}Transition.getDerivedStateFromProps=function getDerivedStateFromProps(_ref,prevState){var nextIn=_ref.in;if(nextIn&&prevState.status===UNMOUNTED){return{status:EXITED};}return null;}// getSnapshotBeforeUpdate(prevProps) {
//   let nextStatus = null
//   if (prevProps !== this.props) {
//     const { status } = this.state
//     if (this.props.in) {
//       if (status !== ENTERING && status !== ENTERED) {
//         nextStatus = ENTERING
//       }
//     } else {
//       if (status === ENTERING || status === ENTERED) {
//         nextStatus = EXITING
//       }
//     }
//   }
//   return { nextStatus }
// }
;var _proto=Transition.prototype;_proto.componentDidMount=function componentDidMount(){this.updateStatus(true,this.appearStatus);};_proto.componentDidUpdate=function componentDidUpdate(prevProps){var nextStatus=null;if(prevProps!==this.props){var status=this.state.status;if(this.props.in){if(status!==ENTERING&&status!==ENTERED){nextStatus=ENTERING;}}else{if(status===ENTERING||status===ENTERED){nextStatus=EXITING;}}}this.updateStatus(false,nextStatus);};_proto.componentWillUnmount=function componentWillUnmount(){this.cancelNextCallback();};_proto.getTimeouts=function getTimeouts(){var timeout=this.props.timeout;var exit,enter,appear;exit=enter=appear=timeout;if(timeout!=null&&typeof timeout!=='number'){exit=timeout.exit;enter=timeout.enter;// TODO: remove fallback for next major
appear=timeout.appear!==undefined?timeout.appear:enter;}return{exit:exit,enter:enter,appear:appear};};_proto.updateStatus=function updateStatus(mounting,nextStatus){if(mounting===void 0){mounting=false;}if(nextStatus!==null){// nextStatus will always be ENTERING or EXITING.
this.cancelNextCallback();if(nextStatus===ENTERING){this.performEnter(mounting);}else{this.performExit();}}else if(this.props.unmountOnExit&&this.state.status===EXITED){this.setState({status:UNMOUNTED});}};_proto.performEnter=function performEnter(mounting){var _this2=this;var enter=this.props.enter;var appearing=this.context?this.context.isMounting:mounting;var _ref2=this.props.nodeRef?[appearing]:[t$4.findDOMNode(this),appearing],maybeNode=_ref2[0],maybeAppearing=_ref2[1];var timeouts=this.getTimeouts();var enterTimeout=appearing?timeouts.appear:timeouts.enter;// no enter animation skip right to ENTERED
// if we are mounting and running this it means appear _must_ be set
if(!mounting&&!enter||config.disabled){this.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode);});return;}this.props.onEnter(maybeNode,maybeAppearing);this.safeSetState({status:ENTERING},function(){_this2.props.onEntering(maybeNode,maybeAppearing);_this2.onTransitionEnd(enterTimeout,function(){_this2.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode,maybeAppearing);});});});};_proto.performExit=function performExit(){var _this3=this;var exit=this.props.exit;var timeouts=this.getTimeouts();var maybeNode=this.props.nodeRef?undefined:t$4.findDOMNode(this);// no exit animation skip right to EXITED
if(!exit||config.disabled){this.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});return;}this.props.onExit(maybeNode);this.safeSetState({status:EXITING},function(){_this3.props.onExiting(maybeNode);_this3.onTransitionEnd(timeouts.exit,function(){_this3.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});});});};_proto.cancelNextCallback=function cancelNextCallback(){if(this.nextCallback!==null){this.nextCallback.cancel();this.nextCallback=null;}};_proto.safeSetState=function safeSetState(nextState,callback){// This shouldn't be necessary, but there are weird race conditions with
// setState callbacks and unmounting in testing, so always make sure that
// we can cancel any pending setState callbacks after we unmount.
callback=this.setNextCallback(callback);this.setState(nextState,callback);};_proto.setNextCallback=function setNextCallback(callback){var _this4=this;var active=true;this.nextCallback=function(event){if(active){active=false;_this4.nextCallback=null;callback(event);}};this.nextCallback.cancel=function(){active=false;};return this.nextCallback;};_proto.onTransitionEnd=function onTransitionEnd(timeout,handler){this.setNextCallback(handler);var node=this.props.nodeRef?this.props.nodeRef.current:t$4.findDOMNode(this);var doesNotHaveTimeoutOrListener=timeout==null&&!this.props.addEndListener;if(!node||doesNotHaveTimeoutOrListener){setTimeout(this.nextCallback,0);return;}if(this.props.addEndListener){var _ref3=this.props.nodeRef?[this.nextCallback]:[node,this.nextCallback],maybeNode=_ref3[0],maybeNextCallback=_ref3[1];this.props.addEndListener(maybeNode,maybeNextCallback);}if(timeout!=null){setTimeout(this.nextCallback,timeout);}};_proto.render=function render(){var status=this.state.status;if(status===UNMOUNTED){return null;}var _this$props=this.props,children=_this$props.children;_this$props.in;_this$props.mountOnEnter;_this$props.unmountOnExit;_this$props.appear;_this$props.enter;_this$props.exit;_this$props.timeout;_this$props.addEndListener;_this$props.onEnter;_this$props.onEntering;_this$props.onEntered;_this$props.onExit;_this$props.onExiting;_this$props.onExited;_this$props.nodeRef;var childProps=_objectWithoutPropertiesLoose$1(_this$props,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return/*#__PURE__*/ (// allows for nested Transitions
t$4.createElement(TransitionGroupContext.Provider,{value:null},typeof children==='function'?children(status,childProps):t$4.cloneElement(t$4.Children.only(children),childProps)));};return Transition;}(t$4.Component);Transition.contextType=TransitionGroupContext;Transition.propTypes={};// Name the function so it is clearer in the documentation
function noop$3(){}Transition.defaultProps={in:false,mountOnEnter:false,unmountOnExit:false,appear:false,enter:true,exit:true,onEnter:noop$3,onEntering:noop$3,onEntered:noop$3,onExit:noop$3,onExiting:noop$3,onExited:noop$3};Transition.UNMOUNTED=UNMOUNTED;Transition.EXITED=EXITED;Transition.ENTERING=ENTERING;Transition.ENTERED=ENTERED;Transition.EXITING=EXITING;var Transition$1=Transition;function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}/**
       * Given `this.props.children`, return an object mapping key to child.
       *
       * @param {*} children `this.props.children`
       * @return {object} Mapping of key to child
       */function getChildMapping(children,mapFn){var mapper=function mapper(child){return mapFn&&en$1(child)?mapFn(child):child;};var result=Object.create(null);if(children)k$5.map(children,function(c){return c;}).forEach(function(child){// run the map function here instead so that the key is the computed one
result[child.key]=mapper(child);});return result;}/**
       * When you're adding or removing children some may be added or removed in the
       * same render pass. We want to show *both* since we want to simultaneously
       * animate elements in and out. This function takes a previous set of keys
       * and a new set of keys and merges them with its best guess of the correct
       * ordering. In the future we may expose some of the utilities in
       * ReactMultiChild to make this easy, but for now React itself does not
       * directly have this concept of the union of prevChildren and nextChildren
       * so we implement it here.
       *
       * @param {object} prev prev children as returned from
       * `ReactTransitionChildMapping.getChildMapping()`.
       * @param {object} next next children as returned from
       * `ReactTransitionChildMapping.getChildMapping()`.
       * @return {object} a key set that contains all keys in `prev` and all keys
       * in `next` in a reasonable order.
       */function mergeChildMappings(prev,next){prev=prev||{};next=next||{};function getValueForKey(key){return key in next?next[key]:prev[key];}// For each key of `next`, the list of keys to insert before that key in
// the combined list
var nextKeysPending=Object.create(null);var pendingKeys=[];for(var prevKey in prev){if(prevKey in next){if(pendingKeys.length){nextKeysPending[prevKey]=pendingKeys;pendingKeys=[];}}else{pendingKeys.push(prevKey);}}var i;var childMapping={};for(var nextKey in next){if(nextKeysPending[nextKey]){for(i=0;i<nextKeysPending[nextKey].length;i++){var pendingNextKey=nextKeysPending[nextKey][i];childMapping[nextKeysPending[nextKey][i]]=getValueForKey(pendingNextKey);}}childMapping[nextKey]=getValueForKey(nextKey);}// Finally, add the keys which didn't appear before any key in `next`
for(i=0;i<pendingKeys.length;i++){childMapping[pendingKeys[i]]=getValueForKey(pendingKeys[i]);}return childMapping;}function getProp$1(child,prop,props){return props[prop]!=null?props[prop]:child.props[prop];}function getInitialChildMapping(props,onExited){return getChildMapping(props.children,function(child){return rn$1(child,{onExited:onExited.bind(null,child),in:true,appear:getProp$1(child,'appear',props),enter:getProp$1(child,'enter',props),exit:getProp$1(child,'exit',props)});});}function getNextChildMapping(nextProps,prevChildMapping,onExited){var nextChildMapping=getChildMapping(nextProps.children);var children=mergeChildMappings(prevChildMapping,nextChildMapping);Object.keys(children).forEach(function(key){var child=children[key];if(!en$1(child))return;var hasPrev=(key in prevChildMapping);var hasNext=(key in nextChildMapping);var prevChild=prevChildMapping[key];var isLeaving=en$1(prevChild)&&!prevChild.props.in;// item is new (entering)
if(hasNext&&(!hasPrev||isLeaving)){// console.log('entering', key)
children[key]=rn$1(child,{onExited:onExited.bind(null,child),in:true,exit:getProp$1(child,'exit',nextProps),enter:getProp$1(child,'enter',nextProps)});}else if(!hasNext&&hasPrev&&!isLeaving){// item is old (exiting)
// console.log('leaving', key)
children[key]=rn$1(child,{in:false});}else if(hasNext&&hasPrev&&en$1(prevChild)){// item hasn't changed transition states
// copy over the last transition props;
// console.log('unchanged', key)
children[key]=rn$1(child,{onExited:onExited.bind(null,child),in:prevChild.props.in,exit:getProp$1(child,'exit',nextProps),enter:getProp$1(child,'enter',nextProps)});}});return children;}var values$2=Object.values||function(obj){return Object.keys(obj).map(function(k){return obj[k];});};var defaultProps={component:'div',childFactory:function childFactory(child){return child;}};/**
       * The `<TransitionGroup>` component manages a set of transition components
       * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
       * components, `<TransitionGroup>` is a state machine for managing the mounting
       * and unmounting of components over time.
       *
       * Consider the example below. As items are removed or added to the TodoList the
       * `in` prop is toggled automatically by the `<TransitionGroup>`.
       *
       * Note that `<TransitionGroup>`  does not define any animation behavior!
       * Exactly _how_ a list item animates is up to the individual transition
       * component. This means you can mix and match animations across different list
       * items.
       */var TransitionGroup=/*#__PURE__*/function(_React$Component){_inheritsLoose(TransitionGroup,_React$Component);function TransitionGroup(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var handleExited=_this.handleExited.bind(_assertThisInitialized(_this));// Initial children should all be entering, dependent on appear
_this.state={contextValue:{isMounting:true},handleExited:handleExited,firstRender:true};return _this;}var _proto=TransitionGroup.prototype;_proto.componentDidMount=function componentDidMount(){this.mounted=true;this.setState({contextValue:{isMounting:false}});};_proto.componentWillUnmount=function componentWillUnmount(){this.mounted=false;};TransitionGroup.getDerivedStateFromProps=function getDerivedStateFromProps(nextProps,_ref){var prevChildMapping=_ref.children,handleExited=_ref.handleExited,firstRender=_ref.firstRender;return{children:firstRender?getInitialChildMapping(nextProps,handleExited):getNextChildMapping(nextProps,prevChildMapping,handleExited),firstRender:false};}// node is `undefined` when user provided `nodeRef` prop
;_proto.handleExited=function handleExited(child,node){var currentChildMapping=getChildMapping(this.props.children);if(child.key in currentChildMapping)return;if(child.props.onExited){child.props.onExited(node);}if(this.mounted){this.setState(function(state){var children=_extends$5({},state.children);delete children[child.key];return{children:children};});}};_proto.render=function render(){var _this$props=this.props,Component=_this$props.component,childFactory=_this$props.childFactory,props=_objectWithoutPropertiesLoose$1(_this$props,["component","childFactory"]);var contextValue=this.state.contextValue;var children=values$2(this.state.children).map(childFactory);delete props.appear;delete props.enter;delete props.exit;if(Component===null){return/*#__PURE__*/t$4.createElement(TransitionGroupContext.Provider,{value:contextValue},children);}return/*#__PURE__*/t$4.createElement(TransitionGroupContext.Provider,{value:contextValue},/*#__PURE__*/t$4.createElement(Component,props,children));};return TransitionGroup;}(t$4.Component);TransitionGroup.propTypes={};TransitionGroup.defaultProps=defaultProps;var TransitionGroup$1=TransitionGroup;var reflow=function reflow(node){return node.scrollTop;};function getTransitionProps(props,options){var _style$transitionDura,_style$transitionTimi;var timeout=props.timeout,easing=props.easing,_props$style=props.style,style=_props$style===void 0?{}:_props$style;return{duration:(_style$transitionDura=style.transitionDuration)!=null?_style$transitionDura:typeof timeout==='number'?timeout:timeout[options.mode]||0,easing:(_style$transitionTimi=style.transitionTimingFunction)!=null?_style$transitionTimi:_typeof(easing)==='object'?easing[options.mode]:easing,delay:style.transitionDelay};}function getPaperUtilityClass(slot){return generateUtilityClass('MuiPaper',slot);}generateUtilityClasses('MuiPaper',['root','rounded','outlined','elevation','elevation0','elevation1','elevation2','elevation3','elevation4','elevation5','elevation6','elevation7','elevation8','elevation9','elevation10','elevation11','elevation12','elevation13','elevation14','elevation15','elevation16','elevation17','elevation18','elevation19','elevation20','elevation21','elevation22','elevation23','elevation24']);var _excluded$M=["className","component","elevation","square","variant"];var getOverlayAlpha=function getOverlayAlpha(elevation){var alphaValue;if(elevation<1){alphaValue=5.11916*Math.pow(elevation,2);}else{alphaValue=4.5*Math.log(elevation+1)+2;}return(alphaValue/100).toFixed(2);};var useUtilityClasses$A=function useUtilityClasses$A(ownerState){var square=ownerState.square,elevation=ownerState.elevation,variant=ownerState.variant,classes=ownerState.classes;var slots={root:['root',variant,!square&&'rounded',variant==='elevation'&&"elevation".concat(elevation)]};return composeClasses(slots,getPaperUtilityClass,classes);};var PaperRoot=styled$2('div',{name:'MuiPaper',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles[ownerState.variant],!ownerState.square&&styles.rounded,ownerState.variant==='elevation'&&styles["elevation".concat(ownerState.elevation)]];}})(function(_ref17){var theme=_ref17.theme,ownerState=_ref17.ownerState;return _extends$5({backgroundColor:theme.palette.background.paper,color:theme.palette.text.primary,transition:theme.transitions.create('box-shadow')},!ownerState.square&&{borderRadius:theme.shape.borderRadius},ownerState.variant==='outlined'&&{border:"1px solid ".concat(theme.palette.divider)},ownerState.variant==='elevation'&&_extends$5({boxShadow:theme.shadows[ownerState.elevation]},theme.palette.mode==='dark'&&{backgroundImage:"linear-gradient(".concat(alpha('#fff',getOverlayAlpha(ownerState.elevation)),", ").concat(alpha('#fff',getOverlayAlpha(ownerState.elevation)),")")}));});var Paper=/*#__PURE__*/x$5(function Paper(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiPaper'});var className=props.className,_props$component4=props.component,component=_props$component4===void 0?'div':_props$component4,_props$elevation=props.elevation,elevation=_props$elevation===void 0?1:_props$elevation,_props$square=props.square,square=_props$square===void 0?false:_props$square,_props$variant=props.variant,variant=_props$variant===void 0?'elevation':_props$variant,other=_objectWithoutPropertiesLoose$1(props,_excluded$M);var ownerState=_extends$5({},props,{component:component,elevation:elevation,square:square,variant:variant});var classes=useUtilityClasses$A(ownerState);return/*#__PURE__*/jsx(PaperRoot,_extends$5({as:component,ownerState:ownerState,className:clsx(classes.root,className),ref:ref},other));});var Paper$1=exports('P',Paper);function Ripple(props){var className=props.className,classes=props.classes,_props$pulsate=props.pulsate,pulsate=_props$pulsate===void 0?false:_props$pulsate,rippleX=props.rippleX,rippleY=props.rippleY,rippleSize=props.rippleSize,inProp=props.in,onExited=props.onExited,timeout=props.timeout;var _l$13=l$4(false),_l$14=_slicedToArray(_l$13,2),leaving=_l$14[0],setLeaving=_l$14[1];var rippleClassName=clsx(className,classes.ripple,classes.rippleVisible,pulsate&&classes.ripplePulsate);var rippleStyles={width:rippleSize,height:rippleSize,top:-(rippleSize/2)+rippleY,left:-(rippleSize/2)+rippleX};var childClassName=clsx(classes.child,leaving&&classes.childLeaving,pulsate&&classes.childPulsate);if(!inProp&&!leaving){setLeaving(true);}y$3(function(){if(!inProp&&onExited!=null){// react-transition-group#onExited
var timeoutId=setTimeout(onExited,timeout);return function(){clearTimeout(timeoutId);};}return undefined;},[onExited,inProp,timeout]);return/*#__PURE__*/jsx("span",{className:rippleClassName,style:rippleStyles,children:/*#__PURE__*/jsx("span",{className:childClassName})});}var touchRippleClasses=generateUtilityClasses('MuiTouchRipple',['root','ripple','rippleVisible','ripplePulsate','child','childLeaving','childPulsate']);var touchRippleClasses$1=touchRippleClasses;var _excluded$L=["center","classes","className"];var _$3=function _$3(t){return t;},_t$1,_t2$1,_t3$1,_t4$1;var DURATION=550;var DELAY_RIPPLE=80;var enterKeyframe=keyframes(_t$1||(_t$1=_$3(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n"])))));var exitKeyframe=keyframes(_t2$1||(_t2$1=_$3(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n"])))));var pulsateKeyframe=keyframes(_t3$1||(_t3$1=_$3(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n"])))));var TouchRippleRoot=styled$2('span',{name:'MuiTouchRipple',slot:'Root'})({overflow:'hidden',pointerEvents:'none',position:'absolute',zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:'inherit'});// This `styled()` function invokes keyframes. `styled-components` only supports keyframes
// in string templates. Do not convert these styles in JS object as it will break.
var TouchRippleRipple=styled$2(Ripple,{name:'MuiTouchRipple',slot:'Ripple'})(_t4$1||(_t4$1=_$3(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  opacity: 0;\n  position: absolute;\n\n  &."," {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ",";\n    animation-duration: ","ms;\n    animation-timing-function: ",";\n  }\n\n  &."," {\n    animation-duration: ","ms;\n  }\n\n  & ."," {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & ."," {\n    opacity: 0;\n    animation-name: ",";\n    animation-duration: ","ms;\n    animation-timing-function: ",";\n  }\n\n  & ."," {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ",";\n    animation-duration: 2500ms;\n    animation-timing-function: ",";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n"])),0,0,0,0,0,0,0,0,0,0,0,0,0,0)),touchRippleClasses$1.rippleVisible,enterKeyframe,DURATION,function(_ref18){var theme=_ref18.theme;return theme.transitions.easing.easeInOut;},touchRippleClasses$1.ripplePulsate,function(_ref19){var theme=_ref19.theme;return theme.transitions.duration.shorter;},touchRippleClasses$1.child,touchRippleClasses$1.childLeaving,exitKeyframe,DURATION,function(_ref20){var theme=_ref20.theme;return theme.transitions.easing.easeInOut;},touchRippleClasses$1.childPulsate,pulsateKeyframe,function(_ref21){var theme=_ref21.theme;return theme.transitions.easing.easeInOut;});/**
       * @ignore - internal component.
       *
       * TODO v5: Make private
       */var TouchRipple=/*#__PURE__*/x$5(function TouchRipple(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiTouchRipple'});var _props$center=props.center,centerProp=_props$center===void 0?false:_props$center,_props$classes=props.classes,classes=_props$classes===void 0?{}:_props$classes,className=props.className,other=_objectWithoutPropertiesLoose$1(props,_excluded$L);var _l$15=l$4([]),_l$16=_slicedToArray(_l$15,2),ripples=_l$16[0],setRipples=_l$16[1];var nextKey=s$1(0);var rippleCallback=s$1(null);y$3(function(){if(rippleCallback.current){rippleCallback.current();rippleCallback.current=null;}},[ripples]);// Used to filter out mouse emulated events on mobile.
var ignoringMouseDown=s$1(false);// We use a timer in order to only show the ripples for touch "click" like events.
// We don't want to display the ripple for touch scroll events.
var startTimer=s$1(null);// This is the hook called once the previous timeout is ready.
var startTimerCommit=s$1(null);var container=s$1(null);y$3(function(){return function(){clearTimeout(startTimer.current);};},[]);var startCommit=F$5(function(params){var pulsate=params.pulsate,rippleX=params.rippleX,rippleY=params.rippleY,rippleSize=params.rippleSize,cb=params.cb;setRipples(function(oldRipples){return[].concat(_toConsumableArray(oldRipples),[/*#__PURE__*/jsx(TouchRippleRipple,{classes:{ripple:clsx(classes.ripple,touchRippleClasses$1.ripple),rippleVisible:clsx(classes.rippleVisible,touchRippleClasses$1.rippleVisible),ripplePulsate:clsx(classes.ripplePulsate,touchRippleClasses$1.ripplePulsate),child:clsx(classes.child,touchRippleClasses$1.child),childLeaving:clsx(classes.childLeaving,touchRippleClasses$1.childLeaving),childPulsate:clsx(classes.childPulsate,touchRippleClasses$1.childPulsate)},timeout:DURATION,pulsate:pulsate,rippleX:rippleX,rippleY:rippleY,rippleSize:rippleSize},nextKey.current)]);});nextKey.current+=1;rippleCallback.current=cb;},[classes]);var start=F$5(function(){var event=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var cb=arguments.length>2?arguments[2]:undefined;var _options$pulsate=options.pulsate,pulsate=_options$pulsate===void 0?false:_options$pulsate,_options$center=options.center,center=_options$center===void 0?centerProp||options.pulsate:_options$center,_options$fakeElement=options.fakeElement,fakeElement=_options$fakeElement===void 0?false:_options$fakeElement;if(event.type==='mousedown'&&ignoringMouseDown.current){ignoringMouseDown.current=false;return;}if(event.type==='touchstart'){ignoringMouseDown.current=true;}var element=fakeElement?null:container.current;var rect=element?element.getBoundingClientRect():{width:0,height:0,left:0,top:0};// Get the size of the ripple
var rippleX;var rippleY;var rippleSize;if(center||event.clientX===0&&event.clientY===0||!event.clientX&&!event.touches){rippleX=Math.round(rect.width/2);rippleY=Math.round(rect.height/2);}else{var _ref22=event.touches?event.touches[0]:event,clientX=_ref22.clientX,clientY=_ref22.clientY;rippleX=Math.round(clientX-rect.left);rippleY=Math.round(clientY-rect.top);}if(center){rippleSize=Math.sqrt((2*Math.pow(rect.width,2)+Math.pow(rect.height,2))/3);// For some reason the animation is broken on Mobile Chrome if the size is even.
if(rippleSize%2===0){rippleSize+=1;}}else{var sizeX=Math.max(Math.abs((element?element.clientWidth:0)-rippleX),rippleX)*2+2;var sizeY=Math.max(Math.abs((element?element.clientHeight:0)-rippleY),rippleY)*2+2;rippleSize=Math.sqrt(Math.pow(sizeX,2)+Math.pow(sizeY,2));}// Touche devices
if(event.touches){// check that this isn't another touchstart due to multitouch
// otherwise we will only clear a single timer when unmounting while two
// are running
if(startTimerCommit.current===null){// Prepare the ripple effect.
startTimerCommit.current=function(){startCommit({pulsate:pulsate,rippleX:rippleX,rippleY:rippleY,rippleSize:rippleSize,cb:cb});};// Delay the execution of the ripple effect.
startTimer.current=setTimeout(function(){if(startTimerCommit.current){startTimerCommit.current();startTimerCommit.current=null;}},DELAY_RIPPLE);// We have to make a tradeoff with this value.
}}else{startCommit({pulsate:pulsate,rippleX:rippleX,rippleY:rippleY,rippleSize:rippleSize,cb:cb});}},[centerProp,startCommit]);var pulsate=F$5(function(){start({},{pulsate:true});},[start]);var stop=F$5(function(event,cb){clearTimeout(startTimer.current);// The touch interaction occurs too quickly.
// We still want to show ripple effect.
if(event.type==='touchend'&&startTimerCommit.current){startTimerCommit.current();startTimerCommit.current=null;startTimer.current=setTimeout(function(){stop(event,cb);});return;}startTimerCommit.current=null;setRipples(function(oldRipples){if(oldRipples.length>0){return oldRipples.slice(1);}return oldRipples;});rippleCallback.current=cb;},[]);_$5(ref,function(){return{pulsate:pulsate,start:start,stop:stop};},[pulsate,start,stop]);return/*#__PURE__*/jsx(TouchRippleRoot,_extends$5({className:clsx(classes.root,touchRippleClasses$1.root,className),ref:container},other,{children:/*#__PURE__*/jsx(TransitionGroup$1,{component:null,exit:true,children:ripples})}));});var TouchRipple$1=TouchRipple;function getButtonBaseUtilityClass(slot){return generateUtilityClass('MuiButtonBase',slot);}var buttonBaseClasses=generateUtilityClasses('MuiButtonBase',['root','disabled','focusVisible']);var buttonBaseClasses$1=buttonBaseClasses;var _excluded$K=["action","centerRipple","children","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","type"];var useUtilityClasses$z=function useUtilityClasses$z(ownerState){var disabled=ownerState.disabled,focusVisible=ownerState.focusVisible,focusVisibleClassName=ownerState.focusVisibleClassName,classes=ownerState.classes;var slots={root:['root',disabled&&'disabled',focusVisible&&'focusVisible']};var composedClasses=composeClasses(slots,getButtonBaseUtilityClass,classes);if(focusVisible&&focusVisibleClassName){composedClasses.root+=" ".concat(focusVisibleClassName);}return composedClasses;};var ButtonBaseRoot=styled$2('button',{name:'MuiButtonBase',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})((_styled$={display:'inline-flex',alignItems:'center',justifyContent:'center',position:'relative',boxSizing:'border-box',WebkitTapHighlightColor:'transparent',backgroundColor:'transparent',// Reset default value
// We disable the focus ring for mouse, touch and keyboard users.
outline:0,border:0,margin:0,// Remove the margin in Safari
borderRadius:0,padding:0,// Remove the padding in Firefox
cursor:'pointer',userSelect:'none',verticalAlign:'middle',MozAppearance:'none',// Reset
WebkitAppearance:'none',// Reset
textDecoration:'none',// So we take precedent over the style of a native <a /> element.
color:'inherit','&::-moz-focus-inner':{borderStyle:'none'// Remove Firefox dotted outline.
}},_defineProperty(_styled$,"&.".concat(buttonBaseClasses$1.disabled),{pointerEvents:'none',// Disable link interactions
cursor:'default'}),_defineProperty(_styled$,'@media print',{colorAdjust:'exact'}),_styled$));/**
       * `ButtonBase` contains as few styles as possible.
       * It aims to be a simple building block for creating a button.
       * It contains a load of style reset and some focus/ripple logic.
       */var ButtonBase=/*#__PURE__*/x$5(function ButtonBase(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiButtonBase'});var action=props.action,_props$centerRipple=props.centerRipple,centerRipple=_props$centerRipple===void 0?false:_props$centerRipple,children=props.children,className=props.className,_props$component5=props.component,component=_props$component5===void 0?'button':_props$component5,_props$disabled=props.disabled,disabled=_props$disabled===void 0?false:_props$disabled,_props$disableRipple=props.disableRipple,disableRipple=_props$disableRipple===void 0?false:_props$disableRipple,_props$disableTouchRi=props.disableTouchRipple,disableTouchRipple=_props$disableTouchRi===void 0?false:_props$disableTouchRi,_props$focusRipple=props.focusRipple,focusRipple=_props$focusRipple===void 0?false:_props$focusRipple,_props$LinkComponent=props.LinkComponent,LinkComponent=_props$LinkComponent===void 0?'a':_props$LinkComponent,onBlur=props.onBlur,onClick=props.onClick,onContextMenu=props.onContextMenu,onDragLeave=props.onDragLeave,onFocus=props.onFocus,onFocusVisible=props.onFocusVisible,onKeyDown=props.onKeyDown,onKeyUp=props.onKeyUp,onMouseDown=props.onMouseDown,onMouseLeave=props.onMouseLeave,onMouseUp=props.onMouseUp,onTouchEnd=props.onTouchEnd,onTouchMove=props.onTouchMove,onTouchStart=props.onTouchStart,_props$tabIndex=props.tabIndex,tabIndex=_props$tabIndex===void 0?0:_props$tabIndex,TouchRippleProps=props.TouchRippleProps,type=props.type,other=_objectWithoutPropertiesLoose$1(props,_excluded$K);var buttonRef=s$1(null);var rippleRef=s$1(null);var _useIsFocusVisible=useIsFocusVisible(),isFocusVisibleRef=_useIsFocusVisible.isFocusVisibleRef,handleFocusVisible=_useIsFocusVisible.onFocus,handleBlurVisible=_useIsFocusVisible.onBlur,focusVisibleRef=_useIsFocusVisible.ref;var _l$17=l$4(false),_l$18=_slicedToArray(_l$17,2),focusVisible=_l$18[0],setFocusVisible=_l$18[1];if(disabled&&focusVisible){setFocusVisible(false);}_$5(action,function(){return{focusVisible:function focusVisible(){setFocusVisible(true);buttonRef.current.focus();}};},[]);y$3(function(){if(focusVisible&&focusRipple&&!disableRipple){rippleRef.current.pulsate();}},[disableRipple,focusRipple,focusVisible]);function useRippleHandler(rippleAction,eventCallback){var skipRippleAction=arguments.length>2&&arguments[2]!==undefined?arguments[2]:disableTouchRipple;return useEventCallback(function(event){if(eventCallback){eventCallback(event);}var ignore=skipRippleAction;if(!ignore&&rippleRef.current){rippleRef.current[rippleAction](event);}return true;});}var handleMouseDown=useRippleHandler('start',onMouseDown);var handleContextMenu=useRippleHandler('stop',onContextMenu);var handleDragLeave=useRippleHandler('stop',onDragLeave);var handleMouseUp=useRippleHandler('stop',onMouseUp);var handleMouseLeave=useRippleHandler('stop',function(event){if(focusVisible){event.preventDefault();}if(onMouseLeave){onMouseLeave(event);}});var handleTouchStart=useRippleHandler('start',onTouchStart);var handleTouchEnd=useRippleHandler('stop',onTouchEnd);var handleTouchMove=useRippleHandler('stop',onTouchMove);var handleBlur=useRippleHandler('stop',function(event){handleBlurVisible(event);if(isFocusVisibleRef.current===false){setFocusVisible(false);}if(onBlur){onBlur(event);}},false);var handleFocus=useEventCallback(function(event){// Fix for https://github.com/facebook/react/issues/7769
if(!buttonRef.current){buttonRef.current=event.currentTarget;}handleFocusVisible(event);if(isFocusVisibleRef.current===true){setFocusVisible(true);if(onFocusVisible){onFocusVisible(event);}}if(onFocus){onFocus(event);}});var isNonNativeButton=function isNonNativeButton(){var button=buttonRef.current;return component&&component!=='button'&&!(button.tagName==='A'&&button.href);};/**
         * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
         */var keydownRef=s$1(false);var handleKeyDown=useEventCallback(function(event){// Check if key is already down to avoid repeats being counted as multiple activations
if(focusRipple&&!keydownRef.current&&focusVisible&&rippleRef.current&&event.key===' '){keydownRef.current=true;rippleRef.current.stop(event,function(){rippleRef.current.start(event);});}if(event.target===event.currentTarget&&isNonNativeButton()&&event.key===' '){event.preventDefault();}if(onKeyDown){onKeyDown(event);}// Keyboard accessibility for non interactive elements
if(event.target===event.currentTarget&&isNonNativeButton()&&event.key==='Enter'&&!disabled){event.preventDefault();if(onClick){onClick(event);}}});var handleKeyUp=useEventCallback(function(event){// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
// https://codesandbox.io/s/button-keyup-preventdefault-dn7f0
if(focusRipple&&event.key===' '&&rippleRef.current&&focusVisible&&!event.defaultPrevented){keydownRef.current=false;rippleRef.current.stop(event,function(){rippleRef.current.pulsate(event);});}if(onKeyUp){onKeyUp(event);}// Keyboard accessibility for non interactive elements
if(onClick&&event.target===event.currentTarget&&isNonNativeButton()&&event.key===' '&&!event.defaultPrevented){onClick(event);}});var ComponentProp=component;if(ComponentProp==='button'&&(other.href||other.to)){ComponentProp=LinkComponent;}var buttonProps={};if(ComponentProp==='button'){buttonProps.type=type===undefined?'button':type;buttonProps.disabled=disabled;}else{if(!other.href&&!other.to){buttonProps.role='button';}if(disabled){buttonProps['aria-disabled']=disabled;}}var handleOwnRef=useForkRef(focusVisibleRef,buttonRef);var handleRef=useForkRef(ref,handleOwnRef);var _l$19=l$4(false),_l$20=_slicedToArray(_l$19,2),mountedState=_l$20[0],setMountedState=_l$20[1];y$3(function(){setMountedState(true);},[]);var enableTouchRipple=mountedState&&!disableRipple&&!disabled;var ownerState=_extends$5({},props,{centerRipple:centerRipple,component:component,disabled:disabled,disableRipple:disableRipple,disableTouchRipple:disableTouchRipple,focusRipple:focusRipple,tabIndex:tabIndex,focusVisible:focusVisible});var classes=useUtilityClasses$z(ownerState);return/*#__PURE__*/jsxs(ButtonBaseRoot,_extends$5({as:ComponentProp,className:clsx(classes.root,className),ownerState:ownerState,onBlur:handleBlur,onClick:onClick,onContextMenu:handleContextMenu,onFocus:handleFocus,onKeyDown:handleKeyDown,onKeyUp:handleKeyUp,onMouseDown:handleMouseDown,onMouseLeave:handleMouseLeave,onMouseUp:handleMouseUp,onDragLeave:handleDragLeave,onTouchEnd:handleTouchEnd,onTouchMove:handleTouchMove,onTouchStart:handleTouchStart,ref:handleRef,tabIndex:disabled?-1:tabIndex,type:type},buttonProps,other,{children:[children,enableTouchRipple?/*#__PURE__*/ /* TouchRipple is only needed client-side, x2 boost on the server. */jsx(TouchRipple$1,_extends$5({ref:rippleRef,center:centerRipple},TouchRippleProps)):null]}));});var ButtonBase$1=exports('J',ButtonBase);function getIconButtonUtilityClass(slot){return generateUtilityClass('MuiIconButton',slot);}var iconButtonClasses=generateUtilityClasses('MuiIconButton',['root','disabled','colorInherit','colorPrimary','colorSecondary','edgeStart','edgeEnd','sizeSmall','sizeMedium','sizeLarge']);var iconButtonClasses$1=iconButtonClasses;var _excluded$J=["edge","children","className","color","disabled","disableFocusRipple","size"];var useUtilityClasses$y=function useUtilityClasses$y(ownerState){var classes=ownerState.classes,disabled=ownerState.disabled,color=ownerState.color,edge=ownerState.edge,size=ownerState.size;var slots={root:['root',disabled&&'disabled',color!=='default'&&"color".concat(capitalize(color)),edge&&"edge".concat(capitalize(edge)),"size".concat(capitalize(size))]};return composeClasses(slots,getIconButtonUtilityClass,classes);};var IconButtonRoot=styled$2(ButtonBase$1,{name:'MuiIconButton',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.color!=='default'&&styles["color".concat(capitalize(ownerState.color))],ownerState.edge&&styles["edge".concat(capitalize(ownerState.edge))],styles["size".concat(capitalize(ownerState.size))]];}})(function(_ref23){var theme=_ref23.theme,ownerState=_ref23.ownerState;return _extends$5({textAlign:'center',flex:'0 0 auto',fontSize:theme.typography.pxToRem(24),padding:8,borderRadius:'50%',overflow:'visible',// Explicitly set the default value to solve a bug on IE11.
color:theme.palette.action.active,transition:theme.transitions.create('background-color',{duration:theme.transitions.duration.shortest})},!ownerState.disableRipple&&{'&:hover':{backgroundColor:alpha(theme.palette.action.active,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}}},ownerState.edge==='start'&&{marginLeft:ownerState.size==='small'?-3:-12},ownerState.edge==='end'&&{marginRight:ownerState.size==='small'?-3:-12});},function(_ref24){var theme=_ref24.theme,ownerState=_ref24.ownerState;return _extends$5({},ownerState.color==='inherit'&&{color:'inherit'},ownerState.color!=='inherit'&&ownerState.color!=='default'&&_extends$5({color:theme.palette[ownerState.color].main},!ownerState.disableRipple&&{'&:hover':{backgroundColor:alpha(theme.palette[ownerState.color].main,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}}}),ownerState.size==='small'&&{padding:5,fontSize:theme.typography.pxToRem(18)},ownerState.size==='large'&&{padding:12,fontSize:theme.typography.pxToRem(28)},_defineProperty({},"&.".concat(iconButtonClasses$1.disabled),{backgroundColor:'transparent',color:theme.palette.action.disabled}));});/**
       * Refer to the [Icons](/components/icons/) section of the documentation
       * regarding the available icon options.
       */var IconButton=/*#__PURE__*/x$5(function IconButton(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiIconButton'});var _props$edge=props.edge,edge=_props$edge===void 0?false:_props$edge,children=props.children,className=props.className,_props$color2=props.color,color=_props$color2===void 0?'default':_props$color2,_props$disabled2=props.disabled,disabled=_props$disabled2===void 0?false:_props$disabled2,_props$disableFocusRi=props.disableFocusRipple,disableFocusRipple=_props$disableFocusRi===void 0?false:_props$disableFocusRi,_props$size=props.size,size=_props$size===void 0?'medium':_props$size,other=_objectWithoutPropertiesLoose$1(props,_excluded$J);var ownerState=_extends$5({},props,{edge:edge,color:color,disabled:disabled,disableFocusRipple:disableFocusRipple,size:size});var classes=useUtilityClasses$y(ownerState);return/*#__PURE__*/jsx(IconButtonRoot,_extends$5({className:clsx(classes.root,className),centerRipple:true,focusRipple:!disableFocusRipple,disabled:disabled,ref:ref,ownerState:ownerState},other,{children:children}));});var IconButton$1=exports('I',IconButton);function getTypographyUtilityClass(slot){return generateUtilityClass('MuiTypography',slot);}generateUtilityClasses('MuiTypography',['root','h1','h2','h3','h4','h5','h6','subtitle1','subtitle2','body1','body2','inherit','button','caption','overline','alignLeft','alignRight','alignCenter','alignJustify','noWrap','gutterBottom','paragraph']);var _excluded$I=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"];var useUtilityClasses$x=function useUtilityClasses$x(ownerState){var align=ownerState.align,gutterBottom=ownerState.gutterBottom,noWrap=ownerState.noWrap,paragraph=ownerState.paragraph,variant=ownerState.variant,classes=ownerState.classes;var slots={root:['root',variant,ownerState.align!=='inherit'&&"align".concat(capitalize(align)),gutterBottom&&'gutterBottom',noWrap&&'noWrap',paragraph&&'paragraph']};return composeClasses(slots,getTypographyUtilityClass,classes);};var TypographyRoot=styled$2('span',{name:'MuiTypography',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.variant&&styles[ownerState.variant],ownerState.align!=='inherit'&&styles["align".concat(capitalize(ownerState.align))],ownerState.noWrap&&styles.noWrap,ownerState.gutterBottom&&styles.gutterBottom,ownerState.paragraph&&styles.paragraph];}})(function(_ref25){var theme=_ref25.theme,ownerState=_ref25.ownerState;return _extends$5({margin:0},ownerState.variant&&theme.typography[ownerState.variant],ownerState.align!=='inherit'&&{textAlign:ownerState.align},ownerState.noWrap&&{overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap'},ownerState.gutterBottom&&{marginBottom:'0.35em'},ownerState.paragraph&&{marginBottom:16});});var defaultVariantMapping={h1:'h1',h2:'h2',h3:'h3',h4:'h4',h5:'h5',h6:'h6',subtitle1:'h6',subtitle2:'h6',body1:'p',body2:'p',inherit:'p'};// TODO v6: deprecate these color values in v5.x and remove the transformation in v6
var colorTransformations={primary:'primary.main',textPrimary:'text.primary',secondary:'secondary.main',textSecondary:'text.secondary',error:'error.main'};var transformDeprecatedColors=function transformDeprecatedColors(color){return colorTransformations[color]||color;};var Typography=/*#__PURE__*/x$5(function Typography(inProps,ref){var themeProps=useThemeProps({props:inProps,name:'MuiTypography'});var color=transformDeprecatedColors(themeProps.color);var props=extendSxProp(_extends$5({},themeProps,{color:color}));var _props$align=props.align,align=_props$align===void 0?'inherit':_props$align,className=props.className,component=props.component,_props$gutterBottom=props.gutterBottom,gutterBottom=_props$gutterBottom===void 0?false:_props$gutterBottom,_props$noWrap=props.noWrap,noWrap=_props$noWrap===void 0?false:_props$noWrap,_props$paragraph=props.paragraph,paragraph=_props$paragraph===void 0?false:_props$paragraph,_props$variant2=props.variant,variant=_props$variant2===void 0?'body1':_props$variant2,_props$variantMapping=props.variantMapping,variantMapping=_props$variantMapping===void 0?defaultVariantMapping:_props$variantMapping,other=_objectWithoutPropertiesLoose$1(props,_excluded$I);var ownerState=_extends$5({},props,{align:align,color:color,className:className,component:component,gutterBottom:gutterBottom,noWrap:noWrap,paragraph:paragraph,variant:variant,variantMapping:variantMapping});var Component=component||(paragraph?'p':variantMapping[variant]||defaultVariantMapping[variant])||'span';var classes=useUtilityClasses$x(ownerState);return/*#__PURE__*/jsx(TypographyRoot,_extends$5({as:Component,ref:ref,ownerState:ownerState,className:clsx(classes.root,className)},other));});var Typography$1=exports('T',Typography);function getAppBarUtilityClass(slot){return generateUtilityClass('MuiAppBar',slot);}generateUtilityClasses('MuiAppBar',['root','positionFixed','positionAbsolute','positionSticky','positionStatic','positionRelative','colorDefault','colorPrimary','colorSecondary','colorInherit','colorTransparent']);var _excluded$H=["className","color","enableColorOnDark","position"];var useUtilityClasses$w=function useUtilityClasses$w(ownerState){var color=ownerState.color,position=ownerState.position,classes=ownerState.classes;var slots={root:['root',"color".concat(capitalize(color)),"position".concat(capitalize(position))]};return composeClasses(slots,getAppBarUtilityClass,classes);};var AppBarRoot=styled$2(Paper$1,{name:'MuiAppBar',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles["position".concat(capitalize(ownerState.position))],styles["color".concat(capitalize(ownerState.color))]];}})(function(_ref26){var theme=_ref26.theme,ownerState=_ref26.ownerState;var backgroundColorDefault=theme.palette.mode==='light'?theme.palette.grey[100]:theme.palette.grey[900];return _extends$5({display:'flex',flexDirection:'column',width:'100%',boxSizing:'border-box',// Prevent padding issue with the Modal and fixed positioned AppBar.
flexShrink:0},ownerState.position==='fixed'&&{position:'fixed',zIndex:theme.zIndex.appBar,top:0,left:'auto',right:0,'@media print':{// Prevent the app bar to be visible on each printed page.
position:'absolute'}},ownerState.position==='absolute'&&{position:'absolute',zIndex:theme.zIndex.appBar,top:0,left:'auto',right:0},ownerState.position==='sticky'&&{// ⚠️ sticky is not supported by IE11.
position:'sticky',zIndex:theme.zIndex.appBar,top:0,left:'auto',right:0},ownerState.position==='static'&&{position:'static'},ownerState.position==='relative'&&{position:'relative'},ownerState.color==='default'&&{backgroundColor:backgroundColorDefault,color:theme.palette.getContrastText(backgroundColorDefault)},ownerState.color&&ownerState.color!=='default'&&ownerState.color!=='inherit'&&ownerState.color!=='transparent'&&{backgroundColor:theme.palette[ownerState.color].main,color:theme.palette[ownerState.color].contrastText},ownerState.color==='inherit'&&{color:'inherit'},theme.palette.mode==='dark'&&!ownerState.enableColorOnDark&&{backgroundColor:null,color:null},ownerState.color==='transparent'&&_extends$5({backgroundColor:'transparent',color:'inherit'},theme.palette.mode==='dark'&&{backgroundImage:'none'}));});var AppBar=/*#__PURE__*/x$5(function AppBar(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiAppBar'});var className=props.className,_props$color3=props.color,color=_props$color3===void 0?'primary':_props$color3,_props$enableColorOnD=props.enableColorOnDark,enableColorOnDark=_props$enableColorOnD===void 0?false:_props$enableColorOnD,_props$position=props.position,position=_props$position===void 0?'fixed':_props$position,other=_objectWithoutPropertiesLoose$1(props,_excluded$H);var ownerState=_extends$5({},props,{color:color,position:position,enableColorOnDark:enableColorOnDark});var classes=useUtilityClasses$w(ownerState);return/*#__PURE__*/jsx(AppBarRoot,_extends$5({square:true,component:"header",ownerState:ownerState,elevation:4,className:clsx(classes.root,className,position==='fixed'&&'mui-fixed'),ref:ref},other));});var MUIBar=exports('ae',AppBar);function getInputUtilityClass(slot){return generateUtilityClass('MuiInput',slot);}var inputClasses=generateUtilityClasses('MuiInput',['root','formControl','focused','disabled','colorSecondary','underline','error','sizeSmall','multiline','fullWidth','input','inputSizeSmall','inputMultiline','inputTypeSearch']);var inputClasses$1=inputClasses;function getInputBaseUtilityClass(slot){return generateUtilityClass('MuiInputBase',slot);}var inputBaseClasses=generateUtilityClasses('MuiInputBase',['root','formControl','focused','disabled','adornedStart','adornedEnd','error','sizeSmall','multiline','colorSecondary','fullWidth','hiddenLabel','input','inputSizeSmall','inputMultiline','inputTypeSearch','inputAdornedStart','inputAdornedEnd','inputHiddenLabel']);var inputBaseClasses$1=inputBaseClasses;function getOutlinedInputUtilityClass(slot){return generateUtilityClass('MuiOutlinedInput',slot);}var outlinedInputClasses=generateUtilityClasses('MuiOutlinedInput',['root','colorSecondary','focused','disabled','adornedStart','adornedEnd','error','sizeSmall','multiline','notchedOutline','input','inputSizeSmall','inputMultiline','inputAdornedStart','inputAdornedEnd']);var outlinedInputClasses$1=outlinedInputClasses;function getFilledInputUtilityClass(slot){return generateUtilityClass('MuiFilledInput',slot);}var filledInputClasses=generateUtilityClasses('MuiFilledInput',['root','colorSecondary','underline','focused','disabled','adornedStart','adornedEnd','error','sizeSmall','multiline','hiddenLabel','input','inputSizeSmall','inputHiddenLabel','inputMultiline','inputAdornedStart','inputAdornedEnd']);var filledInputClasses$1=filledInputClasses;var ArrowDropDownIcon=createSvgIcon(/*#__PURE__*/jsx("path",{d:"M7 10l5 5 5-5z"}),'ArrowDropDown');var _excluded$G=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];var styles$2={entering:{opacity:1},entered:{opacity:1}};var defaultTimeout$1={enter:duration$1.enteringScreen,exit:duration$1.leavingScreen};/**
       * The Fade transition is used by the [Modal](/components/modal/) component.
       * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
       */var Fade=/*#__PURE__*/x$5(function Fade(props,ref){var addEndListener=props.addEndListener,_props$appear=props.appear,appear=_props$appear===void 0?true:_props$appear,_children=props.children,easing=props.easing,inProp=props.in,onEnter=props.onEnter,onEntered=props.onEntered,onEntering=props.onEntering,onExit=props.onExit,onExited=props.onExited,onExiting=props.onExiting,style=props.style,_props$timeout=props.timeout,timeout=_props$timeout===void 0?defaultTimeout$1:_props$timeout,_props$TransitionComp=props.TransitionComponent,TransitionComponent=_props$TransitionComp===void 0?Transition$1:_props$TransitionComp,other=_objectWithoutPropertiesLoose$1(props,_excluded$G);var theme=useTheme();var nodeRef=s$1(null);var foreignRef=useForkRef(_children.ref,ref);var handleRef=useForkRef(nodeRef,foreignRef);var normalizedTransitionCallback=function normalizedTransitionCallback(callback){return function(maybeIsAppearing){if(callback){var _node=nodeRef.current;// onEnterXxx and onExitXxx callbacks have a different arguments.length value.
if(maybeIsAppearing===undefined){callback(_node);}else{callback(_node,maybeIsAppearing);}}};};var handleEntering=normalizedTransitionCallback(onEntering);var handleEnter=normalizedTransitionCallback(function(node,isAppearing){reflow(node);// So the animation always start from the start.
var transitionProps=getTransitionProps({style:style,timeout:timeout,easing:easing},{mode:'enter'});node.style.webkitTransition=theme.transitions.create('opacity',transitionProps);node.style.transition=theme.transitions.create('opacity',transitionProps);if(onEnter){onEnter(node,isAppearing);}});var handleEntered=normalizedTransitionCallback(onEntered);var handleExiting=normalizedTransitionCallback(onExiting);var handleExit=normalizedTransitionCallback(function(node){var transitionProps=getTransitionProps({style:style,timeout:timeout,easing:easing},{mode:'exit'});node.style.webkitTransition=theme.transitions.create('opacity',transitionProps);node.style.transition=theme.transitions.create('opacity',transitionProps);if(onExit){onExit(node);}});var handleExited=normalizedTransitionCallback(onExited);var handleAddEndListener=function handleAddEndListener(next){if(addEndListener){// Old call signature before `react-transition-group` implemented `nodeRef`
addEndListener(nodeRef.current,next);}};return/*#__PURE__*/jsx(TransitionComponent,_extends$5({appear:appear,in:inProp,nodeRef:nodeRef,onEnter:handleEnter,onEntered:handleEntered,onEntering:handleEntering,onExit:handleExit,onExited:handleExited,onExiting:handleExiting,addEndListener:handleAddEndListener,timeout:timeout},other,{children:function children(state,childProps){return/*#__PURE__*/rn$1(_children,_extends$5({style:_extends$5({opacity:0,visibility:state==='exited'&&!inProp?'hidden':undefined},styles$2[state],style,_children.props.style),ref:handleRef},childProps));}}));});var Fade$1=exports('k',Fade);var _excluded$F=["children","components","componentsProps","className","invisible","open","transitionDuration","TransitionComponent"];var extendUtilityClasses$1=function extendUtilityClasses$1(ownerState){var classes=ownerState.classes;return classes;};var BackdropRoot=styled$2('div',{name:'MuiBackdrop',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.invisible&&styles.invisible];}})(function(_ref27){var ownerState=_ref27.ownerState;return _extends$5({position:'fixed',display:'flex',alignItems:'center',justifyContent:'center',right:0,bottom:0,top:0,left:0,backgroundColor:'rgba(0, 0, 0, 0.5)',WebkitTapHighlightColor:'transparent'},ownerState.invisible&&{backgroundColor:'transparent'});});var Backdrop=/*#__PURE__*/x$5(function Backdrop(inProps,ref){var _componentsProps$root;var props=useThemeProps({props:inProps,name:'MuiBackdrop'});var children=props.children,_props$components3=props.components,components=_props$components3===void 0?{}:_props$components3,_props$componentsProp3=props.componentsProps,componentsProps=_props$componentsProp3===void 0?{}:_props$componentsProp3,className=props.className,_props$invisible2=props.invisible,invisible=_props$invisible2===void 0?false:_props$invisible2,open=props.open,transitionDuration=props.transitionDuration,_props$TransitionComp2=props.TransitionComponent,TransitionComponent=_props$TransitionComp2===void 0?Fade$1:_props$TransitionComp2,other=_objectWithoutPropertiesLoose$1(props,_excluded$F);var ownerState=_extends$5({},props,{invisible:invisible});var classes=extendUtilityClasses$1(ownerState);return/*#__PURE__*/jsx(TransitionComponent,_extends$5({in:open,timeout:transitionDuration},other,{children:/*#__PURE__*/jsx(BackdropUnstyled$1,{className:className,invisible:invisible,components:_extends$5({Root:BackdropRoot},components),componentsProps:{root:_extends$5({},componentsProps.root,(!components.Root||!isHostComponent(components.Root))&&{ownerState:_extends$5({},(_componentsProps$root=componentsProps.root)==null?void 0:_componentsProps$root.ownerState)})},classes:classes,ref:ref,children:children})}));});var Backdrop$1=Backdrop;var defaultTheme=createTheme();/**
       * @ignore - do not document.
       */var Box=createBox({defaultTheme:defaultTheme,defaultClassName:'MuiBox-root',generateClassName:ClassNameGenerator$1.generate});var Box$1=exports('B',Box);function getButtonUtilityClass(slot){return generateUtilityClass('MuiButton',slot);}var buttonClasses=generateUtilityClasses('MuiButton',['root','text','textInherit','textPrimary','textSecondary','outlined','outlinedInherit','outlinedPrimary','outlinedSecondary','contained','containedInherit','containedPrimary','containedSecondary','disableElevation','focusVisible','disabled','colorInherit','textSizeSmall','textSizeMedium','textSizeLarge','outlinedSizeSmall','outlinedSizeMedium','outlinedSizeLarge','containedSizeSmall','containedSizeMedium','containedSizeLarge','sizeMedium','sizeSmall','sizeLarge','fullWidth','startIcon','endIcon','iconSizeSmall','iconSizeMedium','iconSizeLarge']);var buttonClasses$1=buttonClasses;/**
       * @ignore - internal component.
       */var ButtonGroupContext=/*#__PURE__*/D$3({});var ButtonGroupContext$1=ButtonGroupContext;var _excluded$E=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"];var useUtilityClasses$v=function useUtilityClasses$v(ownerState){var color=ownerState.color,disableElevation=ownerState.disableElevation,fullWidth=ownerState.fullWidth,size=ownerState.size,variant=ownerState.variant,classes=ownerState.classes;var slots={root:['root',variant,"".concat(variant).concat(capitalize(color)),"size".concat(capitalize(size)),"".concat(variant,"Size").concat(capitalize(size)),color==='inherit'&&'colorInherit',disableElevation&&'disableElevation',fullWidth&&'fullWidth'],label:['label'],startIcon:['startIcon',"iconSize".concat(capitalize(size))],endIcon:['endIcon',"iconSize".concat(capitalize(size))]};var composedClasses=composeClasses(slots,getButtonUtilityClass,classes);return _extends$5({},classes,composedClasses);};var commonIconStyles=function commonIconStyles(ownerState){return _extends$5({},ownerState.size==='small'&&{'& > *:nth-of-type(1)':{fontSize:18}},ownerState.size==='medium'&&{'& > *:nth-of-type(1)':{fontSize:20}},ownerState.size==='large'&&{'& > *:nth-of-type(1)':{fontSize:22}});};var ButtonRoot=styled$2(ButtonBase$1,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiButton',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles[ownerState.variant],styles["".concat(ownerState.variant).concat(capitalize(ownerState.color))],styles["size".concat(capitalize(ownerState.size))],styles["".concat(ownerState.variant,"Size").concat(capitalize(ownerState.size))],ownerState.color==='inherit'&&styles.colorInherit,ownerState.disableElevation&&styles.disableElevation,ownerState.fullWidth&&styles.fullWidth];}})(function(_ref28){var _extends$7;var theme=_ref28.theme,ownerState=_ref28.ownerState;return _extends$5({},theme.typography.button,(_extends$7={minWidth:64,padding:'6px 16px',borderRadius:theme.shape.borderRadius,transition:theme.transitions.create(['background-color','box-shadow','border-color','color'],{duration:theme.transitions.duration.short}),'&:hover':_extends$5({textDecoration:'none',backgroundColor:alpha(theme.palette.text.primary,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}},ownerState.variant==='text'&&ownerState.color!=='inherit'&&{backgroundColor:alpha(theme.palette[ownerState.color].main,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}},ownerState.variant==='outlined'&&ownerState.color!=='inherit'&&{border:"1px solid ".concat(theme.palette[ownerState.color].main),backgroundColor:alpha(theme.palette[ownerState.color].main,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}},ownerState.variant==='contained'&&{backgroundColor:theme.palette.grey.A100,boxShadow:theme.shadows[4],// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{boxShadow:theme.shadows[2],backgroundColor:theme.palette.grey[300]}},ownerState.variant==='contained'&&ownerState.color!=='inherit'&&{backgroundColor:theme.palette[ownerState.color].dark,// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:theme.palette[ownerState.color].main}}),'&:active':_extends$5({},ownerState.variant==='contained'&&{boxShadow:theme.shadows[8]})},_defineProperty(_extends$7,"&.".concat(buttonClasses$1.focusVisible),_extends$5({},ownerState.variant==='contained'&&{boxShadow:theme.shadows[6]})),_defineProperty(_extends$7,"&.".concat(buttonClasses$1.disabled),_extends$5({color:theme.palette.action.disabled},ownerState.variant==='outlined'&&{border:"1px solid ".concat(theme.palette.action.disabledBackground)},ownerState.variant==='outlined'&&ownerState.color==='secondary'&&{border:"1px solid ".concat(theme.palette.action.disabled)},ownerState.variant==='contained'&&{color:theme.palette.action.disabled,boxShadow:theme.shadows[0],backgroundColor:theme.palette.action.disabledBackground})),_extends$7),ownerState.variant==='text'&&{padding:'6px 8px'},ownerState.variant==='text'&&ownerState.color!=='inherit'&&{color:theme.palette[ownerState.color].main},ownerState.variant==='outlined'&&{padding:'5px 15px',border:"1px solid ".concat(theme.palette.mode==='light'?'rgba(0, 0, 0, 0.23)':'rgba(255, 255, 255, 0.23)')},ownerState.variant==='outlined'&&ownerState.color!=='inherit'&&{color:theme.palette[ownerState.color].main,border:"1px solid ".concat(alpha(theme.palette[ownerState.color].main,0.5))},ownerState.variant==='contained'&&{color:theme.palette.getContrastText(theme.palette.grey[300]),backgroundColor:theme.palette.grey[300],boxShadow:theme.shadows[2]},ownerState.variant==='contained'&&ownerState.color!=='inherit'&&{color:theme.palette[ownerState.color].contrastText,backgroundColor:theme.palette[ownerState.color].main},ownerState.color==='inherit'&&{color:'inherit',borderColor:'currentColor'},ownerState.size==='small'&&ownerState.variant==='text'&&{padding:'4px 5px',fontSize:theme.typography.pxToRem(13)},ownerState.size==='large'&&ownerState.variant==='text'&&{padding:'8px 11px',fontSize:theme.typography.pxToRem(15)},ownerState.size==='small'&&ownerState.variant==='outlined'&&{padding:'3px 9px',fontSize:theme.typography.pxToRem(13)},ownerState.size==='large'&&ownerState.variant==='outlined'&&{padding:'7px 21px',fontSize:theme.typography.pxToRem(15)},ownerState.size==='small'&&ownerState.variant==='contained'&&{padding:'4px 10px',fontSize:theme.typography.pxToRem(13)},ownerState.size==='large'&&ownerState.variant==='contained'&&{padding:'8px 22px',fontSize:theme.typography.pxToRem(15)},ownerState.fullWidth&&{width:'100%'});},function(_ref29){var _ref30;var ownerState=_ref29.ownerState;return ownerState.disableElevation&&(_ref30={boxShadow:'none','&:hover':{boxShadow:'none'}},_defineProperty(_ref30,"&.".concat(buttonClasses$1.focusVisible),{boxShadow:'none'}),_defineProperty(_ref30,'&:active',{boxShadow:'none'}),_defineProperty(_ref30,"&.".concat(buttonClasses$1.disabled),{boxShadow:'none'}),_ref30);});var ButtonStartIcon=styled$2('span',{name:'MuiButton',slot:'StartIcon',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.startIcon,styles["iconSize".concat(capitalize(ownerState.size))]];}})(function(_ref31){var ownerState=_ref31.ownerState;return _extends$5({display:'inherit',marginRight:8,marginLeft:-4},ownerState.size==='small'&&{marginLeft:-2},commonIconStyles(ownerState));});var ButtonEndIcon=styled$2('span',{name:'MuiButton',slot:'EndIcon',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.endIcon,styles["iconSize".concat(capitalize(ownerState.size))]];}})(function(_ref32){var ownerState=_ref32.ownerState;return _extends$5({display:'inherit',marginRight:-4,marginLeft:8},ownerState.size==='small'&&{marginRight:-2},commonIconStyles(ownerState));});var Button$1=/*#__PURE__*/x$5(function Button(inProps,ref){// props priority: `inProps` > `contextProps` > `themeDefaultProps`
var contextProps=T$2(ButtonGroupContext$1);var resolvedProps=resolveProps(contextProps,inProps);var props=useThemeProps({props:resolvedProps,name:'MuiButton'});var children=props.children,_props$color4=props.color,color=_props$color4===void 0?'primary':_props$color4,_props$component6=props.component,component=_props$component6===void 0?'button':_props$component6,className=props.className,_props$disabled3=props.disabled,disabled=_props$disabled3===void 0?false:_props$disabled3,_props$disableElevati=props.disableElevation,disableElevation=_props$disableElevati===void 0?false:_props$disableElevati,_props$disableFocusRi2=props.disableFocusRipple,disableFocusRipple=_props$disableFocusRi2===void 0?false:_props$disableFocusRi2,endIconProp=props.endIcon,focusVisibleClassName=props.focusVisibleClassName,_props$fullWidth=props.fullWidth,fullWidth=_props$fullWidth===void 0?false:_props$fullWidth,_props$size2=props.size,size=_props$size2===void 0?'medium':_props$size2,startIconProp=props.startIcon,type=props.type,_props$variant3=props.variant,variant=_props$variant3===void 0?'text':_props$variant3,other=_objectWithoutPropertiesLoose$1(props,_excluded$E);var ownerState=_extends$5({},props,{color:color,component:component,disabled:disabled,disableElevation:disableElevation,disableFocusRipple:disableFocusRipple,fullWidth:fullWidth,size:size,type:type,variant:variant});var classes=useUtilityClasses$v(ownerState);var startIcon=startIconProp&&/*#__PURE__*/jsx(ButtonStartIcon,{className:classes.startIcon,ownerState:ownerState,children:startIconProp});var endIcon=endIconProp&&/*#__PURE__*/jsx(ButtonEndIcon,{className:classes.endIcon,ownerState:ownerState,children:endIconProp});return/*#__PURE__*/jsxs(ButtonRoot,_extends$5({ownerState:ownerState,className:clsx(className,contextProps.className),component:component,disabled:disabled,focusRipple:!disableFocusRipple,focusVisibleClassName:clsx(classes.focusVisible,focusVisibleClassName),ref:ref,type:type},other,{classes:classes,children:[startIcon,children,endIcon]}));});var Button$2=exports('b',Button$1);function getCardUtilityClass(slot){return generateUtilityClass('MuiCard',slot);}generateUtilityClasses('MuiCard',['root']);var _excluded$D=["className","raised"];var useUtilityClasses$u=function useUtilityClasses$u(ownerState){var classes=ownerState.classes;var slots={root:['root']};return composeClasses(slots,getCardUtilityClass,classes);};var CardRoot=styled$2(Paper$1,{name:'MuiCard',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})(function(){return{overflow:'hidden'};});var Card=/*#__PURE__*/x$5(function Card(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiCard'});var className=props.className,_props$raised=props.raised,raised=_props$raised===void 0?false:_props$raised,other=_objectWithoutPropertiesLoose$1(props,_excluded$D);var ownerState=_extends$5({},props,{raised:raised});var classes=useUtilityClasses$u(ownerState);return/*#__PURE__*/jsx(CardRoot,_extends$5({className:clsx(classes.root,className),elevation:raised?8:undefined,ref:ref,ownerState:ownerState},other));});var Card$1=exports('V',Card);function getCardContentUtilityClass(slot){return generateUtilityClass('MuiCardContent',slot);}generateUtilityClasses('MuiCardContent',['root']);var _excluded$C=["className","component"];var useUtilityClasses$t=function useUtilityClasses$t(ownerState){var classes=ownerState.classes;var slots={root:['root']};return composeClasses(slots,getCardContentUtilityClass,classes);};var CardContentRoot=styled$2('div',{name:'MuiCardContent',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})(function(){return{padding:16,'&:last-child':{paddingBottom:24}};});var CardContent=/*#__PURE__*/x$5(function CardContent(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiCardContent'});var className=props.className,_props$component7=props.component,component=_props$component7===void 0?'div':_props$component7,other=_objectWithoutPropertiesLoose$1(props,_excluded$C);var ownerState=_extends$5({},props,{component:component});var classes=useUtilityClasses$t(ownerState);return/*#__PURE__*/jsx(CardContentRoot,_extends$5({as:component,className:clsx(classes.root,className),ownerState:ownerState,ref:ref},other));});var CardContent$1=exports('X',CardContent);function getCardMediaUtilityClass(slot){return generateUtilityClass('MuiCardMedia',slot);}generateUtilityClasses('MuiCardMedia',['root','media','img']);var _excluded$B=["children","className","component","image","src","style"];var useUtilityClasses$s=function useUtilityClasses$s(ownerState){var classes=ownerState.classes,isMediaComponent=ownerState.isMediaComponent,isImageComponent=ownerState.isImageComponent;var slots={root:['root',isMediaComponent&&'media',isImageComponent&&'img']};return composeClasses(slots,getCardMediaUtilityClass,classes);};var CardMediaRoot=styled$2('div',{name:'MuiCardMedia',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;var isMediaComponent=ownerState.isMediaComponent,isImageComponent=ownerState.isImageComponent;return[styles.root,isMediaComponent&&styles.media,isImageComponent&&styles.img];}})(function(_ref33){var ownerState=_ref33.ownerState;return _extends$5({display:'block',backgroundSize:'cover',backgroundRepeat:'no-repeat',backgroundPosition:'center'},ownerState.isMediaComponent&&{width:'100%'},ownerState.isImageComponent&&{// ⚠️ object-fit is not supported by IE11.
objectFit:'cover'});});var MEDIA_COMPONENTS=['video','audio','picture','iframe','img'];var IMAGE_COMPONENTS=['picture','img'];var CardMedia=/*#__PURE__*/x$5(function CardMedia(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiCardMedia'});var children=props.children,className=props.className,_props$component8=props.component,component=_props$component8===void 0?'div':_props$component8,image=props.image,src=props.src,style=props.style,other=_objectWithoutPropertiesLoose$1(props,_excluded$B);var isMediaComponent=MEDIA_COMPONENTS.indexOf(component)!==-1;var composedStyle=!isMediaComponent&&image?_extends$5({backgroundImage:"url(\"".concat(image,"\")")},style):style;var ownerState=_extends$5({},props,{component:component,isMediaComponent:isMediaComponent,isImageComponent:IMAGE_COMPONENTS.indexOf(component)!==-1});var classes=useUtilityClasses$s(ownerState);return/*#__PURE__*/jsx(CardMediaRoot,_extends$5({className:clsx(classes.root,className),as:component,role:!isMediaComponent&&image?'img':undefined,ref:ref,style:composedStyle,ownerState:ownerState,src:isMediaComponent?image||src:undefined},other,{children:children}));});var CardMedia$1=exports('W',CardMedia);/**
       * @ignore - internal component.
       */var FormControlContext=/*#__PURE__*/D$3();var FormControlContext$1=FormControlContext;function useFormControl(){return T$2(FormControlContext$1);}function getSwitchBaseUtilityClass(slot){return generateUtilityClass('PrivateSwitchBase',slot);}generateUtilityClasses('PrivateSwitchBase',['root','checked','disabled','input','edgeStart','edgeEnd']);var _excluded$A=["autoFocus","checked","checkedIcon","className","defaultChecked","disabled","disableFocusRipple","edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"];var useUtilityClasses$r=function useUtilityClasses$r(ownerState){var classes=ownerState.classes,checked=ownerState.checked,disabled=ownerState.disabled,edge=ownerState.edge;var slots={root:['root',checked&&'checked',disabled&&'disabled',edge&&"edge".concat(capitalize(edge))],input:['input']};return composeClasses(slots,getSwitchBaseUtilityClass,classes);};var SwitchBaseRoot=styled$2(ButtonBase$1)(function(_ref34){var ownerState=_ref34.ownerState;return _extends$5({padding:9,borderRadius:'50%'},ownerState.edge==='start'&&{marginLeft:ownerState.size==='small'?-3:-12},ownerState.edge==='end'&&{marginRight:ownerState.size==='small'?-3:-12});});var SwitchBaseInput=styled$2('input')({cursor:'inherit',position:'absolute',opacity:0,width:'100%',height:'100%',top:0,left:0,margin:0,padding:0,zIndex:1});/**
       * @ignore - internal component.
       */var SwitchBase=/*#__PURE__*/x$5(function SwitchBase(props,ref){var autoFocus=props.autoFocus,checkedProp=props.checked,checkedIcon=props.checkedIcon,className=props.className,defaultChecked=props.defaultChecked,disabledProp=props.disabled,_props$disableFocusRi3=props.disableFocusRipple,disableFocusRipple=_props$disableFocusRi3===void 0?false:_props$disableFocusRi3,_props$edge2=props.edge,edge=_props$edge2===void 0?false:_props$edge2,icon=props.icon,id=props.id,inputProps=props.inputProps,inputRef=props.inputRef,name=props.name,onBlur=props.onBlur,onChange=props.onChange,onFocus=props.onFocus,readOnly=props.readOnly,required=props.required,tabIndex=props.tabIndex,type=props.type,value=props.value,other=_objectWithoutPropertiesLoose$1(props,_excluded$A);var _useControlled=useControlled({controlled:checkedProp,default:Boolean(defaultChecked),name:'SwitchBase',state:'checked'}),_useControlled2=_slicedToArray(_useControlled,2),checked=_useControlled2[0],setCheckedState=_useControlled2[1];var muiFormControl=useFormControl();var handleFocus=function handleFocus(event){if(onFocus){onFocus(event);}if(muiFormControl&&muiFormControl.onFocus){muiFormControl.onFocus(event);}};var handleBlur=function handleBlur(event){if(onBlur){onBlur(event);}if(muiFormControl&&muiFormControl.onBlur){muiFormControl.onBlur(event);}};var handleInputChange=function handleInputChange(event){// Workaround for https://github.com/facebook/react/issues/9023
if(event.nativeEvent.defaultPrevented){return;}var newChecked=event.target.checked;setCheckedState(newChecked);if(onChange){// TODO v6: remove the second argument.
onChange(event,newChecked);}};var disabled=disabledProp;if(muiFormControl){if(typeof disabled==='undefined'){disabled=muiFormControl.disabled;}}var hasLabelFor=type==='checkbox'||type==='radio';var ownerState=_extends$5({},props,{checked:checked,disabled:disabled,disableFocusRipple:disableFocusRipple,edge:edge});var classes=useUtilityClasses$r(ownerState);return/*#__PURE__*/jsxs(SwitchBaseRoot,_extends$5({component:"span",className:clsx(classes.root,className),centerRipple:true,focusRipple:!disableFocusRipple,disabled:disabled,tabIndex:null,role:undefined,onFocus:handleFocus,onBlur:handleBlur,ownerState:ownerState,ref:ref},other,{children:[/*#__PURE__*/jsx(SwitchBaseInput,_extends$5({autoFocus:autoFocus,checked:checkedProp,defaultChecked:defaultChecked,className:classes.input,disabled:disabled,id:hasLabelFor&&id,name:name,onChange:handleInputChange,readOnly:readOnly,ref:inputRef,required:required,ownerState:ownerState,tabIndex:tabIndex,type:type},type==='checkbox'&&value===undefined?{}:{value:value},inputProps)),checked?checkedIcon:icon]}));});// NB: If changed, please update Checkbox, Switch and Radio
var SwitchBase$1=SwitchBase;function getContainerUtilityClass(slot){return generateUtilityClass('MuiContainer',slot);}generateUtilityClasses('MuiContainer',['root','disableGutters','fixed','maxWidthXs','maxWidthSm','maxWidthMd','maxWidthLg','maxWidthXl']);var _excluded$z=["className","component","disableGutters","fixed","maxWidth"];var useUtilityClasses$q=function useUtilityClasses$q(ownerState){var classes=ownerState.classes,fixed=ownerState.fixed,disableGutters=ownerState.disableGutters,maxWidth=ownerState.maxWidth;var slots={root:['root',maxWidth&&"maxWidth".concat(capitalize(String(maxWidth))),fixed&&'fixed',disableGutters&&'disableGutters']};return composeClasses(slots,getContainerUtilityClass,classes);};var ContainerRoot=styled$2('div',{name:'MuiContainer',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles["maxWidth".concat(capitalize(String(ownerState.maxWidth)))],ownerState.fixed&&styles.fixed,ownerState.disableGutters&&styles.disableGutters];}})(function(_ref35){var theme=_ref35.theme,ownerState=_ref35.ownerState;return _extends$5({width:'100%',marginLeft:'auto',boxSizing:'border-box',marginRight:'auto',display:'block'},!ownerState.disableGutters&&_defineProperty({paddingLeft:theme.spacing(2),paddingRight:theme.spacing(2)},theme.breakpoints.up('sm'),{paddingLeft:theme.spacing(3),paddingRight:theme.spacing(3)}));},function(_ref37){var theme=_ref37.theme,ownerState=_ref37.ownerState;return ownerState.fixed&&Object.keys(theme.breakpoints.values).reduce(function(acc,breakpoint){var value=theme.breakpoints.values[breakpoint];if(value!==0){acc[theme.breakpoints.up(breakpoint)]={maxWidth:"".concat(value).concat(theme.breakpoints.unit)};}return acc;},{});},function(_ref38){var theme=_ref38.theme,ownerState=_ref38.ownerState;return _extends$5({},ownerState.maxWidth==='xs'&&_defineProperty({},theme.breakpoints.up('xs'),{maxWidth:Math.max(theme.breakpoints.values.xs,444)}),ownerState.maxWidth&&ownerState.maxWidth!=='xs'&&_defineProperty({},theme.breakpoints.up(ownerState.maxWidth),{maxWidth:"".concat(theme.breakpoints.values[ownerState.maxWidth]).concat(theme.breakpoints.unit)}));});var Container=/*#__PURE__*/x$5(function Container(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiContainer'});var className=props.className,_props$component9=props.component,component=_props$component9===void 0?'div':_props$component9,_props$disableGutters=props.disableGutters,disableGutters=_props$disableGutters===void 0?false:_props$disableGutters,_props$fixed=props.fixed,fixed=_props$fixed===void 0?false:_props$fixed,_props$maxWidth=props.maxWidth,maxWidth=_props$maxWidth===void 0?'lg':_props$maxWidth,other=_objectWithoutPropertiesLoose$1(props,_excluded$z);var ownerState=_extends$5({},props,{component:component,disableGutters:disableGutters,fixed:fixed,maxWidth:maxWidth});var classes=useUtilityClasses$q(ownerState);return/*#__PURE__*/jsx(ContainerRoot,_extends$5({as:component,ownerState:ownerState,className:clsx(classes.root,className),ref:ref},other));});var MUIContainer=exports('ac',Container);function GlobalStyles(props){return/*#__PURE__*/jsx(GlobalStyles$1,_extends$5({},props,{defaultTheme:defaultTheme$2}));}var html$2=function html$2(theme,enableColorScheme){return _extends$5({WebkitFontSmoothing:'antialiased',// Antialiasing.
MozOsxFontSmoothing:'grayscale',// Antialiasing.
// Change from `box-sizing: content-box` so that `width`
// is not affected by `padding` or `border`.
boxSizing:'border-box',// Fix font resize problem in iOS
WebkitTextSizeAdjust:'100%'},enableColorScheme&&{colorScheme:theme.palette.mode});};var body=function body(theme){return _extends$5({color:theme.palette.text.primary},theme.typography.body1,{backgroundColor:theme.palette.background.default,'@media print':{// Save printer ink.
backgroundColor:theme.palette.common.white}});};var styles$1=function styles$1(theme){var enableColorScheme=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var _theme$components,_theme$components$Mui;var defaultStyles={html:html$2(theme,enableColorScheme),'*, *::before, *::after':{boxSizing:'inherit'},'strong, b':{fontWeight:theme.typography.fontWeightBold},body:_extends$5({margin:0},body(theme),{// Add support for document.body.requestFullScreen().
// Other elements, if background transparent, are not supported.
'&::backdrop':{backgroundColor:theme.palette.background.default}})};var themeOverrides=(_theme$components=theme.components)==null?void 0:(_theme$components$Mui=_theme$components.MuiCssBaseline)==null?void 0:_theme$components$Mui.styleOverrides;if(themeOverrides){defaultStyles=[defaultStyles,themeOverrides];}return defaultStyles;};/**
       * Kickstart an elegant, consistent, and simple baseline to build upon.
       */function CssBaseline(inProps){var props=useThemeProps({props:inProps,name:'MuiCssBaseline'});var children=props.children,_props$enableColorSch=props.enableColorScheme,enableColorScheme=_props$enableColorSch===void 0?false:_props$enableColorSch;return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx(GlobalStyles,{styles:function styles(theme){return styles$1(theme,enableColorScheme);}}),children]});}var _excluded$y=["BackdropComponent","closeAfterTransition","children","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted"];var extendUtilityClasses=function extendUtilityClasses(ownerState){return ownerState.classes;};var ModalRoot=styled$2('div',{name:'MuiModal',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,!ownerState.open&&ownerState.exited&&styles.hidden];}})(function(_ref41){var theme=_ref41.theme,ownerState=_ref41.ownerState;return _extends$5({position:'fixed',zIndex:theme.zIndex.modal,right:0,bottom:0,top:0,left:0},!ownerState.open&&ownerState.exited&&{visibility:'hidden'});});var ModalBackdrop=styled$2(Backdrop$1,{name:'MuiModal',slot:'Backdrop',overridesResolver:function overridesResolver(props,styles){return styles.backdrop;}})({zIndex:-1});/**
       * Modal is a lower-level construct that is leveraged by the following components:
       *
       * - [Dialog](/api/dialog/)
       * - [Drawer](/api/drawer/)
       * - [Menu](/api/menu/)
       * - [Popover](/api/popover/)
       *
       * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
       * rather than directly using Modal.
       *
       * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
       */var Modal=/*#__PURE__*/x$5(function Modal(inProps,ref){var _componentsProps$root;var props=useThemeProps({name:'MuiModal',props:inProps});var _props$BackdropCompon=props.BackdropComponent,BackdropComponent=_props$BackdropCompon===void 0?ModalBackdrop:_props$BackdropCompon,_props$closeAfterTran2=props.closeAfterTransition,closeAfterTransition=_props$closeAfterTran2===void 0?false:_props$closeAfterTran2,children=props.children,_props$components4=props.components,components=_props$components4===void 0?{}:_props$components4,_props$componentsProp4=props.componentsProps,componentsProps=_props$componentsProp4===void 0?{}:_props$componentsProp4,_props$disableAutoFoc3=props.disableAutoFocus,disableAutoFocus=_props$disableAutoFoc3===void 0?false:_props$disableAutoFoc3,_props$disableEnforce3=props.disableEnforceFocus,disableEnforceFocus=_props$disableEnforce3===void 0?false:_props$disableEnforce3,_props$disableEscapeK2=props.disableEscapeKeyDown,disableEscapeKeyDown=_props$disableEscapeK2===void 0?false:_props$disableEscapeK2,_props$disablePortal3=props.disablePortal,disablePortal=_props$disablePortal3===void 0?false:_props$disablePortal3,_props$disableRestore3=props.disableRestoreFocus,disableRestoreFocus=_props$disableRestore3===void 0?false:_props$disableRestore3,_props$disableScrollL2=props.disableScrollLock,disableScrollLock=_props$disableScrollL2===void 0?false:_props$disableScrollL2,_props$hideBackdrop2=props.hideBackdrop,hideBackdrop=_props$hideBackdrop2===void 0?false:_props$hideBackdrop2,_props$keepMounted2=props.keepMounted,keepMounted=_props$keepMounted2===void 0?false:_props$keepMounted2,other=_objectWithoutPropertiesLoose$1(props,_excluded$y);var _l$21=l$4(true),_l$22=_slicedToArray(_l$21,2),exited=_l$22[0],setExited=_l$22[1];var commonProps={closeAfterTransition:closeAfterTransition,disableAutoFocus:disableAutoFocus,disableEnforceFocus:disableEnforceFocus,disableEscapeKeyDown:disableEscapeKeyDown,disablePortal:disablePortal,disableRestoreFocus:disableRestoreFocus,disableScrollLock:disableScrollLock,hideBackdrop:hideBackdrop,keepMounted:keepMounted};var ownerState=_extends$5({},props,commonProps,{exited:exited});var classes=extendUtilityClasses(ownerState);return/*#__PURE__*/jsx(ModalUnstyled$1,_extends$5({components:_extends$5({Root:ModalRoot},components),componentsProps:{root:_extends$5({},componentsProps.root,(!components.Root||!isHostComponent(components.Root))&&{ownerState:_extends$5({},(_componentsProps$root=componentsProps.root)==null?void 0:_componentsProps$root.ownerState)})},BackdropComponent:BackdropComponent,onTransitionEnter:function onTransitionEnter(){return setExited(false);},onTransitionExited:function onTransitionExited(){return setExited(true);},ref:ref},other,{classes:classes},commonProps,{children:children}));});var Modal$1=exports('t',Modal);function getDividerUtilityClass(slot){return generateUtilityClass('MuiDivider',slot);}generateUtilityClasses('MuiDivider',['root','absolute','fullWidth','inset','middle','flexItem','light','vertical','withChildren','withChildrenVertical','textAlignRight','textAlignLeft','wrapper','wrapperVertical']);var _excluded$x=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"];var useUtilityClasses$p=function useUtilityClasses$p(ownerState){var absolute=ownerState.absolute,children=ownerState.children,classes=ownerState.classes,flexItem=ownerState.flexItem,light=ownerState.light,orientation=ownerState.orientation,textAlign=ownerState.textAlign,variant=ownerState.variant;var slots={root:['root',absolute&&'absolute',variant,light&&'light',orientation==='vertical'&&'vertical',flexItem&&'flexItem',children&&'withChildren',children&&orientation==='vertical'&&'withChildrenVertical',textAlign==='right'&&orientation!=='vertical'&&'textAlignRight',textAlign==='left'&&orientation!=='vertical'&&'textAlignLeft'],wrapper:['wrapper',orientation==='vertical'&&'wrapperVertical']};return composeClasses(slots,getDividerUtilityClass,classes);};var DividerRoot=styled$2('div',{name:'MuiDivider',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.absolute&&styles.absolute,styles[ownerState.variant],ownerState.light&&styles.light,ownerState.orientation==='vertical'&&styles.vertical,ownerState.flexItem&&styles.flexItem,ownerState.children&&styles.withChildren,ownerState.children&&ownerState.orientation==='vertical'&&styles.withChildrenVertical,ownerState.textAlign==='right'&&ownerState.orientation!=='vertical'&&styles.textAlignRight,ownerState.textAlign==='left'&&ownerState.orientation!=='vertical'&&styles.textAlignLeft];}})(function(_ref42){var theme=_ref42.theme,ownerState=_ref42.ownerState;return _extends$5({margin:0,// Reset browser default style.
flexShrink:0,borderWidth:0,borderStyle:'solid',borderColor:theme.palette.divider,borderBottomWidth:'thin'},ownerState.absolute&&{position:'absolute',bottom:0,left:0,width:'100%'},ownerState.light&&{borderColor:alpha(theme.palette.divider,0.08)},ownerState.variant==='inset'&&{marginLeft:72},ownerState.variant==='middle'&&ownerState.orientation==='horizontal'&&{marginLeft:theme.spacing(2),marginRight:theme.spacing(2)},ownerState.variant==='middle'&&ownerState.orientation==='vertical'&&{marginTop:theme.spacing(1),marginBottom:theme.spacing(1)},ownerState.orientation==='vertical'&&{height:'100%',borderBottomWidth:0,borderRightWidth:'thin'},ownerState.flexItem&&{alignSelf:'stretch',height:'auto'});},function(_ref43){var theme=_ref43.theme,ownerState=_ref43.ownerState;return _extends$5({},ownerState.children&&{display:'flex',whiteSpace:'nowrap',textAlign:'center',border:0,'&::before, &::after':{position:'relative',width:'100%',borderTop:"thin solid ".concat(theme.palette.divider),top:'50%',content:'""',transform:'translateY(50%)'}});},function(_ref44){var theme=_ref44.theme,ownerState=_ref44.ownerState;return _extends$5({},ownerState.children&&ownerState.orientation==='vertical'&&{flexDirection:'column','&::before, &::after':{height:'100%',top:'0%',left:'50%',borderTop:0,borderLeft:"thin solid ".concat(theme.palette.divider),transform:'translateX(0%)'}});},function(_ref45){var ownerState=_ref45.ownerState;return _extends$5({},ownerState.textAlign==='right'&&ownerState.orientation!=='vertical'&&{'&::before':{width:'90%'},'&::after':{width:'10%'}},ownerState.textAlign==='left'&&ownerState.orientation!=='vertical'&&{'&::before':{width:'10%'},'&::after':{width:'90%'}});});var DividerWrapper=styled$2('span',{name:'MuiDivider',slot:'Wrapper',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.wrapper,ownerState.orientation==='vertical'&&styles.wrapperVertical];}})(function(_ref46){var theme=_ref46.theme,ownerState=_ref46.ownerState;return _extends$5({display:'inline-block',paddingLeft:"calc(".concat(theme.spacing(1)," * 1.2)"),paddingRight:"calc(".concat(theme.spacing(1)," * 1.2)")},ownerState.orientation==='vertical'&&{paddingTop:"calc(".concat(theme.spacing(1)," * 1.2)"),paddingBottom:"calc(".concat(theme.spacing(1)," * 1.2)")});});var Divider=/*#__PURE__*/x$5(function Divider(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiDivider'});var _props$absolute=props.absolute,absolute=_props$absolute===void 0?false:_props$absolute,children=props.children,className=props.className,_props$component10=props.component,component=_props$component10===void 0?children?'div':'hr':_props$component10,_props$flexItem=props.flexItem,flexItem=_props$flexItem===void 0?false:_props$flexItem,_props$light=props.light,light=_props$light===void 0?false:_props$light,_props$orientation=props.orientation,orientation=_props$orientation===void 0?'horizontal':_props$orientation,_props$role=props.role,role=_props$role===void 0?component!=='hr'?'separator':undefined:_props$role,_props$textAlign=props.textAlign,textAlign=_props$textAlign===void 0?'center':_props$textAlign,_props$variant4=props.variant,variant=_props$variant4===void 0?'fullWidth':_props$variant4,other=_objectWithoutPropertiesLoose$1(props,_excluded$x);var ownerState=_extends$5({},props,{absolute:absolute,component:component,flexItem:flexItem,light:light,orientation:orientation,role:role,textAlign:textAlign,variant:variant});var classes=useUtilityClasses$p(ownerState);return/*#__PURE__*/jsx(DividerRoot,_extends$5({as:component,className:clsx(classes.root,className),role:role,ref:ref,ownerState:ownerState},other,{children:children?/*#__PURE__*/jsx(DividerWrapper,{className:classes.wrapper,ownerState:ownerState,children:children}):null}));});var MDivider=exports('H',Divider);var _excluded$w=["addEndListener","appear","children","container","direction","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];function getTranslateValue(direction,node,resolvedContainer){var rect=node.getBoundingClientRect();var containerRect=resolvedContainer&&resolvedContainer.getBoundingClientRect();var containerWindow=ownerWindow(node);var transform;if(node.fakeTransform){transform=node.fakeTransform;}else{var _computedStyle=containerWindow.getComputedStyle(node);transform=_computedStyle.getPropertyValue('-webkit-transform')||_computedStyle.getPropertyValue('transform');}var offsetX=0;var offsetY=0;if(transform&&transform!=='none'&&typeof transform==='string'){var transformValues=transform.split('(')[1].split(')')[0].split(',');offsetX=parseInt(transformValues[4],10);offsetY=parseInt(transformValues[5],10);}if(direction==='left'){if(containerRect){return"translateX(".concat(containerRect.right+offsetX-rect.left,"px)");}return"translateX(".concat(containerWindow.innerWidth+offsetX-rect.left,"px)");}if(direction==='right'){if(containerRect){return"translateX(-".concat(rect.right-containerRect.left-offsetX,"px)");}return"translateX(-".concat(rect.left+rect.width-offsetX,"px)");}if(direction==='up'){if(containerRect){return"translateY(".concat(containerRect.bottom+offsetY-rect.top,"px)");}return"translateY(".concat(containerWindow.innerHeight+offsetY-rect.top,"px)");}// direction === 'down'
if(containerRect){return"translateY(-".concat(rect.top-containerRect.top+rect.height-offsetY,"px)");}return"translateY(-".concat(rect.top+rect.height-offsetY,"px)");}function resolveContainer(containerPropProp){return typeof containerPropProp==='function'?containerPropProp():containerPropProp;}function setTranslateValue(direction,node,containerProp){var resolvedContainer=resolveContainer(containerProp);var transform=getTranslateValue(direction,node,resolvedContainer);if(transform){node.style.webkitTransform=transform;node.style.transform=transform;}}var defaultEasing={enter:easing.easeOut,exit:easing.sharp};var defaultTimeout={enter:duration$1.enteringScreen,exit:duration$1.leavingScreen};/**
       * The Slide transition is used by the [Drawer](/components/drawers/) component.
       * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
       */var Slide=/*#__PURE__*/x$5(function Slide(props,ref){var addEndListener=props.addEndListener,_props$appear2=props.appear,appear=_props$appear2===void 0?true:_props$appear2,_children2=props.children,containerProp=props.container,_props$direction=props.direction,direction=_props$direction===void 0?'down':_props$direction,_props$easing=props.easing,easingProp=_props$easing===void 0?defaultEasing:_props$easing,inProp=props.in,onEnter=props.onEnter,onEntered=props.onEntered,onEntering=props.onEntering,onExit=props.onExit,onExited=props.onExited,onExiting=props.onExiting,style=props.style,_props$timeout2=props.timeout,timeout=_props$timeout2===void 0?defaultTimeout:_props$timeout2,_props$TransitionComp3=props.TransitionComponent,TransitionComponent=_props$TransitionComp3===void 0?Transition$1:_props$TransitionComp3,other=_objectWithoutPropertiesLoose$1(props,_excluded$w);var theme=useTheme();var childrenRef=s$1(null);var handleRefIntermediary=useForkRef(_children2.ref,childrenRef);var handleRef=useForkRef(handleRefIntermediary,ref);var normalizedTransitionCallback=function normalizedTransitionCallback(callback){return function(isAppearing){if(callback){// onEnterXxx and onExitXxx callbacks have a different arguments.length value.
if(isAppearing===undefined){callback(childrenRef.current);}else{callback(childrenRef.current,isAppearing);}}};};var handleEnter=normalizedTransitionCallback(function(node,isAppearing){setTranslateValue(direction,node,containerProp);reflow(node);if(onEnter){onEnter(node,isAppearing);}});var handleEntering=normalizedTransitionCallback(function(node,isAppearing){var transitionProps=getTransitionProps({timeout:timeout,style:style,easing:easingProp},{mode:'enter'});node.style.webkitTransition=theme.transitions.create('-webkit-transform',_extends$5({},transitionProps));node.style.transition=theme.transitions.create('transform',_extends$5({},transitionProps));node.style.webkitTransform='none';node.style.transform='none';if(onEntering){onEntering(node,isAppearing);}});var handleEntered=normalizedTransitionCallback(onEntered);var handleExiting=normalizedTransitionCallback(onExiting);var handleExit=normalizedTransitionCallback(function(node){var transitionProps=getTransitionProps({timeout:timeout,style:style,easing:easingProp},{mode:'exit'});node.style.webkitTransition=theme.transitions.create('-webkit-transform',transitionProps);node.style.transition=theme.transitions.create('transform',transitionProps);setTranslateValue(direction,node,containerProp);if(onExit){onExit(node);}});var handleExited=normalizedTransitionCallback(function(node){// No need for transitions when the component is hidden
node.style.webkitTransition='';node.style.transition='';if(onExited){onExited(node);}});var handleAddEndListener=function handleAddEndListener(next){if(addEndListener){// Old call signature before `react-transition-group` implemented `nodeRef`
addEndListener(childrenRef.current,next);}};var updatePosition=F$5(function(){if(childrenRef.current){setTranslateValue(direction,childrenRef.current,containerProp);}},[direction,containerProp]);y$3(function(){// Skip configuration where the position is screen size invariant.
if(inProp||direction==='down'||direction==='right'){return undefined;}var handleResize=debounce$1(function(){if(childrenRef.current){setTranslateValue(direction,childrenRef.current,containerProp);}});var containerWindow=ownerWindow(childrenRef.current);containerWindow.addEventListener('resize',handleResize);return function(){handleResize.clear();containerWindow.removeEventListener('resize',handleResize);};},[direction,inProp,containerProp]);y$3(function(){if(!inProp){// We need to update the position of the drawer when the direction change and
// when it's hidden.
updatePosition();}},[inProp,updatePosition]);return/*#__PURE__*/jsx(TransitionComponent,_extends$5({nodeRef:childrenRef,onEnter:handleEnter,onEntered:handleEntered,onEntering:handleEntering,onExit:handleExit,onExited:handleExited,onExiting:handleExiting,addEndListener:handleAddEndListener,appear:appear,in:inProp,timeout:timeout},other,{children:function children(state,childProps){return/*#__PURE__*/rn$1(_children2,_extends$5({ref:handleRef,style:_extends$5({visibility:state==='exited'&&!inProp?'hidden':undefined},style,_children2.props.style)},childProps));}}));});var Slide$1=Slide;function getDrawerUtilityClass(slot){return generateUtilityClass('MuiDrawer',slot);}generateUtilityClasses('MuiDrawer',['root','docked','paper','paperAnchorLeft','paperAnchorRight','paperAnchorTop','paperAnchorBottom','paperAnchorDockedLeft','paperAnchorDockedRight','paperAnchorDockedTop','paperAnchorDockedBottom','modal']);var _excluded$v=["BackdropProps"],_excluded2$3=["anchor","BackdropProps","children","className","elevation","hideBackdrop","ModalProps","onClose","open","PaperProps","SlideProps","TransitionComponent","transitionDuration","variant"];var overridesResolver$1=function overridesResolver$1(props,styles){var ownerState=props.ownerState;return[styles.root,(ownerState.variant==='permanent'||ownerState.variant==='persistent')&&styles.docked,styles.modal];};var useUtilityClasses$o=function useUtilityClasses$o(ownerState){var classes=ownerState.classes,anchor=ownerState.anchor,variant=ownerState.variant;var slots={root:['root'],docked:[(variant==='permanent'||variant==='persistent')&&'docked'],modal:['modal'],paper:['paper',"paperAnchor".concat(capitalize(anchor)),variant!=='temporary'&&"paperAnchorDocked".concat(capitalize(anchor))]};return composeClasses(slots,getDrawerUtilityClass,classes);};var DrawerRoot=styled$2(Modal$1,{name:'MuiDrawer',slot:'Root',overridesResolver:overridesResolver$1})(function(_ref47){var theme=_ref47.theme;return{zIndex:theme.zIndex.drawer};});var DrawerDockedRoot=styled$2('div',{shouldForwardProp:rootShouldForwardProp,name:'MuiDrawer',slot:'Docked',skipVariantsResolver:false,overridesResolver:overridesResolver$1})({flex:'0 0 auto'});var DrawerPaper=styled$2(Paper$1,{name:'MuiDrawer',slot:'Paper',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.paper,styles["paperAnchor".concat(capitalize(ownerState.anchor))],ownerState.variant!=='temporary'&&styles["paperAnchorDocked".concat(capitalize(ownerState.anchor))]];}})(function(_ref48){var theme=_ref48.theme,ownerState=_ref48.ownerState;return _extends$5({overflowY:'auto',display:'flex',flexDirection:'column',height:'100%',flex:'1 0 auto',zIndex:theme.zIndex.drawer,// Add iOS momentum scrolling for iOS < 13.0
WebkitOverflowScrolling:'touch',// temporary style
position:'fixed',top:0,// We disable the focus ring for mouse, touch and keyboard users.
// At some point, it would be better to keep it for keyboard users.
// :focus-ring CSS pseudo-class will help.
outline:0},ownerState.anchor==='left'&&{left:0},ownerState.anchor==='top'&&{top:0,left:0,right:0,height:'auto',maxHeight:'100%'},ownerState.anchor==='right'&&{right:0},ownerState.anchor==='bottom'&&{top:'auto',left:0,bottom:0,right:0,height:'auto',maxHeight:'100%'},ownerState.anchor==='left'&&ownerState.variant!=='temporary'&&{borderRight:"1px solid ".concat(theme.palette.divider)},ownerState.anchor==='top'&&ownerState.variant!=='temporary'&&{borderBottom:"1px solid ".concat(theme.palette.divider)},ownerState.anchor==='right'&&ownerState.variant!=='temporary'&&{borderLeft:"1px solid ".concat(theme.palette.divider)},ownerState.anchor==='bottom'&&ownerState.variant!=='temporary'&&{borderTop:"1px solid ".concat(theme.palette.divider)});});var oppositeDirection={left:'right',right:'left',top:'down',bottom:'up'};function isHorizontal(anchor){return['left','right'].indexOf(anchor)!==-1;}function getAnchor(theme,anchor){return theme.direction==='rtl'&&isHorizontal(anchor)?oppositeDirection[anchor]:anchor;}var defaultTransitionDuration={enter:duration$1.enteringScreen,exit:duration$1.leavingScreen};/**
       * The props of the [Modal](/api/modal/) component are available
       * when `variant="temporary"` is set.
       */var Drawer=/*#__PURE__*/x$5(function Drawer(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiDrawer'});var _props$anchor=props.anchor,anchorProp=_props$anchor===void 0?'left':_props$anchor,BackdropProps=props.BackdropProps,children=props.children,className=props.className,_props$elevation2=props.elevation,elevation=_props$elevation2===void 0?16:_props$elevation2,_props$hideBackdrop3=props.hideBackdrop,hideBackdrop=_props$hideBackdrop3===void 0?false:_props$hideBackdrop3,_props$ModalProps=props.ModalProps;_props$ModalProps=_props$ModalProps===void 0?{}:_props$ModalProps;var BackdropPropsProp=_props$ModalProps.BackdropProps,onClose=props.onClose,_props$open=props.open,open=_props$open===void 0?false:_props$open,_props$PaperProps=props.PaperProps,PaperProps=_props$PaperProps===void 0?{}:_props$PaperProps,SlideProps=props.SlideProps,_props$TransitionComp4=props.TransitionComponent,TransitionComponent=_props$TransitionComp4===void 0?Slide$1:_props$TransitionComp4,_props$transitionDura=props.transitionDuration,transitionDuration=_props$transitionDura===void 0?defaultTransitionDuration:_props$transitionDura,_props$variant5=props.variant,variant=_props$variant5===void 0?'temporary':_props$variant5,ModalProps=_objectWithoutPropertiesLoose$1(props.ModalProps,_excluded$v),other=_objectWithoutPropertiesLoose$1(props,_excluded2$3);var theme=useTheme();// Let's assume that the Drawer will always be rendered on user space.
// We use this state is order to skip the appear transition during the
// initial mount of the component.
var mounted=s$1(false);y$3(function(){mounted.current=true;},[]);var anchorInvariant=getAnchor(theme,anchorProp);var anchor=anchorProp;var ownerState=_extends$5({},props,{anchor:anchor,elevation:elevation,open:open,variant:variant},other);var classes=useUtilityClasses$o(ownerState);var drawer=/*#__PURE__*/jsx(DrawerPaper,_extends$5({elevation:variant==='temporary'?elevation:0,square:true},PaperProps,{className:clsx(classes.paper,PaperProps.className),ownerState:ownerState,children:children}));if(variant==='permanent'){return/*#__PURE__*/jsx(DrawerDockedRoot,_extends$5({className:clsx(classes.root,classes.docked,className),ownerState:ownerState,ref:ref},other,{children:drawer}));}var slidingDrawer=/*#__PURE__*/jsx(TransitionComponent,_extends$5({in:open,direction:oppositeDirection[anchorInvariant],timeout:transitionDuration,appear:mounted.current},SlideProps,{children:drawer}));if(variant==='persistent'){return/*#__PURE__*/jsx(DrawerDockedRoot,_extends$5({className:clsx(classes.root,classes.docked,className),ownerState:ownerState,ref:ref},other,{children:slidingDrawer}));}// variant === temporary
return/*#__PURE__*/jsx(DrawerRoot,_extends$5({BackdropProps:_extends$5({},BackdropProps,BackdropPropsProp,{transitionDuration:transitionDuration}),className:clsx(classes.root,classes.modal,className),open:open,ownerState:ownerState,onClose:onClose,hideBackdrop:hideBackdrop,ref:ref},other,ModalProps,{children:slidingDrawer}));});var Drawer$1=Drawer;function formControlState(_ref49){var props=_ref49.props,states=_ref49.states,muiFormControl=_ref49.muiFormControl;return states.reduce(function(acc,state){acc[state]=props[state];if(muiFormControl){if(typeof props[state]==='undefined'){acc[state]=muiFormControl[state];}}return acc;},{});}// Supports determination of isControlled().
// Controlled input accepts its current value as a prop.
//
// @see https://facebook.github.io/react/docs/forms.html#controlled-components
// @param value
// @returns {boolean} true if string (including '') or number (including zero)
function hasValue(value){return value!=null&&!(Array.isArray(value)&&value.length===0);}// Determine if field is empty or filled.
// Response determines if label is presented above field or as placeholder.
//
// @param obj
// @param SSR
// @returns {boolean} False when not present or empty string.
//                    True when any number or string with length.
function isFilled(obj){var SSR=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return obj&&(hasValue(obj.value)&&obj.value!==''||SSR&&hasValue(obj.defaultValue)&&obj.defaultValue!=='');}// Determine if an Input is adorned on start.
// It's corresponding to the left with LTR.
//
// @param obj
// @returns {boolean} False when no adornments.
//                    True when adorned at the start.
function isAdornedStart(obj){return obj.startAdornment;}var _excluded$u=["aria-describedby","autoComplete","autoFocus","className","color","components","componentsProps","defaultValue","disabled","disableInjectingGlobalStyles","endAdornment","error","fullWidth","id","inputComponent","inputProps","inputRef","margin","maxRows","minRows","multiline","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","placeholder","readOnly","renderSuffix","rows","size","startAdornment","type","value"];var rootOverridesResolver=function rootOverridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.formControl&&styles.formControl,ownerState.startAdornment&&styles.adornedStart,ownerState.endAdornment&&styles.adornedEnd,ownerState.error&&styles.error,ownerState.size==='small'&&styles.sizeSmall,ownerState.multiline&&styles.multiline,ownerState.color&&styles["color".concat(capitalize(ownerState.color))],ownerState.fullWidth&&styles.fullWidth,ownerState.hiddenLabel&&styles.hiddenLabel];};var inputOverridesResolver=function inputOverridesResolver(props,styles){var ownerState=props.ownerState;return[styles.input,ownerState.size==='small'&&styles.inputSizeSmall,ownerState.multiline&&styles.inputMultiline,ownerState.type==='search'&&styles.inputTypeSearch,ownerState.startAdornment&&styles.inputAdornedStart,ownerState.endAdornment&&styles.inputAdornedEnd,ownerState.hiddenLabel&&styles.inputHiddenLabel];};var useUtilityClasses$n=function useUtilityClasses$n(ownerState){var classes=ownerState.classes,color=ownerState.color,disabled=ownerState.disabled,error=ownerState.error,endAdornment=ownerState.endAdornment,focused=ownerState.focused,formControl=ownerState.formControl,fullWidth=ownerState.fullWidth,hiddenLabel=ownerState.hiddenLabel,multiline=ownerState.multiline,size=ownerState.size,startAdornment=ownerState.startAdornment,type=ownerState.type;var slots={root:['root',"color".concat(capitalize(color)),disabled&&'disabled',error&&'error',fullWidth&&'fullWidth',focused&&'focused',formControl&&'formControl',size==='small'&&'sizeSmall',multiline&&'multiline',startAdornment&&'adornedStart',endAdornment&&'adornedEnd',hiddenLabel&&'hiddenLabel'],input:['input',disabled&&'disabled',type==='search'&&'inputTypeSearch',multiline&&'inputMultiline',size==='small'&&'inputSizeSmall',hiddenLabel&&'inputHiddenLabel',startAdornment&&'inputAdornedStart',endAdornment&&'inputAdornedEnd']};return composeClasses(slots,getInputBaseUtilityClass,classes);};var InputBaseRoot=styled$2('div',{name:'MuiInputBase',slot:'Root',overridesResolver:rootOverridesResolver})(function(_ref50){var theme=_ref50.theme,ownerState=_ref50.ownerState;return _extends$5({},theme.typography.body1,_defineProperty({color:theme.palette.text.primary,lineHeight:'1.4375em',// 23px
boxSizing:'border-box',// Prevent padding issue with fullWidth.
position:'relative',cursor:'text',display:'inline-flex',alignItems:'center'},"&.".concat(inputBaseClasses$1.disabled),{color:theme.palette.text.disabled,cursor:'default'}),ownerState.multiline&&_extends$5({padding:'4px 0 5px'},ownerState.size==='small'&&{paddingTop:1}),ownerState.fullWidth&&{width:'100%'});});var InputBaseComponent=styled$2('input',{name:'MuiInputBase',slot:'Input',overridesResolver:inputOverridesResolver})(function(_ref51){var _extends$9;var theme=_ref51.theme,ownerState=_ref51.ownerState;var light=theme.palette.mode==='light';var placeholder={color:'currentColor',opacity:light?0.42:0.5,transition:theme.transitions.create('opacity',{duration:theme.transitions.duration.shorter})};var placeholderHidden={opacity:'0 !important'};var placeholderVisible={opacity:light?0.42:0.5};return _extends$5((_extends$9={font:'inherit',letterSpacing:'inherit',color:'currentColor',padding:'4px 0 5px',border:0,boxSizing:'content-box',background:'none',height:'1.4375em',// Reset 23pxthe native input line-height
margin:0,// Reset for Safari
WebkitTapHighlightColor:'transparent',display:'block',// Make the flex item shrink with Firefox
minWidth:0,width:'100%',// Fix IE11 width issue
animationName:'mui-auto-fill-cancel',animationDuration:'10ms','&::-webkit-input-placeholder':placeholder,'&::-moz-placeholder':placeholder,// Firefox 19+
'&:-ms-input-placeholder':placeholder,// IE11
'&::-ms-input-placeholder':placeholder,// Edge
'&:focus':{outline:0},// Reset Firefox invalid required input style
'&:invalid':{boxShadow:'none'},'&::-webkit-search-decoration':{// Remove the padding when type=search.
WebkitAppearance:'none'}},_defineProperty(_extends$9,"label[data-shrink=false] + .".concat(inputBaseClasses$1.formControl," &"),{'&::-webkit-input-placeholder':placeholderHidden,'&::-moz-placeholder':placeholderHidden,// Firefox 19+
'&:-ms-input-placeholder':placeholderHidden,// IE11
'&::-ms-input-placeholder':placeholderHidden,// Edge
'&:focus::-webkit-input-placeholder':placeholderVisible,'&:focus::-moz-placeholder':placeholderVisible,// Firefox 19+
'&:focus:-ms-input-placeholder':placeholderVisible,// IE11
'&:focus::-ms-input-placeholder':placeholderVisible// Edge
}),_defineProperty(_extends$9,"&.".concat(inputBaseClasses$1.disabled),{opacity:1,// Reset iOS opacity
WebkitTextFillColor:theme.palette.text.disabled// Fix opacity Safari bug
}),_defineProperty(_extends$9,'&:-webkit-autofill',{animationDuration:'5000s',animationName:'mui-auto-fill'}),_extends$9),ownerState.size==='small'&&{paddingTop:1},ownerState.multiline&&{height:'auto',resize:'none',padding:0,paddingTop:0},ownerState.type==='search'&&{// Improve type search style.
MozAppearance:'textfield'});});var inputGlobalStyles=/*#__PURE__*/jsx(GlobalStyles,{styles:{'@keyframes mui-auto-fill':{from:{display:'block'}},'@keyframes mui-auto-fill-cancel':{from:{display:'block'}}}});/**
       * `InputBase` contains as few styles as possible.
       * It aims to be a simple building block for creating an input.
       * It contains a load of style reset and some state logic.
       */var InputBase=/*#__PURE__*/x$5(function InputBase(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiInputBase'});var ariaDescribedby=props['aria-describedby'],autoComplete=props.autoComplete,autoFocus=props.autoFocus,className=props.className,_props$components5=props.components,components=_props$components5===void 0?{}:_props$components5,_props$componentsProp5=props.componentsProps,componentsProps=_props$componentsProp5===void 0?{}:_props$componentsProp5,defaultValue=props.defaultValue,disabled=props.disabled,disableInjectingGlobalStyles=props.disableInjectingGlobalStyles,endAdornment=props.endAdornment,_props$fullWidth2=props.fullWidth,fullWidth=_props$fullWidth2===void 0?false:_props$fullWidth2,id=props.id,_props$inputComponent=props.inputComponent,inputComponent=_props$inputComponent===void 0?'input':_props$inputComponent,_props$inputProps=props.inputProps,inputPropsProp=_props$inputProps===void 0?{}:_props$inputProps,inputRefProp=props.inputRef,maxRows=props.maxRows,minRows=props.minRows,_props$multiline=props.multiline,multiline=_props$multiline===void 0?false:_props$multiline,name=props.name,onBlur=props.onBlur,onChange=props.onChange,onClick=props.onClick,onFocus=props.onFocus,onKeyDown=props.onKeyDown,onKeyUp=props.onKeyUp,placeholder=props.placeholder,readOnly=props.readOnly,renderSuffix=props.renderSuffix,rows=props.rows,startAdornment=props.startAdornment,_props$type=props.type,type=_props$type===void 0?'text':_props$type,valueProp=props.value,other=_objectWithoutPropertiesLoose$1(props,_excluded$u);var value=inputPropsProp.value!=null?inputPropsProp.value:valueProp;var _s$3=s$1(value!=null),isControlled=_s$3.current;var inputRef=s$1();var handleInputRefWarning=F$5(function(instance){},[]);var handleInputPropsRefProp=useForkRef(inputPropsProp.ref,handleInputRefWarning);var handleInputRefProp=useForkRef(inputRefProp,handleInputPropsRefProp);var handleInputRef=useForkRef(inputRef,handleInputRefProp);var _l$23=l$4(false),_l$24=_slicedToArray(_l$23,2),focused=_l$24[0],setFocused=_l$24[1];var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['color','disabled','error','hiddenLabel','size','required','filled']});fcs.focused=muiFormControl?muiFormControl.focused:focused;// The blur won't fire when the disabled state is set on a focused input.
// We need to book keep the focused state manually.
y$3(function(){if(!muiFormControl&&disabled&&focused){setFocused(false);if(onBlur){onBlur();}}},[muiFormControl,disabled,focused,onBlur]);var onFilled=muiFormControl&&muiFormControl.onFilled;var onEmpty=muiFormControl&&muiFormControl.onEmpty;var checkDirty=F$5(function(obj){if(isFilled(obj)){if(onFilled){onFilled();}}else if(onEmpty){onEmpty();}},[onFilled,onEmpty]);useEnhancedEffect$1(function(){if(isControlled){checkDirty({value:value});}},[value,checkDirty,isControlled]);var handleFocus=function handleFocus(event){// Fix a bug with IE11 where the focus/blur events are triggered
// while the component is disabled.
if(fcs.disabled){event.stopPropagation();return;}if(onFocus){onFocus(event);}if(inputPropsProp.onFocus){inputPropsProp.onFocus(event);}if(muiFormControl&&muiFormControl.onFocus){muiFormControl.onFocus(event);}else{setFocused(true);}};var handleBlur=function handleBlur(event){if(onBlur){onBlur(event);}if(inputPropsProp.onBlur){inputPropsProp.onBlur(event);}if(muiFormControl&&muiFormControl.onBlur){muiFormControl.onBlur(event);}else{setFocused(false);}};var handleChange=function handleChange(event){if(!isControlled){var element=event.target||inputRef.current;if(element==null){throw new Error(formatMuiErrorMessage(1));}checkDirty({value:element.value});}for(var _len11=arguments.length,args=new Array(_len11>1?_len11-1:0),_key11=1;_key11<_len11;_key11++){args[_key11-1]=arguments[_key11];}if(inputPropsProp.onChange){inputPropsProp.onChange.apply(inputPropsProp,[event].concat(args));}// Perform in the willUpdate
if(onChange){onChange.apply(void 0,[event].concat(args));}};// Check the input state on mount, in case it was filled by the user
// or auto filled by the browser before the hydration (for SSR).
y$3(function(){checkDirty(inputRef.current);// eslint-disable-next-line react-hooks/exhaustive-deps
},[]);var handleClick=function handleClick(event){if(inputRef.current&&event.currentTarget===event.target){inputRef.current.focus();}if(onClick){onClick(event);}};var InputComponent=inputComponent;var inputProps=inputPropsProp;if(multiline&&InputComponent==='input'){if(rows){inputProps=_extends$5({type:undefined,minRows:rows,maxRows:rows},inputProps);}else{inputProps=_extends$5({type:undefined,maxRows:maxRows,minRows:minRows},inputProps);}InputComponent=TextareaAutosize$1;}var handleAutoFill=function handleAutoFill(event){// Provide a fake value as Chrome might not let you access it for security reasons.
checkDirty(event.animationName==='mui-auto-fill-cancel'?inputRef.current:{value:'x'});};y$3(function(){if(muiFormControl){muiFormControl.setAdornedStart(Boolean(startAdornment));}},[muiFormControl,startAdornment]);var ownerState=_extends$5({},props,{color:fcs.color||'primary',disabled:fcs.disabled,endAdornment:endAdornment,error:fcs.error,focused:fcs.focused,formControl:muiFormControl,fullWidth:fullWidth,hiddenLabel:fcs.hiddenLabel,multiline:multiline,size:fcs.size,startAdornment:startAdornment,type:type});var classes=useUtilityClasses$n(ownerState);var Root=components.Root||InputBaseRoot;var rootProps=componentsProps.root||{};var Input=components.Input||InputBaseComponent;inputProps=_extends$5({},inputProps,componentsProps.input);return/*#__PURE__*/jsxs(d$4,{children:[!disableInjectingGlobalStyles&&inputGlobalStyles,/*#__PURE__*/jsxs(Root,_extends$5({},rootProps,!isHostComponent(Root)&&{ownerState:_extends$5({},ownerState,rootProps.ownerState)},{ref:ref,onClick:handleClick},other,{className:clsx(classes.root,rootProps.className,className),children:[startAdornment,/*#__PURE__*/jsx(FormControlContext$1.Provider,{value:null,children:/*#__PURE__*/jsx(Input,_extends$5({ownerState:ownerState,"aria-invalid":fcs.error,"aria-describedby":ariaDescribedby,autoComplete:autoComplete,autoFocus:autoFocus,defaultValue:defaultValue,disabled:fcs.disabled,id:id,onAnimationStart:handleAutoFill,name:name,placeholder:placeholder,readOnly:readOnly,required:fcs.required,rows:rows,value:value,onKeyDown:onKeyDown,onKeyUp:onKeyUp,type:type},inputProps,!isHostComponent(Input)&&{as:InputComponent,ownerState:_extends$5({},ownerState,inputProps.ownerState)},{ref:handleInputRef,className:clsx(classes.input,inputProps.className),onBlur:handleBlur,onChange:handleChange,onFocus:handleFocus}))}),endAdornment,renderSuffix?renderSuffix(_extends$5({},fcs,{startAdornment:startAdornment})):null]}))]});});var InputBase$1=exports('ad',InputBase);var _excluded$t=["disableUnderline","components","componentsProps","fullWidth","hiddenLabel","inputComponent","multiline","type"];var useUtilityClasses$m=function useUtilityClasses$m(ownerState){var classes=ownerState.classes,disableUnderline=ownerState.disableUnderline;var slots={root:['root',!disableUnderline&&'underline'],input:['input']};var composedClasses=composeClasses(slots,getFilledInputUtilityClass,classes);return _extends$5({},classes,composedClasses);};var FilledInputRoot=styled$2(InputBaseRoot,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiFilledInput',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[].concat(_toConsumableArray(rootOverridesResolver(props,styles)),[!ownerState.disableUnderline&&styles.underline]);}})(function(_ref52){var _extends$10,_ref53;var theme=_ref52.theme,ownerState=_ref52.ownerState;var light=theme.palette.mode==='light';var bottomLineColor=light?'rgba(0, 0, 0, 0.42)':'rgba(255, 255, 255, 0.7)';var backgroundColor=light?'rgba(0, 0, 0, 0.06)':'rgba(255, 255, 255, 0.09)';return _extends$5((_extends$10={position:'relative',backgroundColor:backgroundColor,borderTopLeftRadius:theme.shape.borderRadius,borderTopRightRadius:theme.shape.borderRadius,transition:theme.transitions.create('background-color',{duration:theme.transitions.duration.shorter,easing:theme.transitions.easing.easeOut}),'&:hover':{backgroundColor:light?'rgba(0, 0, 0, 0.09)':'rgba(255, 255, 255, 0.13)',// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:backgroundColor}}},_defineProperty(_extends$10,"&.".concat(filledInputClasses$1.focused),{backgroundColor:backgroundColor}),_defineProperty(_extends$10,"&.".concat(filledInputClasses$1.disabled),{backgroundColor:light?'rgba(0, 0, 0, 0.12)':'rgba(255, 255, 255, 0.12)'}),_extends$10),!ownerState.disableUnderline&&(_ref53={'&:after':{borderBottom:"2px solid ".concat(theme.palette[ownerState.color].main),left:0,bottom:0,// Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
content:'""',position:'absolute',right:0,transform:'scaleX(0)',transition:theme.transitions.create('transform',{duration:theme.transitions.duration.shorter,easing:theme.transitions.easing.easeOut}),pointerEvents:'none'// Transparent to the hover style.
}},_defineProperty(_ref53,"&.".concat(filledInputClasses$1.focused,":after"),{transform:'scaleX(1)'}),_defineProperty(_ref53,"&.".concat(filledInputClasses$1.error,":after"),{borderBottomColor:theme.palette.error.main,transform:'scaleX(1)'// error is always underlined in red
}),_defineProperty(_ref53,'&:before',{borderBottom:"1px solid ".concat(bottomLineColor),left:0,bottom:0,// Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
content:'"\\00a0"',position:'absolute',right:0,transition:theme.transitions.create('border-bottom-color',{duration:theme.transitions.duration.shorter}),pointerEvents:'none'// Transparent to the hover style.
}),_defineProperty(_ref53,"&:hover:not(.".concat(filledInputClasses$1.disabled,"):before"),{borderBottom:"1px solid ".concat(theme.palette.text.primary)}),_defineProperty(_ref53,"&.".concat(filledInputClasses$1.disabled,":before"),{borderBottomStyle:'dotted'}),_ref53),ownerState.startAdornment&&{paddingLeft:12},ownerState.endAdornment&&{paddingRight:12},ownerState.multiline&&_extends$5({padding:'25px 12px 8px'},ownerState.size==='small'&&{paddingTop:21,paddingBottom:4},ownerState.hiddenLabel&&{paddingTop:16,paddingBottom:17}));});var FilledInputInput=styled$2(InputBaseComponent,{name:'MuiFilledInput',slot:'Input',overridesResolver:inputOverridesResolver})(function(_ref54){var theme=_ref54.theme,ownerState=_ref54.ownerState;return _extends$5({paddingTop:25,paddingRight:12,paddingBottom:8,paddingLeft:12,'&:-webkit-autofill':{WebkitBoxShadow:theme.palette.mode==='light'?null:'0 0 0 100px #266798 inset',WebkitTextFillColor:theme.palette.mode==='light'?null:'#fff',caretColor:theme.palette.mode==='light'?null:'#fff',borderTopLeftRadius:'inherit',borderTopRightRadius:'inherit'}},ownerState.size==='small'&&{paddingTop:21,paddingBottom:4},ownerState.hiddenLabel&&{paddingTop:16,paddingBottom:17},ownerState.multiline&&{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:0},ownerState.startAdornment&&{paddingLeft:0},ownerState.endAdornment&&{paddingRight:0},ownerState.hiddenLabel&&ownerState.size==='small'&&{paddingTop:8,paddingBottom:9});});var FilledInput=/*#__PURE__*/x$5(function FilledInput(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFilledInput'});var _props$components6=props.components,components=_props$components6===void 0?{}:_props$components6,componentsPropsProp=props.componentsProps,_props$fullWidth3=props.fullWidth,fullWidth=_props$fullWidth3===void 0?false:_props$fullWidth3,_props$inputComponent2=props.inputComponent,inputComponent=_props$inputComponent2===void 0?'input':_props$inputComponent2,_props$multiline2=props.multiline,multiline=_props$multiline2===void 0?false:_props$multiline2,_props$type2=props.type,type=_props$type2===void 0?'text':_props$type2,other=_objectWithoutPropertiesLoose$1(props,_excluded$t);var ownerState=_extends$5({},props,{fullWidth:fullWidth,inputComponent:inputComponent,multiline:multiline,type:type});var classes=useUtilityClasses$m(props);var filledInputComponentsProps={root:{ownerState:ownerState},input:{ownerState:ownerState}};var componentsProps=componentsPropsProp?deepmerge(componentsPropsProp,filledInputComponentsProps):filledInputComponentsProps;return/*#__PURE__*/jsx(InputBase$1,_extends$5({components:_extends$5({Root:FilledInputRoot,Input:FilledInputInput},components),componentsProps:componentsProps,fullWidth:fullWidth,inputComponent:inputComponent,multiline:multiline,ref:ref,type:type},other,{classes:classes}));});FilledInput.muiName='Input';var FilledInput$1=FilledInput;function getFormControlUtilityClasses(slot){return generateUtilityClass('MuiFormControl',slot);}generateUtilityClasses('MuiFormControl',['root','marginNone','marginNormal','marginDense','fullWidth','disabled']);var _excluded$s=["children","className","color","component","disabled","error","focused","fullWidth","hiddenLabel","margin","required","size","variant"];var useUtilityClasses$l=function useUtilityClasses$l(ownerState){var classes=ownerState.classes,margin=ownerState.margin,fullWidth=ownerState.fullWidth;var slots={root:['root',margin!=='none'&&"margin".concat(capitalize(margin)),fullWidth&&'fullWidth']};return composeClasses(slots,getFormControlUtilityClasses,classes);};var FormControlRoot=styled$2('div',{name:'MuiFormControl',slot:'Root',overridesResolver:function overridesResolver(_ref55,styles){var ownerState=_ref55.ownerState;return _extends$5({},styles.root,styles["margin".concat(capitalize(ownerState.margin))],ownerState.fullWidth&&styles.fullWidth);}})(function(_ref56){var ownerState=_ref56.ownerState;return _extends$5({display:'inline-flex',flexDirection:'column',position:'relative',// Reset fieldset default style.
minWidth:0,padding:0,margin:0,border:0,verticalAlign:'top'},ownerState.margin==='normal'&&{marginTop:16,marginBottom:8},ownerState.margin==='dense'&&{marginTop:8,marginBottom:4},ownerState.fullWidth&&{width:'100%'});});/**
       * Provides context such as filled/focused/error/required for form inputs.
       * Relying on the context provides high flexibility and ensures that the state always stays
       * consistent across the children of the `FormControl`.
       * This context is used by the following components:
       *
       *  - FormLabel
       *  - FormHelperText
       *  - Input
       *  - InputLabel
       *
       * You can find one composition example below and more going to [the demos](/components/text-fields/#components).
       *
       * ```jsx
       * <FormControl>
       *   <InputLabel htmlFor="my-input">Email address</InputLabel>
       *   <Input id="my-input" aria-describedby="my-helper-text" />
       *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
       * </FormControl>
       * ```
       *
       * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.
       * For instance, only one input can be focused at the same time, the state shouldn't be shared.
       */var FormControl=/*#__PURE__*/x$5(function FormControl(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFormControl'});var children=props.children,className=props.className,_props$color5=props.color,color=_props$color5===void 0?'primary':_props$color5,_props$component11=props.component,component=_props$component11===void 0?'div':_props$component11,_props$disabled4=props.disabled,disabled=_props$disabled4===void 0?false:_props$disabled4,_props$error=props.error,error=_props$error===void 0?false:_props$error,visuallyFocused=props.focused,_props$fullWidth4=props.fullWidth,fullWidth=_props$fullWidth4===void 0?false:_props$fullWidth4,_props$hiddenLabel=props.hiddenLabel,hiddenLabel=_props$hiddenLabel===void 0?false:_props$hiddenLabel,_props$margin=props.margin,margin=_props$margin===void 0?'none':_props$margin,_props$required=props.required,required=_props$required===void 0?false:_props$required,_props$size3=props.size,size=_props$size3===void 0?'medium':_props$size3,_props$variant6=props.variant,variant=_props$variant6===void 0?'outlined':_props$variant6,other=_objectWithoutPropertiesLoose$1(props,_excluded$s);var ownerState=_extends$5({},props,{color:color,component:component,disabled:disabled,error:error,fullWidth:fullWidth,hiddenLabel:hiddenLabel,margin:margin,required:required,size:size,variant:variant});var classes=useUtilityClasses$l(ownerState);var _l$25=l$4(function(){// We need to iterate through the children and find the Input in order
// to fully support server-side rendering.
var initialAdornedStart=false;if(children){k$5.forEach(children,function(child){if(!isMuiElement(child,['Input','Select'])){return;}var input=isMuiElement(child,['Select'])?child.props.input:child;if(input&&isAdornedStart(input.props)){initialAdornedStart=true;}});}return initialAdornedStart;}),_l$26=_slicedToArray(_l$25,2),adornedStart=_l$26[0],setAdornedStart=_l$26[1];var _l$27=l$4(function(){// We need to iterate through the children and find the Input in order
// to fully support server-side rendering.
var initialFilled=false;if(children){k$5.forEach(children,function(child){if(!isMuiElement(child,['Input','Select'])){return;}if(isFilled(child.props,true)){initialFilled=true;}});}return initialFilled;}),_l$28=_slicedToArray(_l$27,2),filled=_l$28[0],setFilled=_l$28[1];var _l$29=l$4(false),_l$30=_slicedToArray(_l$29,2),focusedState=_l$30[0],setFocused=_l$30[1];if(disabled&&focusedState){setFocused(false);}var focused=visuallyFocused!==undefined&&!disabled?visuallyFocused:focusedState;var registerEffect;var onFilled=F$5(function(){setFilled(true);},[]);var onEmpty=F$5(function(){setFilled(false);},[]);var childContext={adornedStart:adornedStart,setAdornedStart:setAdornedStart,color:color,disabled:disabled,error:error,filled:filled,focused:focused,fullWidth:fullWidth,hiddenLabel:hiddenLabel,size:size,onBlur:function onBlur(){setFocused(false);},onEmpty:onEmpty,onFilled:onFilled,onFocus:function onFocus(){setFocused(true);},registerEffect:registerEffect,required:required,variant:variant};return/*#__PURE__*/jsx(FormControlContext$1.Provider,{value:childContext,children:/*#__PURE__*/jsx(FormControlRoot,_extends$5({as:component,ownerState:ownerState,className:clsx(classes.root,className),ref:ref},other,{children:children}))});});var FormControl$1=exports('Y',FormControl);function getFormControlLabelUtilityClasses(slot){return generateUtilityClass('MuiFormControlLabel',slot);}var formControlLabelClasses=generateUtilityClasses('MuiFormControlLabel',['root','labelPlacementStart','labelPlacementTop','labelPlacementBottom','disabled','label','error']);var formControlLabelClasses$1=formControlLabelClasses;var _excluded$r=["checked","className","componentsProps","control","disabled","disableTypography","inputRef","label","labelPlacement","name","onChange","value"];var useUtilityClasses$k=function useUtilityClasses$k(ownerState){var classes=ownerState.classes,disabled=ownerState.disabled,labelPlacement=ownerState.labelPlacement,error=ownerState.error;var slots={root:['root',disabled&&'disabled',"labelPlacement".concat(capitalize(labelPlacement)),error&&'error'],label:['label',disabled&&'disabled']};return composeClasses(slots,getFormControlLabelUtilityClasses,classes);};var FormControlLabelRoot=styled$2('label',{name:'MuiFormControlLabel',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[_defineProperty({},"& .".concat(formControlLabelClasses$1.label),styles.label),styles.root,styles["labelPlacement".concat(capitalize(ownerState.labelPlacement))]];}})(function(_ref58){var theme=_ref58.theme,ownerState=_ref58.ownerState;return _extends$5(_defineProperty({display:'inline-flex',alignItems:'center',cursor:'pointer',// For correct alignment with the text.
verticalAlign:'middle',WebkitTapHighlightColor:'transparent',marginLeft:-11,marginRight:16},"&.".concat(formControlLabelClasses$1.disabled),{cursor:'default'}),ownerState.labelPlacement==='start'&&{flexDirection:'row-reverse',marginLeft:16,// used for row presentation of radio/checkbox
marginRight:-11},ownerState.labelPlacement==='top'&&{flexDirection:'column-reverse',marginLeft:16},ownerState.labelPlacement==='bottom'&&{flexDirection:'column',marginLeft:16},_defineProperty({},"& .".concat(formControlLabelClasses$1.label),_defineProperty({},"&.".concat(formControlLabelClasses$1.disabled),{color:theme.palette.text.disabled})));});/**
       * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.
       * Use this component if you want to display an extra label.
       */var FormControlLabel=/*#__PURE__*/x$5(function FormControlLabel(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFormControlLabel'});var className=props.className,_props$componentsProp6=props.componentsProps,componentsProps=_props$componentsProp6===void 0?{}:_props$componentsProp6,control=props.control,disabledProp=props.disabled,disableTypography=props.disableTypography,label=props.label,_props$labelPlacement=props.labelPlacement,labelPlacement=_props$labelPlacement===void 0?'end':_props$labelPlacement,other=_objectWithoutPropertiesLoose$1(props,_excluded$r);var muiFormControl=useFormControl();var disabled=disabledProp;if(typeof disabled==='undefined'&&typeof control.props.disabled!=='undefined'){disabled=control.props.disabled;}if(typeof disabled==='undefined'&&muiFormControl){disabled=muiFormControl.disabled;}var controlProps={disabled:disabled};['checked','name','onChange','value','inputRef'].forEach(function(key){if(typeof control.props[key]==='undefined'&&typeof props[key]!=='undefined'){controlProps[key]=props[key];}});var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['error']});var ownerState=_extends$5({},props,{disabled:disabled,label:label,labelPlacement:labelPlacement,error:fcs.error});var classes=useUtilityClasses$k(ownerState);return/*#__PURE__*/jsxs(FormControlLabelRoot,_extends$5({className:clsx(classes.root,className),ownerState:ownerState,ref:ref},other,{children:[/*#__PURE__*/rn$1(control,controlProps),label.type===Typography$1||disableTypography?label:/*#__PURE__*/jsx(Typography$1,_extends$5({component:"span",className:classes.label},componentsProps.typography,{children:label}))]}));});var FormControlLabel$1=exports('$',FormControlLabel);function getFormGroupUtilityClass(slot){return generateUtilityClass('MuiFormGroup',slot);}generateUtilityClasses('MuiFormGroup',['root','row','error']);var _excluded$q=["className","row"];var useUtilityClasses$j=function useUtilityClasses$j(ownerState){var classes=ownerState.classes,row=ownerState.row,error=ownerState.error;var slots={root:['root',row&&'row',error&&'error']};return composeClasses(slots,getFormGroupUtilityClass,classes);};var FormGroupRoot=styled$2('div',{name:'MuiFormGroup',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.row&&styles.row];}})(function(_ref59){var ownerState=_ref59.ownerState;return _extends$5({display:'flex',flexDirection:'column',flexWrap:'wrap'},ownerState.row&&{flexDirection:'row'});});/**
       * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
       * It provides compact row layout.
       * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
       */var FormGroup=/*#__PURE__*/x$5(function FormGroup(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFormGroup'});var className=props.className,_props$row=props.row,row=_props$row===void 0?false:_props$row,other=_objectWithoutPropertiesLoose$1(props,_excluded$q);var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['error']});var ownerState=_extends$5({},props,{row:row,error:fcs.error});var classes=useUtilityClasses$j(ownerState);return/*#__PURE__*/jsx(FormGroupRoot,_extends$5({className:clsx(classes.root,className),ownerState:ownerState,ref:ref},other));});var FormGroup$1=FormGroup;function getFormHelperTextUtilityClasses(slot){return generateUtilityClass('MuiFormHelperText',slot);}var formHelperTextClasses=generateUtilityClasses('MuiFormHelperText',['root','error','disabled','sizeSmall','sizeMedium','contained','focused','filled','required']);var formHelperTextClasses$1=formHelperTextClasses;var _span$2;var _excluded$p=["children","className","component","disabled","error","filled","focused","margin","required","variant"];var useUtilityClasses$i=function useUtilityClasses$i(ownerState){var classes=ownerState.classes,contained=ownerState.contained,size=ownerState.size,disabled=ownerState.disabled,error=ownerState.error,filled=ownerState.filled,focused=ownerState.focused,required=ownerState.required;var slots={root:['root',disabled&&'disabled',error&&'error',size&&"size".concat(capitalize(size)),contained&&'contained',focused&&'focused',filled&&'filled',required&&'required']};return composeClasses(slots,getFormHelperTextUtilityClasses,classes);};var FormHelperTextRoot=styled$2('p',{name:'MuiFormHelperText',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.size&&styles["size".concat(capitalize(ownerState.size))],ownerState.contained&&styles.contained,ownerState.filled&&styles.filled];}})(function(_ref60){var _extends$13;var theme=_ref60.theme,ownerState=_ref60.ownerState;return _extends$5({color:theme.palette.text.secondary},theme.typography.caption,(_extends$13={textAlign:'left',marginTop:3,marginRight:0,marginBottom:0,marginLeft:0},_defineProperty(_extends$13,"&.".concat(formHelperTextClasses$1.disabled),{color:theme.palette.text.disabled}),_defineProperty(_extends$13,"&.".concat(formHelperTextClasses$1.error),{color:theme.palette.error.main}),_extends$13),ownerState.size==='small'&&{marginTop:4},ownerState.contained&&{marginLeft:14,marginRight:14});});var FormHelperText=/*#__PURE__*/x$5(function FormHelperText(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFormHelperText'});var children=props.children,className=props.className,_props$component12=props.component,component=_props$component12===void 0?'p':_props$component12,other=_objectWithoutPropertiesLoose$1(props,_excluded$p);var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['variant','size','disabled','error','filled','focused','required']});var ownerState=_extends$5({},props,{component:component,contained:fcs.variant==='filled'||fcs.variant==='outlined',variant:fcs.variant,size:fcs.size,disabled:fcs.disabled,error:fcs.error,filled:fcs.filled,focused:fcs.focused,required:fcs.required});var classes=useUtilityClasses$i(ownerState);return/*#__PURE__*/jsx(FormHelperTextRoot,_extends$5({as:component,ownerState:ownerState,className:clsx(classes.root,className),ref:ref},other,{children:children===' '?// notranslate needed while Google Translate will not fix zero-width space issue
_span$2||(_span$2=/*#__PURE__*/jsx("span",{className:"notranslate",children:"\u200B"})):children}));});var FormHelperText$1=FormHelperText;function getFormLabelUtilityClasses(slot){return generateUtilityClass('MuiFormLabel',slot);}var formLabelClasses=generateUtilityClasses('MuiFormLabel',['root','colorSecondary','focused','disabled','error','filled','required','asterisk']);var formLabelClasses$1=formLabelClasses;var _excluded$o=["children","className","color","component","disabled","error","filled","focused","required"];var useUtilityClasses$h=function useUtilityClasses$h(ownerState){var classes=ownerState.classes,color=ownerState.color,focused=ownerState.focused,disabled=ownerState.disabled,error=ownerState.error,filled=ownerState.filled,required=ownerState.required;var slots={root:['root',"color".concat(capitalize(color)),disabled&&'disabled',error&&'error',filled&&'filled',focused&&'focused',required&&'required'],asterisk:['asterisk',error&&'error']};return composeClasses(slots,getFormLabelUtilityClasses,classes);};var FormLabelRoot=styled$2('label',{name:'MuiFormLabel',slot:'Root',overridesResolver:function overridesResolver(_ref61,styles){var ownerState=_ref61.ownerState;return _extends$5({},styles.root,ownerState.color==='secondary'&&styles.colorSecondary,ownerState.filled&&styles.filled);}})(function(_ref62){var _extends$14;var theme=_ref62.theme,ownerState=_ref62.ownerState;return _extends$5({color:theme.palette.text.secondary},theme.typography.body1,(_extends$14={lineHeight:'1.4375em',padding:0,position:'relative'},_defineProperty(_extends$14,"&.".concat(formLabelClasses$1.focused),{color:theme.palette[ownerState.color].main}),_defineProperty(_extends$14,"&.".concat(formLabelClasses$1.disabled),{color:theme.palette.text.disabled}),_defineProperty(_extends$14,"&.".concat(formLabelClasses$1.error),{color:theme.palette.error.main}),_extends$14));});var AsteriskComponent=styled$2('span',{name:'MuiFormLabel',slot:'Asterisk',overridesResolver:function overridesResolver(props,styles){return styles.asterisk;}})(function(_ref63){var theme=_ref63.theme;return _defineProperty({},"&.".concat(formLabelClasses$1.error),{color:theme.palette.error.main});});var FormLabel=/*#__PURE__*/x$5(function FormLabel(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiFormLabel'});var children=props.children,className=props.className,_props$component13=props.component,component=_props$component13===void 0?'label':_props$component13,other=_objectWithoutPropertiesLoose$1(props,_excluded$o);var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['color','required','focused','disabled','error','filled']});var ownerState=_extends$5({},props,{color:fcs.color||'primary',component:component,disabled:fcs.disabled,error:fcs.error,filled:fcs.filled,focused:fcs.focused,required:fcs.required});var classes=useUtilityClasses$h(ownerState);return/*#__PURE__*/jsxs(FormLabelRoot,_extends$5({as:component,ownerState:ownerState,className:clsx(classes.root,className),ref:ref},other,{children:[children,fcs.required&&/*#__PURE__*/jsxs(AsteriskComponent,{ownerState:ownerState,"aria-hidden":true,className:classes.asterisk,children:["\u2009",'*']})]}));});var FormLabel$1=exports('Z',FormLabel);var _excluded$n=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];function getScale(value){return"scale(".concat(value,", ").concat(Math.pow(value,2),")");}var styles={entering:{opacity:1,transform:getScale(1)},entered:{opacity:1,transform:'none'}};/**
       * The Grow transition is used by the [Tooltip](/components/tooltips/) and
       * [Popover](/components/popover/) components.
       * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
       */var Grow=/*#__PURE__*/x$5(function Grow(props,ref){var addEndListener=props.addEndListener,_props$appear3=props.appear,appear=_props$appear3===void 0?true:_props$appear3,_children3=props.children,easing=props.easing,inProp=props.in,onEnter=props.onEnter,onEntered=props.onEntered,onEntering=props.onEntering,onExit=props.onExit,onExited=props.onExited,onExiting=props.onExiting,style=props.style,_props$timeout3=props.timeout,timeout=_props$timeout3===void 0?'auto':_props$timeout3,_props$TransitionComp5=props.TransitionComponent,TransitionComponent=_props$TransitionComp5===void 0?Transition$1:_props$TransitionComp5,other=_objectWithoutPropertiesLoose$1(props,_excluded$n);var timer=s$1();var autoTimeout=s$1();var theme=useTheme();var nodeRef=s$1(null);var foreignRef=useForkRef(_children3.ref,ref);var handleRef=useForkRef(nodeRef,foreignRef);var normalizedTransitionCallback=function normalizedTransitionCallback(callback){return function(maybeIsAppearing){if(callback){var _node2=nodeRef.current;// onEnterXxx and onExitXxx callbacks have a different arguments.length value.
if(maybeIsAppearing===undefined){callback(_node2);}else{callback(_node2,maybeIsAppearing);}}};};var handleEntering=normalizedTransitionCallback(onEntering);var handleEnter=normalizedTransitionCallback(function(node,isAppearing){reflow(node);// So the animation always start from the start.
var _getTransitionProps=getTransitionProps({style:style,timeout:timeout,easing:easing},{mode:'enter'}),transitionDuration=_getTransitionProps.duration,delay=_getTransitionProps.delay,transitionTimingFunction=_getTransitionProps.easing;var duration;if(timeout==='auto'){duration=theme.transitions.getAutoHeightDuration(node.clientHeight);autoTimeout.current=duration;}else{duration=transitionDuration;}node.style.transition=[theme.transitions.create('opacity',{duration:duration,delay:delay}),theme.transitions.create('transform',{duration:duration*0.666,delay:delay,easing:transitionTimingFunction})].join(',');if(onEnter){onEnter(node,isAppearing);}});var handleEntered=normalizedTransitionCallback(onEntered);var handleExiting=normalizedTransitionCallback(onExiting);var handleExit=normalizedTransitionCallback(function(node){var _getTransitionProps2=getTransitionProps({style:style,timeout:timeout,easing:easing},{mode:'exit'}),transitionDuration=_getTransitionProps2.duration,delay=_getTransitionProps2.delay,transitionTimingFunction=_getTransitionProps2.easing;var duration;if(timeout==='auto'){duration=theme.transitions.getAutoHeightDuration(node.clientHeight);autoTimeout.current=duration;}else{duration=transitionDuration;}node.style.transition=[theme.transitions.create('opacity',{duration:duration,delay:delay}),theme.transitions.create('transform',{duration:duration*0.666,delay:delay||duration*0.333,easing:transitionTimingFunction})].join(',');node.style.opacity='0';node.style.transform=getScale(0.75);if(onExit){onExit(node);}});var handleExited=normalizedTransitionCallback(onExited);var handleAddEndListener=function handleAddEndListener(next){if(timeout==='auto'){timer.current=setTimeout(next,autoTimeout.current||0);}if(addEndListener){// Old call signature before `react-transition-group` implemented `nodeRef`
addEndListener(nodeRef.current,next);}};y$3(function(){return function(){clearTimeout(timer.current);};},[]);return/*#__PURE__*/jsx(TransitionComponent,_extends$5({appear:appear,in:inProp,nodeRef:nodeRef,onEnter:handleEnter,onEntered:handleEntered,onEntering:handleEntering,onExit:handleExit,onExited:handleExited,onExiting:handleExiting,addEndListener:handleAddEndListener,timeout:timeout==='auto'?null:timeout},other,{children:function children(state,childProps){return/*#__PURE__*/rn$1(_children3,_extends$5({style:_extends$5({opacity:0,transform:getScale(0.75),visibility:state==='exited'&&!inProp?'hidden':undefined},styles[state],style,_children3.props.style),ref:handleRef},childProps));}}));});Grow.muiSupportAuto=true;var Grow$1=Grow;var _excluded$m=["disableUnderline","components","componentsProps","fullWidth","inputComponent","multiline","type"];var useUtilityClasses$g=function useUtilityClasses$g(ownerState){var classes=ownerState.classes,disableUnderline=ownerState.disableUnderline;var slots={root:['root',!disableUnderline&&'underline'],input:['input']};var composedClasses=composeClasses(slots,getInputUtilityClass,classes);return _extends$5({},classes,composedClasses);};var InputRoot=styled$2(InputBaseRoot,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiInput',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[].concat(_toConsumableArray(rootOverridesResolver(props,styles)),[!ownerState.disableUnderline&&styles.underline]);}})(function(_ref65){var _ref66;var theme=_ref65.theme,ownerState=_ref65.ownerState;var light=theme.palette.mode==='light';var bottomLineColor=light?'rgba(0, 0, 0, 0.42)':'rgba(255, 255, 255, 0.7)';return _extends$5({position:'relative'},ownerState.formControl&&{'label + &':{marginTop:16}},!ownerState.disableUnderline&&(_ref66={'&:after':{borderBottom:"2px solid ".concat(theme.palette[ownerState.color].main),left:0,bottom:0,// Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
content:'""',position:'absolute',right:0,transform:'scaleX(0)',transition:theme.transitions.create('transform',{duration:theme.transitions.duration.shorter,easing:theme.transitions.easing.easeOut}),pointerEvents:'none'// Transparent to the hover style.
}},_defineProperty(_ref66,"&.".concat(inputClasses$1.focused,":after"),{transform:'scaleX(1)'}),_defineProperty(_ref66,"&.".concat(inputClasses$1.error,":after"),{borderBottomColor:theme.palette.error.main,transform:'scaleX(1)'// error is always underlined in red
}),_defineProperty(_ref66,'&:before',{borderBottom:"1px solid ".concat(bottomLineColor),left:0,bottom:0,// Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
content:'"\\00a0"',position:'absolute',right:0,transition:theme.transitions.create('border-bottom-color',{duration:theme.transitions.duration.shorter}),pointerEvents:'none'// Transparent to the hover style.
}),_defineProperty(_ref66,"&:hover:not(.".concat(inputClasses$1.disabled,"):before"),{borderBottom:"2px solid ".concat(theme.palette.text.primary),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{borderBottom:"1px solid ".concat(bottomLineColor)}}),_defineProperty(_ref66,"&.".concat(inputClasses$1.disabled,":before"),{borderBottomStyle:'dotted'}),_ref66));});var InputInput=styled$2(InputBaseComponent,{name:'MuiInput',slot:'Input',overridesResolver:inputOverridesResolver})({});var Input=/*#__PURE__*/x$5(function Input(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiInput'});var disableUnderline=props.disableUnderline,_props$components7=props.components,components=_props$components7===void 0?{}:_props$components7,componentsPropsProp=props.componentsProps,_props$fullWidth5=props.fullWidth,fullWidth=_props$fullWidth5===void 0?false:_props$fullWidth5,_props$inputComponent3=props.inputComponent,inputComponent=_props$inputComponent3===void 0?'input':_props$inputComponent3,_props$multiline3=props.multiline,multiline=_props$multiline3===void 0?false:_props$multiline3,_props$type3=props.type,type=_props$type3===void 0?'text':_props$type3,other=_objectWithoutPropertiesLoose$1(props,_excluded$m);var classes=useUtilityClasses$g(props);var ownerState={disableUnderline:disableUnderline};var inputComponentsProps={root:{ownerState:ownerState}};var componentsProps=componentsPropsProp?deepmerge(componentsPropsProp,inputComponentsProps):inputComponentsProps;return/*#__PURE__*/jsx(InputBase$1,_extends$5({components:_extends$5({Root:InputRoot,Input:InputInput},components),componentsProps:componentsProps,fullWidth:fullWidth,inputComponent:inputComponent,multiline:multiline,ref:ref,type:type},other,{classes:classes}));});Input.muiName='Input';var Input$1=Input;function getInputLabelUtilityClasses(slot){return generateUtilityClass('MuiInputLabel',slot);}generateUtilityClasses('MuiInputLabel',['root','focused','disabled','error','required','asterisk','formControl','sizeSmall','shrink','animated','standard','filled','outlined']);var _excluded$l=["disableAnimation","margin","shrink","variant"];var useUtilityClasses$f=function useUtilityClasses$f(ownerState){var classes=ownerState.classes,formControl=ownerState.formControl,size=ownerState.size,shrink=ownerState.shrink,disableAnimation=ownerState.disableAnimation,variant=ownerState.variant,required=ownerState.required;var slots={root:['root',formControl&&'formControl',!disableAnimation&&'animated',shrink&&'shrink',size==='small'&&'sizeSmall',variant],asterisk:[required&&'asterisk']};var composedClasses=composeClasses(slots,getInputLabelUtilityClasses,classes);return _extends$5({},classes,composedClasses);};var InputLabelRoot=styled$2(FormLabel$1,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiInputLabel',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[_defineProperty({},"& .".concat(formLabelClasses$1.asterisk),styles.asterisk),styles.root,ownerState.formControl&&styles.formControl,ownerState.size==='small'&&styles.sizeSmall,ownerState.shrink&&styles.shrink,!ownerState.disableAnimation&&styles.animated,styles[ownerState.variant]];}})(function(_ref68){var theme=_ref68.theme,ownerState=_ref68.ownerState;return _extends$5({display:'block',transformOrigin:'top left',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis',maxWidth:'100%'},ownerState.formControl&&{position:'absolute',left:0,top:0,// slight alteration to spec spacing to match visual spec result
transform:'translate(0, 20px) scale(1)'},ownerState.size==='small'&&{// Compensation for the `Input.inputSizeSmall` style.
transform:'translate(0, 17px) scale(1)'},ownerState.shrink&&{transform:'translate(0, -1.5px) scale(0.75)',transformOrigin:'top left',maxWidth:'133%'},!ownerState.disableAnimation&&{transition:theme.transitions.create(['color','transform','max-width'],{duration:theme.transitions.duration.shorter,easing:theme.transitions.easing.easeOut})},ownerState.variant==='filled'&&_extends$5({// Chrome's autofill feature gives the input field a yellow background.
// Since the input field is behind the label in the HTML tree,
// the input field is drawn last and hides the label with an opaque background color.
// zIndex: 1 will raise the label above opaque background-colors of input.
zIndex:1,pointerEvents:'none',transform:'translate(12px, 16px) scale(1)',maxWidth:'calc(100% - 24px)'},ownerState.size==='small'&&{transform:'translate(12px, 13px) scale(1)'},ownerState.shrink&&_extends$5({userSelect:'none',pointerEvents:'auto',transform:'translate(12px, 7px) scale(0.75)',maxWidth:'calc(133% - 24px)'},ownerState.size==='small'&&{transform:'translate(12px, 4px) scale(0.75)'})),ownerState.variant==='outlined'&&_extends$5({// see comment above on filled.zIndex
zIndex:1,pointerEvents:'none',transform:'translate(14px, 16px) scale(1)',maxWidth:'calc(100% - 24px)'},ownerState.size==='small'&&{transform:'translate(14px, 9px) scale(1)'},ownerState.shrink&&{userSelect:'none',pointerEvents:'auto',maxWidth:'calc(133% - 24px)',transform:'translate(14px, -9px) scale(0.75)'}));});var InputLabel=/*#__PURE__*/x$5(function InputLabel(inProps,ref){var props=useThemeProps({name:'MuiInputLabel',props:inProps});var _props$disableAnimati=props.disableAnimation,disableAnimation=_props$disableAnimati===void 0?false:_props$disableAnimati,shrinkProp=props.shrink,other=_objectWithoutPropertiesLoose$1(props,_excluded$l);var muiFormControl=useFormControl();var shrink=shrinkProp;if(typeof shrink==='undefined'&&muiFormControl){shrink=muiFormControl.filled||muiFormControl.focused||muiFormControl.adornedStart;}var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['size','variant','required']});var ownerState=_extends$5({},props,{disableAnimation:disableAnimation,formControl:muiFormControl,shrink:shrink,size:fcs.size,variant:fcs.variant,required:fcs.required});var classes=useUtilityClasses$f(ownerState);return/*#__PURE__*/jsx(InputLabelRoot,_extends$5({"data-shrink":shrink,ownerState:ownerState,ref:ref},other,{classes:classes}));});var InputLabel$1=InputLabel;/**
       * @ignore - internal component.
       */var ListContext=/*#__PURE__*/D$3({});var ListContext$1=ListContext;function getListUtilityClass(slot){return generateUtilityClass('MuiList',slot);}generateUtilityClasses('MuiList',['root','padding','dense','subheader']);var _excluded$k=["children","className","component","dense","disablePadding","subheader"];var useUtilityClasses$e=function useUtilityClasses$e(ownerState){var classes=ownerState.classes,disablePadding=ownerState.disablePadding,dense=ownerState.dense,subheader=ownerState.subheader;var slots={root:['root',!disablePadding&&'padding',dense&&'dense',subheader&&'subheader']};return composeClasses(slots,getListUtilityClass,classes);};var ListRoot=styled$2('ul',{name:'MuiList',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,!ownerState.disablePadding&&styles.padding,ownerState.dense&&styles.dense,ownerState.subheader&&styles.subheader];}})(function(_ref69){var ownerState=_ref69.ownerState;return _extends$5({listStyle:'none',margin:0,padding:0,position:'relative'},!ownerState.disablePadding&&{paddingTop:8,paddingBottom:8},ownerState.subheader&&{paddingTop:0});});var List=/*#__PURE__*/x$5(function List(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiList'});var children=props.children,className=props.className,_props$component14=props.component,component=_props$component14===void 0?'ul':_props$component14,_props$dense=props.dense,dense=_props$dense===void 0?false:_props$dense,_props$disablePadding=props.disablePadding,disablePadding=_props$disablePadding===void 0?false:_props$disablePadding,subheader=props.subheader,other=_objectWithoutPropertiesLoose$1(props,_excluded$k);var context=A$5(function(){return{dense:dense};},[dense]);var ownerState=_extends$5({},props,{component:component,dense:dense,disablePadding:disablePadding});var classes=useUtilityClasses$e(ownerState);return/*#__PURE__*/jsx(ListContext$1.Provider,{value:context,children:/*#__PURE__*/jsxs(ListRoot,_extends$5({as:component,className:clsx(classes.root,className),ref:ref,ownerState:ownerState},other,{children:[subheader,children]}))});});var List$1=exports('a4',List);function getListItemButtonUtilityClass(slot){return generateUtilityClass('MuiListItemButton',slot);}var listItemButtonClasses=generateUtilityClasses('MuiListItemButton',['root','focusVisible','dense','alignItemsFlexStart','disabled','divider','gutters','selected']);var listItemButtonClasses$1=listItemButtonClasses;var _excluded$j=["alignItems","autoFocus","component","children","dense","disableGutters","divider","focusVisibleClassName","selected"];var overridesResolver=function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.dense&&styles.dense,ownerState.alignItems==='flex-start'&&styles.alignItemsFlexStart,ownerState.divider&&styles.divider,!ownerState.disableGutters&&styles.gutters];};var useUtilityClasses$d=function useUtilityClasses$d(ownerState){var alignItems=ownerState.alignItems,classes=ownerState.classes,dense=ownerState.dense,disabled=ownerState.disabled,disableGutters=ownerState.disableGutters,divider=ownerState.divider,selected=ownerState.selected;var slots={root:['root',dense&&'dense',!disableGutters&&'gutters',divider&&'divider',disabled&&'disabled',alignItems==='flex-start'&&'alignItemsFlexStart',selected&&'selected']};var composedClasses=composeClasses(slots,getListItemButtonUtilityClass,classes);return _extends$5({},classes,composedClasses);};var ListItemButtonRoot=styled$2(ButtonBase$1,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiListItemButton',slot:'Root',overridesResolver:overridesResolver})(function(_ref70){var _extends$15;var theme=_ref70.theme,ownerState=_ref70.ownerState;return _extends$5((_extends$15={display:'flex',flexGrow:1,justifyContent:'flex-start',alignItems:'center',position:'relative',textDecoration:'none',boxSizing:'border-box',textAlign:'left',paddingTop:8,paddingBottom:8,transition:theme.transitions.create('background-color',{duration:theme.transitions.duration.shortest}),'&:hover':{textDecoration:'none',backgroundColor:theme.palette.action.hover,// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}}},_defineProperty(_extends$15,"&.".concat(listItemButtonClasses$1.selected),_defineProperty({backgroundColor:alpha(theme.palette.primary.main,theme.palette.action.selectedOpacity)},"&.".concat(listItemButtonClasses$1.focusVisible),{backgroundColor:alpha(theme.palette.primary.main,theme.palette.action.selectedOpacity+theme.palette.action.focusOpacity)})),_defineProperty(_extends$15,"&.".concat(listItemButtonClasses$1.selected,":hover"),{backgroundColor:alpha(theme.palette.primary.main,theme.palette.action.selectedOpacity+theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:alpha(theme.palette.primary.main,theme.palette.action.selectedOpacity)}}),_defineProperty(_extends$15,"&.".concat(listItemButtonClasses$1.focusVisible),{backgroundColor:theme.palette.action.focus}),_defineProperty(_extends$15,"&.".concat(listItemButtonClasses$1.disabled),{opacity:theme.palette.action.disabledOpacity}),_extends$15),ownerState.divider&&{borderBottom:"1px solid ".concat(theme.palette.divider),backgroundClip:'padding-box'},ownerState.alignItems==='flex-start'&&{alignItems:'flex-start'},!ownerState.disableGutters&&{paddingLeft:16,paddingRight:16},ownerState.dense&&{paddingTop:4,paddingBottom:4});});var ListItemButton=/*#__PURE__*/x$5(function ListItemButton(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiListItemButton'});var _props$alignItems=props.alignItems,alignItems=_props$alignItems===void 0?'center':_props$alignItems,_props$autoFocus=props.autoFocus,autoFocus=_props$autoFocus===void 0?false:_props$autoFocus,_props$component15=props.component,component=_props$component15===void 0?'div':_props$component15,children=props.children,_props$dense2=props.dense,dense=_props$dense2===void 0?false:_props$dense2,_props$disableGutters2=props.disableGutters,disableGutters=_props$disableGutters2===void 0?false:_props$disableGutters2,_props$divider=props.divider,divider=_props$divider===void 0?false:_props$divider,focusVisibleClassName=props.focusVisibleClassName,_props$selected=props.selected,selected=_props$selected===void 0?false:_props$selected,other=_objectWithoutPropertiesLoose$1(props,_excluded$j);var context=T$2(ListContext$1);var childContext={dense:dense||context.dense||false,alignItems:alignItems,disableGutters:disableGutters};var listItemRef=s$1(null);useEnhancedEffect$1(function(){if(autoFocus){if(listItemRef.current){listItemRef.current.focus();}}},[autoFocus]);var ownerState=_extends$5({},props,{alignItems:alignItems,dense:childContext.dense,disableGutters:disableGutters,divider:divider,selected:selected});var classes=useUtilityClasses$d(ownerState);var handleRef=useForkRef(listItemRef,ref);return/*#__PURE__*/jsx(ListContext$1.Provider,{value:childContext,children:/*#__PURE__*/jsx(ListItemButtonRoot,_extends$5({ref:handleRef,component:component,focusVisibleClassName:clsx(classes.focusVisible,focusVisibleClassName),ownerState:ownerState},other,{classes:classes,children:children}))});});var ListItemButton$1=exports('a5',ListItemButton);function getListItemIconUtilityClass(slot){return generateUtilityClass('MuiListItemIcon',slot);}generateUtilityClasses('MuiListItemIcon',['root','alignItemsFlexStart']);var _excluded$i=["className"];var useUtilityClasses$c=function useUtilityClasses$c(ownerState){var alignItems=ownerState.alignItems,classes=ownerState.classes;var slots={root:['root',alignItems==='flex-start'&&'alignItemsFlexStart']};return composeClasses(slots,getListItemIconUtilityClass,classes);};var ListItemIconRoot=styled$2('div',{name:'MuiListItemIcon',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.alignItems==='flex-start'&&styles.alignItemsFlexStart];}})(function(_ref71){var theme=_ref71.theme,ownerState=_ref71.ownerState;return _extends$5({minWidth:56,color:theme.palette.action.active,flexShrink:0,display:'inline-flex'},ownerState.alignItems==='flex-start'&&{marginTop:8});});/**
       * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
       */var ListItemIcon=/*#__PURE__*/x$5(function ListItemIcon(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiListItemIcon'});var className=props.className,other=_objectWithoutPropertiesLoose$1(props,_excluded$i);var context=T$2(ListContext$1);var ownerState=_extends$5({},props,{alignItems:context.alignItems});var classes=useUtilityClasses$c(ownerState);return/*#__PURE__*/jsx(ListItemIconRoot,_extends$5({className:clsx(classes.root,className),ownerState:ownerState,ref:ref},other));});var ListItemIcon$1=exports('a6',ListItemIcon);function getListItemTextUtilityClass(slot){return generateUtilityClass('MuiListItemText',slot);}var listItemTextClasses=generateUtilityClasses('MuiListItemText',['root','multiline','dense','inset','primary','secondary']);var listItemTextClasses$1=listItemTextClasses;var _excluded$h=["children","className","disableTypography","inset","primary","primaryTypographyProps","secondary","secondaryTypographyProps"];var useUtilityClasses$b=function useUtilityClasses$b(ownerState){var classes=ownerState.classes,inset=ownerState.inset,primary=ownerState.primary,secondary=ownerState.secondary,dense=ownerState.dense;var slots={root:['root',inset&&'inset',dense&&'dense',primary&&secondary&&'multiline'],primary:['primary'],secondary:['secondary']};return composeClasses(slots,getListItemTextUtilityClass,classes);};var ListItemTextRoot=styled$2('div',{name:'MuiListItemText',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[_defineProperty({},"& .".concat(listItemTextClasses$1.primary),styles.primary),_defineProperty({},"& .".concat(listItemTextClasses$1.secondary),styles.secondary),styles.root,ownerState.inset&&styles.inset,ownerState.primary&&ownerState.secondary&&styles.multiline,ownerState.dense&&styles.dense];}})(function(_ref74){var ownerState=_ref74.ownerState;return _extends$5({flex:'1 1 auto',minWidth:0,marginTop:4,marginBottom:4},ownerState.primary&&ownerState.secondary&&{marginTop:6,marginBottom:6},ownerState.inset&&{paddingLeft:56});});var ListItemText=/*#__PURE__*/x$5(function ListItemText(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiListItemText'});var children=props.children,className=props.className,_props$disableTypogra=props.disableTypography,disableTypography=_props$disableTypogra===void 0?false:_props$disableTypogra,_props$inset=props.inset,inset=_props$inset===void 0?false:_props$inset,primaryProp=props.primary,primaryTypographyProps=props.primaryTypographyProps,secondaryProp=props.secondary,secondaryTypographyProps=props.secondaryTypographyProps,other=_objectWithoutPropertiesLoose$1(props,_excluded$h);var _T$=T$2(ListContext$1),dense=_T$.dense;var primary=primaryProp!=null?primaryProp:children;var secondary=secondaryProp;var ownerState=_extends$5({},props,{disableTypography:disableTypography,inset:inset,primary:!!primary,secondary:!!secondary,dense:dense});var classes=useUtilityClasses$b(ownerState);if(primary!=null&&primary.type!==Typography$1&&!disableTypography){primary=/*#__PURE__*/jsx(Typography$1,_extends$5({variant:dense?'body2':'body1',className:classes.primary,component:"span",display:"block"},primaryTypographyProps,{children:primary}));}if(secondary!=null&&secondary.type!==Typography$1&&!disableTypography){secondary=/*#__PURE__*/jsx(Typography$1,_extends$5({variant:"body2",className:classes.secondary,color:"text.secondary",display:"block"},secondaryTypographyProps,{children:secondary}));}return/*#__PURE__*/jsxs(ListItemTextRoot,_extends$5({className:clsx(classes.root,className),ownerState:ownerState,ref:ref},other,{children:[primary,secondary]}));});var ListItemText$1=exports('a8',ListItemText);var _excluded$g=["actions","autoFocus","autoFocusItem","children","className","disabledItemsFocusable","disableListWrap","onKeyDown","variant"];function nextItem(list,item,disableListWrap){if(list===item){return list.firstChild;}if(item&&item.nextElementSibling){return item.nextElementSibling;}return disableListWrap?null:list.firstChild;}function previousItem(list,item,disableListWrap){if(list===item){return disableListWrap?list.firstChild:list.lastChild;}if(item&&item.previousElementSibling){return item.previousElementSibling;}return disableListWrap?null:list.lastChild;}function textCriteriaMatches(nextFocus,textCriteria){if(textCriteria===undefined){return true;}var text=nextFocus.innerText;if(text===undefined){// jsdom doesn't support innerText
text=nextFocus.textContent;}text=text.trim().toLowerCase();if(text.length===0){return false;}if(textCriteria.repeating){return text[0]===textCriteria.keys[0];}return text.indexOf(textCriteria.keys.join(''))===0;}function moveFocus(list,currentFocus,disableListWrap,disabledItemsFocusable,traversalFunction,textCriteria){var wrappedOnce=false;var nextFocus=traversalFunction(list,currentFocus,currentFocus?disableListWrap:false);while(nextFocus){// Prevent infinite loop.
if(nextFocus===list.firstChild){if(wrappedOnce){return false;}wrappedOnce=true;}// Same logic as useAutocomplete.js
var nextFocusDisabled=disabledItemsFocusable?false:nextFocus.disabled||nextFocus.getAttribute('aria-disabled')==='true';if(!nextFocus.hasAttribute('tabindex')||!textCriteriaMatches(nextFocus,textCriteria)||nextFocusDisabled){// Move to the next element.
nextFocus=traversalFunction(list,nextFocus,disableListWrap);}else{nextFocus.focus();return true;}}return false;}/**
       * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.
       * It's exposed to help customization of the [`Menu`](/api/menu/) component if you
       * use it separately you need to move focus into the component manually. Once
       * the focus is placed inside the component it is fully keyboard accessible.
       */var MenuList=/*#__PURE__*/x$5(function MenuList(props,ref){var actions=props.actions,_props$autoFocus2=props.autoFocus,autoFocus=_props$autoFocus2===void 0?false:_props$autoFocus2,_props$autoFocusItem=props.autoFocusItem,autoFocusItem=_props$autoFocusItem===void 0?false:_props$autoFocusItem,children=props.children,className=props.className,_props$disabledItemsF=props.disabledItemsFocusable,disabledItemsFocusable=_props$disabledItemsF===void 0?false:_props$disabledItemsF,_props$disableListWra=props.disableListWrap,disableListWrap=_props$disableListWra===void 0?false:_props$disableListWra,onKeyDown=props.onKeyDown,_props$variant7=props.variant,variant=_props$variant7===void 0?'selectedMenu':_props$variant7,other=_objectWithoutPropertiesLoose$1(props,_excluded$g);var listRef=s$1(null);var textCriteriaRef=s$1({keys:[],repeating:true,previousKeyMatched:true,lastTime:null});useEnhancedEffect$1(function(){if(autoFocus){listRef.current.focus();}},[autoFocus]);_$5(actions,function(){return{adjustStyleForScrollbar:function adjustStyleForScrollbar(containerElement,theme){// Let's ignore that piece of logic if users are already overriding the width
// of the menu.
var noExplicitWidth=!listRef.current.style.width;if(containerElement.clientHeight<listRef.current.clientHeight&&noExplicitWidth){var scrollbarSize="".concat(getScrollbarSize(ownerDocument(containerElement)),"px");listRef.current.style[theme.direction==='rtl'?'paddingLeft':'paddingRight']=scrollbarSize;listRef.current.style.width="calc(100% + ".concat(scrollbarSize,")");}return listRef.current;}};},[]);var handleKeyDown=function handleKeyDown(event){var list=listRef.current;var key=event.key;/**
           * @type {Element} - will always be defined since we are in a keydown handler
           * attached to an element. A keydown event is either dispatched to the activeElement
           * or document.body or document.documentElement. Only the first case will
           * trigger this specific handler.
           */var currentFocus=ownerDocument(list).activeElement;if(key==='ArrowDown'){// Prevent scroll of the page
event.preventDefault();moveFocus(list,currentFocus,disableListWrap,disabledItemsFocusable,nextItem);}else if(key==='ArrowUp'){event.preventDefault();moveFocus(list,currentFocus,disableListWrap,disabledItemsFocusable,previousItem);}else if(key==='Home'){event.preventDefault();moveFocus(list,null,disableListWrap,disabledItemsFocusable,nextItem);}else if(key==='End'){event.preventDefault();moveFocus(list,null,disableListWrap,disabledItemsFocusable,previousItem);}else if(key.length===1){var criteria=textCriteriaRef.current;var lowerKey=key.toLowerCase();var currTime=performance.now();if(criteria.keys.length>0){// Reset
if(currTime-criteria.lastTime>500){criteria.keys=[];criteria.repeating=true;criteria.previousKeyMatched=true;}else if(criteria.repeating&&lowerKey!==criteria.keys[0]){criteria.repeating=false;}}criteria.lastTime=currTime;criteria.keys.push(lowerKey);var keepFocusOnCurrent=currentFocus&&!criteria.repeating&&textCriteriaMatches(currentFocus,criteria);if(criteria.previousKeyMatched&&(keepFocusOnCurrent||moveFocus(list,currentFocus,false,disabledItemsFocusable,nextItem,criteria))){event.preventDefault();}else{criteria.previousKeyMatched=false;}}if(onKeyDown){onKeyDown(event);}};var handleRef=useForkRef(listRef,ref);/**
         * the index of the item should receive focus
         * in a `variant="selectedMenu"` it's the first `selected` item
         * otherwise it's the very first item.
         */var activeItemIndex=-1;// since we inject focus related props into children we have to do a lookahead
// to check if there is a `selected` item. We're looking for the last `selected`
// item and use the first valid item as a fallback
k$5.forEach(children,function(child,index){if(!/*#__PURE__*/en$1(child)){return;}if(!child.props.disabled){if(variant==='selectedMenu'&&child.props.selected){activeItemIndex=index;}else if(activeItemIndex===-1){activeItemIndex=index;}}});var items=k$5.map(children,function(child,index){if(index===activeItemIndex){var newChildProps={};if(autoFocusItem){newChildProps.autoFocus=true;}if(child.props.tabIndex===undefined&&variant==='selectedMenu'){newChildProps.tabIndex=0;}return/*#__PURE__*/rn$1(child,newChildProps);}return child;});return/*#__PURE__*/jsx(List$1,_extends$5({role:"menu",ref:handleRef,className:className,onKeyDown:handleKeyDown,tabIndex:autoFocus?0:-1},other,{children:items}));});var MenuList$1=MenuList;function getPopoverUtilityClass(slot){return generateUtilityClass('MuiPopover',slot);}generateUtilityClasses('MuiPopover',['root','paper']);var _excluded$f=["onEntering"],_excluded2$2=["action","anchorEl","anchorOrigin","anchorPosition","anchorReference","children","className","container","elevation","marginThreshold","open","PaperProps","transformOrigin","TransitionComponent","transitionDuration","TransitionProps"];function getOffsetTop(rect,vertical){var offset=0;if(typeof vertical==='number'){offset=vertical;}else if(vertical==='center'){offset=rect.height/2;}else if(vertical==='bottom'){offset=rect.height;}return offset;}function getOffsetLeft(rect,horizontal){var offset=0;if(typeof horizontal==='number'){offset=horizontal;}else if(horizontal==='center'){offset=rect.width/2;}else if(horizontal==='right'){offset=rect.width;}return offset;}function getTransformOriginValue(transformOrigin){return[transformOrigin.horizontal,transformOrigin.vertical].map(function(n){return typeof n==='number'?"".concat(n,"px"):n;}).join(' ');}function resolveAnchorEl(anchorEl){return typeof anchorEl==='function'?anchorEl():anchorEl;}var useUtilityClasses$a=function useUtilityClasses$a(ownerState){var classes=ownerState.classes;var slots={root:['root'],paper:['paper']};return composeClasses(slots,getPopoverUtilityClass,classes);};var PopoverRoot=styled$2(Modal$1,{name:'MuiPopover',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})({});var PopoverPaper=styled$2(Paper$1,{name:'MuiPopover',slot:'Paper',overridesResolver:function overridesResolver(props,styles){return styles.paper;}})({position:'absolute',overflowY:'auto',overflowX:'hidden',// So we see the popover when it's empty.
// It's most likely on issue on userland.
minWidth:16,minHeight:16,maxWidth:'calc(100% - 32px)',maxHeight:'calc(100% - 32px)',// We disable the focus ring for mouse, touch and keyboard users.
outline:0});var Popover=/*#__PURE__*/x$5(function Popover(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiPopover'});var action=props.action,anchorEl=props.anchorEl,_props$anchorOrigin=props.anchorOrigin,anchorOrigin=_props$anchorOrigin===void 0?{vertical:'top',horizontal:'left'}:_props$anchorOrigin,anchorPosition=props.anchorPosition,_props$anchorReferenc=props.anchorReference,anchorReference=_props$anchorReferenc===void 0?'anchorEl':_props$anchorReferenc,children=props.children,className=props.className,containerProp=props.container,_props$elevation3=props.elevation,elevation=_props$elevation3===void 0?8:_props$elevation3,_props$marginThreshol=props.marginThreshold,marginThreshold=_props$marginThreshol===void 0?16:_props$marginThreshol,open=props.open,_props$PaperProps2=props.PaperProps,PaperProps=_props$PaperProps2===void 0?{}:_props$PaperProps2,_props$transformOrigi=props.transformOrigin,transformOrigin=_props$transformOrigi===void 0?{vertical:'top',horizontal:'left'}:_props$transformOrigi,_props$TransitionComp6=props.TransitionComponent,TransitionComponent=_props$TransitionComp6===void 0?Grow$1:_props$TransitionComp6,_props$transitionDura2=props.transitionDuration,transitionDurationProp=_props$transitionDura2===void 0?'auto':_props$transitionDura2,_props$TransitionProp=props.TransitionProps;_props$TransitionProp=_props$TransitionProp===void 0?{}:_props$TransitionProp;var onEntering=_props$TransitionProp.onEntering,TransitionProps=_objectWithoutPropertiesLoose$1(props.TransitionProps,_excluded$f),other=_objectWithoutPropertiesLoose$1(props,_excluded2$2);var paperRef=s$1();var handlePaperRef=useForkRef(paperRef,PaperProps.ref);var ownerState=_extends$5({},props,{anchorOrigin:anchorOrigin,anchorReference:anchorReference,elevation:elevation,marginThreshold:marginThreshold,PaperProps:PaperProps,transformOrigin:transformOrigin,TransitionComponent:TransitionComponent,transitionDuration:transitionDurationProp,TransitionProps:TransitionProps});var classes=useUtilityClasses$a(ownerState);// Returns the top/left offset of the position
// to attach to on the anchor element (or body if none is provided)
var getAnchorOffset=F$5(function(){if(anchorReference==='anchorPosition'){return anchorPosition;}var resolvedAnchorEl=resolveAnchorEl(anchorEl);// If an anchor element wasn't provided, just use the parent body element of this Popover
var anchorElement=resolvedAnchorEl&&resolvedAnchorEl.nodeType===1?resolvedAnchorEl:ownerDocument(paperRef.current).body;var anchorRect=anchorElement.getBoundingClientRect();return{top:anchorRect.top+getOffsetTop(anchorRect,anchorOrigin.vertical),left:anchorRect.left+getOffsetLeft(anchorRect,anchorOrigin.horizontal)};},[anchorEl,anchorOrigin.horizontal,anchorOrigin.vertical,anchorPosition,anchorReference]);// Returns the base transform origin using the element
var getTransformOrigin=F$5(function(elemRect){return{vertical:getOffsetTop(elemRect,transformOrigin.vertical),horizontal:getOffsetLeft(elemRect,transformOrigin.horizontal)};},[transformOrigin.horizontal,transformOrigin.vertical]);var getPositioningStyle=F$5(function(element){var elemRect={width:element.offsetWidth,height:element.offsetHeight};// Get the transform origin point on the element itself
var elemTransformOrigin=getTransformOrigin(elemRect);if(anchorReference==='none'){return{top:null,left:null,transformOrigin:getTransformOriginValue(elemTransformOrigin)};}// Get the offset of the anchoring element
var anchorOffset=getAnchorOffset();// Calculate element positioning
var top=anchorOffset.top-elemTransformOrigin.vertical;var left=anchorOffset.left-elemTransformOrigin.horizontal;var bottom=top+elemRect.height;var right=left+elemRect.width;// Use the parent window of the anchorEl if provided
var containerWindow=ownerWindow(resolveAnchorEl(anchorEl));// Window thresholds taking required margin into account
var heightThreshold=containerWindow.innerHeight-marginThreshold;var widthThreshold=containerWindow.innerWidth-marginThreshold;// Check if the vertical axis needs shifting
if(top<marginThreshold){var diff=top-marginThreshold;top-=diff;elemTransformOrigin.vertical+=diff;}else if(bottom>heightThreshold){var _diff=bottom-heightThreshold;top-=_diff;elemTransformOrigin.vertical+=_diff;}if(left<marginThreshold){var _diff2=left-marginThreshold;left-=_diff2;elemTransformOrigin.horizontal+=_diff2;}else if(right>widthThreshold){var _diff3=right-widthThreshold;left-=_diff3;elemTransformOrigin.horizontal+=_diff3;}return{top:"".concat(Math.round(top),"px"),left:"".concat(Math.round(left),"px"),transformOrigin:getTransformOriginValue(elemTransformOrigin)};},[anchorEl,anchorReference,getAnchorOffset,getTransformOrigin,marginThreshold]);var setPositioningStyles=F$5(function(){var element=paperRef.current;if(!element){return;}var positioning=getPositioningStyle(element);if(positioning.top!==null){element.style.top=positioning.top;}if(positioning.left!==null){element.style.left=positioning.left;}element.style.transformOrigin=positioning.transformOrigin;},[getPositioningStyle]);var handleEntering=function handleEntering(element,isAppearing){if(onEntering){onEntering(element,isAppearing);}setPositioningStyles();};y$3(function(){if(open){setPositioningStyles();}});_$5(action,function(){return open?{updatePosition:function updatePosition(){setPositioningStyles();}}:null;},[open,setPositioningStyles]);y$3(function(){if(!open){return undefined;}var handleResize=debounce$1(function(){setPositioningStyles();});var containerWindow=ownerWindow(anchorEl);containerWindow.addEventListener('resize',handleResize);return function(){handleResize.clear();containerWindow.removeEventListener('resize',handleResize);};},[anchorEl,open,setPositioningStyles]);var transitionDuration=transitionDurationProp;if(transitionDurationProp==='auto'&&!TransitionComponent.muiSupportAuto){transitionDuration=undefined;}// If the container prop is provided, use that
// If the anchorEl prop is provided, use its parent body element as the container
// If neither are provided let the Modal take care of choosing the container
var container=containerProp||(anchorEl?ownerDocument(resolveAnchorEl(anchorEl)).body:undefined);return/*#__PURE__*/jsx(PopoverRoot,_extends$5({BackdropProps:{invisible:true},className:clsx(classes.root,className),container:container,open:open,ref:ref,ownerState:ownerState},other,{children:/*#__PURE__*/jsx(TransitionComponent,_extends$5({appear:true,in:open,onEntering:handleEntering,timeout:transitionDuration},TransitionProps,{children:/*#__PURE__*/jsx(PopoverPaper,_extends$5({elevation:elevation},PaperProps,{ref:handlePaperRef,className:clsx(classes.paper,PaperProps.className),children:children}))}))}));});var Popover$1=Popover;function getMenuUtilityClass(slot){return generateUtilityClass('MuiMenu',slot);}generateUtilityClasses('MuiMenu',['root','paper','list']);var _excluded$e=["onEntering"],_excluded2$1=["autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant"];var RTL_ORIGIN={vertical:'top',horizontal:'right'};var LTR_ORIGIN={vertical:'top',horizontal:'left'};var useUtilityClasses$9=function useUtilityClasses$9(ownerState){var classes=ownerState.classes;var slots={root:['root'],paper:['paper'],list:['list']};return composeClasses(slots,getMenuUtilityClass,classes);};var MenuRoot=styled$2(Popover$1,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiMenu',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})({});var MenuPaper=styled$2(Paper$1,{name:'MuiMenu',slot:'Paper',overridesResolver:function overridesResolver(props,styles){return styles.paper;}})({// specZ: The maximum height of a simple menu should be one or more rows less than the view
// height. This ensures a tapable area outside of the simple menu with which to dismiss
// the menu.
maxHeight:'calc(100% - 96px)',// Add iOS momentum scrolling for iOS < 13.0
WebkitOverflowScrolling:'touch'});var MenuMenuList=styled$2(MenuList$1,{name:'MuiMenu',slot:'List',overridesResolver:function overridesResolver(props,styles){return styles.list;}})({// We disable the focus ring for mouse, touch and keyboard users.
outline:0});var Menu$1=/*#__PURE__*/x$5(function Menu(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiMenu'});var _props$autoFocus3=props.autoFocus,autoFocus=_props$autoFocus3===void 0?true:_props$autoFocus3,children=props.children,_props$disableAutoFoc4=props.disableAutoFocusItem,disableAutoFocusItem=_props$disableAutoFoc4===void 0?false:_props$disableAutoFoc4,_props$MenuListProps=props.MenuListProps,MenuListProps=_props$MenuListProps===void 0?{}:_props$MenuListProps,onClose=props.onClose,open=props.open,_props$PaperProps3=props.PaperProps,PaperProps=_props$PaperProps3===void 0?{}:_props$PaperProps3,PopoverClasses=props.PopoverClasses,_props$transitionDura3=props.transitionDuration,transitionDuration=_props$transitionDura3===void 0?'auto':_props$transitionDura3,_props$TransitionProp2=props.TransitionProps;_props$TransitionProp2=_props$TransitionProp2===void 0?{}:_props$TransitionProp2;var onEntering=_props$TransitionProp2.onEntering,_props$variant8=props.variant,variant=_props$variant8===void 0?'selectedMenu':_props$variant8,TransitionProps=_objectWithoutPropertiesLoose$1(props.TransitionProps,_excluded$e),other=_objectWithoutPropertiesLoose$1(props,_excluded2$1);var theme=useTheme();var isRtl=theme.direction==='rtl';var ownerState=_extends$5({},props,{autoFocus:autoFocus,disableAutoFocusItem:disableAutoFocusItem,MenuListProps:MenuListProps,onEntering:onEntering,PaperProps:PaperProps,transitionDuration:transitionDuration,TransitionProps:TransitionProps,variant:variant});var classes=useUtilityClasses$9(ownerState);var autoFocusItem=autoFocus&&!disableAutoFocusItem&&open;var menuListActionsRef=s$1(null);var handleEntering=function handleEntering(element,isAppearing){if(menuListActionsRef.current){menuListActionsRef.current.adjustStyleForScrollbar(element,theme);}if(onEntering){onEntering(element,isAppearing);}};var handleListKeyDown=function handleListKeyDown(event){if(event.key==='Tab'){event.preventDefault();if(onClose){onClose(event,'tabKeyDown');}}};/**
         * the index of the item should receive focus
         * in a `variant="selectedMenu"` it's the first `selected` item
         * otherwise it's the very first item.
         */var activeItemIndex=-1;// since we inject focus related props into children we have to do a lookahead
// to check if there is a `selected` item. We're looking for the last `selected`
// item and use the first valid item as a fallback
k$5.map(children,function(child,index){if(!/*#__PURE__*/en$1(child)){return;}if(!child.props.disabled){if(variant==='selectedMenu'&&child.props.selected){activeItemIndex=index;}else if(activeItemIndex===-1){activeItemIndex=index;}}});return/*#__PURE__*/jsx(MenuRoot,_extends$5({classes:PopoverClasses,onClose:onClose,anchorOrigin:{vertical:'bottom',horizontal:isRtl?'right':'left'},transformOrigin:isRtl?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends$5({component:MenuPaper},PaperProps,{classes:_extends$5({},PaperProps.classes,{root:classes.paper})}),className:classes.root,open:open,ref:ref,transitionDuration:transitionDuration,TransitionProps:_extends$5({onEntering:handleEntering},TransitionProps),ownerState:ownerState},other,{children:/*#__PURE__*/jsx(MenuMenuList,_extends$5({onKeyDown:handleListKeyDown,actions:menuListActionsRef,autoFocus:autoFocus&&(activeItemIndex===-1||disableAutoFocusItem),autoFocusItem:autoFocusItem,variant:variant},MenuListProps,{className:clsx(classes.list,MenuListProps.className),children:children}))}));});var Menu$2=Menu$1;function getNativeSelectUtilityClasses(slot){return generateUtilityClass('MuiNativeSelect',slot);}var nativeSelectClasses=generateUtilityClasses('MuiNativeSelect',['root','select','multiple','filled','outlined','standard','disabled','icon','iconOpen','iconFilled','iconOutlined','iconStandard','nativeInput']);var nativeSelectClasses$1=nativeSelectClasses;var _excluded$d=["className","disabled","IconComponent","inputRef","variant"];var useUtilityClasses$8=function useUtilityClasses$8(ownerState){var classes=ownerState.classes,variant=ownerState.variant,disabled=ownerState.disabled,multiple=ownerState.multiple,open=ownerState.open;var slots={select:['select',variant,disabled&&'disabled',multiple&&'multiple'],icon:['icon',"icon".concat(capitalize(variant)),open&&'iconOpen',disabled&&'disabled']};return composeClasses(slots,getNativeSelectUtilityClasses,classes);};var nativeSelectSelectStyles=function nativeSelectSelectStyles(_ref75){var _extends$16;var ownerState=_ref75.ownerState,theme=_ref75.theme;return _extends$5((_extends$16={MozAppearance:'none',// Reset
WebkitAppearance:'none',// Reset
// When interacting quickly, the text can end up selected.
// Native select can't be selected either.
userSelect:'none',borderRadius:0,// Reset
cursor:'pointer','&:focus':{// Show that it's not an text input
backgroundColor:theme.palette.mode==='light'?'rgba(0, 0, 0, 0.05)':'rgba(255, 255, 255, 0.05)',borderRadius:0// Reset Chrome style
},// Remove IE11 arrow
'&::-ms-expand':{display:'none'}},_defineProperty(_extends$16,"&.".concat(nativeSelectClasses$1.disabled),{cursor:'default'}),_defineProperty(_extends$16,'&[multiple]',{height:'auto'}),_defineProperty(_extends$16,'&:not([multiple]) option, &:not([multiple]) optgroup',{backgroundColor:theme.palette.background.paper}),_defineProperty(_extends$16,'&&&',{paddingRight:24,minWidth:16// So it doesn't collapse.
}),_extends$16),ownerState.variant==='filled'&&{'&&&':{paddingRight:32}},ownerState.variant==='outlined'&&{borderRadius:theme.shape.borderRadius,'&:focus':{borderRadius:theme.shape.borderRadius// Reset the reset for Chrome style
},'&&&':{paddingRight:32}});};var NativeSelectSelect=styled$2('select',{name:'MuiNativeSelect',slot:'Select',shouldForwardProp:rootShouldForwardProp,overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.select,styles[ownerState.variant],_defineProperty({},"&.".concat(nativeSelectClasses$1.multiple),styles.multiple)];}})(nativeSelectSelectStyles);var nativeSelectIconStyles=function nativeSelectIconStyles(_ref77){var ownerState=_ref77.ownerState,theme=_ref77.theme;return _extends$5(_defineProperty({// We use a position absolute over a flexbox in order to forward the pointer events
// to the input and to support wrapping tags..
position:'absolute',right:0,top:'calc(50% - .5em)',// Center vertically, height is 1em
pointerEvents:'none',// Don't block pointer events on the select under the icon.
color:theme.palette.action.active},"&.".concat(nativeSelectClasses$1.disabled),{color:theme.palette.action.disabled}),ownerState.open&&{transform:'rotate(180deg)'},ownerState.variant==='filled'&&{right:7},ownerState.variant==='outlined'&&{right:7});};var NativeSelectIcon=styled$2('svg',{name:'MuiNativeSelect',slot:'Icon',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.icon,ownerState.variant&&styles["icon".concat(capitalize(ownerState.variant))],ownerState.open&&styles.iconOpen];}})(nativeSelectIconStyles);/**
       * @ignore - internal component.
       */var NativeSelectInput=/*#__PURE__*/x$5(function NativeSelectInput(props,ref){var className=props.className,disabled=props.disabled,IconComponent=props.IconComponent,inputRef=props.inputRef,_props$variant9=props.variant,variant=_props$variant9===void 0?'standard':_props$variant9,other=_objectWithoutPropertiesLoose$1(props,_excluded$d);var ownerState=_extends$5({},props,{disabled:disabled,variant:variant});var classes=useUtilityClasses$8(ownerState);return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx(NativeSelectSelect,_extends$5({ownerState:ownerState,className:clsx(classes.select,className),disabled:disabled,ref:inputRef||ref},other)),props.multiple?null:/*#__PURE__*/jsx(NativeSelectIcon,{as:IconComponent,ownerState:ownerState,className:classes.icon})]});});var NativeSelectInput$1=NativeSelectInput;var _span$1;var _excluded$c=["children","classes","className","label","notched"];var NotchedOutlineRoot$1=styled$2('fieldset')({textAlign:'left',position:'absolute',bottom:0,right:0,top:-5,left:0,margin:0,padding:'0 8px',pointerEvents:'none',borderRadius:'inherit',borderStyle:'solid',borderWidth:1,overflow:'hidden',minWidth:'0%'});var NotchedOutlineLegend=styled$2('legend')(function(_ref78){var ownerState=_ref78.ownerState,theme=_ref78.theme;return _extends$5({float:'unset'},!ownerState.withLabel&&{padding:0,lineHeight:'11px',// sync with `height` in `legend` styles
transition:theme.transitions.create('width',{duration:150,easing:theme.transitions.easing.easeOut})},ownerState.withLabel&&_extends$5({display:'block',// Fix conflict with normalize.css and sanitize.css
width:'auto',// Fix conflict with bootstrap
padding:0,height:11,// sync with `lineHeight` in `legend` styles
fontSize:'0.75em',visibility:'hidden',maxWidth:0.01,transition:theme.transitions.create('max-width',{duration:50,easing:theme.transitions.easing.easeOut}),whiteSpace:'nowrap','& > span':{paddingLeft:5,paddingRight:5,display:'inline-block'}},ownerState.notched&&{maxWidth:'100%',transition:theme.transitions.create('max-width',{duration:100,easing:theme.transitions.easing.easeOut,delay:50})}));});/**
       * @ignore - internal component.
       */function NotchedOutline(props){var className=props.className,label=props.label,notched=props.notched,other=_objectWithoutPropertiesLoose$1(props,_excluded$c);var withLabel=label!=null&&label!=='';var ownerState=_extends$5({},props,{notched:notched,withLabel:withLabel});return/*#__PURE__*/jsx(NotchedOutlineRoot$1,_extends$5({"aria-hidden":true,className:className,ownerState:ownerState},other,{children:/*#__PURE__*/jsx(NotchedOutlineLegend,{ownerState:ownerState,children:withLabel?/*#__PURE__*/jsx("span",{children:label}):// notranslate needed while Google Translate will not fix zero-width space issue
_span$1||(_span$1=/*#__PURE__*/jsx("span",{className:"notranslate",children:"\u200B"}))})}));}var _excluded$b=["components","fullWidth","inputComponent","label","multiline","notched","type"];var useUtilityClasses$7=function useUtilityClasses$7(ownerState){var classes=ownerState.classes;var slots={root:['root'],notchedOutline:['notchedOutline'],input:['input']};var composedClasses=composeClasses(slots,getOutlinedInputUtilityClass,classes);return _extends$5({},classes,composedClasses);};var OutlinedInputRoot=styled$2(InputBaseRoot,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiOutlinedInput',slot:'Root',overridesResolver:rootOverridesResolver})(function(_ref79){var _extends$18;var theme=_ref79.theme,ownerState=_ref79.ownerState;var borderColor=theme.palette.mode==='light'?'rgba(0, 0, 0, 0.23)':'rgba(255, 255, 255, 0.23)';return _extends$5((_extends$18={position:'relative',borderRadius:theme.shape.borderRadius},_defineProperty(_extends$18,"&:hover .".concat(outlinedInputClasses$1.notchedOutline),{borderColor:theme.palette.text.primary}),_defineProperty(_extends$18,'@media (hover: none)',_defineProperty({},"&:hover .".concat(outlinedInputClasses$1.notchedOutline),{borderColor:borderColor})),_defineProperty(_extends$18,"&.".concat(outlinedInputClasses$1.focused," .").concat(outlinedInputClasses$1.notchedOutline),{borderColor:theme.palette[ownerState.color].main,borderWidth:2}),_defineProperty(_extends$18,"&.".concat(outlinedInputClasses$1.error," .").concat(outlinedInputClasses$1.notchedOutline),{borderColor:theme.palette.error.main}),_defineProperty(_extends$18,"&.".concat(outlinedInputClasses$1.disabled," .").concat(outlinedInputClasses$1.notchedOutline),{borderColor:theme.palette.action.disabled}),_extends$18),ownerState.startAdornment&&{paddingLeft:14},ownerState.endAdornment&&{paddingRight:14},ownerState.multiline&&_extends$5({padding:'16.5px 14px'},ownerState.size==='small'&&{padding:'8.5px 14px'}));});var NotchedOutlineRoot=styled$2(NotchedOutline,{name:'MuiOutlinedInput',slot:'NotchedOutline',overridesResolver:function overridesResolver(props,styles){return styles.notchedOutline;}})(function(_ref80){var theme=_ref80.theme;return{borderColor:theme.palette.mode==='light'?'rgba(0, 0, 0, 0.23)':'rgba(255, 255, 255, 0.23)'};});var OutlinedInputInput=styled$2(InputBaseComponent,{name:'MuiOutlinedInput',slot:'Input',overridesResolver:inputOverridesResolver})(function(_ref81){var theme=_ref81.theme,ownerState=_ref81.ownerState;return _extends$5({padding:'16.5px 14px','&:-webkit-autofill':{WebkitBoxShadow:theme.palette.mode==='light'?null:'0 0 0 100px #266798 inset',WebkitTextFillColor:theme.palette.mode==='light'?null:'#fff',caretColor:theme.palette.mode==='light'?null:'#fff',borderRadius:'inherit'}},ownerState.size==='small'&&{padding:'8.5px 14px'},ownerState.multiline&&{padding:0},ownerState.startAdornment&&{paddingLeft:0},ownerState.endAdornment&&{paddingRight:0});});var OutlinedInput=/*#__PURE__*/x$5(function OutlinedInput(inProps,ref){var _React$Fragment;var props=useThemeProps({props:inProps,name:'MuiOutlinedInput'});var _props$components8=props.components,components=_props$components8===void 0?{}:_props$components8,_props$fullWidth6=props.fullWidth,fullWidth=_props$fullWidth6===void 0?false:_props$fullWidth6,_props$inputComponent4=props.inputComponent,inputComponent=_props$inputComponent4===void 0?'input':_props$inputComponent4,label=props.label,_props$multiline4=props.multiline,multiline=_props$multiline4===void 0?false:_props$multiline4,notched=props.notched,_props$type4=props.type,type=_props$type4===void 0?'text':_props$type4,other=_objectWithoutPropertiesLoose$1(props,_excluded$b);var classes=useUtilityClasses$7(props);var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['required']});return/*#__PURE__*/jsx(InputBase$1,_extends$5({components:_extends$5({Root:OutlinedInputRoot,Input:OutlinedInputInput},components),renderSuffix:function renderSuffix(state){return/*#__PURE__*/jsx(NotchedOutlineRoot,{className:classes.notchedOutline,label:label!=null&&label!==''&&fcs.required?_React$Fragment||(_React$Fragment=/*#__PURE__*/jsxs(d$4,{children:[label,"\xA0",'*']})):label,notched:typeof notched!=='undefined'?notched:Boolean(state.startAdornment||state.filled||state.focused)});},fullWidth:fullWidth,inputComponent:inputComponent,multiline:multiline,ref:ref,type:type},other,{classes:_extends$5({},classes,{notchedOutline:null})}));});OutlinedInput.muiName='Input';var OutlinedInput$1=OutlinedInput;var RadioButtonUncheckedIcon=createSvgIcon(/*#__PURE__*/jsx("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),'RadioButtonUnchecked');var RadioButtonCheckedIcon=createSvgIcon(/*#__PURE__*/jsx("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),'RadioButtonChecked');var RadioButtonIconRoot=styled$2('span')({position:'relative',display:'flex'});var RadioButtonIconBackground=styled$2(RadioButtonUncheckedIcon)({// Scale applied to prevent dot misalignment in Safari
transform:'scale(1)'});var RadioButtonIconDot=styled$2(RadioButtonCheckedIcon)(function(_ref82){var theme=_ref82.theme,ownerState=_ref82.ownerState;return _extends$5({left:0,position:'absolute',transform:'scale(0)',transition:theme.transitions.create('transform',{easing:theme.transitions.easing.easeIn,duration:theme.transitions.duration.shortest})},ownerState.checked&&{transform:'scale(1)',transition:theme.transitions.create('transform',{easing:theme.transitions.easing.easeOut,duration:theme.transitions.duration.shortest})});});/**
       * @ignore - internal component.
       */function RadioButtonIcon(props){var _props$checked=props.checked,checked=_props$checked===void 0?false:_props$checked,_props$classes2=props.classes,classes=_props$classes2===void 0?{}:_props$classes2,fontSize=props.fontSize;var ownerState=_extends$5({},props,{checked:checked});return/*#__PURE__*/jsxs(RadioButtonIconRoot,{className:classes.root,ownerState:ownerState,children:[/*#__PURE__*/jsx(RadioButtonIconBackground,{fontSize:fontSize,className:classes.background,ownerState:ownerState}),/*#__PURE__*/jsx(RadioButtonIconDot,{fontSize:fontSize,className:classes.dot,ownerState:ownerState})]});}/**
       * @ignore - internal component.
       */var RadioGroupContext=/*#__PURE__*/D$3(undefined);var RadioGroupContext$1=RadioGroupContext;function useRadioGroup(){return T$2(RadioGroupContext$1);}function getRadioUtilityClass(slot){return generateUtilityClass('MuiRadio',slot);}var radioClasses=generateUtilityClasses('MuiRadio',['root','checked','disabled','colorPrimary','colorSecondary']);var radioClasses$1=radioClasses;var _excluded$a=["checked","checkedIcon","color","icon","name","onChange","size"];var useUtilityClasses$6=function useUtilityClasses$6(ownerState){var classes=ownerState.classes,color=ownerState.color;var slots={root:['root',"color".concat(capitalize(color))]};return _extends$5({},classes,composeClasses(slots,getRadioUtilityClass,classes));};var RadioRoot=styled$2(SwitchBase$1,{shouldForwardProp:function shouldForwardProp(prop){return rootShouldForwardProp(prop)||prop==='classes';},name:'MuiRadio',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles["color".concat(capitalize(ownerState.color))]];}})(function(_ref83){var theme=_ref83.theme,ownerState=_ref83.ownerState;return _extends$5({color:theme.palette.text.secondary,'&:hover':{backgroundColor:alpha(ownerState.color==='default'?theme.palette.action.active:theme.palette[ownerState.color].main,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}}},ownerState.color!=='default'&&_defineProperty({},"&.".concat(radioClasses$1.checked),{color:theme.palette[ownerState.color].main}),_defineProperty({},"&.".concat(radioClasses$1.disabled),{color:theme.palette.action.disabled}));});function areEqualValues$1(a,b){if(_typeof(b)==='object'&&b!==null){return a===b;}// The value could be a number, the DOM will stringify it anyway.
return String(a)===String(b);}var defaultCheckedIcon=/*#__PURE__*/jsx(RadioButtonIcon,{checked:true});var defaultIcon=/*#__PURE__*/jsx(RadioButtonIcon,{});var Radio=/*#__PURE__*/x$5(function Radio(inProps,ref){var _defaultIcon$props$fo,_defaultCheckedIcon$p;var props=useThemeProps({props:inProps,name:'MuiRadio'});var checkedProp=props.checked,_props$checkedIcon=props.checkedIcon,checkedIcon=_props$checkedIcon===void 0?defaultCheckedIcon:_props$checkedIcon,_props$color6=props.color,color=_props$color6===void 0?'primary':_props$color6,_props$icon=props.icon,icon=_props$icon===void 0?defaultIcon:_props$icon,nameProp=props.name,onChangeProp=props.onChange,_props$size4=props.size,size=_props$size4===void 0?'medium':_props$size4,other=_objectWithoutPropertiesLoose$1(props,_excluded$a);var ownerState=_extends$5({},props,{color:color,size:size});var classes=useUtilityClasses$6(ownerState);var radioGroup=useRadioGroup();var checked=checkedProp;var onChange=createChainedFunction(onChangeProp,radioGroup&&radioGroup.onChange);var name=nameProp;if(radioGroup){if(typeof checked==='undefined'){checked=areEqualValues$1(radioGroup.value,props.value);}if(typeof name==='undefined'){name=radioGroup.name;}}return/*#__PURE__*/jsx(RadioRoot,_extends$5({type:"radio",icon:/*#__PURE__*/rn$1(icon,{fontSize:(_defaultIcon$props$fo=defaultIcon.props.fontSize)!=null?_defaultIcon$props$fo:size}),checkedIcon:/*#__PURE__*/rn$1(checkedIcon,{fontSize:(_defaultCheckedIcon$p=defaultCheckedIcon.props.fontSize)!=null?_defaultCheckedIcon$p:size}),ownerState:ownerState,classes:classes,name:name,checked:checked,onChange:onChange,ref:ref},other));});var Radio$1=exports('a0',Radio);var _excluded$9=["actions","children","defaultValue","name","onChange","value"];var RadioGroup=/*#__PURE__*/x$5(function RadioGroup(props,ref){var actions=props.actions,children=props.children,defaultValue=props.defaultValue,nameProp=props.name,onChange=props.onChange,valueProp=props.value,other=_objectWithoutPropertiesLoose$1(props,_excluded$9);var rootRef=s$1(null);var _useControlled3=useControlled({controlled:valueProp,default:defaultValue,name:'RadioGroup'}),_useControlled4=_slicedToArray(_useControlled3,2),value=_useControlled4[0],setValueState=_useControlled4[1];_$5(actions,function(){return{focus:function focus(){var input=rootRef.current.querySelector('input:not(:disabled):checked');if(!input){input=rootRef.current.querySelector('input:not(:disabled)');}if(input){input.focus();}}};},[]);var handleRef=useForkRef(ref,rootRef);var handleChange=function handleChange(event){setValueState(event.target.value);if(onChange){onChange(event,event.target.value);}};var name=useId(nameProp);return/*#__PURE__*/jsx(RadioGroupContext$1.Provider,{value:{name:name,onChange:handleChange,value:value},children:/*#__PURE__*/jsx(FormGroup$1,_extends$5({role:"radiogroup",ref:handleRef},other,{children:children}))});});var RadioGroup$1=exports('_',RadioGroup);function getSelectUtilityClasses(slot){return generateUtilityClass('MuiSelect',slot);}var selectClasses=generateUtilityClasses('MuiSelect',['select','multiple','filled','outlined','standard','disabled','focused','icon','iconOpen','iconFilled','iconOutlined','iconStandard','nativeInput']);var selectClasses$1=selectClasses;var _span;var _excluded$8=["aria-describedby","aria-label","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"];var SelectSelect=styled$2('div',{name:'MuiSelect',slot:'Select',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[// Win specificity over the input base
_defineProperty({},"&.".concat(selectClasses$1.select),styles.select),_defineProperty({},"&.".concat(selectClasses$1.select),styles[ownerState.variant]),_defineProperty({},"&.".concat(selectClasses$1.multiple),styles.multiple)];}})(nativeSelectSelectStyles,_defineProperty({},"&.".concat(selectClasses$1.select),{height:'auto',// Resets for multiple select with chips
minHeight:'1.4375em',// Required for select\text-field height consistency
textOverflow:'ellipsis',whiteSpace:'nowrap',overflow:'hidden'}));var SelectIcon=styled$2('svg',{name:'MuiSelect',slot:'Icon',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.icon,ownerState.variant&&styles["icon".concat(capitalize(ownerState.variant))],ownerState.open&&styles.iconOpen];}})(nativeSelectIconStyles);var SelectNativeInput=styled$2('input',{shouldForwardProp:function shouldForwardProp(prop){return slotShouldForwardProp(prop)&&prop!=='classes';},name:'MuiSelect',slot:'NativeInput',overridesResolver:function overridesResolver(props,styles){return styles.nativeInput;}})({bottom:0,left:0,position:'absolute',opacity:0,pointerEvents:'none',width:'100%',boxSizing:'border-box'});function areEqualValues(a,b){if(_typeof(b)==='object'&&b!==null){return a===b;}// The value could be a number, the DOM will stringify it anyway.
return String(a)===String(b);}function isEmpty$1(display){return display==null||typeof display==='string'&&!display.trim();}var useUtilityClasses$5=function useUtilityClasses$5(ownerState){var classes=ownerState.classes,variant=ownerState.variant,disabled=ownerState.disabled,multiple=ownerState.multiple,open=ownerState.open;var slots={select:['select',variant,disabled&&'disabled',multiple&&'multiple'],icon:['icon',"icon".concat(capitalize(variant)),open&&'iconOpen',disabled&&'disabled'],nativeInput:['nativeInput']};return composeClasses(slots,getSelectUtilityClasses,classes);};/**
       * @ignore - internal component.
       */var SelectInput=/*#__PURE__*/x$5(function SelectInput(props,ref){var ariaDescribedby=props['aria-describedby'],ariaLabel=props['aria-label'],autoFocus=props.autoFocus,autoWidth=props.autoWidth,children=props.children,className=props.className,defaultOpen=props.defaultOpen,defaultValue=props.defaultValue,disabled=props.disabled,displayEmpty=props.displayEmpty,IconComponent=props.IconComponent,inputRefProp=props.inputRef,labelId=props.labelId,_props$MenuProps=props.MenuProps,MenuProps=_props$MenuProps===void 0?{}:_props$MenuProps,multiple=props.multiple,name=props.name,onBlur=props.onBlur,onChange=props.onChange,onClose=props.onClose,onFocus=props.onFocus,onOpen=props.onOpen,openProp=props.open,readOnly=props.readOnly,renderValue=props.renderValue,_props$SelectDisplayP=props.SelectDisplayProps,SelectDisplayProps=_props$SelectDisplayP===void 0?{}:_props$SelectDisplayP,tabIndexProp=props.tabIndex,valueProp=props.value,_props$variant10=props.variant,variant=_props$variant10===void 0?'standard':_props$variant10,other=_objectWithoutPropertiesLoose$1(props,_excluded$8);var _useControlled5=useControlled({controlled:valueProp,default:defaultValue,name:'Select'}),_useControlled6=_slicedToArray(_useControlled5,2),value=_useControlled6[0],setValueState=_useControlled6[1];var _useControlled7=useControlled({controlled:openProp,default:defaultOpen,name:'Select'}),_useControlled8=_slicedToArray(_useControlled7,2),openState=_useControlled8[0],setOpenState=_useControlled8[1];var inputRef=s$1(null);var displayRef=s$1(null);var _l$31=l$4(null),_l$32=_slicedToArray(_l$31,2),displayNode=_l$32[0],setDisplayNode=_l$32[1];var _s$4=s$1(openProp!=null),isOpenControlled=_s$4.current;var _l$33=l$4(),_l$34=_slicedToArray(_l$33,2),menuMinWidthState=_l$34[0],setMenuMinWidthState=_l$34[1];var handleRef=useForkRef(ref,inputRefProp);var handleDisplayRef=F$5(function(node){displayRef.current=node;if(node){setDisplayNode(node);}},[]);_$5(handleRef,function(){return{focus:function focus(){displayRef.current.focus();},node:inputRef.current,value:value};},[value]);// Resize menu on `defaultOpen` automatic toggle.
y$3(function(){if(defaultOpen&&openState&&displayNode&&!isOpenControlled){setMenuMinWidthState(autoWidth?null:displayNode.clientWidth);displayRef.current.focus();}// eslint-disable-next-line react-hooks/exhaustive-deps
},[displayNode,autoWidth]);// `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.
// `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.
y$3(function(){if(autoFocus){displayRef.current.focus();}},[autoFocus]);y$3(function(){var label=ownerDocument(displayRef.current).getElementById(labelId);if(label){var handler=function handler(){if(getSelection().isCollapsed){displayRef.current.focus();}};label.addEventListener('click',handler);return function(){label.removeEventListener('click',handler);};}return undefined;},[labelId]);var update=function update(open,event){if(open){if(onOpen){onOpen(event);}}else if(onClose){onClose(event);}if(!isOpenControlled){setMenuMinWidthState(autoWidth?null:displayNode.clientWidth);setOpenState(open);}};var handleMouseDown=function handleMouseDown(event){// Ignore everything but left-click
if(event.button!==0){return;}// Hijack the default focus behavior.
event.preventDefault();displayRef.current.focus();update(true,event);};var handleClose=function handleClose(event){update(false,event);};var childrenArray=k$5.toArray(children);// Support autofill.
var handleChange=function handleChange(event){var index=childrenArray.map(function(child){return child.props.value;}).indexOf(event.target.value);if(index===-1){return;}var child=childrenArray[index];setValueState(child.props.value);if(onChange){onChange(event,child);}};var handleItemClick=function handleItemClick(child){return function(event){var newValue;// We use the tabindex attribute to signal the available options.
if(!event.currentTarget.hasAttribute('tabindex')){return;}if(multiple){newValue=Array.isArray(value)?value.slice():[];var itemIndex=value.indexOf(child.props.value);if(itemIndex===-1){newValue.push(child.props.value);}else{newValue.splice(itemIndex,1);}}else{newValue=child.props.value;}if(child.props.onClick){child.props.onClick(event);}if(value!==newValue){setValueState(newValue);if(onChange){// Redefine target to allow name and value to be read.
// This allows seamless integration with the most popular form libraries.
// https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492
// Clone the event to not override `target` of the original event.
var nativeEvent=event.nativeEvent||event;var clonedEvent=new nativeEvent.constructor(nativeEvent.type,nativeEvent);Object.defineProperty(clonedEvent,'target',{writable:true,value:{value:newValue,name:name}});onChange(clonedEvent,child);}}if(!multiple){update(false,event);}};};var handleKeyDown=function handleKeyDown(event){if(!readOnly){var validKeys=[' ','ArrowUp','ArrowDown',// The native select doesn't respond to enter on MacOS, but it's recommended by
// https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html
'Enter'];if(validKeys.indexOf(event.key)!==-1){event.preventDefault();update(true,event);}}};var open=displayNode!==null&&openState;var handleBlur=function handleBlur(event){// if open event.stopImmediatePropagation
if(!open&&onBlur){// Preact support, target is read only property on a native event.
Object.defineProperty(event,'target',{writable:true,value:{value:value,name:name}});onBlur(event);}};delete other['aria-invalid'];var display;var displaySingle;var displayMultiple=[];var computeDisplay=false;if(isFilled({value:value})||displayEmpty){if(renderValue){display=renderValue(value);}else{computeDisplay=true;}}var items=childrenArray.map(function(child){if(!/*#__PURE__*/en$1(child)){return null;}var selected;if(multiple){if(!Array.isArray(value)){throw new Error(formatMuiErrorMessage(2));}selected=value.some(function(v){return areEqualValues(v,child.props.value);});if(selected&&computeDisplay){displayMultiple.push(child.props.children);}}else{selected=areEqualValues(value,child.props.value);if(selected&&computeDisplay){displaySingle=child.props.children;}}return/*#__PURE__*/rn$1(child,{'aria-selected':selected?'true':'false',onClick:handleItemClick(child),onKeyUp:function onKeyUp(event){if(event.key===' '){// otherwise our MenuItems dispatches a click event
// it's not behavior of the native <option> and causes
// the select to close immediately since we open on space keydown
event.preventDefault();}if(child.props.onKeyUp){child.props.onKeyUp(event);}},role:'option',selected:selected,value:undefined,// The value is most likely not a valid HTML attribute.
'data-value':child.props.value// Instead, we provide it as a data attribute.
});});if(computeDisplay){if(multiple){if(displayMultiple.length===0){display=null;}else{display=displayMultiple.reduce(function(output,child,index){output.push(child);if(index<displayMultiple.length-1){output.push(', ');}return output;},[]);}}else{display=displaySingle;}}// Avoid performing a layout computation in the render method.
var menuMinWidth=menuMinWidthState;if(!autoWidth&&isOpenControlled&&displayNode){menuMinWidth=displayNode.clientWidth;}var tabIndex;if(typeof tabIndexProp!=='undefined'){tabIndex=tabIndexProp;}else{tabIndex=disabled?null:0;}var buttonId=SelectDisplayProps.id||(name?"mui-component-select-".concat(name):undefined);var ownerState=_extends$5({},props,{variant:variant,value:value,open:open});var classes=useUtilityClasses$5(ownerState);return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx(SelectSelect,_extends$5({ref:handleDisplayRef,tabIndex:tabIndex,role:"button","aria-disabled":disabled?'true':undefined,"aria-expanded":open?'true':'false',"aria-haspopup":"listbox","aria-label":ariaLabel,"aria-labelledby":[labelId,buttonId].filter(Boolean).join(' ')||undefined,"aria-describedby":ariaDescribedby,onKeyDown:handleKeyDown,onMouseDown:disabled||readOnly?null:handleMouseDown,onBlur:handleBlur,onFocus:onFocus},SelectDisplayProps,{ownerState:ownerState,className:clsx(classes.select,className,SelectDisplayProps.className)// The id is required for proper a11y
,id:buttonId,children:isEmpty$1(display)?// notranslate needed while Google Translate will not fix zero-width space issue
_span||(_span=/*#__PURE__*/jsx("span",{className:"notranslate",children:"\u200B"})):display})),/*#__PURE__*/jsx(SelectNativeInput,_extends$5({value:Array.isArray(value)?value.join(','):value,name:name,ref:inputRef,"aria-hidden":true,onChange:handleChange,tabIndex:-1,disabled:disabled,className:classes.nativeInput,autoFocus:autoFocus,ownerState:ownerState},other)),/*#__PURE__*/jsx(SelectIcon,{as:IconComponent,className:classes.icon,ownerState:ownerState}),/*#__PURE__*/jsx(Menu$2,_extends$5({id:"menu-".concat(name||''),anchorEl:displayNode,open:open,onClose:handleClose,anchorOrigin:{vertical:'bottom',horizontal:'center'},transformOrigin:{vertical:'top',horizontal:'center'}},MenuProps,{MenuListProps:_extends$5({'aria-labelledby':labelId,role:'listbox',disableListWrap:true},MenuProps.MenuListProps),PaperProps:_extends$5({},MenuProps.PaperProps,{style:_extends$5({minWidth:menuMinWidth},MenuProps.PaperProps!=null?MenuProps.PaperProps.style:null)}),children:items}))]});});var SelectInput$1=SelectInput;var _Input,_FilledInput;var _excluded$7=["autoWidth","children","classes","className","defaultOpen","displayEmpty","IconComponent","id","input","inputProps","label","labelId","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant"];var useUtilityClasses$4=function useUtilityClasses$4(ownerState){var classes=ownerState.classes;return classes;};var Select=/*#__PURE__*/x$5(function Select(inProps,ref){var props=useThemeProps({name:'MuiSelect',props:inProps});var _props$autoWidth=props.autoWidth,autoWidth=_props$autoWidth===void 0?false:_props$autoWidth,children=props.children,_props$classes3=props.classes,classesProp=_props$classes3===void 0?{}:_props$classes3,className=props.className,_props$defaultOpen=props.defaultOpen,defaultOpen=_props$defaultOpen===void 0?false:_props$defaultOpen,_props$displayEmpty=props.displayEmpty,displayEmpty=_props$displayEmpty===void 0?false:_props$displayEmpty,_props$IconComponent=props.IconComponent,IconComponent=_props$IconComponent===void 0?ArrowDropDownIcon:_props$IconComponent,id=props.id,input=props.input,inputProps=props.inputProps,label=props.label,labelId=props.labelId,MenuProps=props.MenuProps,_props$multiple=props.multiple,multiple=_props$multiple===void 0?false:_props$multiple,_props$native=props.native,native=_props$native===void 0?false:_props$native,onClose=props.onClose,onOpen=props.onOpen,open=props.open,renderValue=props.renderValue,SelectDisplayProps=props.SelectDisplayProps,_props$variant11=props.variant,variantProps=_props$variant11===void 0?'outlined':_props$variant11,other=_objectWithoutPropertiesLoose$1(props,_excluded$7);var inputComponent=native?NativeSelectInput$1:SelectInput$1;var muiFormControl=useFormControl();var fcs=formControlState({props:props,muiFormControl:muiFormControl,states:['variant']});var variant=fcs.variant||variantProps;var InputComponent=input||{standard:_Input||(_Input=/*#__PURE__*/jsx(Input$1,{})),outlined:/*#__PURE__*/jsx(OutlinedInput$1,{label:label}),filled:_FilledInput||(_FilledInput=/*#__PURE__*/jsx(FilledInput$1,{}))}[variant];var ownerState=_extends$5({},props,{classes:classesProp});var classes=useUtilityClasses$4(ownerState);var inputComponentRef=useForkRef(ref,InputComponent.ref);return/*#__PURE__*/rn$1(InputComponent,_extends$5({// Most of the logic is implemented in `SelectInput`.
// The `Select` component is a simple API wrapper to expose something better to play with.
inputComponent:inputComponent,inputProps:_extends$5({children:children,IconComponent:IconComponent,variant:variant,type:undefined,// We render a select. We can ignore the type provided by the `Input`.
multiple:multiple},native?{id:id}:{autoWidth:autoWidth,defaultOpen:defaultOpen,displayEmpty:displayEmpty,labelId:labelId,MenuProps:MenuProps,onClose:onClose,onOpen:onOpen,open:open,renderValue:renderValue,SelectDisplayProps:_extends$5({id:id},SelectDisplayProps)},inputProps,{classes:inputProps?deepmerge(classes,inputProps.classes):classes},input?input.props.inputProps:{})},multiple&&native&&variant==='outlined'?{notched:true}:{},{ref:inputComponentRef,className:clsx(InputComponent.props.className,className)},other));});Select.muiName='Select';var Select$1=Select;function getSkeletonUtilityClass(slot){return generateUtilityClass('MuiSkeleton',slot);}generateUtilityClasses('MuiSkeleton',['root','text','rectangular','circular','pulse','wave','withChildren','fitContent','heightAuto']);var _excluded$6=["animation","className","component","height","style","variant","width"];var _$2=function _$2(t){return t;},_t,_t2,_t3,_t4;var useUtilityClasses$3=function useUtilityClasses$3(ownerState){var classes=ownerState.classes,variant=ownerState.variant,animation=ownerState.animation,hasChildren=ownerState.hasChildren,width=ownerState.width,height=ownerState.height;var slots={root:['root',variant,animation,hasChildren&&'withChildren',hasChildren&&!width&&'fitContent',hasChildren&&!height&&'heightAuto']};return composeClasses(slots,getSkeletonUtilityClass,classes);};var pulseKeyframe=keyframes(_t||(_t=_$2(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n"])))));var waveKeyframe=keyframes(_t2||(_t2=_$2(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n"])))));var SkeletonRoot=styled$2('span',{name:'MuiSkeleton',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,styles[ownerState.variant],ownerState.animation!==false&&styles[ownerState.animation],ownerState.hasChildren&&styles.withChildren,ownerState.hasChildren&&!ownerState.width&&styles.fitContent,ownerState.hasChildren&&!ownerState.height&&styles.heightAuto];}})(function(_ref88){var theme=_ref88.theme,ownerState=_ref88.ownerState;var radiusUnit=getUnit(theme.shape.borderRadius)||'px';var radiusValue=toUnitless(theme.shape.borderRadius);return _extends$5({display:'block',// Create a "on paper" color with sufficient contrast retaining the color
backgroundColor:alpha(theme.palette.text.primary,theme.palette.mode==='light'?0.11:0.13),height:'1.2em'},ownerState.variant==='text'&&{marginTop:0,marginBottom:0,height:'auto',transformOrigin:'0 55%',transform:'scale(1, 0.60)',borderRadius:"".concat(radiusValue).concat(radiusUnit,"/").concat(Math.round(radiusValue/0.6*10)/10).concat(radiusUnit),'&:empty:before':{content:'"\\00a0"'}},ownerState.variant==='circular'&&{borderRadius:'50%'},ownerState.hasChildren&&{'& > *':{visibility:'hidden'}},ownerState.hasChildren&&!ownerState.width&&{maxWidth:'fit-content'},ownerState.hasChildren&&!ownerState.height&&{height:'auto'});},function(_ref89){var ownerState=_ref89.ownerState;return ownerState.animation==='pulse'&&css$1(_t3||(_t3=_$2(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n      animation: "," 1.5s ease-in-out 0.5s infinite;\n    "])),0)),pulseKeyframe);},function(_ref90){var ownerState=_ref90.ownerState,theme=_ref90.theme;return ownerState.animation==='wave'&&css$1(_t4||(_t4=_$2(_templateObject8||(_templateObject8=_taggedTemplateLiteral(["\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: "," 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ",", transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    "])),0,0)),waveKeyframe,theme.palette.action.hover);});var Skeleton=/*#__PURE__*/x$5(function Skeleton(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiSkeleton'});var _props$animation=props.animation,animation=_props$animation===void 0?'pulse':_props$animation,className=props.className,_props$component16=props.component,component=_props$component16===void 0?'span':_props$component16,height=props.height,style=props.style,_props$variant12=props.variant,variant=_props$variant12===void 0?'text':_props$variant12,width=props.width,other=_objectWithoutPropertiesLoose$1(props,_excluded$6);var ownerState=_extends$5({},props,{animation:animation,component:component,variant:variant,hasChildren:Boolean(other.children)});var classes=useUtilityClasses$3(ownerState);return/*#__PURE__*/jsx(SkeletonRoot,_extends$5({as:component,ref:ref,className:clsx(classes.root,className),ownerState:ownerState},other,{style:_extends$5({width:width,height:height},style)}));});var MUISkeleton=exports('M',Skeleton);var _excluded$5=["anchor","classes","className","width","style"];var SwipeAreaRoot=styled$2('div')(function(_ref91){var theme=_ref91.theme,ownerState=_ref91.ownerState;return _extends$5({position:'fixed',top:0,left:0,bottom:0,zIndex:theme.zIndex.drawer-1},ownerState.anchor==='left'&&{right:'auto'},ownerState.anchor==='right'&&{left:'auto',right:0},ownerState.anchor==='top'&&{bottom:'auto',right:0},ownerState.anchor==='bottom'&&{top:'auto',bottom:0,right:0});});/**
       * @ignore - internal component.
       */var SwipeArea=/*#__PURE__*/x$5(function SwipeArea(props,ref){var anchor=props.anchor,_props$classes4=props.classes,classes=_props$classes4===void 0?{}:_props$classes4,className=props.className,width=props.width,style=props.style,other=_objectWithoutPropertiesLoose$1(props,_excluded$5);var ownerState=props;return/*#__PURE__*/jsx(SwipeAreaRoot,_extends$5({className:clsx('PrivateSwipeArea-root',classes.root,classes["anchor".concat(capitalize(anchor))],className),ref:ref,style:_extends$5(_defineProperty({},isHorizontal(anchor)?'width':'height',width),style),ownerState:ownerState},other));});var SwipeArea$1=SwipeArea;var _excluded$4=["BackdropProps"],_excluded2=["anchor","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","onClose","onOpen","open","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant"];var UNCERTAINTY_THRESHOLD=3;// px
// This is the part of the drawer displayed on touch start.
var DRAG_STARTED_SIGNAL=20;// px
// We can only have one instance at the time claiming ownership for handling the swipe.
// Otherwise, the UX would be confusing.
// That's why we use a singleton here.
var claimedSwipeInstance=null;// Exported for test purposes.
function calculateCurrentX(anchor,touches,doc){return anchor==='right'?doc.body.offsetWidth-touches[0].pageX:touches[0].pageX;}function calculateCurrentY(anchor,touches,containerWindow){return anchor==='bottom'?containerWindow.innerHeight-touches[0].clientY:touches[0].clientY;}function getMaxTranslate(horizontalSwipe,paperInstance){return horizontalSwipe?paperInstance.clientWidth:paperInstance.clientHeight;}function getTranslate(currentTranslate,startLocation,open,maxTranslate){return Math.min(Math.max(open?startLocation-currentTranslate:maxTranslate+startLocation-currentTranslate,0),maxTranslate);}/**
       * @param {Element | null} element
       * @param {Element} rootNode
       */function getDomTreeShapes(element,rootNode){// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129
var domTreeShapes=[];while(element&&element!==rootNode.parentElement){var _style=ownerWindow(rootNode).getComputedStyle(element);if(// Ignore the scroll children if the element is absolute positioned.
_style.getPropertyValue('position')==='absolute'||// Ignore the scroll children if the element has an overflowX hidden
_style.getPropertyValue('overflow-x')==='hidden');else if(element.clientWidth>0&&element.scrollWidth>element.clientWidth||element.clientHeight>0&&element.scrollHeight>element.clientHeight){// Ignore the nodes that have no width.
// Keep elements with a scroll
domTreeShapes.push(element);}element=element.parentElement;}return domTreeShapes;}/**
       * @param {object} param0
       * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes
       */function computeHasNativeHandler(_ref92){var domTreeShapes=_ref92.domTreeShapes,start=_ref92.start,current=_ref92.current,anchor=_ref92.anchor;// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175
var axisProperties={scrollPosition:{x:'scrollLeft',y:'scrollTop'},scrollLength:{x:'scrollWidth',y:'scrollHeight'},clientLength:{x:'clientWidth',y:'clientHeight'}};return domTreeShapes.some(function(shape){// Determine if we are going backward or forward.
var goingForward=current>=start;if(anchor==='top'||anchor==='left'){goingForward=!goingForward;}var axis=anchor==='left'||anchor==='right'?'x':'y';var scrollPosition=Math.round(shape[axisProperties.scrollPosition[axis]]);var areNotAtStart=scrollPosition>0;var areNotAtEnd=scrollPosition+shape[axisProperties.clientLength[axis]]<shape[axisProperties.scrollLength[axis]];if(goingForward&&areNotAtEnd||!goingForward&&areNotAtStart){return true;}return false;});}var iOS=typeof navigator!=='undefined'&&/iPad|iPhone|iPod/.test(navigator.userAgent);var transitionDurationDefault={enter:duration$1.enteringScreen,exit:duration$1.leavingScreen};var SwipeableDrawer=/*#__PURE__*/x$5(function SwipeableDrawer(inProps,ref){var props=useThemeProps$1({name:'MuiSwipeableDrawer',props:inProps});var theme=useTheme();var _props$anchor2=props.anchor,anchor=_props$anchor2===void 0?'left':_props$anchor2,_props$disableBackdro=props.disableBackdropTransition,disableBackdropTransition=_props$disableBackdro===void 0?false:_props$disableBackdro,_props$disableDiscove=props.disableDiscovery,disableDiscovery=_props$disableDiscove===void 0?false:_props$disableDiscove,_props$disableSwipeTo=props.disableSwipeToOpen,disableSwipeToOpen=_props$disableSwipeTo===void 0?iOS:_props$disableSwipeTo,hideBackdrop=props.hideBackdrop,_props$hysteresis=props.hysteresis,hysteresis=_props$hysteresis===void 0?0.52:_props$hysteresis,_props$minFlingVeloci=props.minFlingVelocity,minFlingVelocity=_props$minFlingVeloci===void 0?450:_props$minFlingVeloci,_props$ModalProps2=props.ModalProps;_props$ModalProps2=_props$ModalProps2===void 0?{}:_props$ModalProps2;var BackdropProps=_props$ModalProps2.BackdropProps,onClose=props.onClose,onOpen=props.onOpen,open=props.open,_props$PaperProps4=props.PaperProps,PaperProps=_props$PaperProps4===void 0?{}:_props$PaperProps4,SwipeAreaProps=props.SwipeAreaProps,_props$swipeAreaWidth=props.swipeAreaWidth,swipeAreaWidth=_props$swipeAreaWidth===void 0?20:_props$swipeAreaWidth,_props$transitionDura4=props.transitionDuration,transitionDuration=_props$transitionDura4===void 0?transitionDurationDefault:_props$transitionDura4,_props$variant13=props.variant,variant=_props$variant13===void 0?'temporary':_props$variant13,ModalPropsProp=_objectWithoutPropertiesLoose$1(props.ModalProps,_excluded$4),other=_objectWithoutPropertiesLoose$1(props,_excluded2);var _l$35=l$4(false),_l$36=_slicedToArray(_l$35,2),maybeSwiping=_l$36[0],setMaybeSwiping=_l$36[1];var swipeInstance=s$1({isSwiping:null});var swipeAreaRef=s$1();var backdropRef=s$1();var paperRef=s$1();var touchDetected=s$1(false);// Ref for transition duration based on / to match swipe speed
var calculatedDurationRef=s$1();// Use a ref so the open value used is always up to date inside useCallback.
useEnhancedEffect$1(function(){calculatedDurationRef.current=null;},[open]);var setPosition=F$5(function(translate){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$mode=options.mode,mode=_options$mode===void 0?null:_options$mode,_options$changeTransi=options.changeTransition,changeTransition=_options$changeTransi===void 0?true:_options$changeTransi;var anchorRtl=getAnchor(theme,anchor);var rtlTranslateMultiplier=['right','bottom'].indexOf(anchorRtl)!==-1?1:-1;var horizontalSwipe=isHorizontal(anchor);var transform=horizontalSwipe?"translate(".concat(rtlTranslateMultiplier*translate,"px, 0)"):"translate(0, ".concat(rtlTranslateMultiplier*translate,"px)");var drawerStyle=paperRef.current.style;drawerStyle.webkitTransform=transform;drawerStyle.transform=transform;var transition='';if(mode){transition=theme.transitions.create('all',getTransitionProps({easing:undefined,style:undefined,timeout:transitionDuration},{mode:mode}));}if(changeTransition){drawerStyle.webkitTransition=transition;drawerStyle.transition=transition;}if(!disableBackdropTransition&&!hideBackdrop){var backdropStyle=backdropRef.current.style;backdropStyle.opacity=1-translate/getMaxTranslate(horizontalSwipe,paperRef.current);if(changeTransition){backdropStyle.webkitTransition=transition;backdropStyle.transition=transition;}}},[anchor,disableBackdropTransition,hideBackdrop,theme,transitionDuration]);var handleBodyTouchEnd=useEventCallback(function(nativeEvent){if(!touchDetected.current){return;}claimedSwipeInstance=null;touchDetected.current=false;setMaybeSwiping(false);// The swipe wasn't started.
if(!swipeInstance.current.isSwiping){swipeInstance.current.isSwiping=null;return;}swipeInstance.current.isSwiping=null;var anchorRtl=getAnchor(theme,anchor);var horizontal=isHorizontal(anchor);var current;if(horizontal){current=calculateCurrentX(anchorRtl,nativeEvent.changedTouches,ownerDocument(nativeEvent.currentTarget));}else{current=calculateCurrentY(anchorRtl,nativeEvent.changedTouches,ownerWindow(nativeEvent.currentTarget));}var startLocation=horizontal?swipeInstance.current.startX:swipeInstance.current.startY;var maxTranslate=getMaxTranslate(horizontal,paperRef.current);var currentTranslate=getTranslate(current,startLocation,open,maxTranslate);var translateRatio=currentTranslate/maxTranslate;if(Math.abs(swipeInstance.current.velocity)>minFlingVelocity){// Calculate transition duration to match swipe speed
calculatedDurationRef.current=Math.abs((maxTranslate-currentTranslate)/swipeInstance.current.velocity)*1000;}if(open){if(swipeInstance.current.velocity>minFlingVelocity||translateRatio>hysteresis){onClose();}else{// Reset the position, the swipe was aborted.
setPosition(0,{mode:'exit'});}return;}if(swipeInstance.current.velocity<-minFlingVelocity||1-translateRatio>hysteresis){onOpen();}else{// Reset the position, the swipe was aborted.
setPosition(getMaxTranslate(horizontal,paperRef.current),{mode:'enter'});}});var handleBodyTouchMove=useEventCallback(function(nativeEvent){// the ref may be null when a parent component updates while swiping
if(!paperRef.current||!touchDetected.current){return;}// We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer
if(claimedSwipeInstance!==null&&claimedSwipeInstance!==swipeInstance.current){return;}var anchorRtl=getAnchor(theme,anchor);var horizontalSwipe=isHorizontal(anchor);var currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));var currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(open&&paperRef.current.contains(nativeEvent.target)&&claimedSwipeInstance===null){var domTreeShapes=getDomTreeShapes(nativeEvent.target,paperRef.current);var hasNativeHandler=computeHasNativeHandler({domTreeShapes:domTreeShapes,start:horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY,current:horizontalSwipe?currentX:currentY,anchor:anchor});if(hasNativeHandler){claimedSwipeInstance=true;return;}claimedSwipeInstance=swipeInstance.current;}// We don't know yet.
if(swipeInstance.current.isSwiping==null){var dx=Math.abs(currentX-swipeInstance.current.startX);var dy=Math.abs(currentY-swipeInstance.current.startY);var definitelySwiping=horizontalSwipe?dx>dy&&dx>UNCERTAINTY_THRESHOLD:dy>dx&&dy>UNCERTAINTY_THRESHOLD;if(definitelySwiping&&nativeEvent.cancelable){nativeEvent.preventDefault();}if(definitelySwiping===true||(horizontalSwipe?dy>UNCERTAINTY_THRESHOLD:dx>UNCERTAINTY_THRESHOLD)){swipeInstance.current.isSwiping=definitelySwiping;if(!definitelySwiping){handleBodyTouchEnd(nativeEvent);return;}// Shift the starting point.
swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;// Compensate for the part of the drawer displayed on touch start.
if(!disableDiscovery&&!open){if(horizontalSwipe){swipeInstance.current.startX-=DRAG_STARTED_SIGNAL;}else{swipeInstance.current.startY-=DRAG_STARTED_SIGNAL;}}}}if(!swipeInstance.current.isSwiping){return;}var maxTranslate=getMaxTranslate(horizontalSwipe,paperRef.current);var startLocation=horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY;if(open&&!swipeInstance.current.paperHit){startLocation=Math.min(startLocation,maxTranslate);}var translate=getTranslate(horizontalSwipe?currentX:currentY,startLocation,open,maxTranslate);if(open){if(!swipeInstance.current.paperHit){var paperHit=horizontalSwipe?currentX<maxTranslate:currentY<maxTranslate;if(paperHit){swipeInstance.current.paperHit=true;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}else{return;}}else if(translate===0){swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}}if(swipeInstance.current.lastTranslate===null){swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now()+1;}var velocity=(translate-swipeInstance.current.lastTranslate)/(performance.now()-swipeInstance.current.lastTime)*1e3;// Low Pass filter.
swipeInstance.current.velocity=swipeInstance.current.velocity*0.4+velocity*0.6;swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now();// We are swiping, let's prevent the scroll event on iOS.
if(nativeEvent.cancelable){nativeEvent.preventDefault();}setPosition(translate);});var handleBodyTouchStart=useEventCallback(function(nativeEvent){// We are not supposed to handle this touch move.
// Example of use case: ignore the event if there is a Slider.
if(nativeEvent.defaultPrevented){return;}// We can only have one node at the time claiming ownership for handling the swipe.
if(nativeEvent.defaultMuiPrevented){return;}// At least one element clogs the drawer interaction zone.
if(open&&(hideBackdrop||!backdropRef.current.contains(nativeEvent.target))&&!paperRef.current.contains(nativeEvent.target)){return;}var anchorRtl=getAnchor(theme,anchor);var horizontalSwipe=isHorizontal(anchor);var currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));var currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(!open){if(disableSwipeToOpen||nativeEvent.target!==swipeAreaRef.current){return;}if(horizontalSwipe){if(currentX>swipeAreaWidth){return;}}else if(currentY>swipeAreaWidth){return;}}nativeEvent.defaultMuiPrevented=true;claimedSwipeInstance=null;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;setMaybeSwiping(true);if(!open&&paperRef.current){// The ref may be null when a parent component updates while swiping.
setPosition(getMaxTranslate(horizontalSwipe,paperRef.current)+(disableDiscovery?15:-DRAG_STARTED_SIGNAL),{changeTransition:false});}swipeInstance.current.velocity=0;swipeInstance.current.lastTime=null;swipeInstance.current.lastTranslate=null;swipeInstance.current.paperHit=false;touchDetected.current=true;});y$3(function(){if(variant==='temporary'){var doc=ownerDocument(paperRef.current);doc.addEventListener('touchstart',handleBodyTouchStart);// A blocking listener prevents Firefox's navbar to auto-hide on scroll.
// It only needs to prevent scrolling on the drawer's content when open.
// When closed, the overlay prevents scrolling.
doc.addEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.addEventListener('touchend',handleBodyTouchEnd);return function(){doc.removeEventListener('touchstart',handleBodyTouchStart);doc.removeEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.removeEventListener('touchend',handleBodyTouchEnd);};}return undefined;},[variant,open,handleBodyTouchStart,handleBodyTouchMove,handleBodyTouchEnd]);y$3(function(){return function(){// We need to release the lock.
if(claimedSwipeInstance===swipeInstance.current){claimedSwipeInstance=null;}};},[]);y$3(function(){if(!open){setMaybeSwiping(false);}},[open]);return/*#__PURE__*/jsxs(d$4,{children:[/*#__PURE__*/jsx(Drawer$1,_extends$5({open:variant==='temporary'&&maybeSwiping?true:open,variant:variant,ModalProps:_extends$5({BackdropProps:_extends$5({},BackdropProps,{ref:backdropRef})},ModalPropsProp),hideBackdrop:hideBackdrop,PaperProps:_extends$5({},PaperProps,{style:_extends$5({pointerEvents:variant==='temporary'&&!open?'none':''},PaperProps.style),ref:paperRef}),anchor:anchor,transitionDuration:calculatedDurationRef.current||transitionDuration,onClose:onClose,ref:ref},other)),!disableSwipeToOpen&&variant==='temporary'&&/*#__PURE__*/jsx(NoSsr,{children:/*#__PURE__*/jsx(SwipeArea$1,_extends$5({anchor:anchor,ref:swipeAreaRef,width:swipeAreaWidth},SwipeAreaProps))})]});});var SwipeableDrawer$1=exports('ak',SwipeableDrawer);function getSwitchUtilityClass(slot){return generateUtilityClass('MuiSwitch',slot);}var switchClasses=generateUtilityClasses('MuiSwitch',['root','edgeStart','edgeEnd','switchBase','colorPrimary','colorSecondary','sizeSmall','sizeMedium','checked','disabled','input','thumb','track']);var switchClasses$1=switchClasses;var _excluded$3=["className","color","edge","size","sx"];var useUtilityClasses$2=function useUtilityClasses$2(ownerState){var classes=ownerState.classes,edge=ownerState.edge,size=ownerState.size,color=ownerState.color,checked=ownerState.checked,disabled=ownerState.disabled;var slots={root:['root',edge&&"edge".concat(capitalize(edge)),"size".concat(capitalize(size))],switchBase:['switchBase',"color".concat(capitalize(color)),checked&&'checked',disabled&&'disabled'],thumb:['thumb'],track:['track'],input:['input']};var composedClasses=composeClasses(slots,getSwitchUtilityClass,classes);return _extends$5({},classes,composedClasses);};var SwitchRoot=styled$2('span',{name:'MuiSwitch',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,ownerState.edge&&styles["edge".concat(capitalize(ownerState.edge))],styles["size".concat(capitalize(ownerState.size))]];}})(function(_ref93){var _ref94;var ownerState=_ref93.ownerState;return _extends$5({display:'inline-flex',width:34+12*2,height:14+12*2,overflow:'hidden',padding:12,boxSizing:'border-box',position:'relative',flexShrink:0,zIndex:0,// Reset the stacking context.
verticalAlign:'middle',// For correct alignment with the text.
'@media print':{colorAdjust:'exact'}},ownerState.edge==='start'&&{marginLeft:-8},ownerState.edge==='end'&&{marginRight:-8},ownerState.size==='small'&&(_ref94={width:40,height:24,padding:7},_defineProperty(_ref94,"& .".concat(switchClasses$1.thumb),{width:16,height:16}),_defineProperty(_ref94,"& .".concat(switchClasses$1.switchBase),_defineProperty({padding:4},"&.".concat(switchClasses$1.checked),{transform:'translateX(16px)'})),_ref94));});var SwitchSwitchBase=styled$2(SwitchBase$1,{name:'MuiSwitch',slot:'SwitchBase',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.switchBase,_defineProperty({},"& .".concat(switchClasses$1.input),styles.input),ownerState.color!=='default'&&styles["color".concat(capitalize(ownerState.color))]];}})(function(_ref96){var _ref97;var theme=_ref96.theme;return _ref97={position:'absolute',top:0,left:0,zIndex:1,// Render above the focus ripple.
color:theme.palette.mode==='light'?theme.palette.common.white:theme.palette.grey[300],transition:theme.transitions.create(['left','transform'],{duration:theme.transitions.duration.shortest})},_defineProperty(_ref97,"&.".concat(switchClasses$1.checked),{transform:'translateX(20px)'}),_defineProperty(_ref97,"&.".concat(switchClasses$1.disabled),{color:theme.palette.mode==='light'?theme.palette.grey[100]:theme.palette.grey[600]}),_defineProperty(_ref97,"&.".concat(switchClasses$1.checked," + .").concat(switchClasses$1.track),{opacity:0.5}),_defineProperty(_ref97,"&.".concat(switchClasses$1.disabled," + .").concat(switchClasses$1.track),{opacity:theme.palette.mode==='light'?0.12:0.2}),_defineProperty(_ref97,"& .".concat(switchClasses$1.input),{left:'-100%',width:'300%'}),_ref97;},function(_ref98){var _ref99;var theme=_ref98.theme,ownerState=_ref98.ownerState;return _extends$5({'&:hover':{backgroundColor:alpha(theme.palette.action.active,theme.palette.action.hoverOpacity),// Reset on touch devices, it doesn't add specificity
'@media (hover: none)':{backgroundColor:'transparent'}}},ownerState.color!=='default'&&(_ref99={},_defineProperty(_ref99,"&.".concat(switchClasses$1.checked),_defineProperty({color:theme.palette[ownerState.color].main,'&:hover':{backgroundColor:alpha(theme.palette[ownerState.color].main,theme.palette.action.hoverOpacity),'@media (hover: none)':{backgroundColor:'transparent'}}},"&.".concat(switchClasses$1.disabled),{color:theme.palette.mode==='light'?lighten(theme.palette[ownerState.color].main,0.62):darken(theme.palette[ownerState.color].main,0.55)})),_defineProperty(_ref99,"&.".concat(switchClasses$1.checked," + .").concat(switchClasses$1.track),{backgroundColor:theme.palette[ownerState.color].main}),_ref99));});var SwitchTrack=styled$2('span',{name:'MuiSwitch',slot:'Track',overridesResolver:function overridesResolver(props,styles){return styles.track;}})(function(_ref100){var theme=_ref100.theme;return{height:'100%',width:'100%',borderRadius:14/2,zIndex:-1,transition:theme.transitions.create(['opacity','background-color'],{duration:theme.transitions.duration.shortest}),backgroundColor:theme.palette.mode==='light'?theme.palette.common.black:theme.palette.common.white,opacity:theme.palette.mode==='light'?0.38:0.3};});var SwitchThumb=styled$2('span',{name:'MuiSwitch',slot:'Thumb',overridesResolver:function overridesResolver(props,styles){return styles.thumb;}})(function(_ref101){var theme=_ref101.theme;return{boxShadow:theme.shadows[1],backgroundColor:'currentColor',width:20,height:20,borderRadius:'50%'};});var Switch=/*#__PURE__*/x$5(function Switch(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiSwitch'});var className=props.className,_props$color7=props.color,color=_props$color7===void 0?'primary':_props$color7,_props$edge3=props.edge,edge=_props$edge3===void 0?false:_props$edge3,_props$size5=props.size,size=_props$size5===void 0?'medium':_props$size5,sx=props.sx,other=_objectWithoutPropertiesLoose$1(props,_excluded$3);var ownerState=_extends$5({},props,{color:color,edge:edge,size:size});var classes=useUtilityClasses$2(ownerState);var icon=/*#__PURE__*/jsx(SwitchThumb,{className:classes.thumb,ownerState:ownerState});return/*#__PURE__*/jsxs(SwitchRoot,{className:clsx(classes.root,className),sx:sx,ownerState:ownerState,children:[/*#__PURE__*/jsx(SwitchSwitchBase,_extends$5({type:"checkbox",icon:icon,checkedIcon:icon,ref:ref,ownerState:ownerState},other,{classes:_extends$5({},classes,{root:classes.switchBase})})),/*#__PURE__*/jsx(SwitchTrack,{className:classes.track,ownerState:ownerState})]});});var Switch$1=exports('S',Switch);function getToolbarUtilityClass(slot){return generateUtilityClass('MuiToolbar',slot);}generateUtilityClasses('MuiToolbar',['root','gutters','regular','dense']);var _excluded$2=["className","component","disableGutters","variant"];var useUtilityClasses$1=function useUtilityClasses$1(ownerState){var classes=ownerState.classes,disableGutters=ownerState.disableGutters,variant=ownerState.variant;var slots={root:['root',!disableGutters&&'gutters',variant]};return composeClasses(slots,getToolbarUtilityClass,classes);};var ToolbarRoot=styled$2('div',{name:'MuiToolbar',slot:'Root',overridesResolver:function overridesResolver(props,styles){var ownerState=props.ownerState;return[styles.root,!ownerState.disableGutters&&styles.gutters,styles[ownerState.variant]];}})(function(_ref102){var theme=_ref102.theme,ownerState=_ref102.ownerState;return _extends$5({position:'relative',display:'flex',alignItems:'center'},!ownerState.disableGutters&&_defineProperty({paddingLeft:theme.spacing(2),paddingRight:theme.spacing(2)},theme.breakpoints.up('sm'),{paddingLeft:theme.spacing(3),paddingRight:theme.spacing(3)}),ownerState.variant==='dense'&&{minHeight:48});},function(_ref104){var theme=_ref104.theme,ownerState=_ref104.ownerState;return ownerState.variant==='regular'&&theme.mixins.toolbar;});var Toolbar=/*#__PURE__*/x$5(function Toolbar(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiToolbar'});var className=props.className,_props$component17=props.component,component=_props$component17===void 0?'div':_props$component17,_props$disableGutters3=props.disableGutters,disableGutters=_props$disableGutters3===void 0?false:_props$disableGutters3,_props$variant14=props.variant,variant=_props$variant14===void 0?'regular':_props$variant14,other=_objectWithoutPropertiesLoose$1(props,_excluded$2);var ownerState=_extends$5({},props,{component:component,disableGutters:disableGutters,variant:variant});var classes=useUtilityClasses$1(ownerState);return/*#__PURE__*/jsx(ToolbarRoot,_extends$5({as:component,className:clsx(classes.root,className),ref:ref,ownerState:ownerState},other));});var Toolbar$1=exports('ah',Toolbar);function getTextFieldUtilityClass(slot){return generateUtilityClass('MuiTextField',slot);}generateUtilityClasses('MuiTextField',['root']);var _excluded$1=["autoComplete","autoFocus","children","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","variant"];var variantComponent={standard:Input$1,filled:FilledInput$1,outlined:OutlinedInput$1};var useUtilityClasses=function useUtilityClasses(ownerState){var classes=ownerState.classes;var slots={root:['root']};return composeClasses(slots,getTextFieldUtilityClass,classes);};var TextFieldRoot=styled$2(FormControl$1,{name:'MuiTextField',slot:'Root',overridesResolver:function overridesResolver(props,styles){return styles.root;}})({});/**
       * The `TextField` is a convenience wrapper for the most common cases (80%).
       * It cannot be all things to all people, otherwise the API would grow out of control.
       *
       * ## Advanced Configuration
       *
       * It's important to understand that the text field is a simple abstraction
       * on top of the following components:
       *
       * - [FormControl](/api/form-control/)
       * - [InputLabel](/api/input-label/)
       * - [FilledInput](/api/filled-input/)
       * - [OutlinedInput](/api/outlined-input/)
       * - [Input](/api/input/)
       * - [FormHelperText](/api/form-helper-text/)
       *
       * If you wish to alter the props applied to the `input` element, you can do so as follows:
       *
       * ```jsx
       * const inputProps = {
       *   step: 300,
       * };
       *
       * return <TextField id="time" type="time" inputProps={inputProps} />;
       * ```
       *
       * For advanced cases, please look at the source of TextField by clicking on the
       * "Edit this page" button above. Consider either:
       *
       * - using the upper case props for passing values directly to the components
       * - using the underlying components directly as shown in the demos
       */var TextField=/*#__PURE__*/x$5(function TextField(inProps,ref){var props=useThemeProps({props:inProps,name:'MuiTextField'});var autoComplete=props.autoComplete,_props$autoFocus4=props.autoFocus,autoFocus=_props$autoFocus4===void 0?false:_props$autoFocus4,children=props.children,className=props.className,_props$color8=props.color,color=_props$color8===void 0?'primary':_props$color8,defaultValue=props.defaultValue,_props$disabled5=props.disabled,disabled=_props$disabled5===void 0?false:_props$disabled5,_props$error2=props.error,error=_props$error2===void 0?false:_props$error2,FormHelperTextProps=props.FormHelperTextProps,_props$fullWidth7=props.fullWidth,fullWidth=_props$fullWidth7===void 0?false:_props$fullWidth7,helperText=props.helperText,idOverride=props.id,InputLabelProps=props.InputLabelProps,inputProps=props.inputProps,InputProps=props.InputProps,inputRef=props.inputRef,label=props.label,maxRows=props.maxRows,minRows=props.minRows,_props$multiline5=props.multiline,multiline=_props$multiline5===void 0?false:_props$multiline5,name=props.name,onBlur=props.onBlur,onChange=props.onChange,onFocus=props.onFocus,placeholder=props.placeholder,_props$required2=props.required,required=_props$required2===void 0?false:_props$required2,rows=props.rows,_props$select=props.select,select=_props$select===void 0?false:_props$select,SelectProps=props.SelectProps,type=props.type,value=props.value,_props$variant15=props.variant,variant=_props$variant15===void 0?'outlined':_props$variant15,other=_objectWithoutPropertiesLoose$1(props,_excluded$1);var ownerState=_extends$5({},props,{autoFocus:autoFocus,color:color,disabled:disabled,error:error,fullWidth:fullWidth,multiline:multiline,required:required,select:select,variant:variant});var classes=useUtilityClasses(ownerState);var InputMore={};if(variant==='outlined'){if(InputLabelProps&&typeof InputLabelProps.shrink!=='undefined'){InputMore.notched=InputLabelProps.shrink;}InputMore.label=label;}if(select){// unset defaults from textbox inputs
if(!SelectProps||!SelectProps.native){InputMore.id=undefined;}InputMore['aria-describedby']=undefined;}var id=useId(idOverride);var helperTextId=helperText&&id?"".concat(id,"-helper-text"):undefined;var inputLabelId=label&&id?"".concat(id,"-label"):undefined;var InputComponent=variantComponent[variant];var InputElement=/*#__PURE__*/jsx(InputComponent,_extends$5({"aria-describedby":helperTextId,autoComplete:autoComplete,autoFocus:autoFocus,defaultValue:defaultValue,fullWidth:fullWidth,multiline:multiline,name:name,rows:rows,maxRows:maxRows,minRows:minRows,type:type,value:value,id:id,inputRef:inputRef,onBlur:onBlur,onChange:onChange,onFocus:onFocus,placeholder:placeholder,inputProps:inputProps},InputMore,InputProps));return/*#__PURE__*/jsxs(TextFieldRoot,_extends$5({className:clsx(classes.root,className),disabled:disabled,error:error,fullWidth:fullWidth,ref:ref,required:required,color:color,variant:variant,ownerState:ownerState},other,{children:[label!=null&&label!==''&&/*#__PURE__*/jsx(InputLabel$1,_extends$5({htmlFor:id,id:inputLabelId},InputLabelProps,{children:label})),select?/*#__PURE__*/jsx(Select$1,_extends$5({"aria-describedby":helperTextId,id:id,labelId:inputLabelId,value:value,input:InputElement},SelectProps,{children:children})):InputElement,helperText&&/*#__PURE__*/jsx(FormHelperText$1,_extends$5({id:helperTextId},FormHelperTextProps,{children:helperText}))]}));});var TextField$1=exports('G',TextField);var r$3,B$2=r$3||(r$3={});B$2.Pop="POP";B$2.Push="PUSH";B$2.Replace="REPLACE";var C$1=function C$1(b){return b;};function E$3(b){b.preventDefault();b.returnValue="";}function F$2(){var b=[];return{get length(){return b.length;},push:function push(h){b.push(h);return function(){b=b.filter(function(e){return e!==h;});};},call:function call(h){b.forEach(function(e){return e&&e(h);});}};}function H$2(){return Math.random().toString(36).substr(2,8);}function I$2(b){var h=b.pathname;h=void 0===h?"/":h;var e=b.search;e=void 0===e?"":e;b=b.hash;b=void 0===b?"":b;e&&"?"!==e&&(h+="?"===e.charAt(0)?e:"?"+e);b&&"#"!==b&&(h+="#"===b.charAt(0)?b:"#"+b);return h;}function J$1(b){var h={};if(b){var e=b.indexOf("#");0<=e&&(h.hash=b.substr(e),b=b.substr(0,e));e=b.indexOf("?");0<=e&&(h.search=b.substr(e),b=b.substr(0,e));b&&(h.pathname=b);}return h;}function createHashHistory(b){function h(){var a=J$1(m.location.hash.substr(1)),f=a.pathname,l=a.search;a=a.hash;var k=u.state||{};return[k.idx,C$1({pathname:void 0===f?"/":f,search:void 0===l?"":l,hash:void 0===a?"":a,state:k.usr||null,key:k.key||"default"})];}function e(){if(t)c.call(t),t=null;else{var a=r$3.Pop,f=h(),l=f[0];f=f[1];if(c.length){if(null!=l){var k=q-l;k&&(t={action:a,location:f,retry:function retry(){p(-1*k);}},p(k));}else;}else A(a);}}function x(a){var f=document.querySelector("base"),l="";f&&f.getAttribute("href")&&(f=m.location.href,l=f.indexOf("#"),l=-1===l?f:f.slice(0,l));return l+"#"+("string"===typeof a?a:I$2(a));}function z(a,f){void 0===f&&(f=null);return C$1(_extends$5({pathname:d.pathname,hash:"",search:""},"string"===typeof a?J$1(a):a,{state:f,key:H$2()}));}function A(a){v=a;a=h();q=a[0];d=a[1];g.call({action:v,location:d});}function y(a,f){function l(){y(a,f);}var k=r$3.Push,n=z(a,f);if(!c.length||(c.call({action:k,location:n,retry:l}),!1)){var G=[{usr:n.state,key:n.key,idx:q+1},x(n)];n=G[0];G=G[1];try{u.pushState(n,"",G);}catch(K){m.location.assign(G);}A(k);}}function w(a,f){function l(){w(a,f);}var k=r$3.Replace,n=z(a,f);c.length&&(c.call({action:k,location:n,retry:l}),1)||(n=[{usr:n.state,key:n.key,idx:q},x(n)],u.replaceState(n[0],"",n[1]),A(k));}function p(a){u.go(a);}void 0===b&&(b={});b=b.window;var m=void 0===b?document.defaultView:b,u=m.history,t=null;m.addEventListener("popstate",e);m.addEventListener("hashchange",function(){var a=h()[1];I$2(a)!==I$2(d)&&e();});var v=r$3.Pop;b=h();var q=b[0],d=b[1],g=F$2(),c=F$2();null==q&&(q=0,u.replaceState(_extends$5({},u.state,{idx:q}),""));return{get action(){return v;},get location(){return d;},createHref:x,push:y,replace:w,go:p,back:function back(){p(-1);},forward:function forward(){p(1);},listen:function listen(a){return g.push(a);},block:function block(a){var f=c.push(a);1===c.length&&m.addEventListener("beforeunload",E$3);return function(){f();c.length||m.removeEventListener("beforeunload",E$3);};}};}/**
       * React Router v6.2.1
       *
       * Copyright (c) Remix Software Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE.md file in the root directory of this source tree.
       *
       * @license MIT
       */function invariant(cond,message){if(!cond)throw new Error(message);}// CONTEXT
///////////////////////////////////////////////////////////////////////////////
/**
       * A Navigator is a "location changer"; it's how you get to different locations.
       *
       * Every history instance conforms to the Navigator interface, but the
       * distinction is useful primarily when it comes to the low-level <Router> API
       * where both the location and a navigator must be provided separately in order
       * to avoid "tearing" that may occur in a suspense-enabled app if the action
       * and/or location were to be read directly from the history instance.
       */var NavigationContext=/*#__PURE__*/D$3(null);var LocationContext=/*#__PURE__*/D$3(null);var RouteContext=/*#__PURE__*/D$3({outlet:null,matches:[]});/**
       * Renders the child route's element, if there is one.
       *
       * @see https://reactrouter.com/docs/en/v6/api#outlet
       */function Outlet(props){return useOutlet(props.context);}/**
       * Declares an element that should be rendered at a certain URL path.
       *
       * @see https://reactrouter.com/docs/en/v6/api#route
       */function Route(_props){invariant(false);}/**
       * Provides location context for the rest of the app.
       *
       * Note: You usually won't render a <Router> directly. Instead, you'll render a
       * router that is more specific to your environment such as a <BrowserRouter>
       * in web browsers or a <StaticRouter> for server rendering.
       *
       * @see https://reactrouter.com/docs/en/v6/api#router
       */function Router(_ref3){var _ref3$basename=_ref3.basename,basenameProp=_ref3$basename===void 0?"/":_ref3$basename,_ref3$children=_ref3.children,children=_ref3$children===void 0?null:_ref3$children,locationProp=_ref3.location,_ref3$navigationType=_ref3.navigationType,navigationType=_ref3$navigationType===void 0?r$3.Pop:_ref3$navigationType,navigator=_ref3.navigator,_ref3$static=_ref3.static,staticProp=_ref3$static===void 0?false:_ref3$static;!!useInRouterContext()?invariant(false):void 0;var basename=normalizePathname(basenameProp);var navigationContext=A$5(function(){return{basename:basename,navigator:navigator,static:staticProp};},[basename,navigator,staticProp]);if(typeof locationProp==="string"){locationProp=J$1(locationProp);}var _locationProp=locationProp,_locationProp$pathnam=_locationProp.pathname,pathname=_locationProp$pathnam===void 0?"/":_locationProp$pathnam,_locationProp$search=_locationProp.search,search=_locationProp$search===void 0?"":_locationProp$search,_locationProp$hash=_locationProp.hash,hash=_locationProp$hash===void 0?"":_locationProp$hash,_locationProp$state=_locationProp.state,state=_locationProp$state===void 0?null:_locationProp$state,_locationProp$key=_locationProp.key,key=_locationProp$key===void 0?"default":_locationProp$key;var location=A$5(function(){var trailingPathname=stripBasename(pathname,basename);if(trailingPathname==null){return null;}return{pathname:trailingPathname,search:search,hash:hash,state:state,key:key};},[basename,pathname,search,hash,state,key]);if(location==null){return null;}return/*#__PURE__*/v$6(NavigationContext.Provider,{value:navigationContext},/*#__PURE__*/v$6(LocationContext.Provider,{children:children,value:{location:location,navigationType:navigationType}}));}/**
       * A container for a nested tree of <Route> elements that renders the branch
       * that best matches the current location.
       *
       * @see https://reactrouter.com/docs/en/v6/api#routes
       */function Routes(_ref4){var children=_ref4.children,location=_ref4.location;return useRoutes(createRoutesFromChildren(children),location);}///////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////
/**
       * Returns the full href for the given "to" value. This is useful for building
       * custom links that are also accessible and preserve right-click behavior.
       *
       * @see https://reactrouter.com/docs/en/v6/api#usehref
       */function useHref(to){!useInRouterContext()?invariant(false):void 0;var _T$2=T$2(NavigationContext),basename=_T$2.basename,navigator=_T$2.navigator;var _useResolvedPath=useResolvedPath(to),hash=_useResolvedPath.hash,pathname=_useResolvedPath.pathname,search=_useResolvedPath.search;var joinedPathname=pathname;if(basename!=="/"){var toPathname=getToPathname(to);var endsWithSlash=toPathname!=null&&toPathname.endsWith("/");joinedPathname=pathname==="/"?basename+(endsWithSlash?"/":""):joinPaths([basename,pathname]);}return navigator.createHref({pathname:joinedPathname,search:search,hash:hash});}/**
       * Returns true if this component is a descendant of a <Router>.
       *
       * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
       */function useInRouterContext(){return T$2(LocationContext)!=null;}/**
       * Returns the current location object, which represents the current URL in web
       * browsers.
       *
       * Note: If you're using this it may mean you're doing some of your own
       * "routing" in your app, and we'd like to know what your use case is. We may
       * be able to provide something higher-level to better suit your needs.
       *
       * @see https://reactrouter.com/docs/en/v6/api#uselocation
       */function useLocation(){!useInRouterContext()?invariant(false):void 0;return T$2(LocationContext).location;}/**
       * The interface for the navigate() function returned from useNavigate().
       */ /**
       * Returns an imperative method for changing the location. Used by <Link>s, but
       * may also be used by other elements to change the location.
       *
       * @see https://reactrouter.com/docs/en/v6/api#usenavigate
       */function useNavigate(){!useInRouterContext()?invariant(false):void 0;var _T$3=T$2(NavigationContext),basename=_T$3.basename,navigator=_T$3.navigator;var _T$4=T$2(RouteContext),matches=_T$4.matches;var _useLocation=useLocation(),locationPathname=_useLocation.pathname;var routePathnamesJson=JSON.stringify(matches.map(function(match){return match.pathnameBase;}));var activeRef=s$1(false);y$3(function(){activeRef.current=true;});var navigate=F$5(function(to,options){if(options===void 0){options={};}if(!activeRef.current)return;if(typeof to==="number"){navigator.go(to);return;}var path=resolveTo(to,JSON.parse(routePathnamesJson),locationPathname);if(basename!=="/"){path.pathname=joinPaths([basename,path.pathname]);}(!!options.replace?navigator.replace:navigator.push)(path,options.state);},[basename,navigator,routePathnamesJson,locationPathname]);return navigate;}var OutletContext=/*#__PURE__*/D$3(null);/**
       * Returns the element for the child route at this level of the route
       * hierarchy. Used internally by <Outlet> to render child routes.
       *
       * @see https://reactrouter.com/docs/en/v6/api#useoutlet
       */function useOutlet(context){var outlet=T$2(RouteContext).outlet;if(outlet){return/*#__PURE__*/v$6(OutletContext.Provider,{value:context},outlet);}return outlet;}/**
       * Returns an object of key/value pairs of the dynamic params from the current
       * URL that were matched by the route path.
       *
       * @see https://reactrouter.com/docs/en/v6/api#useparams
       */function useParams(){var _T$5=T$2(RouteContext),matches=_T$5.matches;var routeMatch=matches[matches.length-1];return routeMatch?routeMatch.params:{};}/**
       * Resolves the pathname of the given `to` value against the current location.
       *
       * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
       */function useResolvedPath(to){var _T$6=T$2(RouteContext),matches=_T$6.matches;var _useLocation2=useLocation(),locationPathname=_useLocation2.pathname;var routePathnamesJson=JSON.stringify(matches.map(function(match){return match.pathnameBase;}));return A$5(function(){return resolveTo(to,JSON.parse(routePathnamesJson),locationPathname);},[to,routePathnamesJson,locationPathname]);}/**
       * Returns the element of the route that matched the current location, prepared
       * with the correct context to render the remainder of the route tree. Route
       * elements in the tree must render an <Outlet> to render their child route's
       * element.
       *
       * @see https://reactrouter.com/docs/en/v6/api#useroutes
       */function useRoutes(routes,locationArg){!useInRouterContext()?invariant(false):void 0;var _T$7=T$2(RouteContext),parentMatches=_T$7.matches;var routeMatch=parentMatches[parentMatches.length-1];var parentParams=routeMatch?routeMatch.params:{};routeMatch?routeMatch.pathname:"/";var parentPathnameBase=routeMatch?routeMatch.pathnameBase:"/";routeMatch&&routeMatch.route;var locationFromContext=useLocation();var location;if(locationArg){var _parsedLocationArg$pa;var parsedLocationArg=typeof locationArg==="string"?J$1(locationArg):locationArg;!(parentPathnameBase==="/"||((_parsedLocationArg$pa=parsedLocationArg.pathname)==null?void 0:_parsedLocationArg$pa.startsWith(parentPathnameBase)))?invariant(false):void 0;location=parsedLocationArg;}else{location=locationFromContext;}var pathname=location.pathname||"/";var remainingPathname=parentPathnameBase==="/"?pathname:pathname.slice(parentPathnameBase.length)||"/";var matches=matchRoutes(routes,{pathname:remainingPathname});return _renderMatches(matches&&matches.map(function(match){return Object.assign({},match,{params:Object.assign({},parentParams,match.params),pathname:joinPaths([parentPathnameBase,match.pathname]),pathnameBase:match.pathnameBase==="/"?parentPathnameBase:joinPaths([parentPathnameBase,match.pathnameBase])});}),parentMatches);}///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////
/**
       * Creates a route config from a React "children" object, which is usually
       * either a `<Route>` element or an array of them. Used internally by
       * `<Routes>` to create a route config from its children.
       *
       * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
       */function createRoutesFromChildren(children){var routes=[];k$5.forEach(children,function(element){if(!/*#__PURE__*/en$1(element)){// Ignore non-elements. This allows people to more easily inline
// conditionals in their route config.
return;}if(element.type===d$4){// Transparently support React.Fragment and its children.
routes.push.apply(routes,createRoutesFromChildren(element.props.children));return;}!(element.type===Route)?invariant(false):void 0;var route={caseSensitive:element.props.caseSensitive,element:element.props.element,index:element.props.index,path:element.props.path};if(element.props.children){route.children=createRoutesFromChildren(element.props.children);}routes.push(route);});return routes;}/**
       * A RouteMatch contains info about how a route matched a URL.
       */ /**
       * Matches the given routes to a location and returns the match data.
       *
       * @see https://reactrouter.com/docs/en/v6/api#matchroutes
       */function matchRoutes(routes,locationArg,basename){if(basename===void 0){basename="/";}var location=typeof locationArg==="string"?J$1(locationArg):locationArg;var pathname=stripBasename(location.pathname||"/",basename);if(pathname==null){return null;}var branches=flattenRoutes(routes);rankRouteBranches(branches);var matches=null;for(var _i6=0;matches==null&&_i6<branches.length;++_i6){matches=matchRouteBranch(branches[_i6],pathname);}return matches;}function flattenRoutes(routes,branches,parentsMeta,parentPath){if(branches===void 0){branches=[];}if(parentsMeta===void 0){parentsMeta=[];}if(parentPath===void 0){parentPath="";}routes.forEach(function(route,index){var meta={relativePath:route.path||"",caseSensitive:route.caseSensitive===true,childrenIndex:index,route:route};if(meta.relativePath.startsWith("/")){!meta.relativePath.startsWith(parentPath)?invariant(false):void 0;meta.relativePath=meta.relativePath.slice(parentPath.length);}var path=joinPaths([parentPath,meta.relativePath]);var routesMeta=parentsMeta.concat(meta);// Add the children before adding this route to the array so we traverse the
// route tree depth-first and child routes appear before their parents in
// the "flattened" version.
if(route.children&&route.children.length>0){!(route.index!==true)?invariant(false):void 0;flattenRoutes(route.children,branches,routesMeta,path);}// Routes without a path shouldn't ever match by themselves unless they are
// index routes, so don't add them to the list of possible branches.
if(route.path==null&&!route.index){return;}branches.push({path:path,score:computeScore(path,route.index),routesMeta:routesMeta});});return branches;}function rankRouteBranches(branches){branches.sort(function(a,b){return a.score!==b.score?b.score-a.score// Higher score first
:compareIndexes(a.routesMeta.map(function(meta){return meta.childrenIndex;}),b.routesMeta.map(function(meta){return meta.childrenIndex;}));});}var paramRe=/^:\w+$/;var dynamicSegmentValue=3;var indexRouteValue=2;var emptySegmentValue=1;var staticSegmentValue=10;var splatPenalty=-2;var isSplat=function isSplat(s){return s==="*";};function computeScore(path,index){var segments=path.split("/");var initialScore=segments.length;if(segments.some(isSplat)){initialScore+=splatPenalty;}if(index){initialScore+=indexRouteValue;}return segments.filter(function(s){return!isSplat(s);}).reduce(function(score,segment){return score+(paramRe.test(segment)?dynamicSegmentValue:segment===""?emptySegmentValue:staticSegmentValue);},initialScore);}function compareIndexes(a,b){var siblings=a.length===b.length&&a.slice(0,-1).every(function(n,i){return n===b[i];});return siblings?// If two routes are siblings, we should try to match the earlier sibling
// first. This allows people to have fine-grained control over the matching
// behavior by simply putting routes with identical paths in the order they
// want them tried.
a[a.length-1]-b[b.length-1]:// Otherwise, it doesn't really make sense to rank non-siblings by index,
// so they sort equally.
0;}function matchRouteBranch(branch,pathname){var routesMeta=branch.routesMeta;var matchedParams={};var matchedPathname="/";var matches=[];for(var _i7=0;_i7<routesMeta.length;++_i7){var meta=routesMeta[_i7];var _end=_i7===routesMeta.length-1;var remainingPathname=matchedPathname==="/"?pathname:pathname.slice(matchedPathname.length)||"/";var _match=matchPath({path:meta.relativePath,caseSensitive:meta.caseSensitive,end:_end},remainingPathname);if(!_match)return null;Object.assign(matchedParams,_match.params);var route=meta.route;matches.push({params:matchedParams,pathname:joinPaths([matchedPathname,_match.pathname]),pathnameBase:joinPaths([matchedPathname,_match.pathnameBase]),route:route});if(_match.pathnameBase!=="/"){matchedPathname=joinPaths([matchedPathname,_match.pathnameBase]);}}return matches;}function _renderMatches(matches,parentMatches){if(parentMatches===void 0){parentMatches=[];}if(matches==null)return null;return matches.reduceRight(function(outlet,match,index){return/*#__PURE__*/v$6(RouteContext.Provider,{children:match.route.element!==undefined?match.route.element:/*#__PURE__*/v$6(Outlet,null),value:{outlet:outlet,matches:parentMatches.concat(matches.slice(0,index+1))}});},null);}/**
       * A PathPattern is used to match on some portion of a URL pathname.
       */ /**
       * Performs pattern matching on a URL pathname and returns information about
       * the match.
       *
       * @see https://reactrouter.com/docs/en/v6/api#matchpath
       */function matchPath(pattern,pathname){if(typeof pattern==="string"){pattern={path:pattern,caseSensitive:false,end:true};}var _compilePath=compilePath(pattern.path,pattern.caseSensitive,pattern.end),_compilePath2=_slicedToArray(_compilePath,2),matcher=_compilePath2[0],paramNames=_compilePath2[1];var match=pathname.match(matcher);if(!match)return null;var matchedPathname=match[0];var pathnameBase=matchedPathname.replace(/(.)\/+$/,"$1");var captureGroups=match.slice(1);var params=paramNames.reduce(function(memo,paramName,index){// We need to compute the pathnameBase here using the raw splat value
// instead of using params["*"] later because it will be decoded then
if(paramName==="*"){var splatValue=captureGroups[index]||"";pathnameBase=matchedPathname.slice(0,matchedPathname.length-splatValue.length).replace(/(.)\/+$/,"$1");}memo[paramName]=safelyDecodeURIComponent(captureGroups[index]||"");return memo;},{});return{params:params,pathname:matchedPathname,pathnameBase:pathnameBase,pattern:pattern};}function compilePath(path,caseSensitive,end){if(caseSensitive===void 0){caseSensitive=false;}if(end===void 0){end=true;}var paramNames=[];var regexpSource="^"+path.replace(/\/*\*?$/,"")// Ignore trailing / and /*, we'll handle it below
.replace(/^\/*/,"/")// Make sure it has a leading /
.replace(/[\\.*+^$?{}|()[\]]/g,"\\$&")// Escape special regex chars
.replace(/:(\w+)/g,function(_,paramName){paramNames.push(paramName);return"([^\\/]+)";});if(path.endsWith("*")){paramNames.push("*");regexpSource+=path==="*"||path==="/*"?"(.*)$"// Already matched the initial /, just match the rest
:"(?:\\/(.+)|\\/*)$";// Don't include the / in params["*"]
}else{regexpSource+=end?"\\/*$"// When matching to the end, ignore trailing slashes
:// Otherwise, match a word boundary or a proceeding /. The word boundary restricts
// parent routes to matching only their own words and nothing more, e.g. parent
// route "/home" should not match "/home2".
"(?:\\b|\\/|$)";}var matcher=new RegExp(regexpSource,caseSensitive?undefined:"i");return[matcher,paramNames];}function safelyDecodeURIComponent(value,paramName){try{return decodeURIComponent(value);}catch(error){return value;}}/**
       * Returns a resolved path object relative to the given pathname.
       *
       * @see https://reactrouter.com/docs/en/v6/api#resolvepath
       */function resolvePath(to,fromPathname){if(fromPathname===void 0){fromPathname="/";}var _ref105=typeof to==="string"?J$1(to):to,toPathname=_ref105.pathname,_ref105$search=_ref105.search,search=_ref105$search===void 0?"":_ref105$search,_ref105$hash=_ref105.hash,hash=_ref105$hash===void 0?"":_ref105$hash;var pathname=toPathname?toPathname.startsWith("/")?toPathname:resolvePathname(toPathname,fromPathname):fromPathname;return{pathname:pathname,search:normalizeSearch(search),hash:normalizeHash(hash)};}function resolvePathname(relativePath,fromPathname){var segments=fromPathname.replace(/\/+$/,"").split("/");var relativeSegments=relativePath.split("/");relativeSegments.forEach(function(segment){if(segment===".."){// Keep the root "" segment so the pathname starts at /
if(segments.length>1)segments.pop();}else if(segment!=="."){segments.push(segment);}});return segments.length>1?segments.join("/"):"/";}function resolveTo(toArg,routePathnames,locationPathname){var to=typeof toArg==="string"?J$1(toArg):toArg;var toPathname=toArg===""||to.pathname===""?"/":to.pathname;// If a pathname is explicitly provided in `to`, it should be relative to the
// route context. This is explained in `Note on `<Link to>` values` in our
// migration guide from v5 as a means of disambiguation between `to` values
// that begin with `/` and those that do not. However, this is problematic for
// `to` values that do not provide a pathname. `to` can simply be a search or
// hash string, in which case we should assume that the navigation is relative
// to the current location's pathname and *not* the route pathname.
var from;if(toPathname==null){from=locationPathname;}else{var routePathnameIndex=routePathnames.length-1;if(toPathname.startsWith("..")){var _toSegments=toPathname.split("/");// Each leading .. segment means "go up one route" instead of "go up one
// URL segment".  This is a key difference from how <a href> works and a
// major reason we call this a "to" value instead of a "href".
while(_toSegments[0]===".."){_toSegments.shift();routePathnameIndex-=1;}to.pathname=_toSegments.join("/");}// If there are more ".." segments than parent routes, resolve relative to
// the root / URL.
from=routePathnameIndex>=0?routePathnames[routePathnameIndex]:"/";}var path=resolvePath(to,from);// Ensure the pathname has a trailing slash if the original to value had one.
if(toPathname&&toPathname!=="/"&&toPathname.endsWith("/")&&!path.pathname.endsWith("/")){path.pathname+="/";}return path;}function getToPathname(to){// Empty strings should be treated the same as / paths
return to===""||to.pathname===""?"/":typeof to==="string"?J$1(to).pathname:to.pathname;}function stripBasename(pathname,basename){if(basename==="/")return pathname;if(!pathname.toLowerCase().startsWith(basename.toLowerCase())){return null;}var nextChar=pathname.charAt(basename.length);if(nextChar&&nextChar!=="/"){// pathname does not start with basename/
return null;}return pathname.slice(basename.length)||"/";}var joinPaths=function joinPaths(paths){return paths.join("/").replace(/\/\/+/g,"/");};var normalizePathname=function normalizePathname(pathname){return pathname.replace(/\/+$/,"").replace(/^\/*/,"/");};var normalizeSearch=function normalizeSearch(search){return!search||search==="?"?"":search.startsWith("?")?search:"?"+search;};var normalizeHash=function normalizeHash(hash){return!hash||hash==="#"?"":hash.startsWith("#")?hash:"#"+hash;};///////////////////////////////////////////////////////////////////////////////
/**
       * React Router DOM v6.2.1
       *
       * Copyright (c) Remix Software Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE.md file in the root directory of this source tree.
       *
       * @license MIT
       */function _extends$4(){_extends$4=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends$4.apply(this,arguments);}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var _excluded=["onClick","reloadDocument","replace","state","target","to"];/**
       * A `<Router>` for use in web browsers. Stores the location in the hash
       * portion of the URL so it is not sent to the server.
       */function HashRouter(_ref2){var basename=_ref2.basename,children=_ref2.children,window=_ref2.window;var historyRef=s$1();if(historyRef.current==null){historyRef.current=createHashHistory({window:window});}var history=historyRef.current;var _l$37=l$4({action:history.action,location:history.location}),_l$38=_slicedToArray(_l$37,2),state=_l$38[0],setState=_l$38[1];h$6(function(){return history.listen(setState);},[history]);return/*#__PURE__*/v$6(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}function isModifiedEvent(event){return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey);}/**
       * The public API for rendering a history-aware <a>.
       */var Link=exports('ao',/*#__PURE__*/x$5(function LinkWithRef(_ref4,ref){var onClick=_ref4.onClick,reloadDocument=_ref4.reloadDocument,_ref4$replace=_ref4.replace,replace=_ref4$replace===void 0?false:_ref4$replace,state=_ref4.state,target=_ref4.target,to=_ref4.to,rest=_objectWithoutPropertiesLoose(_ref4,_excluded);var href=useHref(to);var internalOnClick=useLinkClickHandler(to,{replace:replace,state:state,target:target});function handleClick(event){if(onClick)onClick(event);if(!event.defaultPrevented&&!reloadDocument){internalOnClick(event);}}return/*#__PURE__*/ (// eslint-disable-next-line jsx-a11y/anchor-has-content
v$6("a",_extends$4({},rest,{href:href,onClick:handleClick,ref:ref,target:target})));}));// HOOKS
////////////////////////////////////////////////////////////////////////////////
/**
       * Handles the click behavior for router `<Link>` components. This is useful if
       * you need to create custom `<Link>` components with the same click behavior we
       * use in our exported `<Link>`.
       */function useLinkClickHandler(to,_temp){var _ref106=_temp===void 0?{}:_temp,target=_ref106.target,replaceProp=_ref106.replace,state=_ref106.state;var navigate=useNavigate();var location=useLocation();var path=useResolvedPath(to);return F$5(function(event){if(event.button===0&&(// Ignore everything but left clicks
!target||target==="_self")&&// Let browser handle "target=_blank" etc.
!isModifiedEvent(event)// Ignore clicks with modifier keys
){event.preventDefault();// If the URL hasn't changed, a regular <a> will do a replace instead of
// a push, so do the same here.
var _replace=!!replaceProp||I$2(location)===I$2(path);navigate(to,{replace:_replace,state:state});}},[location,navigate,path,replaceProp,state,target,to]);}/**
       * A convenient wrapper for reading and writing search parameters via the
       * URLSearchParams interface.
       */function useSearchParams(defaultInit){var defaultSearchParamsRef=s$1(createSearchParams(defaultInit));var location=useLocation();var searchParams=A$5(function(){var searchParams=createSearchParams(location.search);var _iterator=_createForOfIteratorHelper(defaultSearchParamsRef.current.keys()),_step;try{var _loop=function _loop(){var key=_step.value;if(!searchParams.has(key)){defaultSearchParamsRef.current.getAll(key).forEach(function(value){searchParams.append(key,value);});}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}return searchParams;},[location.search]);var navigate=useNavigate();var setSearchParams=F$5(function(nextInit,navigateOptions){navigate("?"+createSearchParams(nextInit),navigateOptions);},[navigate]);return[searchParams,setSearchParams];}/**
       * Creates a URLSearchParams object using the given initializer.
       *
       * This is identical to `new URLSearchParams(init)` except it also
       * supports arrays as values in the object form of the initializer
       * instead of just strings. This is convenient when you need multiple
       * values for a given key, but don't want to use an array initializer.
       *
       * For example, instead of:
       *
       *   let searchParams = new URLSearchParams([
       *     ['sort', 'name'],
       *     ['sort', 'price']
       *   ]);
       *
       * you can do:
       *
       *   let searchParams = createSearchParams({
       *     sort: ['name', 'price']
       *   });
       */function createSearchParams(init){if(init===void 0){init="";}return new URLSearchParams(typeof init==="string"||Array.isArray(init)||init instanceof URLSearchParams?init:Object.keys(init).reduce(function(memo,key){var value=init[key];return memo.concat(Array.isArray(value)?value.map(function(v){return[key,v];}):[[key,value]]);},[]));}var DefaultContext={color:undefined,size:undefined,className:undefined,style:undefined,attr:undefined};var IconContext=t$4.createContext&&t$4.createContext(DefaultContext);var __assign=globalThis&&globalThis.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};var __rest=globalThis&&globalThis.__rest||function(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};function Tree2Element(tree){return tree&&tree.map(function(node,i){return t$4.createElement(node.tag,__assign({key:i},node.attr),Tree2Element(node.child));});}function GenIcon(data){return function(props){return t$4.createElement(IconBase,__assign({attr:__assign({},data.attr)},props),Tree2Element(data.child));};}function IconBase(props){var elem=function elem(conf){var attr=props.attr,size=props.size,title=props.title,svgProps=__rest(props,["attr","size","title"]);var computedSize=size||conf.size||"1em";var className;if(conf.className)className=conf.className;if(props.className)className=(className?className+' ':'')+props.className;return t$4.createElement("svg",__assign({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},conf.attr,attr,svgProps,{className:className,style:__assign(__assign({color:props.color||conf.color},conf.style),props.style),height:computedSize,width:computedSize,xmlns:"http://www.w3.org/2000/svg"}),title&&t$4.createElement("title",null,title),props.children);};return IconContext!==undefined?t$4.createElement(IconContext.Consumer,null,function(conf){return elem(conf);}):elem(DefaultContext);}// THIS FILE IS AUTO GENERATED
function MdDone(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"}}]})(props);}function MdFavoriteBorder(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}}]})(props);}function MdFavorite(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}}]})(props);}function MdHome(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"}}]})(props);}function MdSearch(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}}]})(props);}function MdSettings(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0V0z"}},{"tag":"path","attr":{"d":"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58a.49.49 0 00.12-.61l-1.92-3.32a.488.488 0 00-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54a.484.484 0 00-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58a.49.49 0 00-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"}}]})(props);}function MdForward10(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M18 13c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6v4l5-5-5-5v4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8h-2z"}},{"tag":"path","attr":{"d":"M10.86 15.94v-4.27h-.09L9 12.3v.69l1.01-.31v3.26zM12.25 13.44v.74c0 1.9 1.31 1.82 1.44 1.82.14 0 1.44.09 1.44-1.82v-.74c0-1.9-1.31-1.82-1.44-1.82-.14 0-1.44-.09-1.44 1.82zm2.04-.12v.97c0 .77-.21 1.03-.59 1.03s-.6-.26-.6-1.03v-.97c0-.75.22-1.01.59-1.01.38-.01.6.26.6 1.01z"}}]})(props);}function MdHd(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z"}}]})(props);}function MdPauseCircle(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z"}}]})(props);}function MdPlayCircle(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.5 16.5v-9l7 4.5-7 4.5z"}}]})(props);}function MdReplay10(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M11.99 5V1l-5 5 5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6h-2c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z"}},{"tag":"path","attr":{"d":"M10.89 16h-.85v-3.26l-1.01.31v-.69l1.77-.63h.09V16zM15.17 14.24c0 .32-.03.6-.1.82s-.17.42-.29.57-.28.26-.45.33-.37.1-.59.1-.41-.03-.59-.1-.33-.18-.46-.33-.23-.34-.3-.57-.11-.5-.11-.82v-.74c0-.32.03-.6.1-.82s.17-.42.29-.57.28-.26.45-.33.37-.1.59-.1.41.03.59.1.33.18.46.33.23.34.3.57.11.5.11.82v.74zm-.85-.86c0-.19-.01-.35-.04-.48s-.07-.23-.12-.31-.11-.14-.19-.17-.16-.05-.25-.05-.18.02-.25.05-.14.09-.19.17-.09.18-.12.31-.04.29-.04.48v.97c0 .19.01.35.04.48s.07.24.12.32.11.14.19.17.16.05.25.05.18-.02.25-.05.14-.09.19-.17.09-.19.11-.32.04-.29.04-.48v-.97z"}}]})(props);}function MdSd(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0V0z"}},{"tag":"path","attr":{"d":"M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm-3.5 4.5v-1H7c-.55 0-1-.45-1-1V10c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1H9.5v-.5h-2v1H10c.55 0 1 .45 1 1V14c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-1h1.5v.5h2zm5 0h2v-3h-2v3z"}}]})(props);}function MdSkipNext(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"}}]})(props);}function MdSkipPrevious(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M6 6h2v12H6zm3.5 6l8.5 6V6z"}}]})(props);}function MdSave(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M17 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"}}]})(props);}function MdNightlight(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0V0z"}},{"tag":"path","attr":{"d":"M14 2c1.82 0 3.53.5 5 1.35-2.99 1.73-5 4.95-5 8.65s2.01 6.92 5 8.65A9.973 9.973 0 0114 22C8.48 22 4 17.52 4 12S8.48 2 14 2z"}}]})(props);}function MdWbSunny(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z"}}]})(props);}function MdClose(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}}]})(props);}function MdDoubleArrow(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M15.5 5H11l5 7-5 7h4.5l5-7z"}},{"tag":"path","attr":{"d":"M8.5 5H4l5 7-5 7h4.5l5-7z"}}]})(props);}function MdMenu(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"}},{"tag":"path","attr":{"d":"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"}}]})(props);}function MdOutlineFilterAlt(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24m0 24H0"}},{"tag":"path","attr":{"d":"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39A.998.998 0 0018.95 4H5.04c-.83 0-1.3.95-.79 1.61z"}},{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0V0z"}}]})(props);}function MdOutlineRemoveRedEye(props){return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0V0z"}},{"tag":"path","attr":{"d":"M12 6.5a9.77 9.77 0 018.82 5.5c-1.65 3.37-5.02 5.5-8.82 5.5S4.83 15.37 3.18 12A9.77 9.77 0 0112 6.5m0-2C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zm0 5a2.5 2.5 0 010 5 2.5 2.5 0 010-5m0-2c-2.48 0-4.5 2.02-4.5 4.5s2.02 4.5 4.5 4.5 4.5-2.02 4.5-4.5-2.02-4.5-4.5-4.5z"}}]})(props);}/*! *****************************************************************************
      Copyright (c) Microsoft Corporation.

      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.

      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}var noop$2=function noop$2(){};// Using noop() as the undefined value as undefined can possibly be replaced
// by something else.  Prettier ignore and extra parentheses are necessary here
// to ensure that tsc doesn't remove the __NOINLINE__ comment.
// prettier-ignore
var UNDEFINED=/*#__NOINLINE__*/noop$2();var OBJECT=Object;var isUndefined$1=function isUndefined$1(v){return v===UNDEFINED;};var isFunction$3=function isFunction$3(v){return typeof v=='function';};var mergeObjects=function mergeObjects(a,b){return OBJECT.assign({},a,b);};var STR_UNDEFINED='undefined';// NOTE: Use function to guarantee it's re-evaluated between jsdom and node runtime for tests.
var hasWindow=function hasWindow(){return(typeof window==="undefined"?"undefined":_typeof(window))!=STR_UNDEFINED;};var hasDocument=function hasDocument(){return(typeof document==="undefined"?"undefined":_typeof(document))!=STR_UNDEFINED;};var hasRequestAnimationFrame=function hasRequestAnimationFrame(){return hasWindow()&&_typeof(window['requestAnimationFrame'])!=STR_UNDEFINED;};// use WeakMap to store the object->key mapping
// so the objects can be garbage collected.
// WeakMap uses a hashtable under the hood, so the lookup
// complexity is almost O(1).
var table=new WeakMap();// counter of the key
var counter=0;// A stable hash implementation that supports:
// - Fast and ensures unique hash properties
// - Handles unserializable values
// - Handles object key ordering
// - Generates short results
//
// This is not a serialization function, and the result is not guaranteed to be
// parsible.
var stableHash=function stableHash(arg){var type=_typeof(arg);var constructor=arg&&arg.constructor;var isDate=constructor==Date;var result;var index;if(OBJECT(arg)===arg&&!isDate&&constructor!=RegExp){// Object/function, not null/date/regexp. Use WeakMap to store the id first.
// If it's already hashed, directly return the result.
result=table.get(arg);if(result)return result;// Store the hash first for circular reference detection before entering the
// recursive `stableHash` calls.
// For other objects like set and map, we use this id directly as the hash.
result=++counter+'~';table.set(arg,result);if(constructor==Array){// Array.
result='@';for(index=0;index<arg.length;index++){result+=stableHash(arg[index])+',';}table.set(arg,result);}if(constructor==OBJECT){// Object, sort keys.
result='#';var keys=OBJECT.keys(arg).sort();while(!isUndefined$1(index=keys.pop())){if(!isUndefined$1(arg[index])){result+=index+':'+stableHash(arg[index])+',';}}table.set(arg,result);}}else{result=isDate?arg.toJSON():type=='symbol'?arg.toString():type=='string'?JSON.stringify(arg):''+arg;}return result;};/**
       * Due to bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,
       * it's not reliable to detect if the browser is currently online or offline
       * based on `navigator.onLine`.
       * As a work around, we always assume it's online on first load, and change
       * the status upon `online` or `offline` events.
       */var online=true;var isOnline=function isOnline(){return online;};var hasWin=hasWindow();var hasDoc=hasDocument();// For node and React Native, `add/removeEventListener` doesn't exist on window.
var onWindowEvent=hasWin&&window.addEventListener?window.addEventListener.bind(window):noop$2;var onDocumentEvent=hasDoc?document.addEventListener.bind(document):noop$2;var offWindowEvent=hasWin&&window.removeEventListener?window.removeEventListener.bind(window):noop$2;var offDocumentEvent=hasDoc?document.removeEventListener.bind(document):noop$2;var isVisible=function isVisible(){var visibilityState=hasDoc&&document.visibilityState;return isUndefined$1(visibilityState)||visibilityState!=='hidden';};var initFocus=function initFocus(callback){// focus revalidate
onDocumentEvent('visibilitychange',callback);onWindowEvent('focus',callback);return function(){offDocumentEvent('visibilitychange',callback);offWindowEvent('focus',callback);};};var initReconnect=function initReconnect(callback){// revalidate on reconnected
var onOnline=function onOnline(){online=true;callback();};// nothing to revalidate, just update the status
var onOffline=function onOffline(){online=false;};onWindowEvent('online',onOnline);onWindowEvent('offline',onOffline);return function(){offWindowEvent('online',onOnline);offWindowEvent('offline',onOffline);};};var preset={isOnline:isOnline,isVisible:isVisible};var defaultConfigOptions={initFocus:initFocus,initReconnect:initReconnect};var IS_SERVER=!hasWindow()||'Deno'in window;// Polyfill requestAnimationFrame
var rAF=function rAF(f){return hasRequestAnimationFrame()?window['requestAnimationFrame'](f):setTimeout(f,1);};// React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser.
var useIsomorphicLayoutEffect=IS_SERVER?y$3:h$6;// This assignment is to extend the Navigator type to use effectiveType.
var navigatorConnection=typeof navigator!=='undefined'&&navigator.connection;// Adjust the config based on slow connection status (<= 70Kbps).
var slowConnection=!IS_SERVER&&navigatorConnection&&(['slow-2g','2g'].includes(navigatorConnection.effectiveType)||navigatorConnection.saveData);var serialize$1=function serialize$1(key){if(isFunction$3(key)){try{key=key();}catch(err){// dependencies not ready
key='';}}var args=[].concat(key);// If key is not falsy, or not an empty array, hash it.
key=typeof key=='string'?key:(Array.isArray(key)?key.length:key)?stableHash(key):'';var infoKey=key?'$swr$'+key:'';return[key,args,infoKey];};// Global state used to deduplicate requests and store listeners
var SWRGlobalState=new WeakMap();var FOCUS_EVENT=0;var RECONNECT_EVENT=1;var MUTATE_EVENT=2;var broadcastState=function broadcastState(cache,key,data,error,isValidating,revalidate,broadcast){if(broadcast===void 0){broadcast=true;}var _a=SWRGlobalState.get(cache),EVENT_REVALIDATORS=_a[0],STATE_UPDATERS=_a[1],FETCH=_a[3];var revalidators=EVENT_REVALIDATORS[key];var updaters=STATE_UPDATERS[key];// Cache was populated, update states of all hooks.
if(broadcast&&updaters){for(var i=0;i<updaters.length;++i){updaters[i](data,error,isValidating);}}// If we also need to revalidate, only do it for the first hook.
if(revalidate){// Invalidate the key by deleting the concurrent request markers so new
// requests will not be deduped.
delete FETCH[key];if(revalidators&&revalidators[0]){return revalidators[0](MUTATE_EVENT).then(function(){return cache.get(key);});}}return cache.get(key);};// Global timestamp.
var __timestamp=0;var getTimestamp=function getTimestamp(){return++__timestamp;};var internalMutate=function internalMutate(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return __awaiter(void 0,void 0,void 0,function(){var cache,_key,_data,_opts,options,populateCache,revalidate,rollbackOnError,customOptimisticData,_a,key,keyInfo,_b,MUTATION,data,error,beforeMutationTs,hasCustomOptimisticData,rollbackData,optimisticData,res;return __generator(this,function(_c){switch(_c.label){case 0:cache=args[0],_key=args[1],_data=args[2],_opts=args[3];options=typeof _opts==='boolean'?{revalidate:_opts}:_opts||{};populateCache=isUndefined$1(options.populateCache)?true:options.populateCache;revalidate=options.revalidate!==false;rollbackOnError=options.rollbackOnError!==false;customOptimisticData=options.optimisticData;_a=serialize$1(_key),key=_a[0],keyInfo=_a[2];if(!key)return[2/*return*/];_b=SWRGlobalState.get(cache),MUTATION=_b[2];// If there is no new data provided, revalidate the key with current state.
if(args.length<3){// Revalidate and broadcast state.
return[2/*return*/,broadcastState(cache,key,cache.get(key),UNDEFINED,UNDEFINED,revalidate,true)];}data=_data;beforeMutationTs=getTimestamp();MUTATION[key]=[beforeMutationTs,0];hasCustomOptimisticData=!isUndefined$1(customOptimisticData);rollbackData=cache.get(key);// Do optimistic data update.
if(hasCustomOptimisticData){optimisticData=isFunction$3(customOptimisticData)?customOptimisticData(rollbackData):customOptimisticData;cache.set(key,optimisticData);broadcastState(cache,key,optimisticData);}if(isFunction$3(data)){// `data` is a function, call it passing current cache value.
try{data=data(cache.get(key));}catch(err){// If it throws an error synchronously, we shouldn't update the cache.
error=err;}}if(!(data&&isFunction$3(data.then)))return[3/*break*/,2];return[4/*yield*/,data.catch(function(err){error=err;})// Check if other mutations have occurred since we've started this mutation.
// If there's a race we don't update cache or broadcast the change,
// just return the data.
];case 1:// This means that the mutation is async, we need to check timestamps to
// avoid race conditions.
data=_c.sent();// Check if other mutations have occurred since we've started this mutation.
// If there's a race we don't update cache or broadcast the change,
// just return the data.
if(beforeMutationTs!==MUTATION[key][0]){if(error)throw error;return[2/*return*/,data];}else if(error&&hasCustomOptimisticData&&rollbackOnError){// Rollback. Always populate the cache in this case but without
// transforming the data.
populateCache=true;data=rollbackData;cache.set(key,rollbackData);}_c.label=2;case 2:// If we should write back the cache after request.
if(populateCache){if(!error){// Transform the result into data.
if(isFunction$3(populateCache)){data=populateCache(data,rollbackData);}// Only update cached data if there's no error. Data can be `undefined` here.
cache.set(key,data);}// Always update or reset the error.
cache.set(keyInfo,mergeObjects(cache.get(keyInfo),{error:error}));}// Reset the timestamp to mark the mutation has ended.
MUTATION[key][1]=getTimestamp();return[4/*yield*/,broadcastState(cache,key,data,error,UNDEFINED,revalidate,!!populateCache)// Throw error or return data
];case 3:res=_c.sent();// Throw error or return data
if(error)throw error;return[2/*return*/,populateCache?res:data];}});});};var revalidateAllKeys=function revalidateAllKeys(revalidators,type){for(var key in revalidators){if(revalidators[key][0])revalidators[key][0](type);}};var initCache=function initCache(provider,options){// The global state for a specific provider will be used to deduplicate
// requests and store listeners. As well as a mutate function that bound to
// the cache.
// Provider's global state might be already initialized. Let's try to get the
// global state associated with the provider first.
if(!SWRGlobalState.has(provider)){var opts=mergeObjects(defaultConfigOptions,options);// If there's no global state bound to the provider, create a new one with the
// new mutate function.
var EVENT_REVALIDATORS={};var mutate=internalMutate.bind(UNDEFINED,provider);var unmount=noop$2;// Update the state if it's new, or the provider has been extended.
SWRGlobalState.set(provider,[EVENT_REVALIDATORS,{},{},{},mutate]);// This is a new provider, we need to initialize it and setup DOM events
// listeners for `focus` and `reconnect` actions.
if(!IS_SERVER){// When listening to the native events for auto revalidations,
// we intentionally put a delay (setTimeout) here to make sure they are
// fired after immediate JavaScript executions, which can possibly be
// React's state updates.
// This avoids some unnecessary revalidations such as
// https://github.com/vercel/swr/issues/1680.
var releaseFocus_1=opts.initFocus(setTimeout.bind(UNDEFINED,revalidateAllKeys.bind(UNDEFINED,EVENT_REVALIDATORS,FOCUS_EVENT)));var releaseReconnect_1=opts.initReconnect(setTimeout.bind(UNDEFINED,revalidateAllKeys.bind(UNDEFINED,EVENT_REVALIDATORS,RECONNECT_EVENT)));unmount=function unmount(){releaseFocus_1&&releaseFocus_1();releaseReconnect_1&&releaseReconnect_1();// When un-mounting, we need to remove the cache provider from the state
// storage too because it's a side-effect. Otherwise when re-mounting we
// will not re-register those event listeners.
SWRGlobalState.delete(provider);};}// We might want to inject an extra layer on top of `provider` in the future,
// such as key serialization, auto GC, etc.
// For now, it's just a `Map` interface without any modifications.
return[provider,mutate,unmount];}return[provider,SWRGlobalState.get(provider)[4]];};// error retry
var onErrorRetry=function onErrorRetry(_,__,config,revalidate,opts){var maxRetryCount=config.errorRetryCount;var currentRetryCount=opts.retryCount;// Exponential backoff
var timeout=~~((Math.random()+0.5)*(1<<(currentRetryCount<8?currentRetryCount:8)))*config.errorRetryInterval;if(!isUndefined$1(maxRetryCount)&&currentRetryCount>maxRetryCount){return;}setTimeout(revalidate,timeout,opts);};// Default cache provider
var _a$1=initCache(new Map()),cache=_a$1[0],mutate=_a$1[1];// Default config
var defaultConfig=mergeObjects({// events
onLoadingSlow:noop$2,onSuccess:noop$2,onError:noop$2,onErrorRetry:onErrorRetry,onDiscarded:noop$2,// switches
revalidateOnFocus:true,revalidateOnReconnect:true,revalidateIfStale:true,shouldRetryOnError:true,// timeouts
errorRetryInterval:slowConnection?10000:5000,focusThrottleInterval:5*1000,dedupingInterval:2*1000,loadingTimeout:slowConnection?5000:3000,// providers
compare:function compare(currentData,newData){return stableHash(currentData)==stableHash(newData);},isPaused:function isPaused(){return false;},cache:cache,mutate:mutate,fallback:{}},// use web preset by default
preset);var mergeConfigs=function mergeConfigs(a,b){// Need to create a new object to avoid mutating the original here.
var v=mergeObjects(a,b);// If two configs are provided, merge their `use` and `fallback` options.
if(b){var u1=a.use,f1=a.fallback;var u2=b.use,f2=b.fallback;if(u1&&u2){v.use=u1.concat(u2);}if(f1&&f2){v.fallback=mergeObjects(f1,f2);}}return v;};var SWRConfigContext=D$3({});var SWRConfig$1=function SWRConfig$1(props){var value=props.value;// Extend parent context values and middleware.
var extendedConfig=mergeConfigs(T$2(SWRConfigContext),value);// Should not use the inherited provider.
var provider=value&&value.provider;// Use a lazy initialized state to create the cache on first access.
var cacheContext=l$4(function(){return provider?initCache(provider(extendedConfig.cache||cache),value):UNDEFINED;})[0];// Override the cache if a new provider is given.
if(cacheContext){extendedConfig.cache=cacheContext[0];extendedConfig.mutate=cacheContext[1];}// Unsubscribe events.
useIsomorphicLayoutEffect(function(){return cacheContext?cacheContext[2]:UNDEFINED;},[]);return v$6(SWRConfigContext.Provider,mergeObjects(props,{value:extendedConfig}));};/**
       * An implementation of state with dependency-tracking.
       */var useStateWithDeps=function useStateWithDeps(state,unmountedRef){var rerender=l$4({})[1];var stateRef=s$1(state);// If a state property (data, error or isValidating) is accessed by the render
// function, we mark the property as a dependency so if it is updated again
// in the future, we trigger a rerender.
// This is also known as dependency-tracking.
var stateDependenciesRef=s$1({data:false,error:false,isValidating:false});/**
           * @param payload To change stateRef, pass the values explicitly to setState:
           * @example
           * ```js
           * setState({
           *   isValidating: false
           *   data: newData // set data to newData
           *   error: undefined // set error to undefined
           * })
           *
           * setState({
           *   isValidating: false
           *   data: undefined // set data to undefined
           *   error: err // set error to err
           * })
           * ```
           */var setState=F$5(function(payload){var shouldRerender=false;var currentState=stateRef.current;for(var _ in payload){var k=_;// If the property has changed, update the state and mark rerender as
// needed.
if(currentState[k]!==payload[k]){currentState[k]=payload[k];// If the property is accessed by the component, a rerender should be
// triggered.
if(stateDependenciesRef.current[k]){shouldRerender=true;}}}if(shouldRerender&&!unmountedRef.current){rerender({});}},// config.suspense isn't allowed to change during the lifecycle
// eslint-disable-next-line react-hooks/exhaustive-deps
[]);// Always update the state reference.
useIsomorphicLayoutEffect(function(){stateRef.current=state;});return[stateRef,stateDependenciesRef.current,setState];};var normalize=function normalize(args){return isFunction$3(args[1])?[args[0],args[1],args[2]||{}]:[args[0],null,(args[1]===null?args[2]:args[1])||{}];};var useSWRConfig=function useSWRConfig(){return mergeObjects(defaultConfig,T$2(SWRConfigContext));};// It's tricky to pass generic types as parameters, so we just directly override
// the types here.
var withArgs=function withArgs(hook){return function useSWRArgs(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}// Get the default and inherited configuration.
var fallbackConfig=useSWRConfig();// Normalize arguments.
var _a=normalize(args),key=_a[0],fn=_a[1],_config=_a[2];// Merge configurations.
var config=mergeConfigs(fallbackConfig,_config);// Apply middleware
var next=hook;var use=config.use;if(use){for(var i=use.length;i-->0;){next=use[i](next);}}return next(key,fn||config.fetcher,config);};};// Add a callback function to a list of keyed callback functions and return
// the unsubscribe function.
var subscribeCallback=function subscribeCallback(key,callbacks,callback){var keyedRevalidators=callbacks[key]||(callbacks[key]=[]);keyedRevalidators.push(callback);return function(){var index=keyedRevalidators.indexOf(callback);if(index>=0){// O(1): faster than splice
keyedRevalidators[index]=keyedRevalidators[keyedRevalidators.length-1];keyedRevalidators.pop();}};};var WITH_DEDUPE={dedupe:true};var useSWRHandler=function useSWRHandler(_key,fetcher,config){var cache=config.cache,compare=config.compare,fallbackData=config.fallbackData,suspense=config.suspense,revalidateOnMount=config.revalidateOnMount,refreshInterval=config.refreshInterval,refreshWhenHidden=config.refreshWhenHidden,refreshWhenOffline=config.refreshWhenOffline;var _a=SWRGlobalState.get(cache),EVENT_REVALIDATORS=_a[0],STATE_UPDATERS=_a[1],MUTATION=_a[2],FETCH=_a[3];// `key` is the identifier of the SWR `data` state, `keyInfo` holds extra
// states such as `error` and `isValidating` inside,
// all of them are derived from `_key`.
// `fnArgs` is an array of arguments parsed from the key, which will be passed
// to the fetcher.
var _b=serialize$1(_key),key=_b[0],fnArgs=_b[1],keyInfo=_b[2];// If it's the initial render of this hook.
var initialMountedRef=s$1(false);// If the hook is unmounted already. This will be used to prevent some effects
// to be called after unmounting.
var unmountedRef=s$1(false);// Refs to keep the key and config.
var keyRef=s$1(key);var fetcherRef=s$1(fetcher);var configRef=s$1(config);var getConfig=function getConfig(){return configRef.current;};var isActive=function isActive(){return getConfig().isVisible()&&getConfig().isOnline();};var patchFetchInfo=function patchFetchInfo(info){return cache.set(keyInfo,mergeObjects(cache.get(keyInfo),info));};// Get the current state that SWR should return.
var cached=cache.get(key);var fallback=isUndefined$1(fallbackData)?config.fallback[key]:fallbackData;var data=isUndefined$1(cached)?fallback:cached;var info=cache.get(keyInfo)||{};var error=info.error;var isInitialMount=!initialMountedRef.current;// - Suspense mode and there's stale data for the initial render.
// - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.
// - `revalidateIfStale` is enabled but `data` is not defined.
var shouldRevalidate=function shouldRevalidate(){// If `revalidateOnMount` is set, we take the value directly.
if(isInitialMount&&!isUndefined$1(revalidateOnMount))return revalidateOnMount;// If it's paused, we skip revalidation.
if(getConfig().isPaused())return false;// Under suspense mode, it will always fetch on render if there is no
// stale data so no need to revalidate immediately on mount again.
// If data exists, only revalidate if `revalidateIfStale` is true.
if(suspense)return isUndefined$1(data)?false:config.revalidateIfStale;// If there is no stale data, we need to revalidate on mount;
// If `revalidateIfStale` is set to true, we will always revalidate.
return isUndefined$1(data)||config.revalidateIfStale;};// Resolve the current validating state.
var resolveValidating=function resolveValidating(){if(!key||!fetcher)return false;if(info.isValidating)return true;// If it's not mounted yet and it should revalidate on mount, revalidate.
return isInitialMount&&shouldRevalidate();};var isValidating=resolveValidating();var _c=useStateWithDeps({data:data,error:error,isValidating:isValidating},unmountedRef),stateRef=_c[0],stateDependencies=_c[1],setState=_c[2];// The revalidation function is a carefully crafted wrapper of the original
// `fetcher`, to correctly handle the many edge cases.
var revalidate=F$5(function(revalidateOpts){return __awaiter(void 0,void 0,void 0,function(){var currentFetcher,newData,startAt,loading,opts,shouldStartNewRequest,isCurrentKeyMounted,cleanupState,newState,finishRequestAndUpdateState,mutationInfo,err_1;var _a;return __generator(this,function(_b){switch(_b.label){case 0:currentFetcher=fetcherRef.current;if(!key||!currentFetcher||unmountedRef.current||getConfig().isPaused()){return[2/*return*/,false];}loading=true;opts=revalidateOpts||{};shouldStartNewRequest=!FETCH[key]||!opts.dedupe;isCurrentKeyMounted=function isCurrentKeyMounted(){return!unmountedRef.current&&key===keyRef.current&&initialMountedRef.current;};cleanupState=function cleanupState(){// Check if it's still the same request before deleting.
var requestInfo=FETCH[key];if(requestInfo&&requestInfo[1]===startAt){delete FETCH[key];}};newState={isValidating:false};finishRequestAndUpdateState=function finishRequestAndUpdateState(){patchFetchInfo({isValidating:false});// We can only set state if it's safe (still mounted with the same key).
if(isCurrentKeyMounted()){setState(newState);}};// Start fetching. Change the `isValidating` state, update the cache.
patchFetchInfo({isValidating:true});setState({isValidating:true});_b.label=1;case 1:_b.trys.push([1,3,,4]);if(shouldStartNewRequest){// Tell all other hooks to change the `isValidating` state.
broadcastState(cache,key,stateRef.current.data,stateRef.current.error,true);// If no cache being rendered currently (it shows a blank page),
// we trigger the loading slow event.
if(config.loadingTimeout&&!cache.get(key)){setTimeout(function(){if(loading&&isCurrentKeyMounted()){getConfig().onLoadingSlow(key,config);}},config.loadingTimeout);}// Start the request and save the timestamp.
FETCH[key]=[currentFetcher.apply(void 0,fnArgs),getTimestamp()];}_a=FETCH[key],newData=_a[0],startAt=_a[1];return[4/*yield*/,newData];case 2:newData=_b.sent();if(shouldStartNewRequest){// If the request isn't interrupted, clean it up after the
// deduplication interval.
setTimeout(cleanupState,config.dedupingInterval);}// If there're other ongoing request(s), started after the current one,
// we need to ignore the current one to avoid possible race conditions:
//   req1------------------>res1        (current one)
//        req2---------------->res2
// the request that fired later will always be kept.
// The timestamp maybe be `undefined` or a number
if(!FETCH[key]||FETCH[key][1]!==startAt){if(shouldStartNewRequest){if(isCurrentKeyMounted()){getConfig().onDiscarded(key);}}return[2/*return*/,false];}// Clear error.
patchFetchInfo({error:UNDEFINED});newState.error=UNDEFINED;mutationInfo=MUTATION[key];if(!isUndefined$1(mutationInfo)&&(// case 1
startAt<=mutationInfo[0]||// case 2
startAt<=mutationInfo[1]||// case 3
mutationInfo[1]===0)){finishRequestAndUpdateState();if(shouldStartNewRequest){if(isCurrentKeyMounted()){getConfig().onDiscarded(key);}}return[2/*return*/,false];}// Deep compare with latest state to avoid extra re-renders.
// For local state, compare and assign.
if(!compare(stateRef.current.data,newData)){newState.data=newData;}else{// data and newData are deeply equal
// it should be safe to broadcast the stale data
newState.data=stateRef.current.data;// At the end of this function, `brocastState` invokes the `onStateUpdate` function,
// which takes care of avoiding the re-render
}// For global state, it's possible that the key has changed.
// https://github.com/vercel/swr/pull/1058
if(!compare(cache.get(key),newData)){cache.set(key,newData);}// Trigger the successful callback if it's the original request.
if(shouldStartNewRequest){if(isCurrentKeyMounted()){getConfig().onSuccess(newData,key,config);}}return[3/*break*/,4];case 3:err_1=_b.sent();cleanupState();// Not paused, we continue handling the error. Otherwise discard it.
if(!getConfig().isPaused()){// Get a new error, don't use deep comparison for errors.
patchFetchInfo({error:err_1});newState.error=err_1;// Error event and retry logic. Only for the actual request, not
// deduped ones.
if(shouldStartNewRequest&&isCurrentKeyMounted()){getConfig().onError(err_1,key,config);if(typeof config.shouldRetryOnError==='boolean'&&config.shouldRetryOnError||isFunction$3(config.shouldRetryOnError)&&config.shouldRetryOnError(err_1)){// When retrying, dedupe is always enabled
if(isActive()){// If it's active, stop. It will auto revalidate when refocusing
// or reconnecting.
getConfig().onErrorRetry(err_1,key,config,revalidate,{retryCount:(opts.retryCount||0)+1,dedupe:true});}}}}return[3/*break*/,4];case 4:// Mark loading as stopped.
loading=false;// Update the current hook's state.
finishRequestAndUpdateState();// Here is the source of the request, need to tell all other hooks to
// update their states.
if(isCurrentKeyMounted()&&shouldStartNewRequest){broadcastState(cache,key,newState.data,newState.error,false);}return[2/*return*/,true];}});});},// `setState` is immutable, and `eventsCallback`, `fnArgs`, `keyInfo`,
// and `keyValidating` are depending on `key`, so we can exclude them from
// the deps array.
//
// FIXME:
// `fn` and `config` might be changed during the lifecycle,
// but they might be changed every render like this.
// `useSWR('key', () => fetch('/api/'), { suspense: true })`
// So we omit the values from the deps array
// even though it might cause unexpected behaviors.
// eslint-disable-next-line react-hooks/exhaustive-deps
[key]);// Similar to the global mutate, but bound to the current cache and key.
// `cache` isn't allowed to change during the lifecycle.
// eslint-disable-next-line react-hooks/exhaustive-deps
var boundMutate=F$5(// By using `bind` we don't need to modify the size of the rest arguments.
// Due to https://github.com/microsoft/TypeScript/issues/37181, we have to
// cast it to any for now.
internalMutate.bind(UNDEFINED,cache,function(){return keyRef.current;}),// eslint-disable-next-line react-hooks/exhaustive-deps
[]);// Always update fetcher and config refs.
useIsomorphicLayoutEffect(function(){fetcherRef.current=fetcher;configRef.current=config;});// After mounted or key changed.
useIsomorphicLayoutEffect(function(){if(!key)return;var keyChanged=key!==keyRef.current;var softRevalidate=revalidate.bind(UNDEFINED,WITH_DEDUPE);// Expose state updater to global event listeners. So we can update hook's
// internal state from the outside.
var onStateUpdate=function onStateUpdate(updatedData,updatedError,updatedIsValidating){setState(mergeObjects({error:updatedError,isValidating:updatedIsValidating},// Since `setState` only shallowly compares states, we do a deep
// comparison here.
compare(stateRef.current.data,updatedData)?UNDEFINED:{data:updatedData}));};// Expose revalidators to global event listeners. So we can trigger
// revalidation from the outside.
var nextFocusRevalidatedAt=0;var onRevalidate=function onRevalidate(type){if(type==FOCUS_EVENT){var now=Date.now();if(getConfig().revalidateOnFocus&&now>nextFocusRevalidatedAt&&isActive()){nextFocusRevalidatedAt=now+getConfig().focusThrottleInterval;softRevalidate();}}else if(type==RECONNECT_EVENT){if(getConfig().revalidateOnReconnect&&isActive()){softRevalidate();}}else if(type==MUTATE_EVENT){return revalidate();}return;};var unsubUpdate=subscribeCallback(key,STATE_UPDATERS,onStateUpdate);var unsubEvents=subscribeCallback(key,EVENT_REVALIDATORS,onRevalidate);// Mark the component as mounted and update corresponding refs.
unmountedRef.current=false;keyRef.current=key;initialMountedRef.current=true;// When `key` updates, reset the state to the initial value
// and trigger a rerender if necessary.
if(keyChanged){setState({data:data,error:error,isValidating:isValidating});}// Trigger a revalidation.
if(shouldRevalidate()){if(isUndefined$1(data)||IS_SERVER){// Revalidate immediately.
softRevalidate();}else{// Delay the revalidate if we have data to return so we won't block
// rendering.
rAF(softRevalidate);}}return function(){// Mark it as unmounted.
unmountedRef.current=true;unsubUpdate();unsubEvents();};},[key,revalidate]);// Polling
useIsomorphicLayoutEffect(function(){var timer;function next(){// Use the passed interval
// ...or invoke the function with the updated data to get the interval
var interval=isFunction$3(refreshInterval)?refreshInterval(data):refreshInterval;// We only start next interval if `refreshInterval` is not 0, and:
// - `force` is true, which is the start of polling
// - or `timer` is not 0, which means the effect wasn't canceled
if(interval&&timer!==-1){timer=setTimeout(execute,interval);}}function execute(){// Check if it's OK to execute:
// Only revalidate when the page is visible, online and not errored.
if(!stateRef.current.error&&(refreshWhenHidden||getConfig().isVisible())&&(refreshWhenOffline||getConfig().isOnline())){revalidate(WITH_DEDUPE).then(next);}else{// Schedule next interval to check again.
next();}}next();return function(){if(timer){clearTimeout(timer);timer=-1;}};},[refreshInterval,refreshWhenHidden,refreshWhenOffline,revalidate]);// Display debug info in React DevTools.
d$3(data);// In Suspense mode, we can't return the empty `data` state.
// If there is `error`, the `error` needs to be thrown to the error boundary.
// If there is no `error`, the `revalidation` promise needs to be thrown to
// the suspense boundary.
if(suspense&&isUndefined$1(data)&&key){// Always update fetcher and config refs even with the Suspense mode.
fetcherRef.current=fetcher;configRef.current=config;unmountedRef.current=false;throw isUndefined$1(error)?revalidate(WITH_DEDUPE):error;}return{mutate:boundMutate,get data(){stateDependencies.data=true;return data;},get error(){stateDependencies.error=true;return error;},get isValidating(){stateDependencies.isValidating=true;return isValidating;}};};OBJECT.defineProperty(SWRConfig$1,'default',{value:defaultConfig});var useSWR=exports('u',withArgs(useSWRHandler));function stylis_min(W){function M(d,c,e,h,a){for(var m=0,b=0,v=0,n=0,q,g,x=0,K=0,k,u=k=q=0,l=0,r=0,I=0,t=0,B=e.length,J=B-1,y,f='',p='',F='',G='',C;l<B;){g=e.charCodeAt(l);l===J&&0!==b+n+v+m&&(0!==b&&(g=47===b?10:47),n=v=m=0,B++,J++);if(0===b+n+v+m){if(l===J&&(0<r&&(f=f.replace(N,'')),0<f.trim().length)){switch(g){case 32:case 9:case 59:case 13:case 10:break;default:f+=e.charAt(l);}g=59;}switch(g){case 123:f=f.trim();q=f.charCodeAt(0);k=1;for(t=++l;l<B;){switch(g=e.charCodeAt(l)){case 123:k++;break;case 125:k--;break;case 47:switch(g=e.charCodeAt(l+1)){case 42:case 47:a:{for(u=l+1;u<J;++u){switch(e.charCodeAt(u)){case 47:if(42===g&&42===e.charCodeAt(u-1)&&l+2!==u){l=u+1;break a;}break;case 10:if(47===g){l=u+1;break a;}}}l=u;}}break;case 91:g++;case 40:g++;case 34:case 39:for(;l++<J&&e.charCodeAt(l)!==g;){}}if(0===k)break;l++;}k=e.substring(t,l);0===q&&(q=(f=f.replace(ca,'').trim()).charCodeAt(0));switch(q){case 64:0<r&&(f=f.replace(N,''));g=f.charCodeAt(1);switch(g){case 100:case 109:case 115:case 45:r=c;break;default:r=O;}k=M(c,r,k,g,a+1);t=k.length;0<A&&(r=X(O,f,I),C=H(3,k,r,c,D,z,t,g,a,h),f=r.join(''),void 0!==C&&0===(t=(k=C.trim()).length)&&(g=0,k=''));if(0<t)switch(g){case 115:f=f.replace(da,ea);case 100:case 109:case 45:k=f+'{'+k+'}';break;case 107:f=f.replace(fa,'$1 $2');k=f+'{'+k+'}';k=1===w||2===w&&L('@'+k,3)?'@-webkit-'+k+'@'+k:'@'+k;break;default:k=f+k,112===h&&(k=(p+=k,''));}else k='';break;default:k=M(c,X(c,f,I),k,h,a+1);}F+=k;k=I=r=u=q=0;f='';g=e.charCodeAt(++l);break;case 125:case 59:f=(0<r?f.replace(N,''):f).trim();if(1<(t=f.length))switch(0===u&&(q=f.charCodeAt(0),45===q||96<q&&123>q)&&(t=(f=f.replace(' ',':')).length),0<A&&void 0!==(C=H(1,f,c,d,D,z,p.length,h,a,h))&&0===(t=(f=C.trim()).length)&&(f='\x00\x00'),q=f.charCodeAt(0),g=f.charCodeAt(1),q){case 0:break;case 64:if(105===g||99===g){G+=f+e.charAt(l);break;}default:58!==f.charCodeAt(t-1)&&(p+=P(f,q,g,f.charCodeAt(2)));}I=r=u=q=0;f='';g=e.charCodeAt(++l);}}switch(g){case 13:case 10:47===b?b=0:0===1+q&&107!==h&&0<f.length&&(r=1,f+='\x00');0<A*Y&&H(0,f,c,d,D,z,p.length,h,a,h);z=1;D++;break;case 59:case 125:if(0===b+n+v+m){z++;break;}default:z++;y=e.charAt(l);switch(g){case 9:case 32:if(0===n+m+b)switch(x){case 44:case 58:case 9:case 32:y='';break;default:32!==g&&(y=' ');}break;case 0:y='\\0';break;case 12:y='\\f';break;case 11:y='\\v';break;case 38:0===n+b+m&&(r=I=1,y='\f'+y);break;case 108:if(0===n+b+m+E&&0<u)switch(l-u){case 2:112===x&&58===e.charCodeAt(l-3)&&(E=x);case 8:111===K&&(E=K);}break;case 58:0===n+b+m&&(u=l);break;case 44:0===b+v+n+m&&(r=1,y+='\r');break;case 34:case 39:0===b&&(n=n===g?0:0===n?g:n);break;case 91:0===n+b+v&&m++;break;case 93:0===n+b+v&&m--;break;case 41:0===n+b+m&&v--;break;case 40:if(0===n+b+m){if(0===q)switch(2*x+3*K){case 533:break;default:q=1;}v++;}break;case 64:0===b+v+n+m+u+k&&(k=1);break;case 42:case 47:if(!(0<n+m+v))switch(b){case 0:switch(2*g+3*e.charCodeAt(l+1)){case 235:b=47;break;case 220:t=l,b=42;}break;case 42:47===g&&42===x&&t+2!==l&&(33===e.charCodeAt(t+2)&&(p+=e.substring(t,l+1)),y='',b=0);}}0===b&&(f+=y);}K=x;x=g;l++;}t=p.length;if(0<t){r=c;if(0<A&&(C=H(2,p,r,d,D,z,t,h,a,h),void 0!==C&&0===(p=C).length))return G+p+F;p=r.join(',')+'{'+p+'}';if(0!==w*E){2!==w||L(p,2)||(E=0);switch(E){case 111:p=p.replace(ha,':-moz-$1')+p;break;case 112:p=p.replace(Q,'::-webkit-input-$1')+p.replace(Q,'::-moz-$1')+p.replace(Q,':-ms-input-$1')+p;}E=0;}}return G+p+F;}function X(d,c,e){var h=c.trim().split(ia);c=h;var a=h.length,m=d.length;switch(m){case 0:case 1:var b=0;for(d=0===m?'':d[0]+' ';b<a;++b){c[b]=Z(d,c[b],e).trim();}break;default:var v=b=0;for(c=[];b<a;++b){for(var n=0;n<m;++n){c[v++]=Z(d[n]+' ',h[b],e).trim();}}}return c;}function Z(d,c,e){var h=c.charCodeAt(0);33>h&&(h=(c=c.trim()).charCodeAt(0));switch(h){case 38:return c.replace(F,'$1'+d.trim());case 58:return d.trim()+c.replace(F,'$1'+d.trim());default:if(0<1*e&&0<c.indexOf('\f'))return c.replace(F,(58===d.charCodeAt(0)?'':'$1')+d.trim());}return d+c;}function P(d,c,e,h){var a=d+';',m=2*c+3*e+4*h;if(944===m){d=a.indexOf(':',9)+1;var b=a.substring(d,a.length-1).trim();b=a.substring(0,d).trim()+b+';';return 1===w||2===w&&L(b,1)?'-webkit-'+b+b:b;}if(0===w||2===w&&!L(a,1))return a;switch(m){case 1015:return 97===a.charCodeAt(10)?'-webkit-'+a+a:a;case 951:return 116===a.charCodeAt(3)?'-webkit-'+a+a:a;case 963:return 110===a.charCodeAt(5)?'-webkit-'+a+a:a;case 1009:if(100!==a.charCodeAt(4))break;case 969:case 942:return'-webkit-'+a+a;case 978:return'-webkit-'+a+'-moz-'+a+a;case 1019:case 983:return'-webkit-'+a+'-moz-'+a+'-ms-'+a+a;case 883:if(45===a.charCodeAt(8))return'-webkit-'+a+a;if(0<a.indexOf('image-set(',11))return a.replace(ja,'$1-webkit-$2')+a;break;case 932:if(45===a.charCodeAt(4))switch(a.charCodeAt(5)){case 103:return'-webkit-box-'+a.replace('-grow','')+'-webkit-'+a+'-ms-'+a.replace('grow','positive')+a;case 115:return'-webkit-'+a+'-ms-'+a.replace('shrink','negative')+a;case 98:return'-webkit-'+a+'-ms-'+a.replace('basis','preferred-size')+a;}return'-webkit-'+a+'-ms-'+a+a;case 964:return'-webkit-'+a+'-ms-flex-'+a+a;case 1023:if(99!==a.charCodeAt(8))break;b=a.substring(a.indexOf(':',15)).replace('flex-','').replace('space-between','justify');return'-webkit-box-pack'+b+'-webkit-'+a+'-ms-flex-pack'+b+a;case 1005:return ka.test(a)?a.replace(aa,':-webkit-')+a.replace(aa,':-moz-')+a:a;case 1e3:b=a.substring(13).trim();c=b.indexOf('-')+1;switch(b.charCodeAt(0)+b.charCodeAt(c)){case 226:b=a.replace(G,'tb');break;case 232:b=a.replace(G,'tb-rl');break;case 220:b=a.replace(G,'lr');break;default:return a;}return'-webkit-'+a+'-ms-'+b+a;case 1017:if(-1===a.indexOf('sticky',9))break;case 975:c=(a=d).length-10;b=(33===a.charCodeAt(c)?a.substring(0,c):a).substring(d.indexOf(':',7)+1).trim();switch(m=b.charCodeAt(0)+(b.charCodeAt(7)|0)){case 203:if(111>b.charCodeAt(8))break;case 115:a=a.replace(b,'-webkit-'+b)+';'+a;break;case 207:case 102:a=a.replace(b,'-webkit-'+(102<m?'inline-':'')+'box')+';'+a.replace(b,'-webkit-'+b)+';'+a.replace(b,'-ms-'+b+'box')+';'+a;}return a+';';case 938:if(45===a.charCodeAt(5))switch(a.charCodeAt(6)){case 105:return b=a.replace('-items',''),'-webkit-'+a+'-webkit-box-'+b+'-ms-flex-'+b+a;case 115:return'-webkit-'+a+'-ms-flex-item-'+a.replace(ba,'')+a;default:return'-webkit-'+a+'-ms-flex-line-pack'+a.replace('align-content','').replace(ba,'')+a;}break;case 973:case 989:if(45!==a.charCodeAt(3)||122===a.charCodeAt(4))break;case 931:case 953:if(!0===la.test(d))return 115===(b=d.substring(d.indexOf(':')+1)).charCodeAt(0)?P(d.replace('stretch','fill-available'),c,e,h).replace(':fill-available',':stretch'):a.replace(b,'-webkit-'+b)+a.replace(b,'-moz-'+b.replace('fill-',''))+a;break;case 962:if(a='-webkit-'+a+(102===a.charCodeAt(5)?'-ms-'+a:'')+a,211===e+h&&105===a.charCodeAt(13)&&0<a.indexOf('transform',10))return a.substring(0,a.indexOf(';',27)+1).replace(ma,'$1-webkit-$2')+a;}return a;}function L(d,c){var e=d.indexOf(1===c?':':'{'),h=d.substring(0,3!==c?e:10);e=d.substring(e+1,d.length-1);return R(2!==c?h:h.replace(na,'$1'),e,c);}function ea(d,c){var e=P(c,c.charCodeAt(0),c.charCodeAt(1),c.charCodeAt(2));return e!==c+';'?e.replace(oa,' or ($1)').substring(4):'('+c+')';}function H(d,c,e,h,a,m,b,v,n,q){for(var g=0,x=c,w;g<A;++g){switch(w=S[g].call(B,d,x,e,h,a,m,b,v,n,q)){case void 0:case!1:case!0:case null:break;default:x=w;}}if(x!==c)return x;}function T(d){switch(d){case void 0:case null:A=S.length=0;break;default:if('function'===typeof d)S[A++]=d;else if('object'===_typeof(d))for(var c=0,e=d.length;c<e;++c){T(d[c]);}else Y=!!d|0;}return T;}function U(d){d=d.prefix;void 0!==d&&(R=null,d?'function'!==typeof d?w=1:(w=2,R=d):w=0);return U;}function B(d,c){var e=d;33>e.charCodeAt(0)&&(e=e.trim());V=e;e=[V];if(0<A){var h=H(-1,c,e,e,D,z,0,0,0,0);void 0!==h&&'string'===typeof h&&(c=h);}var a=M(O,e,c,0,0);0<A&&(h=H(-2,a,e,e,D,z,a.length,0,0,0),void 0!==h&&(a=h));V='';E=0;z=D=1;return a;}var ca=/^\0+/g,N=/[\0\r\f]/g,aa=/: */g,ka=/zoo|gra/,ma=/([,: ])(transform)/g,ia=/,\r+?/g,F=/([\t\r\n ])*\f?&/g,fa=/@(k\w+)\s*(\S*)\s*/,Q=/::(place)/g,ha=/:(read-only)/g,G=/[svh]\w+-[tblr]{2}/,da=/\(\s*(.*)\s*\)/g,oa=/([\s\S]*?);/g,ba=/-self|flex-/g,na=/[^]*?(:[rp][el]a[\w-]+)[^]*/,la=/stretch|:\s*\w+\-(?:conte|avail)/,ja=/([^-])(image-set\()/,z=1,D=1,E=0,w=1,O=[],S=[],A=0,R=null,Y=0,V='';B.use=T;B.set=U;void 0!==W&&U(W);return B;}function memoize(fn){var cache={};return function(arg){if(cache[arg]===undefined)cache[arg]=fn(arg);return cache[arg];};}var reactPropsRegex=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;// https://esbench.com/bench/5bfee68a4cd7e6009ef61d23
var index$1=memoize(function(prop){return reactPropsRegex.test(prop)||prop.charCodeAt(0)===111/* o */&&prop.charCodeAt(1)===110/* n */&&prop.charCodeAt(2)<91;}/* Z+1 */);function v$2(){return(v$2=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n){Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);}}return e;}).apply(this,arguments);}var g$1=function g$1(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1){n.push(t[r],e[r+1]);}return n;},S$1=function S$1(t){return null!==t&&"object"==_typeof(t)&&"[object Object]"===(t.toString?t.toString():Object.prototype.toString.call(t))&&!reactIs.exports.typeOf(t);},w$2=Object.freeze([]),E$2=Object.freeze({});function b$1(e){return"function"==typeof e;}function _$1(e){return e.displayName||e.name||"Component";}function N(e){return e&&"string"==typeof e.styledComponentId;}var A$1="undefined"!=typeof process&&{}.SC_ATTR||"data-styled",I$1="undefined"!=typeof window&&"HTMLElement"in window,P$1=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={}.REACT_APP_SC_DISABLE_SPEEDY&&""!=={}.REACT_APP_SC_DISABLE_SPEEDY?{}.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={}.SC_DISABLE_SPEEDY&&""!=={}.SC_DISABLE_SPEEDY?{}.SC_DISABLE_SPEEDY:"production"!=="production"),O$1={};function j$1(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++){n[r-1]=arguments[r];}throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""));}var T=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e;}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++){t+=this.groupSizes[n];}return t;},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;){(o<<=1)<0&&j$1(16,""+e);}this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var s=r;s<o;s++){this.groupSizes[s]=0;}}for(var i=this.indexOfGroup(e+1),a=0,c=t.length;a<c;a++){this.tag.insertRule(i,t[a])&&(this.groupSizes[e]++,i++);}},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++){this.tag.deleteRule(n);}}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,s=r;s<o;s++){t+=this.tag.getRule(s)+"/*!sc*/\n";}return t;},e;}(),x$2=new Map(),k$2=new Map(),V=1,B$1=function B$1(e){if(x$2.has(e))return x$2.get(e);for(;k$2.has(V);){V++;}var t=V++;return x$2.set(e,t),k$2.set(t,e),t;},z$1=function z$1(e){return k$2.get(e);},M$1=function M$1(e,t){t>=V&&(V=t+1),x$2.set(e,t),k$2.set(t,e);},G$1="style["+A$1+'][data-styled-version="5.3.3"]',L$1=new RegExp("^"+A$1+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),F$1=function F$1(e,t,n){for(var r,o=n.split(","),s=0,i=o.length;s<i;s++){(r=o[s])&&e.registerName(t,r);}},Y=function Y(e,t){for(var n=(t.textContent||"").split("/*!sc*/\n"),r=[],o=0,s=n.length;o<s;o++){var i=n[o].trim();if(i){var a=i.match(L$1);if(a){var c=0|parseInt(a[1],10),u=a[2];0!==c&&(M$1(u,c),F$1(e,u,a[3]),e.getTag().insertRules(c,r)),r.length=0;}else r.push(i);}}},q$3=function q$3(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null;},H$1=function H$1(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(A$1))return r;}}(n),s=void 0!==o?o.nextSibling:null;r.setAttribute(A$1,"active"),r.setAttribute("data-styled-version","5.3.3");var i=q$3();return i&&r.setAttribute("nonce",i),n.insertBefore(r,s),r;},$$2=function(){function e(e){var t=this.element=H$1(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o;}j$1(17);}(t),this.length=0;}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0;}catch(e){return!1;}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--;},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:"";},e;}(),W$1=function(){function e(e){var t=this.element=H$1(e);this.nodes=t.childNodes,this.length=0;}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0;}return!1;},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--;},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:"";},e;}(),U$1=function(){function e(e){this.rules=[],this.length=0;}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0);},t.deleteRule=function(e){this.rules.splice(e,1),this.length--;},t.getRule=function(e){return e<this.length?this.rules[e]:"";},e;}(),J=I$1,X$1={isServer:!I$1,useCSSOMInjection:!P$1},Z$1=function(){function e(e,t,n){void 0===e&&(e=E$2),void 0===t&&(t={}),this.options=v$2({},X$1,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&I$1&&J&&(J=!1,function(e){for(var t=document.querySelectorAll(G$1),n=0,r=t.length;n<r;n++){var o=t[n];o&&"active"!==o.getAttribute(A$1)&&(Y(e,o),o.parentNode&&o.parentNode.removeChild(o));}}(this));}e.registerId=function(e){return B$1(e);};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(v$2({},this.options,{},t),this.gs,n&&this.names||void 0);},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1;},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,o=t.target,e=n?new U$1(o):r?new $$2(o):new W$1(o),new T(e)));var e,t,n,r,o;},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t);},t.registerName=function(e,t){if(B$1(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set();n.add(t),this.names.set(e,n);}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(B$1(e),n);},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear();},t.clearRules=function(e){this.getTag().clearGroup(B$1(e)),this.clearNames(e);},t.clearTag=function(){this.tag=void 0;},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=0;o<n;o++){var s=z$1(o);if(void 0!==s){var i=e.names.get(s),a=t.getGroup(o);if(i&&a&&i.size){var c=A$1+".g"+o+'[id="'+s+'"]',u="";void 0!==i&&i.forEach(function(e){e.length>0&&(u+=e+",");}),r+=""+a+c+'{content:"'+u+'"}/*!sc*/\n';}}}return r;}(this);},e;}(),K=/(a)(d)/gi,Q$1=function Q$1(e){return String.fromCharCode(e+(e>25?39:97));};function ee(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0){n=Q$1(t%52)+n;}return(Q$1(t%52)+n).replace(K,"$1-$2");}var te=function te(e,t){for(var n=t.length;n;){e=33*e^t.charCodeAt(--n);}return e;},ne=function ne(e){return te(5381,e);};function re(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(b$1(n)&&!N(n))return!1;}return!0;}var oe=ne("5.3.3"),se=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&re(e),this.componentId=t,this.baseHash=te(oe,t),this.baseStyle=n,Z$1.registerId(t);}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,o=[];if(this.baseStyle&&o.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash){if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))o.push(this.staticRulesId);else{var s=Ne(this.rules,e,t,n).join(""),i=ee(te(this.baseHash,s)>>>0);if(!t.hasNameForId(r,i)){var a=n(s,"."+i,void 0,r);t.insertRules(r,i,a);}o.push(i),this.staticRulesId=i;}}else{for(var c=this.rules.length,u=te(this.baseHash,n.hash),l="",d=0;d<c;d++){var h=this.rules[d];if("string"==typeof h)l+=h;else if(h){var p=Ne(h,e,t,n),f=Array.isArray(p)?p.join(""):p;u=te(u,f+d),l+=f;}}if(l){var m=ee(u>>>0);if(!t.hasNameForId(r,m)){var y=n(l,"."+m,void 0,r);t.insertRules(r,m,y);}o.push(m);}}return o.join(" ");},e;}(),ie=/^\s*\/\/.*$/gm,ae=[":","[",".","#"];function ce(e){var t,n,r,o,s=void 0===e?E$2:e,i=s.options,a=void 0===i?E$2:i,c=s.plugins,u=void 0===c?w$2:c,l=new stylis_min(a),d=[],h=function(e){function t(t){if(t)try{e(t+"}");}catch(e){}}return function(n,r,o,s,i,a,c,u,l,d){switch(n){case 1:if(0===l&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===u)return r+"/*|*/";break;case 3:switch(u){case 102:case 112:return e(o[0]+r),"";default:return r+(0===d?"/*|*/":"");}case-2:r.split("/*|*/}").forEach(t);}};}(function(e){d.push(e);}),f=function f(e,r,s){return 0===r&&-1!==ae.indexOf(s[n.length])||s.match(o)?e:"."+t;};function m(e,s,i,a){void 0===a&&(a="&");var c=e.replace(ie,""),u=s&&i?i+" "+s+" { "+c+" }":c;return t=a,n=s,r=new RegExp("\\"+n+"\\b","g"),o=new RegExp("(\\"+n+"\\b){2,}"),l(i||!s?"":s,u);}return l.use([].concat(u,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(n)>0&&(o[0]=o[0].replace(r,f));},h,function(e){if(-2===e){var t=d;return d=[],t;}}])),m.hash=u.length?u.reduce(function(e,t){return t.name||j$1(15),te(e,t.name);},5381).toString():"",m;}var ue=t$4.createContext();ue.Consumer;var de=t$4.createContext(),he=(de.Consumer,new Z$1()),pe=ce();function fe(){return T$2(ue)||he;}function me(){return T$2(de)||pe;}var ve=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=pe);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"));},this.toString=function(){return j$1(12,String(n.name));},this.name=e,this.id="sc-keyframes-"+e,this.rules=t;}return e.prototype.getName=function(e){return void 0===e&&(e=pe),this.name+e.hash;},e;}(),ge=/([A-Z])/,Se=/([A-Z])/g,we=/^ms-/,Ee=function Ee(e){return"-"+e.toLowerCase();};function be(e){return ge.test(e)?e.replace(Se,Ee).replace(we,"-ms-"):e;}var _e=function _e(e){return null==e||!1===e||""===e;};function Ne(e,n,r,o){if(Array.isArray(e)){for(var s,i=[],a=0,c=e.length;a<c;a+=1){""!==(s=Ne(e[a],n,r,o))&&(Array.isArray(s)?i.push.apply(i,s):i.push(s));}return i;}if(_e(e))return"";if(N(e))return"."+e.styledComponentId;if(b$1(e)){if("function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!n)return e;var u=e(n);return Ne(u,n,r,o);}var l;return e instanceof ve?r?(e.inject(r,o),e.getName(o)):e:S$1(e)?function e(t,n){var r,o,s=[];for(var i in t){t.hasOwnProperty(i)&&!_e(t[i])&&(Array.isArray(t[i])&&t[i].isCss||b$1(t[i])?s.push(be(i)+":",t[i],";"):S$1(t[i])?s.push.apply(s,e(t[i],i)):s.push(be(i)+": "+(r=i,null==(o=t[i])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in unitlessKeys?String(o).trim():o+"px")+";"));}return n?[n+" {"].concat(s,["}"]):s;}(e):e.toString();}var Ae=function Ae(e){return Array.isArray(e)&&(e.isCss=!0),e;};function Ce(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++){n[r-1]=arguments[r];}return b$1(e)||S$1(e)?Ae(Ne(g$1(w$2,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:Ae(Ne(g$1(e,n)));}var Re=function Re(e,t,n){return void 0===n&&(n=E$2),e.theme!==n.theme&&e.theme||t||n.theme;},De=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,je=/(^-|-$)/g;function Te(e){return e.replace(De,"-").replace(je,"");}var xe=function xe(e){return ee(ne(e)>>>0);};function ke(e){return"string"==typeof e&&"production"==="production";}var Ve=function Ve(e){return"function"==typeof e||"object"==_typeof(e)&&null!==e&&!Array.isArray(e);},Be=function Be(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e;};function ze(e,t,n){var r=e[n];Ve(t)&&Ve(r)?Me(r,t):e[n]=t;}function Me(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++){n[r-1]=arguments[r];}for(var o=0,s=n;o<s.length;o++){var i=s[o];if(Ve(i))for(var a in i){Be(a)&&ze(e,i[a],a);}}return e;}var Ge=t$4.createContext();Ge.Consumer;var Ye={};function qe(e,t,n){var o=N(e),i=!ke(e),a=t.attrs,c=void 0===a?w$2:a,d=t.componentId,h=void 0===d?function(e,t){var n="string"!=typeof e?"sc":Te(e);Ye[n]=(Ye[n]||0)+1;var r=n+"-"+xe("5.3.3"+n+Ye[n]);return t?t+"-"+r:r;}(t.displayName,t.parentComponentId):d,p=t.displayName,f=void 0===p?function(e){return ke(e)?"styled."+e:"Styled("+_$1(e)+")";}(e):p,g=t.displayName&&t.componentId?Te(t.displayName)+"-"+t.componentId:t.componentId||h,S=o&&e.attrs?Array.prototype.concat(e.attrs,c).filter(Boolean):c,A=t.shouldForwardProp;o&&e.shouldForwardProp&&(A=t.shouldForwardProp?function(n,r,o){return e.shouldForwardProp(n,r,o)&&t.shouldForwardProp(n,r,o);}:e.shouldForwardProp);var C,I=new se(n,g,o?e.componentStyle:void 0),P=I.isStatic&&0===c.length,O=function O(e,t){return function(e,t,n,r){var o=e.attrs,i=e.componentStyle,a=e.defaultProps,c=e.foldedComponentIds,d=e.shouldForwardProp,h=e.styledComponentId,p=e.target;var f=function(e,t,n){void 0===e&&(e=E$2);var r=v$2({},t,{theme:e}),o={};return n.forEach(function(e){var t,n,s,i=e;for(t in b$1(i)&&(i=i(r)),i){r[t]=o[t]="className"===t?(n=o[t],s=i[t],n&&s?n+" "+s:n||s):i[t];}}),[r,o];}(Re(t,T$2(Ge),a)||E$2,t,o),y=f[0],g=f[1],S=function(e,t,n,r){var o=fe(),s=me(),i=t?e.generateAndInjectStyles(E$2,o,s):e.generateAndInjectStyles(n,o,s);return i;}(i,r,y),w=n,_=g.$as||t.$as||g.as||t.as||p,N=ke(_),A=g!==t?v$2({},t,{},g):t,C={};for(var I in A){"$"!==I[0]&&"as"!==I&&("forwardedAs"===I?C.as=A[I]:(d?d(I,index$1,_):!N||index$1(I))&&(C[I]=A[I]));}return t.style&&g.style!==t.style&&(C.style=v$2({},t.style,{},g.style)),C.className=Array.prototype.concat(c,h,S!==h?S:null,t.className,g.className).filter(Boolean).join(" "),C.ref=w,v$6(_,C);}(C,e,t,P);};return O.displayName=f,(C=t$4.forwardRef(O)).attrs=S,C.componentStyle=I,C.displayName=f,C.shouldForwardProp=A,C.foldedComponentIds=o?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):w$2,C.styledComponentId=g,C.target=o?e.target:e,C.withComponent=function(e){var r=t.componentId,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++){n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);}return o;}(t,["componentId"]),s=r&&r+"-"+(ke(e)?e:Te(_$1(e)));return qe(e,v$2({},o,{attrs:S,componentId:s}),n);},Object.defineProperty(C,"defaultProps",{get:function get(){return this._foldedDefaultProps;},set:function set(t){this._foldedDefaultProps=o?Me({},e.defaultProps,t):t;}}),C.toString=function(){return"."+C.styledComponentId;},i&&hoistNonReactStatics_cjs(C,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),C;}var He=function He(e){return function e(t,r,o){if(void 0===o&&(o=E$2),!reactIs.exports.isValidElementType(r))return j$1(1,String(r));var s=function s(){return t(r,o,Ce.apply(void 0,arguments));};return s.withConfig=function(n){return e(t,r,v$2({},o,{},n));},s.attrs=function(n){return e(t,r,v$2({},o,{attrs:Array.prototype.concat(o.attrs,n).filter(Boolean)}));},s;}(qe,e);};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach(function(e){He[e]=He(e);});var $e=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=re(e),Z$1.registerId(this.componentId+1);}var t=e.prototype;return t.createStyles=function(e,t,n,r){var o=r(Ne(this.rules,t,n,r).join(""),""),s=this.componentId+e;n.insertRules(s,s,o);},t.removeStyles=function(e,t){t.clearRules(this.componentId+e);},t.renderStyles=function(e,t,n,r){e>2&&Z$1.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r);},e;}();function We(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++){n[o-1]=arguments[o];}var i=Ce.apply(void 0,[e].concat(n)),a="sc-global-"+xe(JSON.stringify(i)),u=new $e(i,a);function l(e){var t=fe(),n=me(),o=T$2(Ge),l=s$1(t.allocateGSInstance(a)).current;return t.server&&h(l,e,t,o,n),h$6(function(){if(!t.server)return h(l,e,t,o,n),function(){return u.removeStyles(l,t);};},[l,e,t,o,n]),null;}function h(e,t,n,r,o){if(u.isStatic)u.renderStyles(e,O$1,n,o);else{var s=v$2({},t,{theme:Re(t,r,l.defaultProps)});u.renderStyles(e,s,n,o);}}return t$4.memo(l);}function Ue(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++){n[r-1]=arguments[r];}var o=Ce.apply(void 0,[e].concat(n)).join(""),s=xe(o);return new ve(s,o);}var styled=exports('s',He);var toggleSelection=function toggleSelection(){var selection=document.getSelection();if(!selection.rangeCount){return function(){};}var active=document.activeElement;var ranges=[];for(var i=0;i<selection.rangeCount;i++){ranges.push(selection.getRangeAt(i));}switch(active.tagName.toUpperCase()){// .toUpperCase handles XHTML
case'INPUT':case'TEXTAREA':active.blur();break;default:active=null;break;}selection.removeAllRanges();return function(){selection.type==='Caret'&&selection.removeAllRanges();if(!selection.rangeCount){ranges.forEach(function(range){selection.addRange(range);});}active&&active.focus();};};var deselectCurrent=toggleSelection;var clipboardToIE11Formatting={"text/plain":"Text","text/html":"Url","default":"Text"};var defaultMessage="Copy to clipboard: #{key}, Enter";function format(message){var copyKey=(/mac os x/i.test(navigator.userAgent)?"⌘":"Ctrl")+"+C";return message.replace(/#{\s*key\s*}/g,copyKey);}function copy$1(text,options){var debug,message,reselectPrevious,range,selection,mark,success=false;if(!options){options={};}debug=options.debug||false;try{reselectPrevious=deselectCurrent();range=document.createRange();selection=document.getSelection();mark=document.createElement("span");mark.textContent=text;// reset user styles for span element
mark.style.all="unset";// prevents scrolling to the end of the page
mark.style.position="fixed";mark.style.top=0;mark.style.clip="rect(0, 0, 0, 0)";// used to preserve spaces and line breaks
mark.style.whiteSpace="pre";// do not inherit user-select (it may be `none`)
mark.style.webkitUserSelect="text";mark.style.MozUserSelect="text";mark.style.msUserSelect="text";mark.style.userSelect="text";mark.addEventListener("copy",function(e){e.stopPropagation();if(options.format){e.preventDefault();if(typeof e.clipboardData==="undefined"){// IE 11
debug&&console.warn("unable to use e.clipboardData");debug&&console.warn("trying IE specific stuff");window.clipboardData.clearData();var format=clipboardToIE11Formatting[options.format]||clipboardToIE11Formatting["default"];window.clipboardData.setData(format,text);}else{// all other browsers
e.clipboardData.clearData();e.clipboardData.setData(options.format,text);}}if(options.onCopy){e.preventDefault();options.onCopy(e.clipboardData);}});document.body.appendChild(mark);range.selectNodeContents(mark);selection.addRange(range);var successful=document.execCommand("copy");if(!successful){throw new Error("copy command was unsuccessful");}success=true;}catch(err){debug&&console.error("unable to copy using execCommand: ",err);debug&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(options.format||"text",text);options.onCopy&&options.onCopy(window.clipboardData);success=true;}catch(err){debug&&console.error("unable to copy using clipboardData: ",err);debug&&console.error("falling back to prompt");message=format("message"in options?options.message:defaultMessage);window.prompt(message,text);}}finally{if(selection){if(typeof selection.removeRange=="function"){selection.removeRange(range);}else{selection.removeAllRanges();}}if(mark){document.body.removeChild(mark);}reselectPrevious();}return success;}var copyToClipboard=exports('E',copy$1);var axios$2={exports:{}};var bind$2=function bind(fn,thisArg){return function wrap(){var args=new Array(arguments.length);for(var i=0;i<args.length;i++){args[i]=arguments[i];}return fn.apply(thisArg,args);};};var bind$1=bind$2;// utils is a library of generic helper functions non-specific to axios
var toString$3=Object.prototype.toString;/**
       * Determine if a value is an Array
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is an Array, otherwise false
       */function isArray(val){return Array.isArray(val);}/**
       * Determine if a value is undefined
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if the value is undefined, otherwise false
       */function isUndefined(val){return typeof val==='undefined';}/**
       * Determine if a value is a Buffer
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Buffer, otherwise false
       */function isBuffer(val){return val!==null&&!isUndefined(val)&&val.constructor!==null&&!isUndefined(val.constructor)&&typeof val.constructor.isBuffer==='function'&&val.constructor.isBuffer(val);}/**
       * Determine if a value is an ArrayBuffer
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is an ArrayBuffer, otherwise false
       */function isArrayBuffer(val){return toString$3.call(val)==='[object ArrayBuffer]';}/**
       * Determine if a value is a FormData
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is an FormData, otherwise false
       */function isFormData(val){return toString$3.call(val)==='[object FormData]';}/**
       * Determine if a value is a view on an ArrayBuffer
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
       */function isArrayBufferView$1(val){var result;if(typeof ArrayBuffer!=='undefined'&&ArrayBuffer.isView){result=ArrayBuffer.isView(val);}else{result=val&&val.buffer&&isArrayBuffer(val.buffer);}return result;}/**
       * Determine if a value is a String
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a String, otherwise false
       */function isString(val){return typeof val==='string';}/**
       * Determine if a value is a Number
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Number, otherwise false
       */function isNumber$1(val){return typeof val==='number';}/**
       * Determine if a value is an Object
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is an Object, otherwise false
       */function isObject$2(val){return val!==null&&_typeof(val)==='object';}/**
       * Determine if a value is a plain Object
       *
       * @param {Object} val The value to test
       * @return {boolean} True if value is a plain Object, otherwise false
       */function isPlainObject(val){if(toString$3.call(val)!=='[object Object]'){return false;}var prototype=Object.getPrototypeOf(val);return prototype===null||prototype===Object.prototype;}/**
       * Determine if a value is a Date
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Date, otherwise false
       */function isDate(val){return toString$3.call(val)==='[object Date]';}/**
       * Determine if a value is a File
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a File, otherwise false
       */function isFile(val){return toString$3.call(val)==='[object File]';}/**
       * Determine if a value is a Blob
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Blob, otherwise false
       */function isBlob(val){return toString$3.call(val)==='[object Blob]';}/**
       * Determine if a value is a Function
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Function, otherwise false
       */function isFunction$2(val){return toString$3.call(val)==='[object Function]';}/**
       * Determine if a value is a Stream
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a Stream, otherwise false
       */function isStream(val){return isObject$2(val)&&isFunction$2(val.pipe);}/**
       * Determine if a value is a URLSearchParams object
       *
       * @param {Object} val The value to test
       * @returns {boolean} True if value is a URLSearchParams object, otherwise false
       */function isURLSearchParams(val){return toString$3.call(val)==='[object URLSearchParams]';}/**
       * Trim excess whitespace off the beginning and end of a string
       *
       * @param {String} str The String to trim
       * @returns {String} The String freed of excess whitespace
       */function trim(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,'');}/**
       * Determine if we're running in a standard browser environment
       *
       * This allows axios to run in a web worker, and react-native.
       * Both environments support XMLHttpRequest, but not fully standard globals.
       *
       * web workers:
       *  typeof window -> undefined
       *  typeof document -> undefined
       *
       * react-native:
       *  navigator.product -> 'ReactNative'
       * nativescript
       *  navigator.product -> 'NativeScript' or 'NS'
       */function isStandardBrowserEnv(){if(typeof navigator!=='undefined'&&(navigator.product==='ReactNative'||navigator.product==='NativeScript'||navigator.product==='NS')){return false;}return typeof window!=='undefined'&&typeof document!=='undefined';}/**
       * Iterate over an Array or an Object invoking a function for each item.
       *
       * If `obj` is an Array callback will be called passing
       * the value, index, and complete array for each item.
       *
       * If 'obj' is an Object callback will be called passing
       * the value, key, and complete object for each property.
       *
       * @param {Object|Array} obj The object to iterate
       * @param {Function} fn The callback to invoke for each item
       */function forEach(obj,fn){// Don't bother if no value provided
if(obj===null||typeof obj==='undefined'){return;}// Force an array if not already something iterable
if(_typeof(obj)!=='object'){/*eslint no-param-reassign:0*/obj=[obj];}if(isArray(obj)){// Iterate over array values
for(var i=0,l=obj.length;i<l;i++){fn.call(null,obj[i],i,obj);}}else{// Iterate over object keys
for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){fn.call(null,obj[key],key,obj);}}}}/**
       * Accepts varargs expecting each argument to be an object, then
       * immutably merges the properties of each object and returns result.
       *
       * When multiple objects contain the same key the later object in
       * the arguments list will take precedence.
       *
       * Example:
       *
       * ```js
       * var result = merge({foo: 123}, {foo: 456});
       * console.log(result.foo); // outputs 456
       * ```
       *
       * @param {Object} obj1 Object to merge
       * @returns {Object} Result of all merge properties
       */function/* obj1, obj2, obj3, ... */merge$4(){var result={};function assignValue(val,key){if(isPlainObject(result[key])&&isPlainObject(val)){result[key]=merge$4(result[key],val);}else if(isPlainObject(val)){result[key]=merge$4({},val);}else if(isArray(val)){result[key]=val.slice();}else{result[key]=val;}}for(var i=0,l=arguments.length;i<l;i++){forEach(arguments[i],assignValue);}return result;}/**
       * Extends object a by mutably adding to it the properties of object b.
       *
       * @param {Object} a The object to be extended
       * @param {Object} b The object to copy properties from
       * @param {Object} thisArg The object to bind function to
       * @return {Object} The resulting value of object a
       */function extend(a,b,thisArg){forEach(b,function assignValue(val,key){if(thisArg&&typeof val==='function'){a[key]=bind$1(val,thisArg);}else{a[key]=val;}});return a;}/**
       * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
       *
       * @param {string} content with BOM
       * @return {string} content value without BOM
       */function stripBOM(content){if(content.charCodeAt(0)===0xFEFF){content=content.slice(1);}return content;}var utils$f={isArray:isArray,isArrayBuffer:isArrayBuffer,isBuffer:isBuffer,isFormData:isFormData,isArrayBufferView:isArrayBufferView$1,isString:isString,isNumber:isNumber$1,isObject:isObject$2,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:isDate,isFile:isFile,isBlob:isBlob,isFunction:isFunction$2,isStream:isStream,isURLSearchParams:isURLSearchParams,isStandardBrowserEnv:isStandardBrowserEnv,forEach:forEach,merge:merge$4,extend:extend,trim:trim,stripBOM:stripBOM};var utils$e=utils$f;function encode(val){return encodeURIComponent(val).replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',').replace(/%20/g,'+').replace(/%5B/gi,'[').replace(/%5D/gi,']');}/**
       * Build a URL by appending params to the end
       *
       * @param {string} url The base of the url (e.g., http://www.google.com)
       * @param {object} [params] The params to be appended
       * @returns {string} The formatted url
       */var buildURL$2=function buildURL(url,params,paramsSerializer){/*eslint no-param-reassign:0*/if(!params){return url;}var serializedParams;if(paramsSerializer){serializedParams=paramsSerializer(params);}else if(utils$e.isURLSearchParams(params)){serializedParams=params.toString();}else{var parts=[];utils$e.forEach(params,function serialize(val,key){if(val===null||typeof val==='undefined'){return;}if(utils$e.isArray(val)){key=key+'[]';}else{val=[val];}utils$e.forEach(val,function parseValue(v){if(utils$e.isDate(v)){v=v.toISOString();}else if(utils$e.isObject(v)){v=JSON.stringify(v);}parts.push(encode(key)+'='+encode(v));});});serializedParams=parts.join('&');}if(serializedParams){var hashmarkIndex=url.indexOf('#');if(hashmarkIndex!==-1){url=url.slice(0,hashmarkIndex);}url+=(url.indexOf('?')===-1?'?':'&')+serializedParams;}return url;};var utils$d=utils$f;function InterceptorManager$1(){this.handlers=[];}/**
       * Add a new interceptor to the stack
       *
       * @param {Function} fulfilled The function to handle `then` for a `Promise`
       * @param {Function} rejected The function to handle `reject` for a `Promise`
       *
       * @return {Number} An ID used to remove interceptor later
       */InterceptorManager$1.prototype.use=function use(fulfilled,rejected,options){this.handlers.push({fulfilled:fulfilled,rejected:rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1;};/**
       * Remove an interceptor from the stack
       *
       * @param {Number} id The ID that was returned by `use`
       */InterceptorManager$1.prototype.eject=function eject(id){if(this.handlers[id]){this.handlers[id]=null;}};/**
       * Iterate over all the registered interceptors
       *
       * This method is particularly useful for skipping over any
       * interceptors that may have become `null` calling `eject`.
       *
       * @param {Function} fn The function to call for each interceptor
       */InterceptorManager$1.prototype.forEach=function forEach(fn){utils$d.forEach(this.handlers,function forEachHandler(h){if(h!==null){fn(h);}});};var InterceptorManager_1=InterceptorManager$1;var utils$c=utils$f;var normalizeHeaderName$1=function normalizeHeaderName(headers,normalizedName){utils$c.forEach(headers,function processHeader(value,name){if(name!==normalizedName&&name.toUpperCase()===normalizedName.toUpperCase()){headers[normalizedName]=value;delete headers[name];}});};/**
       * Update an Error with the specified config, error code, and response.
       *
       * @param {Error} error The error to update.
       * @param {Object} config The config.
       * @param {string} [code] The error code (for example, 'ECONNABORTED').
       * @param {Object} [request] The request.
       * @param {Object} [response] The response.
       * @returns {Error} The error.
       */var enhanceError$2=function enhanceError(error,config,code,request,response){error.config=config;if(code){error.code=code;}error.request=request;error.response=response;error.isAxiosError=true;error.toJSON=function toJSON(){return{// Standard
message:this.message,name:this.name,// Microsoft
description:this.description,number:this.number,// Mozilla
fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,// Axios
config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null};};return error;};var enhanceError$1=enhanceError$2;/**
       * Create an Error with the specified message, config, error code, request and response.
       *
       * @param {string} message The error message.
       * @param {Object} config The config.
       * @param {string} [code] The error code (for example, 'ECONNABORTED').
       * @param {Object} [request] The request.
       * @param {Object} [response] The response.
       * @returns {Error} The created error.
       */var createError$2=function createError(message,config,code,request,response){var error=new Error(message);return enhanceError$1(error,config,code,request,response);};var createError$1=createError$2;/**
       * Resolve or reject a Promise based on response status.
       *
       * @param {Function} resolve A function that resolves the promise.
       * @param {Function} reject A function that rejects the promise.
       * @param {object} response The response.
       */var settle$1=function settle(resolve,reject,response){var validateStatus=response.config.validateStatus;if(!response.status||!validateStatus||validateStatus(response.status)){resolve(response);}else{reject(createError$1('Request failed with status code '+response.status,response.config,null,response.request,response));}};var utils$b=utils$f;var cookies$1=utils$b.isStandardBrowserEnv()?// Standard browser envs support document.cookie
function standardBrowserEnv(){return{write:function write(name,value,expires,path,domain,secure){var cookie=[];cookie.push(name+'='+encodeURIComponent(value));if(utils$b.isNumber(expires)){cookie.push('expires='+new Date(expires).toGMTString());}if(utils$b.isString(path)){cookie.push('path='+path);}if(utils$b.isString(domain)){cookie.push('domain='+domain);}if(secure===true){cookie.push('secure');}document.cookie=cookie.join('; ');},read:function read(name){var match=document.cookie.match(new RegExp('(^|;\\s*)('+name+')=([^;]*)'));return match?decodeURIComponent(match[3]):null;},remove:function remove(name){this.write(name,'',Date.now()-86400000);}};}():// Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv(){return{write:function write(){},read:function read(){return null;},remove:function remove(){}};}();/**
       * Determines whether the specified URL is absolute
       *
       * @param {string} url The URL to test
       * @returns {boolean} True if the specified URL is absolute, otherwise false
       */var isAbsoluteURL$1=function isAbsoluteURL(url){// A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
// RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
// by any combination of letters, digits, plus, period, or hyphen.
return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);};/**
       * Creates a new URL by combining the specified URLs
       *
       * @param {string} baseURL The base URL
       * @param {string} relativeURL The relative URL
       * @returns {string} The combined URL
       */var combineURLs$1=function combineURLs(baseURL,relativeURL){return relativeURL?baseURL.replace(/\/+$/,'')+'/'+relativeURL.replace(/^\/+/,''):baseURL;};var isAbsoluteURL=isAbsoluteURL$1;var combineURLs=combineURLs$1;/**
       * Creates a new URL by combining the baseURL with the requestedURL,
       * only when the requestedURL is not already an absolute URL.
       * If the requestURL is absolute, this function returns the requestedURL untouched.
       *
       * @param {string} baseURL The base URL
       * @param {string} requestedURL Absolute or relative URL to combine
       * @returns {string} The combined full path
       */var buildFullPath$1=function buildFullPath(baseURL,requestedURL){if(baseURL&&!isAbsoluteURL(requestedURL)){return combineURLs(baseURL,requestedURL);}return requestedURL;};var utils$a=utils$f;// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf=['age','authorization','content-length','content-type','etag','expires','from','host','if-modified-since','if-unmodified-since','last-modified','location','max-forwards','proxy-authorization','referer','retry-after','user-agent'];/**
       * Parse headers into an object
       *
       * ```
       * Date: Wed, 27 Aug 2014 08:58:49 GMT
       * Content-Type: application/json
       * Connection: keep-alive
       * Transfer-Encoding: chunked
       * ```
       *
       * @param {String} headers Headers needing to be parsed
       * @returns {Object} Headers parsed into an object
       */var parseHeaders$2=function parseHeaders(headers){var parsed={};var key;var val;var i;if(!headers){return parsed;}utils$a.forEach(headers.split('\n'),function parser(line){i=line.indexOf(':');key=utils$a.trim(line.substr(0,i)).toLowerCase();val=utils$a.trim(line.substr(i+1));if(key){if(parsed[key]&&ignoreDuplicateOf.indexOf(key)>=0){return;}if(key==='set-cookie'){parsed[key]=(parsed[key]?parsed[key]:[]).concat([val]);}else{parsed[key]=parsed[key]?parsed[key]+', '+val:val;}}});return parsed;};var utils$9=utils$f;var isURLSameOrigin$1=utils$9.isStandardBrowserEnv()?// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv(){var msie=/(msie|trident)/i.test(navigator.userAgent);var urlParsingNode=document.createElement('a');var originURL;/**
          * Parse a URL to discover it's components
          *
          * @param {String} url The URL to be parsed
          * @returns {Object}
          */function resolveURL(url){var href=url;if(msie){// IE needs attribute set twice to normalize properties
urlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}originURL=resolveURL(window.location.href);/**
          * Determine if a URL shares the same origin as the current location
          *
          * @param {String} requestURL The URL to test
          * @returns {boolean} True if URL shares the same origin, otherwise false
          */return function isURLSameOrigin(requestURL){var parsed=utils$9.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host;};}():// Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv(){return function isURLSameOrigin(){return true;};}();/**
       * A `Cancel` is an object that is thrown when an operation is canceled.
       *
       * @class
       * @param {string=} message The message.
       */function Cancel$3(message){this.message=message;}Cancel$3.prototype.toString=function toString(){return'Cancel'+(this.message?': '+this.message:'');};Cancel$3.prototype.__CANCEL__=true;var Cancel_1=Cancel$3;var utils$8=utils$f;var settle=settle$1;var cookies=cookies$1;var buildURL$1=buildURL$2;var buildFullPath=buildFullPath$1;var parseHeaders$1=parseHeaders$2;var isURLSameOrigin=isURLSameOrigin$1;var createError=createError$2;var defaults$5=defaults_1;var Cancel$2=Cancel_1;var xhr=function xhrAdapter(config){return new Promise(function dispatchXhrRequest(resolve,reject){var requestData=config.data;var requestHeaders=config.headers;var responseType=config.responseType;var onCanceled;function done(){if(config.cancelToken){config.cancelToken.unsubscribe(onCanceled);}if(config.signal){config.signal.removeEventListener('abort',onCanceled);}}if(utils$8.isFormData(requestData)){delete requestHeaders['Content-Type'];// Let the browser set it
}var request=new XMLHttpRequest();// HTTP basic authentication
if(config.auth){var username=config.auth.username||'';var password=config.auth.password?unescape(encodeURIComponent(config.auth.password)):'';requestHeaders.Authorization='Basic '+btoa(username+':'+password);}var fullPath=buildFullPath(config.baseURL,config.url);request.open(config.method.toUpperCase(),buildURL$1(fullPath,config.params,config.paramsSerializer),true);// Set the request timeout in MS
request.timeout=config.timeout;function onloadend(){if(!request){return;}// Prepare the response
var responseHeaders='getAllResponseHeaders'in request?parseHeaders$1(request.getAllResponseHeaders()):null;var responseData=!responseType||responseType==='text'||responseType==='json'?request.responseText:request.response;var response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config:config,request:request};settle(function _resolve(value){resolve(value);done();},function _reject(err){reject(err);done();},response);// Clean up request
request=null;}if('onloadend'in request){// Use onloadend if available
request.onloadend=onloadend;}else{// Listen for ready state to emulate onloadend
request.onreadystatechange=function handleLoad(){if(!request||request.readyState!==4){return;}// The request errored out and we didn't get a response, this will be
// handled by onerror instead
// With one exception: request that using file: protocol, most browsers
// will return status as 0 even though it's a successful request
if(request.status===0&&!(request.responseURL&&request.responseURL.indexOf('file:')===0)){return;}// readystate handler is calling before onerror or ontimeout handlers,
// so we should call onloadend on the next 'tick'
setTimeout(onloadend);};}// Handle browser request cancellation (as opposed to a manual cancellation)
request.onabort=function handleAbort(){if(!request){return;}reject(createError('Request aborted',config,'ECONNABORTED',request));// Clean up request
request=null;};// Handle low level network errors
request.onerror=function handleError(){// Real errors are hidden from us by the browser
// onerror should only fire if it's a network error
reject(createError('Network Error',config,null,request));// Clean up request
request=null;};// Handle timeout
request.ontimeout=function handleTimeout(){var timeoutErrorMessage=config.timeout?'timeout of '+config.timeout+'ms exceeded':'timeout exceeded';var transitional=config.transitional||defaults$5.transitional;if(config.timeoutErrorMessage){timeoutErrorMessage=config.timeoutErrorMessage;}reject(createError(timeoutErrorMessage,config,transitional.clarifyTimeoutError?'ETIMEDOUT':'ECONNABORTED',request));// Clean up request
request=null;};// Add xsrf header
// This is only done if running in a standard browser environment.
// Specifically not if we're in a web worker, or react-native.
if(utils$8.isStandardBrowserEnv()){// Add xsrf header
var xsrfValue=(config.withCredentials||isURLSameOrigin(fullPath))&&config.xsrfCookieName?cookies.read(config.xsrfCookieName):undefined;if(xsrfValue){requestHeaders[config.xsrfHeaderName]=xsrfValue;}}// Add headers to the request
if('setRequestHeader'in request){utils$8.forEach(requestHeaders,function setRequestHeader(val,key){if(typeof requestData==='undefined'&&key.toLowerCase()==='content-type'){// Remove Content-Type if data is undefined
delete requestHeaders[key];}else{// Otherwise add header to the request
request.setRequestHeader(key,val);}});}// Add withCredentials to request if needed
if(!utils$8.isUndefined(config.withCredentials)){request.withCredentials=!!config.withCredentials;}// Add responseType to request if needed
if(responseType&&responseType!=='json'){request.responseType=config.responseType;}// Handle progress if needed
if(typeof config.onDownloadProgress==='function'){request.addEventListener('progress',config.onDownloadProgress);}// Not all browsers support upload events
if(typeof config.onUploadProgress==='function'&&request.upload){request.upload.addEventListener('progress',config.onUploadProgress);}if(config.cancelToken||config.signal){// Handle cancellation
// eslint-disable-next-line func-names
onCanceled=function onCanceled(cancel){if(!request){return;}reject(!cancel||cancel&&cancel.type?new Cancel$2('canceled'):cancel);request.abort();request=null;};config.cancelToken&&config.cancelToken.subscribe(onCanceled);if(config.signal){config.signal.aborted?onCanceled():config.signal.addEventListener('abort',onCanceled);}}if(!requestData){requestData=null;}// Send the request
request.send(requestData);});};var utils$7=utils$f;var normalizeHeaderName=normalizeHeaderName$1;var enhanceError=enhanceError$2;var DEFAULT_CONTENT_TYPE={'Content-Type':'application/x-www-form-urlencoded'};function setContentTypeIfUnset(headers,value){if(!utils$7.isUndefined(headers)&&utils$7.isUndefined(headers['Content-Type'])){headers['Content-Type']=value;}}function getDefaultAdapter(){var adapter;if(typeof XMLHttpRequest!=='undefined'){// For browsers use XHR adapter
adapter=xhr;}else if(typeof process!=='undefined'&&Object.prototype.toString.call(process)==='[object process]'){// For node use HTTP adapter
adapter=xhr;}return adapter;}function stringifySafely(rawValue,parser,encoder){if(utils$7.isString(rawValue)){try{(parser||JSON.parse)(rawValue);return utils$7.trim(rawValue);}catch(e){if(e.name!=='SyntaxError'){throw e;}}}return(encoder||JSON.stringify)(rawValue);}var defaults$4={transitional:{silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false},adapter:getDefaultAdapter(),transformRequest:[function transformRequest(data,headers){normalizeHeaderName(headers,'Accept');normalizeHeaderName(headers,'Content-Type');if(utils$7.isFormData(data)||utils$7.isArrayBuffer(data)||utils$7.isBuffer(data)||utils$7.isStream(data)||utils$7.isFile(data)||utils$7.isBlob(data)){return data;}if(utils$7.isArrayBufferView(data)){return data.buffer;}if(utils$7.isURLSearchParams(data)){setContentTypeIfUnset(headers,'application/x-www-form-urlencoded;charset=utf-8');return data.toString();}if(utils$7.isObject(data)||headers&&headers['Content-Type']==='application/json'){setContentTypeIfUnset(headers,'application/json');return stringifySafely(data);}return data;}],transformResponse:[function transformResponse(data){var transitional=this.transitional||defaults$4.transitional;var silentJSONParsing=transitional&&transitional.silentJSONParsing;var forcedJSONParsing=transitional&&transitional.forcedJSONParsing;var strictJSONParsing=!silentJSONParsing&&this.responseType==='json';if(strictJSONParsing||forcedJSONParsing&&utils$7.isString(data)&&data.length){try{return JSON.parse(data);}catch(e){if(strictJSONParsing){if(e.name==='SyntaxError'){throw enhanceError(e,this,'E_JSON_PARSE');}throw e;}}}return data;}],/**
         * A timeout in milliseconds to abort a request. If set to 0 (default) a
         * timeout is not created.
         */timeout:0,xsrfCookieName:'XSRF-TOKEN',xsrfHeaderName:'X-XSRF-TOKEN',maxContentLength:-1,maxBodyLength:-1,validateStatus:function validateStatus(status){return status>=200&&status<300;},headers:{common:{'Accept':'application/json, text/plain, */*'}}};utils$7.forEach(['delete','get','head'],function forEachMethodNoData(method){defaults$4.headers[method]={};});utils$7.forEach(['post','put','patch'],function forEachMethodWithData(method){defaults$4.headers[method]=utils$7.merge(DEFAULT_CONTENT_TYPE);});var defaults_1=defaults$4;var utils$6=utils$f;var defaults$3=defaults_1;/**
       * Transform the data for a request or a response
       *
       * @param {Object|String} data The data to be transformed
       * @param {Array} headers The headers for the request or response
       * @param {Array|Function} fns A single function or Array of functions
       * @returns {*} The resulting transformed data
       */var transformData$1=function transformData(data,headers,fns){var context=this||defaults$3;/*eslint no-param-reassign:0*/utils$6.forEach(fns,function transform(fn){data=fn.call(context,data,headers);});return data;};var isCancel$1=function isCancel(value){return!!(value&&value.__CANCEL__);};var utils$5=utils$f;var transformData=transformData$1;var isCancel=isCancel$1;var defaults$2=defaults_1;var Cancel$1=Cancel_1;/**
       * Throws a `Cancel` if cancellation has been requested.
       */function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested();}if(config.signal&&config.signal.aborted){throw new Cancel$1('canceled');}}/**
       * Dispatch a request to the server using the configured adapter.
       *
       * @param {object} config The config that is to be used for the request
       * @returns {Promise} The Promise to be fulfilled
       */var dispatchRequest$1=function dispatchRequest(config){throwIfCancellationRequested(config);// Ensure headers exist
config.headers=config.headers||{};// Transform request data
config.data=transformData.call(config,config.data,config.headers,config.transformRequest);// Flatten headers
config.headers=utils$5.merge(config.headers.common||{},config.headers[config.method]||{},config.headers);utils$5.forEach(['delete','get','head','post','put','patch','common'],function cleanHeaderConfig(method){delete config.headers[method];});var adapter=config.adapter||defaults$2.adapter;return adapter(config).then(function onAdapterResolution(response){throwIfCancellationRequested(config);// Transform response data
response.data=transformData.call(config,response.data,response.headers,config.transformResponse);return response;},function onAdapterRejection(reason){if(!isCancel(reason)){throwIfCancellationRequested(config);// Transform response data
if(reason&&reason.response){reason.response.data=transformData.call(config,reason.response.data,reason.response.headers,config.transformResponse);}}return Promise.reject(reason);});};var utils$4=utils$f;/**
       * Config-specific merge-function which creates a new config-object
       * by merging two configuration objects together.
       *
       * @param {Object} config1
       * @param {Object} config2
       * @returns {Object} New object resulting from merging config2 to config1
       */var mergeConfig$2=function mergeConfig(config1,config2){// eslint-disable-next-line no-param-reassign
config2=config2||{};var config={};function getMergedValue(target,source){if(utils$4.isPlainObject(target)&&utils$4.isPlainObject(source)){return utils$4.merge(target,source);}else if(utils$4.isPlainObject(source)){return utils$4.merge({},source);}else if(utils$4.isArray(source)){return source.slice();}return source;}// eslint-disable-next-line consistent-return
function mergeDeepProperties(prop){if(!utils$4.isUndefined(config2[prop])){return getMergedValue(config1[prop],config2[prop]);}else if(!utils$4.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return
function valueFromConfig2(prop){if(!utils$4.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}}// eslint-disable-next-line consistent-return
function defaultToConfig2(prop){if(!utils$4.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}else if(!utils$4.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return
function mergeDirectKeys(prop){if(prop in config2){return getMergedValue(config1[prop],config2[prop]);}else if(prop in config1){return getMergedValue(undefined,config1[prop]);}}var mergeMap={'url':valueFromConfig2,'method':valueFromConfig2,'data':valueFromConfig2,'baseURL':defaultToConfig2,'transformRequest':defaultToConfig2,'transformResponse':defaultToConfig2,'paramsSerializer':defaultToConfig2,'timeout':defaultToConfig2,'timeoutMessage':defaultToConfig2,'withCredentials':defaultToConfig2,'adapter':defaultToConfig2,'responseType':defaultToConfig2,'xsrfCookieName':defaultToConfig2,'xsrfHeaderName':defaultToConfig2,'onUploadProgress':defaultToConfig2,'onDownloadProgress':defaultToConfig2,'decompress':defaultToConfig2,'maxContentLength':defaultToConfig2,'maxBodyLength':defaultToConfig2,'transport':defaultToConfig2,'httpAgent':defaultToConfig2,'httpsAgent':defaultToConfig2,'cancelToken':defaultToConfig2,'socketPath':defaultToConfig2,'responseEncoding':defaultToConfig2,'validateStatus':mergeDirectKeys};utils$4.forEach(Object.keys(config1).concat(Object.keys(config2)),function computeConfigValue(prop){var merge=mergeMap[prop]||mergeDeepProperties;var configValue=merge(prop);utils$4.isUndefined(configValue)&&merge!==mergeDirectKeys||(config[prop]=configValue);});return config;};var data$1={"version":"0.25.0"};var VERSION=data$1.version;var validators$1={};// eslint-disable-next-line func-names
['object','boolean','number','function','string','symbol'].forEach(function(type,i){validators$1[type]=function validator(thing){return _typeof(thing)===type||'a'+(i<1?'n ':' ')+type;};});var deprecatedWarnings={};/**
       * Transitional option validator
       * @param {function|boolean?} validator - set to false if the transitional option has been removed
       * @param {string?} version - deprecated version / removed since version
       * @param {string?} message - some message with additional info
       * @returns {function}
       */validators$1.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return'[Axios v'+VERSION+'] Transitional option \''+opt+'\''+desc+(message?'. '+message:'');}// eslint-disable-next-line func-names
return function(value,opt,opts){if(validator===false){throw new Error(formatMessage(opt,' has been removed'+(version?' in '+version:'')));}if(version&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;// eslint-disable-next-line no-console
console.warn(formatMessage(opt,' has been deprecated since v'+version+' and will be removed in the near future'));}return validator?validator(value,opt,opts):true;};};/**
       * Assert object's properties type
       * @param {object} options
       * @param {object} schema
       * @param {boolean?} allowUnknown
       */function assertOptions(options,schema,allowUnknown){if(_typeof(options)!=='object'){throw new TypeError('options must be an object');}var keys=Object.keys(options);var i=keys.length;while(i-->0){var opt=keys[i];var validator=schema[opt];if(validator){var value=options[opt];var result=value===undefined||validator(value,opt,options);if(result!==true){throw new TypeError('option '+opt+' must be '+result);}continue;}if(allowUnknown!==true){throw Error('Unknown option '+opt);}}}var validator$1={assertOptions:assertOptions,validators:validators$1};var utils$3=utils$f;var buildURL=buildURL$2;var InterceptorManager=InterceptorManager_1;var dispatchRequest=dispatchRequest$1;var mergeConfig$1=mergeConfig$2;var validator=validator$1;var validators=validator.validators;/**
       * Create a new instance of Axios
       *
       * @param {Object} instanceConfig The default config for the instance
       */function Axios$1(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager(),response:new InterceptorManager()};}/**
       * Dispatch a request
       *
       * @param {Object} config The config specific for this request (merged with this.defaults)
       */Axios$1.prototype.request=function request(configOrUrl,config){/*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
if(typeof configOrUrl==='string'){config=config||{};config.url=configOrUrl;}else{config=configOrUrl||{};}if(!config.url){throw new Error('Provided config url is not valid');}config=mergeConfig$1(this.defaults,config);// Set config.method
if(config.method){config.method=config.method.toLowerCase();}else if(this.defaults.method){config.method=this.defaults.method.toLowerCase();}else{config.method='get';}var transitional=config.transitional;if(transitional!==undefined){validator.assertOptions(transitional,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},false);}// filter out skipped interceptors
var requestInterceptorChain=[];var synchronousRequestInterceptors=true;this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==='function'&&interceptor.runWhen(config)===false){return;}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected);});var responseInterceptorChain=[];this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected);});var promise;if(!synchronousRequestInterceptors){var chain=[dispatchRequest,undefined];Array.prototype.unshift.apply(chain,requestInterceptorChain);chain=chain.concat(responseInterceptorChain);promise=Promise.resolve(config);while(chain.length){promise=promise.then(chain.shift(),chain.shift());}return promise;}var newConfig=config;while(requestInterceptorChain.length){var onFulfilled=requestInterceptorChain.shift();var onRejected=requestInterceptorChain.shift();try{newConfig=onFulfilled(newConfig);}catch(error){onRejected(error);break;}}try{promise=dispatchRequest(newConfig);}catch(error){return Promise.reject(error);}while(responseInterceptorChain.length){promise=promise.then(responseInterceptorChain.shift(),responseInterceptorChain.shift());}return promise;};Axios$1.prototype.getUri=function getUri(config){if(!config.url){throw new Error('Provided config url is not valid');}config=mergeConfig$1(this.defaults,config);return buildURL(config.url,config.params,config.paramsSerializer).replace(/^\?/,'');};// Provide aliases for supported request methods
utils$3.forEach(['delete','get','head','options'],function forEachMethodNoData(method){/*eslint func-names:0*/Axios$1.prototype[method]=function(url,config){return this.request(mergeConfig$1(config||{},{method:method,url:url,data:(config||{}).data}));};});utils$3.forEach(['post','put','patch'],function forEachMethodWithData(method){/*eslint func-names:0*/Axios$1.prototype[method]=function(url,data,config){return this.request(mergeConfig$1(config||{},{method:method,url:url,data:data}));};});var Axios_1=Axios$1;var Cancel=Cancel_1;/**
       * A `CancelToken` is an object that can be used to request cancellation of an operation.
       *
       * @class
       * @param {Function} executor The executor function.
       */function CancelToken(executor){if(typeof executor!=='function'){throw new TypeError('executor must be a function.');}var resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});var token=this;// eslint-disable-next-line func-names
this.promise.then(function(cancel){if(!token._listeners)return;var i;var l=token._listeners.length;for(i=0;i<l;i++){token._listeners[i](cancel);}token._listeners=null;});// eslint-disable-next-line func-names
this.promise.then=function(onfulfilled){var _resolve;// eslint-disable-next-line func-names
var promise=new Promise(function(resolve){token.subscribe(resolve);_resolve=resolve;}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve);};return promise;};executor(function cancel(message){if(token.reason){// Cancellation has already been requested
return;}token.reason=new Cancel(message);resolvePromise(token.reason);});}/**
       * Throws a `Cancel` if cancellation has been requested.
       */CancelToken.prototype.throwIfRequested=function throwIfRequested(){if(this.reason){throw this.reason;}};/**
       * Subscribe to the cancel signal
       */CancelToken.prototype.subscribe=function subscribe(listener){if(this.reason){listener(this.reason);return;}if(this._listeners){this._listeners.push(listener);}else{this._listeners=[listener];}};/**
       * Unsubscribe from the cancel signal
       */CancelToken.prototype.unsubscribe=function unsubscribe(listener){if(!this._listeners){return;}var index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1);}};/**
       * Returns an object that contains a new `CancelToken` and a function that, when called,
       * cancels the `CancelToken`.
       */CancelToken.source=function source(){var cancel;var token=new CancelToken(function executor(c){cancel=c;});return{token:token,cancel:cancel};};var CancelToken_1=CancelToken;/**
       * Syntactic sugar for invoking a function and expanding an array for arguments.
       *
       * Common use case would be to use `Function.prototype.apply`.
       *
       *  ```js
       *  function f(x, y, z) {}
       *  var args = [1, 2, 3];
       *  f.apply(null, args);
       *  ```
       *
       * With `spread` this example can be re-written.
       *
       *  ```js
       *  spread(function(x, y, z) {})([1, 2, 3]);
       *  ```
       *
       * @param {Function} callback
       * @returns {Function}
       */var spread=function spread(callback){return function wrap(arr){return callback.apply(null,arr);};};var utils$2=utils$f;/**
       * Determines whether the payload is an error thrown by Axios
       *
       * @param {*} payload The value to test
       * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
       */var isAxiosError=function isAxiosError(payload){return utils$2.isObject(payload)&&payload.isAxiosError===true;};var utils$1=utils$f;var bind=bind$2;var Axios=Axios_1;var mergeConfig=mergeConfig$2;var defaults$1=defaults_1;/**
       * Create an instance of Axios
       *
       * @param {Object} defaultConfig The default config for the instance
       * @return {Axios} A new instance of Axios
       */function createInstance(defaultConfig){var context=new Axios(defaultConfig);var instance=bind(Axios.prototype.request,context);// Copy axios.prototype to instance
utils$1.extend(instance,Axios.prototype,context);// Copy context to instance
utils$1.extend(instance,context);// Factory for creating new instances
instance.create=function create(instanceConfig){return createInstance(mergeConfig(defaultConfig,instanceConfig));};return instance;}// Create the default instance to be exported
var axios$1=createInstance(defaults$1);// Expose Axios class to allow class inheritance
axios$1.Axios=Axios;// Expose Cancel & CancelToken
axios$1.Cancel=Cancel_1;axios$1.CancelToken=CancelToken_1;axios$1.isCancel=isCancel$1;axios$1.VERSION=data$1.version;// Expose all/spread
axios$1.all=function all(promises){return Promise.all(promises);};axios$1.spread=spread;// Expose isAxiosError
axios$1.isAxiosError=isAxiosError;axios$2.exports=axios$1;// Allow use of default import syntax in TypeScript
axios$2.exports.default=axios$1;var axios=exports('c',axios$2.exports);var defaultOpts$2={xml:false,decodeEntities:true};var xmlModeDefault={_useHtmlParser2:true,xmlMode:true};/**
       * Flatten the options for Cheerio.
       *
       * This will set `_useHtmlParser2` to true if `xml` is set to true.
       *
       * @param options - The options to flatten.
       * @returns The flattened options.
       */function flatten$1(options){return(options===null||options===void 0?void 0:options.xml)?typeof options.xml==='boolean'?xmlModeDefault:_objectSpread(_objectSpread({},xmlModeDefault),options.xml):options!==null&&options!==void 0?options:undefined;}/** Types of elements found in htmlparser2's DOM */var ElementType;(function(ElementType){/** Type for the root element of a document */ElementType["Root"]="root";/** Type for Text */ElementType["Text"]="text";/** Type for <? ... ?> */ElementType["Directive"]="directive";/** Type for <!-- ... --> */ElementType["Comment"]="comment";/** Type for <script> tags */ElementType["Script"]="script";/** Type for <style> tags */ElementType["Style"]="style";/** Type for Any tag */ElementType["Tag"]="tag";/** Type for <![CDATA[ ... ]]> */ElementType["CDATA"]="cdata";/** Type for <!doctype ...> */ElementType["Doctype"]="doctype";})(ElementType||(ElementType={}));/**
       * Tests whether an element is a tag or not.
       *
       * @param elem Element to test
       */function isTag$1(elem){return elem.type===ElementType.Tag||elem.type===ElementType.Script||elem.type===ElementType.Style;}// Exports for backwards compatibility
/** Type for the root element of a document */var Root=ElementType.Root;/** Type for Text */var Text$2=ElementType.Text;/** Type for <? ... ?> */var Directive=ElementType.Directive;/** Type for <!-- ... --> */var Comment$2=ElementType.Comment;/** Type for <script> tags */var Script=ElementType.Script;/** Type for <style> tags */var Style=ElementType.Style;/** Type for Any tag */var Tag=ElementType.Tag;/** Type for <![CDATA[ ... ]]> */var CDATA$1=ElementType.CDATA;/** Type for <!doctype ...> */var Doctype=ElementType.Doctype;/**
       * This object will be used as the prototype for Nodes when creating a
       * DOM-Level-1-compliant structure.
       */var Node$1=/*#__PURE__*/function(){function Node$1(){_classCallCheck(this,Node$1);/** Parent of the node */this.parent=null;/** Previous sibling */this.prev=null;/** Next sibling */this.next=null;/** The start index of the node. Requires `withStartIndices` on the handler to be `true. */this.startIndex=null;/** The end index of the node. Requires `withEndIndices` on the handler to be `true. */this.endIndex=null;}// Read-write aliases for properties
/**
           * Same as {@link parent}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */_createClass(Node$1,[{key:"parentNode",get:function get(){return this.parent;},set:function set(parent){this.parent=parent;}/**
           * Same as {@link prev}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */},{key:"previousSibling",get:function get(){return this.prev;},set:function set(prev){this.prev=prev;}/**
           * Same as {@link next}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */},{key:"nextSibling",get:function get(){return this.next;},set:function set(next){this.next=next;}/**
           * Clone this node, and optionally its children.
           *
           * @param recursive Clone child nodes as well.
           * @returns A clone of the node.
           */},{key:"cloneNode",value:function cloneNode(){var recursive=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return cloneNode$1(this,recursive);}}]);return Node$1;}();/**
       * A node that contains some data.
       */var DataNode=/*#__PURE__*/function(_Node$){_inherits(DataNode,_Node$);var _super=_createSuper(DataNode);/**
           * @param data The content of the data node
           */function DataNode(data){var _this6;_classCallCheck(this,DataNode);_this6=_super.call(this);_this6.data=data;return _this6;}/**
           * Same as {@link data}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */_createClass(DataNode,[{key:"nodeValue",get:function get(){return this.data;},set:function set(data){this.data=data;}}]);return DataNode;}(Node$1);/**
       * Text within the document.
       */var Text$1=/*#__PURE__*/function(_DataNode){_inherits(Text$1,_DataNode);var _super2=_createSuper(Text$1);function Text$1(){var _this7;_classCallCheck(this,Text$1);_this7=_super2.apply(this,arguments);_this7.type=ElementType.Text;return _this7;}_createClass(Text$1,[{key:"nodeType",get:function get(){return 3;}}]);return Text$1;}(DataNode);/**
       * Comments within the document.
       */var Comment$1=/*#__PURE__*/function(_DataNode2){_inherits(Comment$1,_DataNode2);var _super3=_createSuper(Comment$1);function Comment$1(){var _this8;_classCallCheck(this,Comment$1);_this8=_super3.apply(this,arguments);_this8.type=ElementType.Comment;return _this8;}_createClass(Comment$1,[{key:"nodeType",get:function get(){return 8;}}]);return Comment$1;}(DataNode);/**
       * Processing instructions, including doc types.
       */var ProcessingInstruction$1=/*#__PURE__*/function(_DataNode3){_inherits(ProcessingInstruction$1,_DataNode3);var _super4=_createSuper(ProcessingInstruction$1);function ProcessingInstruction$1(name,data){var _this9;_classCallCheck(this,ProcessingInstruction$1);_this9=_super4.call(this,data);_this9.name=name;_this9.type=ElementType.Directive;return _this9;}_createClass(ProcessingInstruction$1,[{key:"nodeType",get:function get(){return 1;}}]);return ProcessingInstruction$1;}(DataNode);/**
       * A `Node` that can have children.
       */var NodeWithChildren=/*#__PURE__*/function(_Node$2){_inherits(NodeWithChildren,_Node$2);var _super5=_createSuper(NodeWithChildren);/**
           * @param children Children of the node. Only certain node types can have children.
           */function NodeWithChildren(children){var _this10;_classCallCheck(this,NodeWithChildren);_this10=_super5.call(this);_this10.children=children;return _this10;}// Aliases
/** First child of the node. */_createClass(NodeWithChildren,[{key:"firstChild",get:function get(){var _a;return(_a=this.children[0])!==null&&_a!==void 0?_a:null;}/** Last child of the node. */},{key:"lastChild",get:function get(){return this.children.length>0?this.children[this.children.length-1]:null;}/**
           * Same as {@link children}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */},{key:"childNodes",get:function get(){return this.children;},set:function set(children){this.children=children;}}]);return NodeWithChildren;}(Node$1);var CDATA=/*#__PURE__*/function(_NodeWithChildren){_inherits(CDATA,_NodeWithChildren);var _super6=_createSuper(CDATA);function CDATA(){var _this11;_classCallCheck(this,CDATA);_this11=_super6.apply(this,arguments);_this11.type=ElementType.CDATA;return _this11;}_createClass(CDATA,[{key:"nodeType",get:function get(){return 4;}}]);return CDATA;}(NodeWithChildren);/**
       * The root node of the document.
       */var Document$1=/*#__PURE__*/function(_NodeWithChildren2){_inherits(Document$1,_NodeWithChildren2);var _super7=_createSuper(Document$1);function Document$1(){var _this12;_classCallCheck(this,Document$1);_this12=_super7.apply(this,arguments);_this12.type=ElementType.Root;return _this12;}_createClass(Document$1,[{key:"nodeType",get:function get(){return 9;}}]);return Document$1;}(NodeWithChildren);/**
       * An element within the DOM.
       */var Element$1=/*#__PURE__*/function(_NodeWithChildren3){_inherits(Element$1,_NodeWithChildren3);var _super8=_createSuper(Element$1);/**
           * @param name Name of the tag, eg. `div`, `span`.
           * @param attribs Object mapping attribute names to attribute values.
           * @param children Children of the node.
           */function Element$1(name,attribs){var _this13;var children=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:name==="script"?ElementType.Script:name==="style"?ElementType.Style:ElementType.Tag;_classCallCheck(this,Element$1);_this13=_super8.call(this,children);_this13.name=name;_this13.attribs=attribs;_this13.type=type;return _this13;}_createClass(Element$1,[{key:"nodeType",get:function get(){return 1;}// DOM Level 1 aliases
/**
           * Same as {@link name}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */},{key:"tagName",get:function get(){return this.name;},set:function set(name){this.name=name;}},{key:"attributes",get:function get(){var _this14=this;return Object.keys(this.attribs).map(function(name){var _a,_b;return{name:name,value:_this14.attribs[name],namespace:(_a=_this14["x-attribsNamespace"])===null||_a===void 0?void 0:_a[name],prefix:(_b=_this14["x-attribsPrefix"])===null||_b===void 0?void 0:_b[name]};});}}]);return Element$1;}(NodeWithChildren);/**
       * @param node Node to check.
       * @returns `true` if the node is a `Element`, `false` otherwise.
       */function isTag(node){return isTag$1(node);}/**
       * @param node Node to check.
       * @returns `true` if the node has the type `CDATA`, `false` otherwise.
       */function isCDATA(node){return node.type===ElementType.CDATA;}/**
       * @param node Node to check.
       * @returns `true` if the node has the type `Text`, `false` otherwise.
       */function isText(node){return node.type===ElementType.Text;}/**
       * @param node Node to check.
       * @returns `true` if the node has the type `Comment`, `false` otherwise.
       */function isComment(node){return node.type===ElementType.Comment;}/**
       * @param node Node to check.
       * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
       */function isDirective(node){return node.type===ElementType.Directive;}/**
       * @param node Node to check.
       * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
       */function isDocument(node){return node.type===ElementType.Root;}/**
       * @param node Node to check.
       * @returns `true` if the node has children, `false` otherwise.
       */function hasChildren(node){return Object.prototype.hasOwnProperty.call(node,"children");}/**
       * Clone a node, and optionally its children.
       *
       * @param recursive Clone child nodes as well.
       * @returns A clone of the node.
       */function cloneNode$1(node){var recursive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var result;if(isText(node)){result=new Text$1(node.data);}else if(isComment(node)){result=new Comment$1(node.data);}else if(isTag(node)){var _children4=recursive?cloneChildren(node.children):[];var _clone=new Element$1(node.name,_objectSpread({},node.attribs),_children4);_children4.forEach(function(child){return child.parent=_clone;});if(node.namespace!=null){_clone.namespace=node.namespace;}if(node["x-attribsNamespace"]){_clone["x-attribsNamespace"]=_objectSpread({},node["x-attribsNamespace"]);}if(node["x-attribsPrefix"]){_clone["x-attribsPrefix"]=_objectSpread({},node["x-attribsPrefix"]);}result=_clone;}else if(isCDATA(node)){var _children5=recursive?cloneChildren(node.children):[];var _clone2=new CDATA(_children5);_children5.forEach(function(child){return child.parent=_clone2;});result=_clone2;}else if(isDocument(node)){var _children6=recursive?cloneChildren(node.children):[];var _clone3=new Document$1(_children6);_children6.forEach(function(child){return child.parent=_clone3;});if(node["x-mode"]){_clone3["x-mode"]=node["x-mode"];}result=_clone3;}else if(isDirective(node)){var instruction=new ProcessingInstruction$1(node.name,node.data);if(node["x-name"]!=null){instruction["x-name"]=node["x-name"];instruction["x-publicId"]=node["x-publicId"];instruction["x-systemId"]=node["x-systemId"];}result=instruction;}else{throw new Error("Not implemented yet: ".concat(node.type));}result.startIndex=node.startIndex;result.endIndex=node.endIndex;if(node.sourceCodeLocation!=null){result.sourceCodeLocation=node.sourceCodeLocation;}return result;}function cloneChildren(childs){var children=childs.map(function(child){return cloneNode$1(child,true);});for(var _i8=1;_i8<children.length;_i8++){children[_i8].prev=children[_i8-1];children[_i8-1].next=children[_i8];}return children;}// Default options
var defaultOpts$1={withStartIndices:false,withEndIndices:false,xmlMode:false};var DomHandler=/*#__PURE__*/function(){/**
           * @param callback Called once parsing has completed.
           * @param options Settings for the handler.
           * @param elementCB Callback whenever a tag is closed.
           */function DomHandler(callback,options,elementCB){_classCallCheck(this,DomHandler);/** The elements of the DOM */this.dom=[];/** The root element for the DOM */this.root=new Document$1(this.dom);/** Indicated whether parsing has been completed. */this.done=false;/** Stack of open tags. */this.tagStack=[this.root];/** A data node that is still being written to. */this.lastNode=null;/** Reference to the parser instance. Used for location information. */this.parser=null;// Make it possible to skip arguments, for backwards-compatibility
if(typeof options==="function"){elementCB=options;options=defaultOpts$1;}if(_typeof(callback)==="object"){options=callback;callback=undefined;}this.callback=callback!==null&&callback!==void 0?callback:null;this.options=options!==null&&options!==void 0?options:defaultOpts$1;this.elementCB=elementCB!==null&&elementCB!==void 0?elementCB:null;}_createClass(DomHandler,[{key:"onparserinit",value:function onparserinit(parser){this.parser=parser;}// Resets the handler back to starting state
},{key:"onreset",value:function onreset(){this.dom=[];this.root=new Document$1(this.dom);this.done=false;this.tagStack=[this.root];this.lastNode=null;this.parser=null;}// Signals the handler that parsing is done
},{key:"onend",value:function onend(){if(this.done)return;this.done=true;this.parser=null;this.handleCallback(null);}},{key:"onerror",value:function onerror(error){this.handleCallback(error);}},{key:"onclosetag",value:function onclosetag(){this.lastNode=null;var elem=this.tagStack.pop();if(this.options.withEndIndices){elem.endIndex=this.parser.endIndex;}if(this.elementCB)this.elementCB(elem);}},{key:"onopentag",value:function onopentag(name,attribs){var type=this.options.xmlMode?ElementType.Tag:undefined;var element=new Element$1(name,attribs,undefined,type);this.addNode(element);this.tagStack.push(element);}},{key:"ontext",value:function ontext(data){var lastNode=this.lastNode;if(lastNode&&lastNode.type===ElementType.Text){lastNode.data+=data;if(this.options.withEndIndices){lastNode.endIndex=this.parser.endIndex;}}else{var _node3=new Text$1(data);this.addNode(_node3);this.lastNode=_node3;}}},{key:"oncomment",value:function oncomment(data){if(this.lastNode&&this.lastNode.type===ElementType.Comment){this.lastNode.data+=data;return;}var node=new Comment$1(data);this.addNode(node);this.lastNode=node;}},{key:"oncommentend",value:function oncommentend(){this.lastNode=null;}},{key:"oncdatastart",value:function oncdatastart(){var text=new Text$1("");var node=new CDATA([text]);this.addNode(node);text.parent=node;this.lastNode=text;}},{key:"oncdataend",value:function oncdataend(){this.lastNode=null;}},{key:"onprocessinginstruction",value:function onprocessinginstruction(name,data){var node=new ProcessingInstruction$1(name,data);this.addNode(node);}},{key:"handleCallback",value:function handleCallback(error){if(typeof this.callback==="function"){this.callback(error,this.dom);}else if(error){throw error;}}},{key:"addNode",value:function addNode(node){var parent=this.tagStack[this.tagStack.length-1];var previousSibling=parent.children[parent.children.length-1];if(this.options.withStartIndices){node.startIndex=this.parser.startIndex;}if(this.options.withEndIndices){node.endIndex=this.parser.endIndex;}parent.children.push(node);if(previousSibling){node.prev=previousSibling;previousSibling.next=node;}node.parent=parent;this.lastNode=null;}}]);return DomHandler;}();// Generated using scripts/write-decode-map.ts
var htmlDecodeTree=new Uint16Array(// prettier-ignore
"\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\uD835\uDD04rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\uD835\uDD38plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\uD835\uDC9Cign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\uD835\uDD05pf;\uC000\uD835\uDD39eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\uD835\uDC9Ep\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\uD835\uDD07\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\uD835\uDD3B\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\uD835\uDC9Frok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\uD835\uDD08rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\uD835\uDD3Csilon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\uD835\uDD09lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\uD835\uDD3DAll;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\uD835\uDD0A;\u62D9pf;\uC000\uD835\uDD3Eeater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\uD835\uDCA2;\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\uD835\uDD40a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\uD835\uDD0Dpf;\uC000\uD835\uDD41\u01E3\u07C7\0\u07CCr;\uC000\uD835\uDCA5rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\uD835\uDD0Epf;\uC000\uD835\uDD42cr;\uC000\uD835\uDCA6\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\uD835\uDD0F\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\uD835\uDD43er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\uD835\uDD10nusPlus;\u6213pf;\uC000\uD835\uDD44c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\uD835\uDD11\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\uD835\uDCA9ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\uD835\uDD12rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\uD835\uDD46enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\uD835\uDCAAash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\uD835\uDD13i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\uD835\uDCAB;\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B\"\u4022r;\uC000\uD835\uDD14pf;\u611Acr;\uC000\uD835\uDCAC\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\uD835\uDD16ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\uD835\uDD4A\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\uD835\uDCAEar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\uD835\uDD17\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\uD835\uDD4BipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\uD835\uDCAFrok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\uD835\uDD18rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\uD835\uDD4C\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\uD835\uDCB0ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\uD835\uDD19pf;\uC000\uD835\uDD4Dcr;\uC000\uD835\uDCB1dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\uD835\uDD1Apf;\uC000\uD835\uDD4Ecr;\uC000\uD835\uDCB2\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\uD835\uDD1B;\u439Epf;\uC000\uD835\uDD4Fcr;\uC000\uD835\uDCB3\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\uD835\uDD1Cpf;\uC000\uD835\uDD50cr;\uC000\uD835\uDCB4ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\uD835\uDCB5\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\uD835\uDD1Erave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\uD835\uDD52\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\uD835\uDCB6;\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\uD835\uDD1Fg\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\uD835\uDD53\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\uD835\uDCB7mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\uD835\uDD20\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\uD835\uDD54o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\uD835\uDCB8\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\uD835\uDD21ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\uD835\uDD55\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\uD835\uDCB9;\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\uD835\uDD22\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\uD835\uDD56\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\uD835\uDD23lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\uD835\uDD57\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\uD835\uDCBB\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\uD835\uDD24\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\uD835\uDD58\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\uD835\uDD25s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\uD835\uDD59bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\uD835\uDCBDas\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\uD835\uDD26rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\uD835\uDD5Aa;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\uD835\uDCBEn\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\uD835\uDD27ath;\u4237pf;\uC000\uD835\uDD5B\u01E3\u23EC\0\u23F1r;\uC000\uD835\uDCBFrcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\uD835\uDD28reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\uD835\uDD5Ccr;\uC000\uD835\uDCC0\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\uD835\uDD29\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\uD835\uDD5Dus;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\uD835\uDCC1m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\uD835\uDD2Ao;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\uD835\uDD5E\u0100ct\u28F8\u28FDr;\uC000\uD835\uDCC2pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\uD835\uDD2B\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\uD835\uDD5F\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\uD835\uDCC3ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\uD835\uDD2C\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\uD835\uDD60\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\uD835\uDD2D\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\uD835\uDD61nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\uD835\uDCC5;\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\uD835\uDD2Epf;\uC000\uD835\uDD62rime;\u6057cr;\uC000\uD835\uDCC6\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\uD835\uDD2F\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\uD835\uDD63us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\uD835\uDCC7\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\uD835\uDD30\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\uD835\uDD64a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\uD835\uDCC8tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\uD835\uDD31\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\uD835\uDD65rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\uD835\uDCC9;\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\uD835\uDD32rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\uD835\uDD66\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\uD835\uDCCA\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\uD835\uDD33tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\uD835\uDD67ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\uD835\uDCCB\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\uD835\uDD34pf;\uC000\uD835\uDD68\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\uD835\uDCCC\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\uD835\uDD35\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\uD835\uDD69im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\uD835\uDCCD\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\uD835\uDD36cy;\u4457pf;\uC000\uD835\uDD6Acr;\uC000\uD835\uDCCE\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\uD835\uDD37cy;\u4436grarr;\u61DDpf;\uC000\uD835\uDD6Bcr;\uC000\uD835\uDCCF\u0100jn\u3B85\u3B87;\u600Dj;\u600C".split("").map(function(c){return c.charCodeAt(0);}));// Generated using scripts/write-decode-map.ts
var xmlDecodeTree=new Uint16Array(// prettier-ignore
"\u0200aglq\t\x15\x18\x1B\u026D\x0F\0\0\x12p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map(function(c){return c.charCodeAt(0);}));// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134
var _a;var decodeMap=new Map([[0,65533],// C1 Unicode control character reference replacements
[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);/**
       * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.
       */var fromCodePoint=// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
(_a=String.fromCodePoint)!==null&&_a!==void 0?_a:function(codePoint){var output="";if(codePoint>0xffff){codePoint-=0x10000;output+=String.fromCharCode(codePoint>>>10&0x3ff|0xd800);codePoint=0xdc00|codePoint&0x3ff;}output+=String.fromCharCode(codePoint);return output;};/**
       * Replace the given code point with a replacement character if it is a
       * surrogate or is outside the valid range. Otherwise return the code
       * point unchanged.
       */function replaceCodePoint(codePoint){var _a;if(codePoint>=0xd800&&codePoint<=0xdfff||codePoint>0x10ffff){return 0xfffd;}return(_a=decodeMap.get(codePoint))!==null&&_a!==void 0?_a:codePoint;}var CharCodes$1;(function(CharCodes){CharCodes[CharCodes["NUM"]=35]="NUM";CharCodes[CharCodes["SEMI"]=59]="SEMI";CharCodes[CharCodes["EQUALS"]=61]="EQUALS";CharCodes[CharCodes["ZERO"]=48]="ZERO";CharCodes[CharCodes["NINE"]=57]="NINE";CharCodes[CharCodes["LOWER_A"]=97]="LOWER_A";CharCodes[CharCodes["LOWER_F"]=102]="LOWER_F";CharCodes[CharCodes["LOWER_X"]=120]="LOWER_X";CharCodes[CharCodes["LOWER_Z"]=122]="LOWER_Z";CharCodes[CharCodes["UPPER_A"]=65]="UPPER_A";CharCodes[CharCodes["UPPER_F"]=70]="UPPER_F";CharCodes[CharCodes["UPPER_Z"]=90]="UPPER_Z";})(CharCodes$1||(CharCodes$1={}));var BinTrieFlags;(function(BinTrieFlags){BinTrieFlags[BinTrieFlags["VALUE_LENGTH"]=49152]="VALUE_LENGTH";BinTrieFlags[BinTrieFlags["BRANCH_LENGTH"]=16256]="BRANCH_LENGTH";BinTrieFlags[BinTrieFlags["JUMP_TABLE"]=127]="JUMP_TABLE";})(BinTrieFlags||(BinTrieFlags={}));var EntityDecoderState;(function(EntityDecoderState){EntityDecoderState[EntityDecoderState["EntityStart"]=0]="EntityStart";EntityDecoderState[EntityDecoderState["NumericStart"]=1]="NumericStart";EntityDecoderState[EntityDecoderState["NumericDecimal"]=2]="NumericDecimal";EntityDecoderState[EntityDecoderState["NumericHex"]=3]="NumericHex";EntityDecoderState[EntityDecoderState["NamedEntity"]=4]="NamedEntity";})(EntityDecoderState||(EntityDecoderState={}));var DecodingMode;(function(DecodingMode){/** Entities in text nodes that can end with any character. */DecodingMode[DecodingMode["Legacy"]=0]="Legacy";/** Only allow entities terminated with a semicolon. */DecodingMode[DecodingMode["Strict"]=1]="Strict";/** Entities in attributes have limitations on ending characters. */DecodingMode[DecodingMode["Attribute"]=2]="Attribute";})(DecodingMode||(DecodingMode={}));/**
       * Determines the branch of the current node that is taken given the current
       * character. This function is used to traverse the trie.
       *
       * @param decodeTree The trie.
       * @param current The current node.
       * @param nodeIdx The index right after the current node and its value.
       * @param char The current character.
       * @returns The index of the next node, or -1 if no branch is taken.
       */function determineBranch(decodeTree,current,nodeIdx,char){var branchCount=(current&BinTrieFlags.BRANCH_LENGTH)>>7;var jumpOffset=current&BinTrieFlags.JUMP_TABLE;// Case 1: Single branch encoded in jump offset
if(branchCount===0){return jumpOffset!==0&&char===jumpOffset?nodeIdx:-1;}// Case 2: Multiple branches encoded in jump table
if(jumpOffset){var value=char-jumpOffset;return value<0||value>=branchCount?-1:decodeTree[nodeIdx+value]-1;}// Case 3: Multiple branches encoded in dictionary
// Binary search for the character.
var lo=nodeIdx;var hi=lo+branchCount-1;while(lo<=hi){var mid=lo+hi>>>1;var midVal=decodeTree[mid];if(midVal<char){lo=mid+1;}else if(midVal>char){hi=mid-1;}else{return decodeTree[mid+branchCount];}}return-1;}var xmlReplacer=/["&'<>$\x80-\uFFFF]/g;var xmlCodeMap=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);// For compatibility with node < 4, we wrap `codePointAt`
var getCodePoint=// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
String.prototype.codePointAt!=null?function(str,index){return str.codePointAt(index);}:// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
function(c,index){return(c.charCodeAt(index)&0xfc00)===0xd800?(c.charCodeAt(index)-0xd800)*0x400+c.charCodeAt(index+1)-0xdc00+0x10000:c.charCodeAt(index);};/**
       * Encodes all non-ASCII characters, as well as characters not valid in XML
       * documents using XML entities.
       *
       * If a character has no equivalent entity, a
       * numeric hexadecimal reference (eg. `&#xfc;`) will be used.
       */function encodeXML(str){var ret="";var lastIdx=0;var match;while((match=xmlReplacer.exec(str))!==null){var _i9=match.index;var _char=str.charCodeAt(_i9);var _next=xmlCodeMap.get(_char);if(_next!==undefined){ret+=str.substring(lastIdx,_i9)+_next;lastIdx=_i9+1;}else{ret+="".concat(str.substring(lastIdx,_i9),"&#x").concat(getCodePoint(str,_i9).toString(16),";");// Increase by 1 if we have a surrogate pair
lastIdx=xmlReplacer.lastIndex+=Number((_char&0xfc00)===0xd800);}}return ret+str.substr(lastIdx);}/**
       * Creates a function that escapes all characters matched by the given regular
       * expression using the given map of characters to escape to their entities.
       *
       * @param regex Regular expression to match characters to escape.
       * @param map Map of characters to escape to their entities.
       *
       * @returns Function that escapes all characters matched by the given regular
       * expression using the given map of characters to escape to their entities.
       */function getEscaper(regex,map){return function escape(data){var match;var lastIdx=0;var result="";while(match=regex.exec(data)){if(lastIdx!==match.index){result+=data.substring(lastIdx,match.index);}// We know that this character will be in the map.
result+=map.get(match[0].charCodeAt(0));// Every match will be of length 1
lastIdx=match.index+1;}return result+data.substring(lastIdx);};}/**
       * Encodes all characters that have to be escaped in HTML attributes,
       * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
       *
       * @param data String to escape.
       */var escapeAttribute=getEscaper(/["&\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]]));/**
       * Encodes all characters that have to be escaped in HTML text,
       * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
       *
       * @param data String to escape.
       */var escapeText=getEscaper(/[&<>\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]));var elementNames=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map(function(val){return[val.toLowerCase(),val];}));var attributeNames=new Map(["definitionURL","attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map(function(val){return[val.toLowerCase(),val];}));/*
       * Module dependencies
       */var unencodedElements=new Set(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function replaceQuotes(value){return value.replace(/"/g,"&quot;");}/**
       * Format attributes
       */function formatAttributes(attributes,opts){var _a;if(!attributes)return;var encode=((_a=opts.encodeEntities)!==null&&_a!==void 0?_a:opts.decodeEntities)===false?replaceQuotes:opts.xmlMode||opts.encodeEntities!=="utf8"?encodeXML:escapeAttribute;return Object.keys(attributes).map(function(key){var _a,_b;var value=(_a=attributes[key])!==null&&_a!==void 0?_a:"";if(opts.xmlMode==="foreign"){/* Fix up mixed-case attribute names */key=(_b=attributeNames.get(key))!==null&&_b!==void 0?_b:key;}if(!opts.emptyAttrs&&!opts.xmlMode&&value===""){return key;}return"".concat(key,"=\"").concat(encode(value),"\"");}).join(" ");}/**
       * Self-enclosing tags
       */var singleTag=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);/**
       * Renders a DOM node or an array of DOM nodes to a string.
       *
       * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).
       *
       * @param node Node to be rendered.
       * @param options Changes serialization behavior
       */function render$1(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var nodes="length"in node?node:[node];var output="";for(var _i10=0;_i10<nodes.length;_i10++){output+=renderNode(nodes[_i10],options);}return output;}function renderNode(node,options){switch(node.type){case Root:return render$1(node.children,options);// @ts-expect-error We don't use `Doctype` yet
case Doctype:case Directive:return renderDirective(node);case Comment$2:return renderComment(node);case CDATA$1:return renderCdata(node);case Script:case Style:case Tag:return renderTag(node,options);case Text$2:return renderText(node,options);}}var foreignModeIntegrationPoints=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]);var foreignElements=new Set(["svg","math"]);function renderTag(elem,opts){var _a;// Handle SVG / MathML in HTML
if(opts.xmlMode==="foreign"){/* Fix up mixed-case element names */elem.name=(_a=elementNames.get(elem.name))!==null&&_a!==void 0?_a:elem.name;/* Exit foreign mode at integration points */if(elem.parent&&foreignModeIntegrationPoints.has(elem.parent.name)){opts=_objectSpread(_objectSpread({},opts),{},{xmlMode:false});}}if(!opts.xmlMode&&foreignElements.has(elem.name)){opts=_objectSpread(_objectSpread({},opts),{},{xmlMode:"foreign"});}var tag="<".concat(elem.name);var attribs=formatAttributes(elem.attribs,opts);if(attribs){tag+=" ".concat(attribs);}if(elem.children.length===0&&(opts.xmlMode?// In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags
opts.selfClosingTags!==false:// User explicitly asked for self-closing tags, even in HTML mode
opts.selfClosingTags&&singleTag.has(elem.name))){if(!opts.xmlMode)tag+=" ";tag+="/>";}else{tag+=">";if(elem.children.length>0){tag+=render$1(elem.children,opts);}if(opts.xmlMode||!singleTag.has(elem.name)){tag+="</".concat(elem.name,">");}}return tag;}function renderDirective(elem){return"<".concat(elem.data,">");}function renderText(elem,opts){var _a;var data=elem.data||"";// If entities weren't decoded, no need to encode them back
if(((_a=opts.encodeEntities)!==null&&_a!==void 0?_a:opts.decodeEntities)!==false&&!(!opts.xmlMode&&elem.parent&&unencodedElements.has(elem.parent.name))){data=opts.xmlMode||opts.encodeEntities!=="utf8"?encodeXML(data):escapeText(data);}return data;}function renderCdata(elem){return"<![CDATA[".concat(elem.children[0].data,"]]>");}function renderComment(elem){return"<!--".concat(elem.data,"-->");}/**
       * @category Stringify
       * @deprecated Use the `dom-serializer` module directly.
       * @param node Node to get the outer HTML of.
       * @param options Options for serialization.
       * @returns `node`'s outer HTML.
       */function getOuterHTML(node,options){return render$1(node,options);}/**
       * @category Stringify
       * @deprecated Use the `dom-serializer` module directly.
       * @param node Node to get the inner HTML of.
       * @param options Options for serialization.
       * @returns `node`'s inner HTML.
       */function getInnerHTML(node,options){return hasChildren(node)?node.children.map(function(node){return getOuterHTML(node,options);}).join(""):"";}/**
       * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.
       *
       * @category Stringify
       * @deprecated Use `textContent` instead.
       * @param node Node to get the inner text of.
       * @returns `node`'s inner text.
       */function getText(node){if(Array.isArray(node))return node.map(getText).join("");if(isTag(node))return node.name==="br"?"\n":getText(node.children);if(isCDATA(node))return getText(node.children);if(isText(node))return node.data;return"";}/**
       * Get a node's text content. Ignores comments.
       *
       * @category Stringify
       * @param node Node to get the text content of.
       * @returns `node`'s text content.
       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}
       */function textContent$1(node){if(Array.isArray(node))return node.map(textContent$1).join("");if(hasChildren(node)&&!isComment(node)){return textContent$1(node.children);}if(isText(node))return node.data;return"";}/**
       * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.
       *
       * @category Stringify
       * @param node Node to get the inner text of.
       * @returns `node`'s inner text.
       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}
       */function innerText(node){if(Array.isArray(node))return node.map(innerText).join("");if(hasChildren(node)&&(node.type===ElementType.Tag||isCDATA(node))){return innerText(node.children);}if(isText(node))return node.data;return"";}/**
       * Get a node's children.
       *
       * @category Traversal
       * @param elem Node to get the children of.
       * @returns `elem`'s children, or an empty array.
       */function getChildren(elem){return hasChildren(elem)?elem.children:[];}/**
       * Get a node's parent.
       *
       * @category Traversal
       * @param elem Node to get the parent of.
       * @returns `elem`'s parent node, or `null` if `elem` is a root node.
       */function getParent(elem){return elem.parent||null;}/**
       * Gets an elements siblings, including the element itself.
       *
       * Attempts to get the children through the element's parent first. If we don't
       * have a parent (the element is a root node), we walk the element's `prev` &
       * `next` to get all remaining nodes.
       *
       * @category Traversal
       * @param elem Element to get the siblings of.
       * @returns `elem`'s siblings, including `elem`.
       */function getSiblings(elem){var parent=getParent(elem);if(parent!=null)return getChildren(parent);var siblings=[elem];var prev=elem.prev,next=elem.next;while(prev!=null){siblings.unshift(prev);var _prev=prev;prev=_prev.prev;}while(next!=null){siblings.push(next);var _next2=next;next=_next2.next;}return siblings;}/**
       * Gets an attribute from an element.
       *
       * @category Traversal
       * @param elem Element to check.
       * @param name Attribute name to retrieve.
       * @returns The element's attribute value, or `undefined`.
       */function getAttributeValue(elem,name){var _a;return(_a=elem.attribs)===null||_a===void 0?void 0:_a[name];}/**
       * Checks whether an element has an attribute.
       *
       * @category Traversal
       * @param elem Element to check.
       * @param name Attribute name to look for.
       * @returns Returns whether `elem` has the attribute `name`.
       */function hasAttrib(elem,name){return elem.attribs!=null&&Object.prototype.hasOwnProperty.call(elem.attribs,name)&&elem.attribs[name]!=null;}/**
       * Get the tag name of an element.
       *
       * @category Traversal
       * @param elem The element to get the name for.
       * @returns The tag name of `elem`.
       */function getName(elem){return elem.name;}/**
       * Returns the next element sibling of a node.
       *
       * @category Traversal
       * @param elem The element to get the next sibling of.
       * @returns `elem`'s next sibling that is a tag, or `null` if there is no next
       * sibling.
       */function nextElementSibling(elem){var next=elem.next;while(next!==null&&!isTag(next)){var _next3=next;next=_next3.next;}return next;}/**
       * Returns the previous element sibling of a node.
       *
       * @category Traversal
       * @param elem The element to get the previous sibling of.
       * @returns `elem`'s previous sibling that is a tag, or `null` if there is no
       * previous sibling.
       */function prevElementSibling(elem){var prev=elem.prev;while(prev!==null&&!isTag(prev)){var _prev2=prev;prev=_prev2.prev;}return prev;}/**
       * Remove an element from the dom
       *
       * @category Manipulation
       * @param elem The element to be removed
       */function removeElement(elem){if(elem.prev)elem.prev.next=elem.next;if(elem.next)elem.next.prev=elem.prev;if(elem.parent){var childs=elem.parent.children;var childsIndex=childs.lastIndexOf(elem);if(childsIndex>=0){childs.splice(childsIndex,1);}}elem.next=null;elem.prev=null;elem.parent=null;}/**
       * Replace an element in the dom
       *
       * @category Manipulation
       * @param elem The element to be replaced
       * @param replacement The element to be added
       */function replaceElement(elem,replacement){var prev=replacement.prev=elem.prev;if(prev){prev.next=replacement;}var next=replacement.next=elem.next;if(next){next.prev=replacement;}var parent=replacement.parent=elem.parent;if(parent){var childs=parent.children;childs[childs.lastIndexOf(elem)]=replacement;elem.parent=null;}}/**
       * Append a child to an element.
       *
       * @category Manipulation
       * @param parent The element to append to.
       * @param child The element to be added as a child.
       */function appendChild(parent,child){removeElement(child);child.next=null;child.parent=parent;if(parent.children.push(child)>1){var sibling=parent.children[parent.children.length-2];sibling.next=child;child.prev=sibling;}else{child.prev=null;}}/**
       * Append an element after another.
       *
       * @category Manipulation
       * @param elem The element to append after.
       * @param next The element be added.
       */function append$1(elem,next){removeElement(next);var parent=elem.parent;var currNext=elem.next;next.next=currNext;next.prev=elem;elem.next=next;next.parent=parent;if(currNext){currNext.prev=next;if(parent){var childs=parent.children;childs.splice(childs.lastIndexOf(currNext),0,next);}}else if(parent){parent.children.push(next);}}/**
       * Prepend a child to an element.
       *
       * @category Manipulation
       * @param parent The element to prepend before.
       * @param child The element to be added as a child.
       */function prependChild(parent,child){removeElement(child);child.parent=parent;child.prev=null;if(parent.children.unshift(child)!==1){var sibling=parent.children[1];sibling.prev=child;child.next=sibling;}else{child.next=null;}}/**
       * Prepend an element before another.
       *
       * @category Manipulation
       * @param elem The element to prepend before.
       * @param prev The element be added.
       */function prepend$1(elem,prev){removeElement(prev);var parent=elem.parent;if(parent){var childs=parent.children;childs.splice(childs.indexOf(elem),0,prev);}if(elem.prev){elem.prev.next=prev;}prev.parent=parent;prev.prev=elem.prev;prev.next=elem;elem.prev=prev;}/**
       * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param node Node to search. Will be included in the result set if it matches.
       * @param recurse Also consider child nodes.
       * @param limit Maximum number of nodes to return.
       * @returns All nodes passing `test`.
       */function filter$2(test,node){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;return find$4(test,Array.isArray(node)?node:[node],recurse,limit);}/**
       * Search an array of nodes and their children for nodes passing a test function.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param nodes Array of nodes to search.
       * @param recurse Also consider child nodes.
       * @param limit Maximum number of nodes to return.
       * @returns All nodes passing `test`.
       */function find$4(test,nodes,recurse,limit){var result=[];/** Stack of the arrays we are looking at. */var nodeStack=[nodes];/** Stack of the indices within the arrays. */var indexStack=[0];for(;;){// First, check if the current array has any more elements to look at.
if(indexStack[0]>=nodeStack[0].length){// If we have no more arrays to look at, we are done.
if(indexStack.length===1){return result;}// Otherwise, remove the current array from the stack.
nodeStack.shift();indexStack.shift();// Loop back to the start to continue with the next array.
continue;}var elem=nodeStack[0][indexStack[0]++];if(test(elem)){result.push(elem);if(--limit<=0)return result;}if(recurse&&hasChildren(elem)&&elem.children.length>0){/*
                   * Add the children to the stack. We are depth-first, so this is
                   * the next array we look at.
                   */indexStack.unshift(0);nodeStack.unshift(elem.children);}}}/**
       * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param nodes Array of nodes to search.
       * @returns The first node in the array that passes `test`.
       * @deprecated Use `Array.prototype.find` directly.
       */function findOneChild(test,nodes){return nodes.find(test);}/**
       * Finds one element in a tree that passes a test.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param nodes Node or array of nodes to search.
       * @param recurse Also consider child nodes.
       * @returns The first node that passes `test`.
       */function findOne(test,nodes){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var elem=null;for(var _i11=0;_i11<nodes.length&&!elem;_i11++){var _node4=nodes[_i11];if(!isTag(_node4)){continue;}else if(test(_node4)){elem=_node4;}else if(recurse&&_node4.children.length>0){elem=findOne(test,_node4.children,true);}}return elem;}/**
       * Checks if a tree of nodes contains at least one node passing a test.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param nodes Array of nodes to search.
       * @returns Whether a tree of nodes contains at least one node passing the test.
       */function existsOne(test,nodes){return nodes.some(function(checked){return isTag(checked)&&(test(checked)||existsOne(test,checked.children));});}/**
       * Search an array of nodes and their children for elements passing a test function.
       *
       * Same as `find`, but limited to elements and with less options, leading to reduced complexity.
       *
       * @category Querying
       * @param test Function to test nodes on.
       * @param nodes Array of nodes to search.
       * @returns All nodes passing `test`.
       */function findAll(test,nodes){var result=[];var nodeStack=[nodes];var indexStack=[0];for(;;){if(indexStack[0]>=nodeStack[0].length){if(nodeStack.length===1){return result;}// Otherwise, remove the current array from the stack.
nodeStack.shift();indexStack.shift();// Loop back to the start to continue with the next array.
continue;}var elem=nodeStack[0][indexStack[0]++];if(!isTag(elem))continue;if(test(elem))result.push(elem);if(elem.children.length>0){indexStack.unshift(0);nodeStack.unshift(elem.children);}}}/**
       * A map of functions to check nodes against.
       */var Checks={tag_name:function tag_name(name){if(typeof name==="function"){return function(elem){return isTag(elem)&&name(elem.name);};}else if(name==="*"){return isTag;}return function(elem){return isTag(elem)&&elem.name===name;};},tag_type:function tag_type(type){if(typeof type==="function"){return function(elem){return type(elem.type);};}return function(elem){return elem.type===type;};},tag_contains:function tag_contains(data){if(typeof data==="function"){return function(elem){return isText(elem)&&data(elem.data);};}return function(elem){return isText(elem)&&elem.data===data;};}};/**
       * Returns a function to check whether a node has an attribute with a particular
       * value.
       *
       * @param attrib Attribute to check.
       * @param value Attribute value to look for.
       * @returns A function to check whether the a node has an attribute with a
       *   particular value.
       */function getAttribCheck(attrib,value){if(typeof value==="function"){return function(elem){return isTag(elem)&&value(elem.attribs[attrib]);};}return function(elem){return isTag(elem)&&elem.attribs[attrib]===value;};}/**
       * Returns a function that returns `true` if either of the input functions
       * returns `true` for a node.
       *
       * @param a First function to combine.
       * @param b Second function to combine.
       * @returns A function taking a node and returning `true` if either of the input
       *   functions returns `true` for the node.
       */function combineFuncs(a,b){return function(elem){return a(elem)||b(elem);};}/**
       * Returns a function that executes all checks in `options` and returns `true`
       * if any of them match a node.
       *
       * @param options An object describing nodes to look for.
       * @returns A function that executes all checks in `options` and returns `true`
       *   if any of them match a node.
       */function compileTest(options){var funcs=Object.keys(options).map(function(key){var value=options[key];return Object.prototype.hasOwnProperty.call(Checks,key)?Checks[key](value):getAttribCheck(key,value);});return funcs.length===0?null:funcs.reduce(combineFuncs);}/**
       * Checks whether a node matches the description in `options`.
       *
       * @category Legacy Query Functions
       * @param options An object describing nodes to look for.
       * @param node The element to test.
       * @returns Whether the element matches the description in `options`.
       */function testElement(options,node){var test=compileTest(options);return test?test(node):true;}/**
       * Returns all nodes that match `options`.
       *
       * @category Legacy Query Functions
       * @param options An object describing nodes to look for.
       * @param nodes Nodes to search through.
       * @param recurse Also consider child nodes.
       * @param limit Maximum number of nodes to return.
       * @returns All nodes that match `options`.
       */function getElements(options,nodes,recurse){var limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;var test=compileTest(options);return test?filter$2(test,nodes,recurse,limit):[];}/**
       * Returns the node with the supplied ID.
       *
       * @category Legacy Query Functions
       * @param id The unique ID attribute value to look for.
       * @param nodes Nodes to search through.
       * @param recurse Also consider child nodes.
       * @returns The node with the supplied ID.
       */function getElementById(id,nodes){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(!Array.isArray(nodes))nodes=[nodes];return findOne(getAttribCheck("id",id),nodes,recurse);}/**
       * Returns all nodes with the supplied `tagName`.
       *
       * @category Legacy Query Functions
       * @param tagName Tag name to search for.
       * @param nodes Nodes to search through.
       * @param recurse Also consider child nodes.
       * @param limit Maximum number of nodes to return.
       * @returns All nodes with the supplied `tagName`.
       */function getElementsByTagName(tagName,nodes){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;return filter$2(Checks["tag_name"](tagName),nodes,recurse,limit);}/**
       * Returns all nodes with the supplied `type`.
       *
       * @category Legacy Query Functions
       * @param type Element type to look for.
       * @param nodes Nodes to search through.
       * @param recurse Also consider child nodes.
       * @param limit Maximum number of nodes to return.
       * @returns All nodes with the supplied `type`.
       */function getElementsByTagType(type,nodes){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;return filter$2(Checks["tag_type"](type),nodes,recurse,limit);}/**
       * Given an array of nodes, remove any member that is contained by another
       * member.
       *
       * @category Helpers
       * @param nodes Nodes to filter.
       * @returns Remaining nodes that aren't contained by other nodes.
       */function removeSubsets(nodes){var idx=nodes.length;/*
           * Check if each node (or one of its ancestors) is already contained in the
           * array.
           */while(--idx>=0){var _node5=nodes[idx];/*
               * Remove the node if it is not unique.
               * We are going through the array from the end, so we only
               * have to check nodes that preceed the node under consideration in the array.
               */if(idx>0&&nodes.lastIndexOf(_node5,idx-1)>=0){nodes.splice(idx,1);continue;}for(var ancestor=_node5.parent;ancestor;ancestor=ancestor.parent){if(nodes.includes(ancestor)){nodes.splice(idx,1);break;}}}return nodes;}/**
       * @category Helpers
       * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}
       */var DocumentPosition;(function(DocumentPosition){DocumentPosition[DocumentPosition["DISCONNECTED"]=1]="DISCONNECTED";DocumentPosition[DocumentPosition["PRECEDING"]=2]="PRECEDING";DocumentPosition[DocumentPosition["FOLLOWING"]=4]="FOLLOWING";DocumentPosition[DocumentPosition["CONTAINS"]=8]="CONTAINS";DocumentPosition[DocumentPosition["CONTAINED_BY"]=16]="CONTAINED_BY";})(DocumentPosition||(DocumentPosition={}));/**
       * Compare the position of one node against another node in any other document,
       * returning a bitmask with the values from {@link DocumentPosition}.
       *
       * Document order:
       * > There is an ordering, document order, defined on all the nodes in the
       * > document corresponding to the order in which the first character of the
       * > XML representation of each node occurs in the XML representation of the
       * > document after expansion of general entities. Thus, the document element
       * > node will be the first node. Element nodes occur before their children.
       * > Thus, document order orders element nodes in order of the occurrence of
       * > their start-tag in the XML (after expansion of entities). The attribute
       * > nodes of an element occur after the element and before its children. The
       * > relative order of attribute nodes is implementation-dependent.
       *
       * Source:
       * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
       *
       * @category Helpers
       * @param nodeA The first node to use in the comparison
       * @param nodeB The second node to use in the comparison
       * @returns A bitmask describing the input nodes' relative position.
       *
       * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
       * a description of these values.
       */function compareDocumentPosition(nodeA,nodeB){var aParents=[];var bParents=[];if(nodeA===nodeB){return 0;}var current=hasChildren(nodeA)?nodeA:nodeA.parent;while(current){aParents.unshift(current);current=current.parent;}current=hasChildren(nodeB)?nodeB:nodeB.parent;while(current){bParents.unshift(current);current=current.parent;}var maxIdx=Math.min(aParents.length,bParents.length);var idx=0;while(idx<maxIdx&&aParents[idx]===bParents[idx]){idx++;}if(idx===0){return DocumentPosition.DISCONNECTED;}var sharedParent=aParents[idx-1];var siblings=sharedParent.children;var aSibling=aParents[idx];var bSibling=bParents[idx];if(siblings.indexOf(aSibling)>siblings.indexOf(bSibling)){if(sharedParent===nodeB){return DocumentPosition.FOLLOWING|DocumentPosition.CONTAINED_BY;}return DocumentPosition.FOLLOWING;}if(sharedParent===nodeA){return DocumentPosition.PRECEDING|DocumentPosition.CONTAINS;}return DocumentPosition.PRECEDING;}/**
       * Sort an array of nodes based on their relative position in the document,
       * removing any duplicate nodes. If the array contains nodes that do not belong
       * to the same document, sort order is unspecified.
       *
       * @category Helpers
       * @param nodes Array of DOM nodes.
       * @returns Collection of unique nodes, sorted in document order.
       */function uniqueSort(nodes){nodes=nodes.filter(function(node,i,arr){return!arr.includes(node,i+1);});nodes.sort(function(a,b){var relative=compareDocumentPosition(a,b);if(relative&DocumentPosition.PRECEDING){return-1;}else if(relative&DocumentPosition.FOLLOWING){return 1;}return 0;});return nodes;}/**
       * Get the feed object from the root of a DOM tree.
       *
       * @category Feeds
       * @param doc - The DOM to to extract the feed from.
       * @returns The feed.
       */function getFeed(doc){var feedRoot=getOneElement(isValidFeed,doc);return!feedRoot?null:feedRoot.name==="feed"?getAtomFeed(feedRoot):getRssFeed(feedRoot);}/**
       * Parse an Atom feed.
       *
       * @param feedRoot The root of the feed.
       * @returns The parsed feed.
       */function getAtomFeed(feedRoot){var _a;var childs=feedRoot.children;var feed={type:"atom",items:getElementsByTagName("entry",childs).map(function(item){var _a;var children=item.children;var entry={media:getMediaElements(children)};addConditionally(entry,"id","id",children);addConditionally(entry,"title","title",children);var href=(_a=getOneElement("link",children))===null||_a===void 0?void 0:_a.attribs["href"];if(href){entry.link=href;}var description=fetch("summary",children)||fetch("content",children);if(description){entry.description=description;}var pubDate=fetch("updated",children);if(pubDate){entry.pubDate=new Date(pubDate);}return entry;})};addConditionally(feed,"id","id",childs);addConditionally(feed,"title","title",childs);var href=(_a=getOneElement("link",childs))===null||_a===void 0?void 0:_a.attribs["href"];if(href){feed.link=href;}addConditionally(feed,"description","subtitle",childs);var updated=fetch("updated",childs);if(updated){feed.updated=new Date(updated);}addConditionally(feed,"author","email",childs,true);return feed;}/**
       * Parse a RSS feed.
       *
       * @param feedRoot The root of the feed.
       * @returns The parsed feed.
       */function getRssFeed(feedRoot){var _a,_b;var childs=(_b=(_a=getOneElement("channel",feedRoot.children))===null||_a===void 0?void 0:_a.children)!==null&&_b!==void 0?_b:[];var feed={type:feedRoot.name.substr(0,3),id:"",items:getElementsByTagName("item",feedRoot.children).map(function(item){var children=item.children;var entry={media:getMediaElements(children)};addConditionally(entry,"id","guid",children);addConditionally(entry,"title","title",children);addConditionally(entry,"link","link",children);addConditionally(entry,"description","description",children);var pubDate=fetch("pubDate",children)||fetch("dc:date",children);if(pubDate)entry.pubDate=new Date(pubDate);return entry;})};addConditionally(feed,"title","title",childs);addConditionally(feed,"link","link",childs);addConditionally(feed,"description","description",childs);var updated=fetch("lastBuildDate",childs);if(updated){feed.updated=new Date(updated);}addConditionally(feed,"author","managingEditor",childs,true);return feed;}var MEDIA_KEYS_STRING=["url","type","lang"];var MEDIA_KEYS_INT=["fileSize","bitrate","framerate","samplingrate","channels","duration","height","width"];/**
       * Get all media elements of a feed item.
       *
       * @param where Nodes to search in.
       * @returns Media elements.
       */function getMediaElements(where){return getElementsByTagName("media:content",where).map(function(elem){var attribs=elem.attribs;var media={medium:attribs["medium"],isDefault:!!attribs["isDefault"]};var _iterator2=_createForOfIteratorHelper(MEDIA_KEYS_STRING),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var attrib=_step2.value;if(attribs[attrib]){media[attrib]=attribs[attrib];}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var _iterator3=_createForOfIteratorHelper(MEDIA_KEYS_INT),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _attrib=_step3.value;if(attribs[_attrib]){media[_attrib]=parseInt(attribs[_attrib],10);}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}if(attribs["expression"]){media.expression=attribs["expression"];}return media;});}/**
       * Get one element by tag name.
       *
       * @param tagName Tag name to look for
       * @param node Node to search in
       * @returns The element or null
       */function getOneElement(tagName,node){return getElementsByTagName(tagName,node,true,1)[0];}/**
       * Get the text content of an element with a certain tag name.
       *
       * @param tagName Tag name to look for.
       * @param where Node to search in.
       * @param recurse Whether to recurse into child nodes.
       * @returns The text content of the element.
       */function fetch(tagName,where){var recurse=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return textContent$1(getElementsByTagName(tagName,where,recurse,1)).trim();}/**
       * Adds a property to an object if it has a value.
       *
       * @param obj Object to be extended
       * @param prop Property name
       * @param tagName Tag name that contains the conditionally added property
       * @param where Element to search for the property
       * @param recurse Whether to recurse into child nodes.
       */function addConditionally(obj,prop,tagName,where){var recurse=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var val=fetch(tagName,where,recurse);if(val)obj[prop]=val;}/**
       * Checks if an element is a feed root node.
       *
       * @param value The name of the element to check.
       * @returns Whether an element is a feed root node.
       */function isValidFeed(value){return value==="rss"||value==="feed"||value==="rdf:RDF";}var DomUtils=/*#__PURE__*/Object.freeze((_Object$freeze4={__proto__:null},_defineProperty(_Object$freeze4,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze4,"isTag",isTag),_defineProperty(_Object$freeze4,"isCDATA",isCDATA),_defineProperty(_Object$freeze4,"isText",isText),_defineProperty(_Object$freeze4,"isComment",isComment),_defineProperty(_Object$freeze4,"isDocument",isDocument),_defineProperty(_Object$freeze4,"hasChildren",hasChildren),_defineProperty(_Object$freeze4,"getOuterHTML",getOuterHTML),_defineProperty(_Object$freeze4,"getInnerHTML",getInnerHTML),_defineProperty(_Object$freeze4,"getText",getText),_defineProperty(_Object$freeze4,"textContent",textContent$1),_defineProperty(_Object$freeze4,"innerText",innerText),_defineProperty(_Object$freeze4,"getChildren",getChildren),_defineProperty(_Object$freeze4,"getParent",getParent),_defineProperty(_Object$freeze4,"getSiblings",getSiblings),_defineProperty(_Object$freeze4,"getAttributeValue",getAttributeValue),_defineProperty(_Object$freeze4,"hasAttrib",hasAttrib),_defineProperty(_Object$freeze4,"getName",getName),_defineProperty(_Object$freeze4,"nextElementSibling",nextElementSibling),_defineProperty(_Object$freeze4,"prevElementSibling",prevElementSibling),_defineProperty(_Object$freeze4,"removeElement",removeElement),_defineProperty(_Object$freeze4,"replaceElement",replaceElement),_defineProperty(_Object$freeze4,"appendChild",appendChild),_defineProperty(_Object$freeze4,"append",append$1),_defineProperty(_Object$freeze4,"prependChild",prependChild),_defineProperty(_Object$freeze4,"prepend",prepend$1),_defineProperty(_Object$freeze4,"filter",filter$2),_defineProperty(_Object$freeze4,"find",find$4),_defineProperty(_Object$freeze4,"findOneChild",findOneChild),_defineProperty(_Object$freeze4,"findOne",findOne),_defineProperty(_Object$freeze4,"existsOne",existsOne),_defineProperty(_Object$freeze4,"findAll",findAll),_defineProperty(_Object$freeze4,"testElement",testElement),_defineProperty(_Object$freeze4,"getElements",getElements),_defineProperty(_Object$freeze4,"getElementById",getElementById),_defineProperty(_Object$freeze4,"getElementsByTagName",getElementsByTagName),_defineProperty(_Object$freeze4,"getElementsByTagType",getElementsByTagType),_defineProperty(_Object$freeze4,"removeSubsets",removeSubsets),_DocumentPosition="DocumentPosition",_mutatorMap2={},_mutatorMap2[_DocumentPosition]=_mutatorMap2[_DocumentPosition]||{},_mutatorMap2[_DocumentPosition].get=function(){return DocumentPosition;},_defineProperty(_Object$freeze4,"compareDocumentPosition",compareDocumentPosition),_defineProperty(_Object$freeze4,"uniqueSort",uniqueSort),_defineProperty(_Object$freeze4,"getFeed",getFeed),_defineEnumerableProperties(_Object$freeze4,_mutatorMap2),_Object$freeze4));/**
       * Helper function to render a DOM.
       *
       * @param that - Cheerio instance to render.
       * @param dom - The DOM to render. Defaults to `that`'s root.
       * @param options - Options for rendering.
       * @returns The rendered document.
       */function render(that,dom,options){if(!that)return'';return that(dom!==null&&dom!==void 0?dom:that._root.children,null,undefined,options).toString();}/**
       * Checks if a passed object is an options object.
       *
       * @param dom - Object to check if it is an options object.
       * @returns Whether the object is an options object.
       */function isOptions(dom,options){return!options&&_typeof(dom)==='object'&&dom!=null&&!('length'in dom)&&!('type'in dom);}function html$1(dom,options){/*
           * Be flexible about parameters, sometimes we call html(),
           * with options as only parameter
           * check dom argument for dom element specific properties
           * assume there is no 'length' or 'type' properties in the options object
           */var toRender=isOptions(dom)?(options=dom,undefined):dom;/*
           * Sometimes `$.html()` is used without preloading html,
           * so fallback non-existing options to the default ones.
           */var opts=_objectSpread(_objectSpread(_objectSpread({},defaultOpts$2),this===null||this===void 0?void 0:this._options),flatten$1(options!==null&&options!==void 0?options:{}));return render(this,toRender,opts);}/**
       * Render the document as XML.
       *
       * @param dom - Element to render.
       * @returns THe rendered document.
       */function xml(dom){var options=_objectSpread(_objectSpread({},this._options),{},{xmlMode:true});return render(this,dom,options);}/**
       * Render the document as text.
       *
       * This returns the `textContent` of the passed elements. The result will
       * include the contents of `script` and `stype` elements. To avoid this, use
       * `.prop('innerText')` instead.
       *
       * @param elements - Elements to render.
       * @returns The rendered document.
       */function text$1(elements){var elems=elements?elements:this?this.root():[];var ret='';for(var _i12=0;_i12<elems.length;_i12++){ret+=textContent$1(elems[_i12]);}return ret;}function parseHTML(data,context){var keepScripts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:typeof context==='boolean'?context:false;if(!data||typeof data!=='string'){return null;}if(typeof context==='boolean'){keepScripts=context;}var parsed=this.load(data,defaultOpts$2,false);if(!keepScripts){parsed('script').remove();}/*
           * The `children` array is used by Cheerio internally to group elements that
           * share the same parents. When nodes created through `parseHTML` are
           * inserted into previously-existing DOM structures, they will be removed
           * from the `children` array. The results of `parseHTML` should remain
           * constant across these operations, so a shallow copy should be returned.
           */return parsed.root()[0].children.slice();}/**
       * Sometimes you need to work with the top-level root element. To query it, you
       * can use `$.root()`.
       *
       * @example
       *
       * ```js
       * $.root().append('<ul id="vegetables"></ul>').html();
       * //=> <ul id="fruits">...</ul><ul id="vegetables"></ul>
       * ```
       *
       * @returns Cheerio instance wrapping the root node.
       * @alias Cheerio.root
       */function root(){return this(this._root);}/**
       * Checks to see if the `contained` DOM element is a descendant of the
       * `container` DOM element.
       *
       * @param container - Potential parent node.
       * @param contained - Potential child node.
       * @returns Indicates if the nodes contain one another.
       * @alias Cheerio.contains
       * @see {@link https://api.jquery.com/jQuery.contains/}
       */function contains(container,contained){// According to the jQuery API, an element does not "contain" itself
if(contained===container){return false;}/*
           * Step up the descendants, stopping when the root element is reached
           * (signaled by `.parent` returning a reference to the same object)
           */var next=contained;while(next&&next!==next.parent){next=next.parent;if(next===container){return true;}}return false;}/**
       * $.merge().
       *
       * @param arr1 - First array.
       * @param arr2 - Second array.
       * @returns `arr1`, with elements of `arr2` inserted.
       * @alias Cheerio.merge
       * @see {@link https://api.jquery.com/jQuery.merge/}
       */function merge$3(arr1,arr2){if(!isArrayLike(arr1)||!isArrayLike(arr2)){return;}var newLength=arr1.length;var len=+arr2.length;for(var _i13=0;_i13<len;_i13++){arr1[newLength++]=arr2[_i13];}arr1.length=newLength;return arr1;}/**
       * Checks if an object is array-like.
       *
       * @param item - Item to check.
       * @returns Indicates if the item is array-like.
       */function isArrayLike(item){if(Array.isArray(item)){return true;}if(_typeof(item)!=='object'||!Object.prototype.hasOwnProperty.call(item,'length')||typeof item.length!=='number'||item.length<0){return false;}for(var _i14=0;_i14<item.length;_i14++){if(!(_i14 in item)){return false;}}return true;}var staticMethods=/*#__PURE__*/Object.freeze((_Object$freeze5={__proto__:null},_defineProperty(_Object$freeze5,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze5,"html",html$1),_defineProperty(_Object$freeze5,"xml",xml),_defineProperty(_Object$freeze5,"text",text$1),_defineProperty(_Object$freeze5,"parseHTML",parseHTML),_defineProperty(_Object$freeze5,"root",root),_defineProperty(_Object$freeze5,"contains",contains),_defineProperty(_Object$freeze5,"merge",merge$3),_Object$freeze5));/**
       * Checks if an object is a Cheerio instance.
       *
       * @category Utils
       * @param maybeCheerio - The object to check.
       * @returns Whether the object is a Cheerio instance.
       */function isCheerio(maybeCheerio){return maybeCheerio.cheerio!=null;}/**
       * Convert a string to camel case notation.
       *
       * @private
       * @category Utils
       * @param str - The string to be converted.
       * @returns String in camel case notation.
       */function camelCase$1(str){return str.replace(/[_.-](\w|$)/g,function(_,x){return x.toUpperCase();});}/**
       * Convert a string from camel case to "CSS case", where word boundaries are
       * described by hyphens ("-") and all characters are lower-case.
       *
       * @private
       * @category Utils
       * @param str - The string to be converted.
       * @returns String in "CSS case".
       */function cssCase(str){return str.replace(/[A-Z]/g,'-$&').toLowerCase();}/**
       * Iterate over each DOM element without creating intermediary Cheerio instances.
       *
       * This is indented for use internally to avoid otherwise unnecessary memory
       * pressure introduced by _make.
       *
       * @category Utils
       * @param array - The array to iterate over.
       * @param fn - Function to call.
       * @returns The original instance.
       */function domEach(array,fn){var len=array.length;for(var _i15=0;_i15<len;_i15++){fn(array[_i15],_i15);}return array;}/**
       * Create a deep copy of the given DOM structure. Sets the parents of the copies
       * of the passed nodes to `null`.
       *
       * @private
       * @category Utils
       * @param dom - The domhandler-compliant DOM structure.
       * @returns - The cloned DOM.
       */function cloneDom(dom){var clone='length'in dom?Array.prototype.map.call(dom,function(el){return cloneNode$1(el,true);}):[cloneNode$1(dom,true)];// Add a root node around the cloned nodes
var root=new Document$1(clone);clone.forEach(function(node){node.parent=root;});return clone;}var CharacterCodes;(function(CharacterCodes){CharacterCodes[CharacterCodes["LowerA"]=97]="LowerA";CharacterCodes[CharacterCodes["LowerZ"]=122]="LowerZ";CharacterCodes[CharacterCodes["UpperA"]=65]="UpperA";CharacterCodes[CharacterCodes["UpperZ"]=90]="UpperZ";CharacterCodes[CharacterCodes["Exclamation"]=33]="Exclamation";})(CharacterCodes||(CharacterCodes={}));/**
       * Check if string is HTML.
       *
       * Tests for a `<` within a string, immediate followed by a letter and
       * eventually followed by a `>`.
       *
       * @private
       * @category Utils
       * @param str - The string to check.
       * @returns Indicates if `str` is HTML.
       */function isHtml(str){var tagStart=str.indexOf('<');if(tagStart<0||tagStart>str.length-3)return false;var tagChar=str.charCodeAt(tagStart+1);return(tagChar>=CharacterCodes.LowerA&&tagChar<=CharacterCodes.LowerZ||tagChar>=CharacterCodes.UpperA&&tagChar<=CharacterCodes.UpperZ||tagChar===CharacterCodes.Exclamation)&&str.includes('>',tagStart+2);}/**
       * Methods for getting and modifying attributes.
       *
       * @module cheerio/attributes
       */var hasOwn=Object.prototype.hasOwnProperty;var rspace=/\s+/;var dataAttrPrefix='data-';/*
       * Lookup table for coercing string data-* attributes to their corresponding
       * JavaScript primitives
       */var primitives={null:null,true:true,false:false};// Attributes that are booleans
var rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;// Matches strings that look like JSON objects or arrays
var rbrace=/^{[^]*}$|^\[[^]*]$/;function getAttr(elem,name,xmlMode){var _a;if(!elem||!isTag(elem))return undefined;(_a=elem.attribs)!==null&&_a!==void 0?_a:elem.attribs={};// Return the entire attribs object if no attribute specified
if(!name){return elem.attribs;}if(hasOwn.call(elem.attribs,name)){// Get the (decoded) attribute
return!xmlMode&&rboolean.test(name)?name:elem.attribs[name];}// Mimic the DOM and return text content as value for `option's`
if(elem.name==='option'&&name==='value'){return text$1(elem.children);}// Mimic DOM with default value for radios/checkboxes
if(elem.name==='input'&&(elem.attribs['type']==='radio'||elem.attribs['type']==='checkbox')&&name==='value'){return'on';}return undefined;}/**
       * Sets the value of an attribute. The attribute will be deleted if the value is `null`.
       *
       * @private
       * @param el - The element to set the attribute on.
       * @param name - The attribute's name.
       * @param value - The attribute's value.
       */function setAttr(el,name,value){if(value===null){removeAttribute$1(el,name);}else{el.attribs[name]="".concat(value);}}function attr(name,value){// Set the value (with attr map support)
if(_typeof(name)==='object'||value!==undefined){if(typeof value==='function'){if(typeof name!=='string'){{throw new Error('Bad combination of arguments.');}}return domEach(this,function(el,i){if(isTag(el))setAttr(el,name,value.call(el,i,el.attribs[name]));});}return domEach(this,function(el){if(!isTag(el))return;if(_typeof(name)==='object'){Object.keys(name).forEach(function(objName){var objValue=name[objName];setAttr(el,objName,objValue);});}else{setAttr(el,name,value);}});}return arguments.length>1?this:getAttr(this[0],name,this.options.xmlMode);}/**
       * Gets a node's prop.
       *
       * @private
       * @category Attributes
       * @param el - Element to get the prop of.
       * @param name - Name of the prop.
       * @returns The prop's value.
       */function getProp(el,name,xmlMode){return name in el?// @ts-expect-error TS doesn't like us accessing the value directly here.
el[name]:!xmlMode&&rboolean.test(name)?getAttr(el,name,false)!==undefined:getAttr(el,name,xmlMode);}/**
       * Sets the value of a prop.
       *
       * @private
       * @param el - The element to set the prop on.
       * @param name - The prop's name.
       * @param value - The prop's value.
       */function setProp(el,name,value,xmlMode){if(name in el){// @ts-expect-error Overriding value
el[name]=value;}else{setAttr(el,name,!xmlMode&&rboolean.test(name)?value?'':null:"".concat(value));}}function prop(name,value){var _this15=this;var _a;if(typeof name==='string'&&value===undefined){var el=this[0];if(!el||!isTag(el))return undefined;switch(name){case'style':{var property=this.css();var _keys=Object.keys(property);_keys.forEach(function(p,i){property[i]=p;});property.length=_keys.length;return property;}case'tagName':case'nodeName':{return el.name.toUpperCase();}case'href':case'src':{var _prop=(_a=el.attribs)===null||_a===void 0?void 0:_a[name];/* eslint-disable node/no-unsupported-features/node-builtins */if(typeof URL!=='undefined'&&(name==='href'&&(el.tagName==='a'||el.name==='link')||name==='src'&&(el.tagName==='img'||el.tagName==='iframe'||el.tagName==='audio'||el.tagName==='video'||el.tagName==='source'))&&_prop!==undefined&&this.options.baseURI){return new URL(_prop,this.options.baseURI).href;}/* eslint-enable node/no-unsupported-features/node-builtins */return _prop;}case'innerText':{return innerText(el);}case'textContent':{return textContent$1(el);}case'outerHTML':return this.clone().wrap('<container />').parent().html();case'innerHTML':return this.html();default:return getProp(el,name,this.options.xmlMode);}}if(_typeof(name)==='object'||value!==undefined){if(typeof value==='function'){if(_typeof(name)==='object'){throw new Error('Bad combination of arguments.');}return domEach(this,function(el,i){if(isTag(el)){setProp(el,name,value.call(el,i,getProp(el,name,_this15.options.xmlMode)),_this15.options.xmlMode);}});}return domEach(this,function(el){if(!isTag(el))return;if(_typeof(name)==='object'){Object.keys(name).forEach(function(key){var val=name[key];setProp(el,key,val,_this15.options.xmlMode);});}else{setProp(el,name,value,_this15.options.xmlMode);}});}return undefined;}/**
       * Sets the value of a data attribute.
       *
       * @private
       * @param el - The element to set the data attribute on.
       * @param name - The data attribute's name.
       * @param value - The data attribute's value.
       */function setData(el,name,value){var _a;var elem=el;(_a=elem.data)!==null&&_a!==void 0?_a:elem.data={};if(_typeof(name)==='object')Object.assign(elem.data,name);else if(typeof name==='string'&&value!==undefined){elem.data[name]=value;}}/**
       * Read the specified attribute from the equivalent HTML5 `data-*` attribute,
       * and (if present) cache the value in the node's internal data store. If no
       * attribute name is specified, read _all_ HTML5 `data-*` attributes in this manner.
       *
       * @private
       * @category Attributes
       * @param el - Element to get the data attribute of.
       * @param name - Name of the data attribute.
       * @returns The data attribute's value, or a map with all of the data attributes.
       */function readData(el,name){var domNames;var jsNames;var value;if(name==null){domNames=Object.keys(el.attribs).filter(function(attrName){return attrName.startsWith(dataAttrPrefix);});jsNames=domNames.map(function(domName){return camelCase$1(domName.slice(dataAttrPrefix.length));});}else{domNames=[dataAttrPrefix+cssCase(name)];jsNames=[name];}for(var idx=0;idx<domNames.length;++idx){var domName=domNames[idx];var jsName=jsNames[idx];if(hasOwn.call(el.attribs,domName)&&!hasOwn.call(el.data,jsName)){value=el.attribs[domName];if(hasOwn.call(primitives,value)){value=primitives[value];}else if(value===String(Number(value))){value=Number(value);}else if(rbrace.test(value)){try{value=JSON.parse(value);}catch(e){/* Ignore */}}el.data[jsName]=value;}}return name==null?el.data:value;}function data(name,value){var _a;var elem=this[0];if(!elem||!isTag(elem))return;var dataEl=elem;(_a=dataEl.data)!==null&&_a!==void 0?_a:dataEl.data={};// Return the entire data object if no data specified
if(!name){return readData(dataEl);}// Set the value (with attr map support)
if(_typeof(name)==='object'||value!==undefined){domEach(this,function(el){if(isTag(el)){if(_typeof(name)==='object')setData(el,name);else setData(el,name,value);}});return this;}if(hasOwn.call(dataEl.data,name)){return dataEl.data[name];}return readData(dataEl,name);}function val(value){var querying=arguments.length===0;var element=this[0];if(!element||!isTag(element))return querying?undefined:this;switch(element.name){case'textarea':return this.text(value);case'select':{var option=this.find('option:selected');if(!querying){if(this.attr('multiple')==null&&_typeof(value)==='object'){return this;}this.find('option').removeAttr('selected');var _values=_typeof(value)!=='object'?[value]:value;for(var _i16=0;_i16<_values.length;_i16++){this.find("option[value=\"".concat(_values[_i16],"\"]")).attr('selected','');}return this;}return this.attr('multiple')?option.toArray().map(function(el){return text$1(el.children);}):option.attr('value');}case'input':case'option':return querying?this.attr('value'):this.attr('value',value);}return undefined;}/**
       * Remove an attribute.
       *
       * @private
       * @param elem - Node to remove attribute from.
       * @param name - Name of the attribute to remove.
       */function removeAttribute$1(elem,name){if(!elem.attribs||!hasOwn.call(elem.attribs,name))return;delete elem.attribs[name];}/**
       * Splits a space-separated list of names to individual names.
       *
       * @category Attributes
       * @param names - Names to split.
       * @returns - Split names.
       */function splitNames(names){return names?names.trim().split(rspace):[];}/**
       * Method for removing attributes by `name`.
       *
       * @category Attributes
       * @example
       *
       * ```js
       * $('.pear').removeAttr('class').html();
       * //=> <li>Pear</li>
       *
       * $('.apple').attr('id', 'favorite');
       * $('.apple').removeAttr('id class').html();
       * //=> <li>Apple</li>
       * ```
       *
       * @param name - Name of the attribute.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/removeAttr/}
       */function removeAttr(name){var _this16=this;var attrNames=splitNames(name);var _loop2=function _loop2(_i17){domEach(_this16,function(elem){if(isTag(elem))removeAttribute$1(elem,attrNames[_i17]);});};for(var _i17=0;_i17<attrNames.length;_i17++){_loop2(_i17);}return this;}/**
       * Check to see if _any_ of the matched elements have the given `className`.
       *
       * @category Attributes
       * @example
       *
       * ```js
       * $('.pear').hasClass('pear');
       * //=> true
       *
       * $('apple').hasClass('fruit');
       * //=> false
       *
       * $('li').hasClass('pear');
       * //=> true
       * ```
       *
       * @param className - Name of the class.
       * @returns Indicates if an element has the given `className`.
       * @see {@link https://api.jquery.com/hasClass/}
       */function hasClass$1(className){return this.toArray().some(function(elem){var clazz=isTag(elem)&&elem.attribs['class'];var idx=-1;if(clazz&&className.length){while((idx=clazz.indexOf(className,idx+1))>-1){var _end2=idx+className.length;if((idx===0||rspace.test(clazz[idx-1]))&&(_end2===clazz.length||rspace.test(clazz[_end2]))){return true;}}}return false;});}/**
       * Adds class(es) to all of the matched elements. Also accepts a `function`.
       *
       * @category Attributes
       * @example
       *
       * ```js
       * $('.pear').addClass('fruit').html();
       * //=> <li class="pear fruit">Pear</li>
       *
       * $('.apple').addClass('fruit red').html();
       * //=> <li class="apple fruit red">Apple</li>
       * ```
       *
       * @param value - Name of new class.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/addClass/}
       */function addClass$1(value){// Support functions
if(typeof value==='function'){return domEach(this,function(el,i){if(isTag(el)){var className=el.attribs['class']||'';addClass$1.call([el],value.call(el,i,className));}});}// Return if no value or not a string or function
if(!value||typeof value!=='string')return this;var classNames=value.split(rspace);var numElements=this.length;for(var _i18=0;_i18<numElements;_i18++){var el=this[_i18];// If selected element isn't a tag, move on
if(!isTag(el))continue;// If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes
var className=getAttr(el,'class',false);if(!className){setAttr(el,'class',classNames.join(' ').trim());}else{var setClass=" ".concat(className," ");// Check if class already exists
for(var _j2=0;_j2<classNames.length;_j2++){var appendClass="".concat(classNames[_j2]," ");if(!setClass.includes(" ".concat(appendClass)))setClass+=appendClass;}setAttr(el,'class',setClass.trim());}}return this;}/**
       * Removes one or more space-separated classes from the selected elements. If no
       * `className` is defined, all classes will be removed. Also accepts a `function`.
       *
       * @category Attributes
       * @example
       *
       * ```js
       * $('.pear').removeClass('pear').html();
       * //=> <li class="">Pear</li>
       *
       * $('.apple').addClass('red').removeClass().html();
       * //=> <li class="">Apple</li>
       * ```
       *
       * @param name - Name of the class. If not specified, removes all elements.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/removeClass/}
       */function removeClass$1(name){// Handle if value is a function
if(typeof name==='function'){return domEach(this,function(el,i){if(isTag(el)){removeClass$1.call([el],name.call(el,i,el.attribs['class']||''));}});}var classes=splitNames(name);var numClasses=classes.length;var removeAll=arguments.length===0;return domEach(this,function(el){if(!isTag(el))return;if(removeAll){// Short circuit the remove all case as this is the nice one
el.attribs['class']='';}else{var elClasses=splitNames(el.attribs['class']);var changed=false;for(var _j3=0;_j3<numClasses;_j3++){var _index=elClasses.indexOf(classes[_j3]);if(_index>=0){elClasses.splice(_index,1);changed=true;/*
                           * We have to do another pass to ensure that there are not duplicate
                           * classes listed
                           */_j3--;}}if(changed){el.attribs['class']=elClasses.join(' ');}}});}/**
       * Add or remove class(es) from the matched elements, depending on either the
       * class's presence or the value of the switch argument. Also accepts a `function`.
       *
       * @category Attributes
       * @example
       *
       * ```js
       * $('.apple.green').toggleClass('fruit green red').html();
       * //=> <li class="apple fruit red">Apple</li>
       *
       * $('.apple.green').toggleClass('fruit green red', true).html();
       * //=> <li class="apple green fruit red">Apple</li>
       * ```
       *
       * @param value - Name of the class. Can also be a function.
       * @param stateVal - If specified the state of the class.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/toggleClass/}
       */function toggleClass$1(value,stateVal){// Support functions
if(typeof value==='function'){return domEach(this,function(el,i){if(isTag(el)){toggleClass$1.call([el],value.call(el,i,el.attribs['class']||'',stateVal),stateVal);}});}// Return if no value or not a string or function
if(!value||typeof value!=='string')return this;var classNames=value.split(rspace);var numClasses=classNames.length;var state=typeof stateVal==='boolean'?stateVal?1:-1:0;var numElements=this.length;for(var _i19=0;_i19<numElements;_i19++){var el=this[_i19];// If selected element isn't a tag, move on
if(!isTag(el))continue;var elementClasses=splitNames(el.attribs['class']);// Check if class already exists
for(var _j4=0;_j4<numClasses;_j4++){// Check if the class name is currently defined
var _index2=elementClasses.indexOf(classNames[_j4]);// Add if stateValue === true or we are toggling and there is no value
if(state>=0&&_index2<0){elementClasses.push(classNames[_j4]);}else if(state<=0&&_index2>=0){// Otherwise remove but only if the item exists
elementClasses.splice(_index2,1);}}el.attribs['class']=elementClasses.join(' ');}return this;}var Attributes=/*#__PURE__*/Object.freeze((_Object$freeze6={__proto__:null},_defineProperty(_Object$freeze6,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze6,"attr",attr),_defineProperty(_Object$freeze6,"prop",prop),_defineProperty(_Object$freeze6,"data",data),_defineProperty(_Object$freeze6,"val",val),_defineProperty(_Object$freeze6,"removeAttr",removeAttr),_defineProperty(_Object$freeze6,"hasClass",hasClass$1),_defineProperty(_Object$freeze6,"addClass",addClass$1),_defineProperty(_Object$freeze6,"removeClass",removeClass$1),_defineProperty(_Object$freeze6,"toggleClass",toggleClass$1),_Object$freeze6));var SelectorType;(function(SelectorType){SelectorType["Attribute"]="attribute";SelectorType["Pseudo"]="pseudo";SelectorType["PseudoElement"]="pseudo-element";SelectorType["Tag"]="tag";SelectorType["Universal"]="universal";// Traversals
SelectorType["Adjacent"]="adjacent";SelectorType["Child"]="child";SelectorType["Descendant"]="descendant";SelectorType["Parent"]="parent";SelectorType["Sibling"]="sibling";SelectorType["ColumnCombinator"]="column-combinator";})(SelectorType||(SelectorType={}));var AttributeAction;(function(AttributeAction){AttributeAction["Any"]="any";AttributeAction["Element"]="element";AttributeAction["End"]="end";AttributeAction["Equals"]="equals";AttributeAction["Exists"]="exists";AttributeAction["Hyphen"]="hyphen";AttributeAction["Not"]="not";AttributeAction["Start"]="start";})(AttributeAction||(AttributeAction={}));var reName=/^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;var reEscape=/\\([\da-f]{1,6}\s?|(\s)|.)/gi;var actionTypes=new Map([[126/* Tilde */,AttributeAction.Element],[94/* Circumflex */,AttributeAction.Start],[36/* Dollar */,AttributeAction.End],[42/* Asterisk */,AttributeAction.Any],[33/* ExclamationMark */,AttributeAction.Not],[124/* Pipe */,AttributeAction.Hyphen]]);// Pseudos, whose data property is parsed as well.
var unpackPseudos=new Set(["has","not","matches","is","where","host","host-context"]);/**
       * Checks whether a specific selector is a traversal.
       * This is useful eg. in swapping the order of elements that
       * are not traversals.
       *
       * @param selector Selector to check.
       */function isTraversal$1(selector){switch(selector.type){case SelectorType.Adjacent:case SelectorType.Child:case SelectorType.Descendant:case SelectorType.Parent:case SelectorType.Sibling:case SelectorType.ColumnCombinator:return true;default:return false;}}var stripQuotesFromPseudos=new Set(["contains","icontains"]);// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152
function funescape(_,escaped,escapedWhitespace){var high=parseInt(escaped,16)-0x10000;// NaN means non-codepoint
return high!==high||escapedWhitespace?escaped:high<0?// BMP codepoint
String.fromCharCode(high+0x10000):// Supplemental Plane codepoint (surrogate pair)
String.fromCharCode(high>>10|0xd800,high&0x3ff|0xdc00);}function unescapeCSS(str){return str.replace(reEscape,funescape);}function isQuote(c){return c===39/* SingleQuote */||c===34/* DoubleQuote */;}function isWhitespace$2(c){return c===32/* Space */||c===9/* Tab */||c===10/* NewLine */||c===12/* FormFeed */||c===13/* CarriageReturn */;}/**
       * Parses `selector`, optionally with the passed `options`.
       *
       * @param selector Selector to parse.
       * @param options Options for parsing.
       * @returns Returns a two-dimensional array.
       * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),
       * the second contains the relevant tokens for that selector.
       */function parse$6(selector){var subselects=[];var endIndex=parseSelector(subselects,"".concat(selector),0);if(endIndex<selector.length){throw new Error("Unmatched selector: ".concat(selector.slice(endIndex)));}return subselects;}function parseSelector(subselects,selector,selectorIndex){var tokens=[];function getName(offset){var match=selector.slice(selectorIndex+offset).match(reName);if(!match){throw new Error("Expected name, found ".concat(selector.slice(selectorIndex)));}var _match2=_slicedToArray(match,1),name=_match2[0];selectorIndex+=offset+name.length;return unescapeCSS(name);}function stripWhitespace(offset){selectorIndex+=offset;while(selectorIndex<selector.length&&isWhitespace$2(selector.charCodeAt(selectorIndex))){selectorIndex++;}}function readValueWithParenthesis(){selectorIndex+=1;var start=selectorIndex;var counter=1;for(;counter>0&&selectorIndex<selector.length;selectorIndex++){if(selector.charCodeAt(selectorIndex)===40/* LeftParenthesis */&&!isEscaped(selectorIndex)){counter++;}else if(selector.charCodeAt(selectorIndex)===41/* RightParenthesis */&&!isEscaped(selectorIndex)){counter--;}}if(counter){throw new Error("Parenthesis not matched");}return unescapeCSS(selector.slice(start,selectorIndex-1));}function isEscaped(pos){var slashCount=0;while(selector.charCodeAt(--pos)===92/* BackSlash */){slashCount++;}return(slashCount&1)===1;}function ensureNotTraversal(){if(tokens.length>0&&isTraversal$1(tokens[tokens.length-1])){throw new Error("Did not expect successive traversals.");}}function addTraversal(type){if(tokens.length>0&&tokens[tokens.length-1].type===SelectorType.Descendant){tokens[tokens.length-1].type=type;return;}ensureNotTraversal();tokens.push({type:type});}function addSpecialAttribute(name,action){tokens.push({type:SelectorType.Attribute,name:name,action:action,value:getName(1),namespace:null,ignoreCase:"quirks"});}/**
           * We have finished parsing the current part of the selector.
           *
           * Remove descendant tokens at the end if they exist,
           * and return the last index, so that parsing can be
           * picked up from here.
           */function finalizeSubselector(){if(tokens.length&&tokens[tokens.length-1].type===SelectorType.Descendant){tokens.pop();}if(tokens.length===0){throw new Error("Empty sub-selector");}subselects.push(tokens);}stripWhitespace(0);if(selector.length===selectorIndex){return selectorIndex;}loop:while(selectorIndex<selector.length){var firstChar=selector.charCodeAt(selectorIndex);switch(firstChar){// Whitespace
case 32/* Space */:case 9/* Tab */:case 10/* NewLine */:case 12/* FormFeed */:case 13/* CarriageReturn */:{if(tokens.length===0||tokens[0].type!==SelectorType.Descendant){ensureNotTraversal();tokens.push({type:SelectorType.Descendant});}stripWhitespace(1);break;}// Traversals
case 62/* GreaterThan */:{addTraversal(SelectorType.Child);stripWhitespace(1);break;}case 60/* LessThan */:{addTraversal(SelectorType.Parent);stripWhitespace(1);break;}case 126/* Tilde */:{addTraversal(SelectorType.Sibling);stripWhitespace(1);break;}case 43/* Plus */:{addTraversal(SelectorType.Adjacent);stripWhitespace(1);break;}// Special attribute selectors: .class, #id
case 46/* Period */:{addSpecialAttribute("class",AttributeAction.Element);break;}case 35/* Hash */:{addSpecialAttribute("id",AttributeAction.Equals);break;}case 91/* LeftSquareBracket */:{stripWhitespace(1);// Determine attribute name and namespace
var _name=void 0;var namespace=null;if(selector.charCodeAt(selectorIndex)===124/* Pipe */){// Equivalent to no namespace
_name=getName(1);}else if(selector.startsWith("*|",selectorIndex)){namespace="*";_name=getName(2);}else{_name=getName(0);if(selector.charCodeAt(selectorIndex)===124/* Pipe */&&selector.charCodeAt(selectorIndex+1)!==61/* Equal */){namespace=_name;_name=getName(1);}}stripWhitespace(0);// Determine comparison operation
var action=AttributeAction.Exists;var possibleAction=actionTypes.get(selector.charCodeAt(selectorIndex));if(possibleAction){action=possibleAction;if(selector.charCodeAt(selectorIndex+1)!==61/* Equal */){throw new Error("Expected `=`");}stripWhitespace(2);}else if(selector.charCodeAt(selectorIndex)===61/* Equal */){action=AttributeAction.Equals;stripWhitespace(1);}// Determine value
var value="";var ignoreCase=null;if(action!=="exists"){if(isQuote(selector.charCodeAt(selectorIndex))){var quote=selector.charCodeAt(selectorIndex);var sectionEnd=selectorIndex+1;while(sectionEnd<selector.length&&(selector.charCodeAt(sectionEnd)!==quote||isEscaped(sectionEnd))){sectionEnd+=1;}if(selector.charCodeAt(sectionEnd)!==quote){throw new Error("Attribute value didn't end");}value=unescapeCSS(selector.slice(selectorIndex+1,sectionEnd));selectorIndex=sectionEnd+1;}else{var valueStart=selectorIndex;while(selectorIndex<selector.length&&(!isWhitespace$2(selector.charCodeAt(selectorIndex))&&selector.charCodeAt(selectorIndex)!==93/* RightSquareBracket */||isEscaped(selectorIndex))){selectorIndex+=1;}value=unescapeCSS(selector.slice(valueStart,selectorIndex));}stripWhitespace(0);// See if we have a force ignore flag
var forceIgnore=selector.charCodeAt(selectorIndex)|0x20;// If the forceIgnore flag is set (either `i` or `s`), use that value
if(forceIgnore===115/* LowerS */){ignoreCase=false;stripWhitespace(1);}else if(forceIgnore===105/* LowerI */){ignoreCase=true;stripWhitespace(1);}}if(selector.charCodeAt(selectorIndex)!==93/* RightSquareBracket */){throw new Error("Attribute selector didn't terminate");}selectorIndex+=1;var attributeSelector={type:SelectorType.Attribute,name:_name,action:action,value:value,namespace:namespace,ignoreCase:ignoreCase};tokens.push(attributeSelector);break;}case 58/* Colon */:{if(selector.charCodeAt(selectorIndex+1)===58/* Colon */){tokens.push({type:SelectorType.PseudoElement,name:getName(2).toLowerCase(),data:selector.charCodeAt(selectorIndex)===40/* LeftParenthesis */?readValueWithParenthesis():null});continue;}var _name2=getName(1).toLowerCase();var _data2=null;if(selector.charCodeAt(selectorIndex)===40/* LeftParenthesis */){if(unpackPseudos.has(_name2)){if(isQuote(selector.charCodeAt(selectorIndex+1))){throw new Error("Pseudo-selector ".concat(_name2," cannot be quoted"));}_data2=[];selectorIndex=parseSelector(_data2,selector,selectorIndex+1);if(selector.charCodeAt(selectorIndex)!==41/* RightParenthesis */){throw new Error("Missing closing parenthesis in :".concat(_name2," (").concat(selector,")"));}selectorIndex+=1;}else{_data2=readValueWithParenthesis();if(stripQuotesFromPseudos.has(_name2)){var quot=_data2.charCodeAt(0);if(quot===_data2.charCodeAt(_data2.length-1)&&isQuote(quot)){_data2=_data2.slice(1,-1);}}_data2=unescapeCSS(_data2);}}tokens.push({type:SelectorType.Pseudo,name:_name2,data:_data2});break;}case 44/* Comma */:{finalizeSubselector();tokens=[];stripWhitespace(1);break;}default:{if(selector.startsWith("/*",selectorIndex)){var endIndex=selector.indexOf("*/",selectorIndex+2);if(endIndex<0){throw new Error("Comment was not terminated");}selectorIndex=endIndex+2;// Remove leading whitespace
if(tokens.length===0){stripWhitespace(0);}break;}var _namespace=null;var _name3=void 0;if(firstChar===42/* Asterisk */){selectorIndex+=1;_name3="*";}else if(firstChar===124/* Pipe */){_name3="";if(selector.charCodeAt(selectorIndex+1)===124/* Pipe */){addTraversal(SelectorType.ColumnCombinator);stripWhitespace(2);break;}}else if(reName.test(selector.slice(selectorIndex))){_name3=getName(0);}else{break loop;}if(selector.charCodeAt(selectorIndex)===124/* Pipe */&&selector.charCodeAt(selectorIndex+1)!==124/* Pipe */){_namespace=_name3;if(selector.charCodeAt(selectorIndex+1)===42/* Asterisk */){_name3="*";selectorIndex+=2;}else{_name3=getName(1);}}tokens.push(_name3==="*"?{type:SelectorType.Universal,namespace:_namespace}:{type:SelectorType.Tag,name:_name3,namespace:_namespace});}}}finalizeSubselector();return selectorIndex;}var boolbase={trueFunc:function trueFunc(){return true;},falseFunc:function falseFunc(){return false;}};var procedure=new Map([[SelectorType.Universal,50],[SelectorType.Tag,30],[SelectorType.Attribute,1],[SelectorType.Pseudo,0]]);function isTraversal(token){return!procedure.has(token.type);}var attributes=new Map([[AttributeAction.Exists,10],[AttributeAction.Equals,8],[AttributeAction.Not,7],[AttributeAction.Start,6],[AttributeAction.End,6],[AttributeAction.Any,5]]);/**
       * Sort the parts of the passed selector,
       * as there is potential for optimization
       * (some types of selectors are faster than others)
       *
       * @param arr Selector to sort
       */function sortByProcedure(arr){var procs=arr.map(getProcedure);for(var _i20=1;_i20<arr.length;_i20++){var procNew=procs[_i20];if(procNew<0)continue;for(var _j5=_i20-1;_j5>=0&&procNew<procs[_j5];_j5--){var _token=arr[_j5+1];arr[_j5+1]=arr[_j5];arr[_j5]=_token;procs[_j5+1]=procs[_j5];procs[_j5]=procNew;}}}function getProcedure(token){var _a,_b;var proc=(_a=procedure.get(token.type))!==null&&_a!==void 0?_a:-1;if(token.type===SelectorType.Attribute){proc=(_b=attributes.get(token.action))!==null&&_b!==void 0?_b:4;if(token.action===AttributeAction.Equals&&token.name==="id"){// Prefer ID selectors (eg. #ID)
proc=9;}if(token.ignoreCase){/*
                   * IgnoreCase adds some overhead, prefer "normal" token
                   * this is a binary operation, to ensure it's still an int
                   */proc>>=1;}}else if(token.type===SelectorType.Pseudo){if(!token.data){proc=3;}else if(token.name==="has"||token.name==="contains"){proc=0;// Expensive in any case
}else if(Array.isArray(token.data)){// Eg. :matches, :not
proc=Math.min.apply(Math,_toConsumableArray(token.data.map(function(d){return Math.min.apply(Math,_toConsumableArray(d.map(getProcedure)));})));// If we have traversals, try to avoid executing this selector
if(proc<0){proc=0;}}else{proc=2;}}return proc;}/**
       * All reserved characters in a regex, used for escaping.
       *
       * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license
       * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794
       */var reChars=/[-[\]{}()*+?.,\\^$|#\s]/g;function escapeRegex(value){return value.replace(reChars,"\\$&");}/**
       * Attributes that are case-insensitive in HTML.
       *
       * @private
       * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors
       */var caseInsensitiveAttributes=new Set(["accept","accept-charset","align","alink","axis","bgcolor","charset","checked","clear","codetype","color","compact","declare","defer","dir","direction","disabled","enctype","face","frame","hreflang","http-equiv","lang","language","link","media","method","multiple","nohref","noresize","noshade","nowrap","readonly","rel","rev","rules","scope","scrolling","selected","shape","target","text","type","valign","valuetype","vlink"]);function shouldIgnoreCase(selector,options){return typeof selector.ignoreCase==="boolean"?selector.ignoreCase:selector.ignoreCase==="quirks"?!!options.quirksMode:!options.xmlMode&&caseInsensitiveAttributes.has(selector.name);}/**
       * Attribute selectors
       */var attributeRules={equals:function equals(next,data,options){var adapter=options.adapter;var name=data.name;var value=data.value;if(shouldIgnoreCase(data,options)){value=value.toLowerCase();return function(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&attr.length===value.length&&attr.toLowerCase()===value&&next(elem);};}return function(elem){return adapter.getAttributeValue(elem,name)===value&&next(elem);};},hyphen:function hyphen(next,data,options){var adapter=options.adapter;var name=data.name;var value=data.value;var len=value.length;if(shouldIgnoreCase(data,options)){value=value.toLowerCase();return function hyphenIC(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&(attr.length===len||attr.charAt(len)==="-")&&attr.substr(0,len).toLowerCase()===value&&next(elem);};}return function hyphen(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&(attr.length===len||attr.charAt(len)==="-")&&attr.substr(0,len)===value&&next(elem);};},element:function element(next,data,options){var adapter=options.adapter;var name=data.name,value=data.value;if(/\s/.test(value)){return boolbase.falseFunc;}var regex=new RegExp("(?:^|\\s)".concat(escapeRegex(value),"(?:$|\\s)"),shouldIgnoreCase(data,options)?"i":"");return function element(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&attr.length>=value.length&&regex.test(attr)&&next(elem);};},exists:function exists(next,_ref107,_ref108){var name=_ref107.name;var adapter=_ref108.adapter;return function(elem){return adapter.hasAttrib(elem,name)&&next(elem);};},start:function start(next,data,options){var adapter=options.adapter;var name=data.name;var value=data.value;var len=value.length;if(len===0){return boolbase.falseFunc;}if(shouldIgnoreCase(data,options)){value=value.toLowerCase();return function(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&attr.length>=len&&attr.substr(0,len).toLowerCase()===value&&next(elem);};}return function(elem){var _a;return!!((_a=adapter.getAttributeValue(elem,name))===null||_a===void 0?void 0:_a.startsWith(value))&&next(elem);};},end:function end(next,data,options){var adapter=options.adapter;var name=data.name;var value=data.value;var len=-value.length;if(len===0){return boolbase.falseFunc;}if(shouldIgnoreCase(data,options)){value=value.toLowerCase();return function(elem){var _a;return((_a=adapter.getAttributeValue(elem,name))===null||_a===void 0?void 0:_a.substr(len).toLowerCase())===value&&next(elem);};}return function(elem){var _a;return!!((_a=adapter.getAttributeValue(elem,name))===null||_a===void 0?void 0:_a.endsWith(value))&&next(elem);};},any:function any(next,data,options){var adapter=options.adapter;var name=data.name,value=data.value;if(value===""){return boolbase.falseFunc;}if(shouldIgnoreCase(data,options)){var regex=new RegExp(escapeRegex(value),"i");return function anyIC(elem){var attr=adapter.getAttributeValue(elem,name);return attr!=null&&attr.length>=value.length&&regex.test(attr)&&next(elem);};}return function(elem){var _a;return!!((_a=adapter.getAttributeValue(elem,name))===null||_a===void 0?void 0:_a.includes(value))&&next(elem);};},not:function not(next,data,options){var adapter=options.adapter;var name=data.name;var value=data.value;if(value===""){return function(elem){return!!adapter.getAttributeValue(elem,name)&&next(elem);};}else if(shouldIgnoreCase(data,options)){value=value.toLowerCase();return function(elem){var attr=adapter.getAttributeValue(elem,name);return(attr==null||attr.length!==value.length||attr.toLowerCase()!==value)&&next(elem);};}return function(elem){return adapter.getAttributeValue(elem,name)!==value&&next(elem);};}};// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo
// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is " \t\r\n\f"
var whitespace=new Set([9,10,12,13,32]);var ZERO="0".charCodeAt(0);var NINE="9".charCodeAt(0);/**
       * Parses an expression.
       *
       * @throws An `Error` if parsing fails.
       * @returns An array containing the integer step size and the integer offset of the nth rule.
       * @example nthCheck.parse("2n+3"); // returns [2, 3]
       */function parse$5(formula){formula=formula.trim().toLowerCase();if(formula==="even"){return[2,0];}else if(formula==="odd"){return[2,1];}// Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
var idx=0;var a=0;var sign=readSign();var number=readNumber();if(idx<formula.length&&formula.charAt(idx)==="n"){idx++;a=sign*(number!==null&&number!==void 0?number:1);skipWhitespace();if(idx<formula.length){sign=readSign();skipWhitespace();number=readNumber();}else{sign=number=0;}}// Throw if there is anything else
if(number===null||idx<formula.length){throw new Error("n-th rule couldn't be parsed ('".concat(formula,"')"));}return[a,sign*number];function readSign(){if(formula.charAt(idx)==="-"){idx++;return-1;}if(formula.charAt(idx)==="+"){idx++;}return 1;}function readNumber(){var start=idx;var value=0;while(idx<formula.length&&formula.charCodeAt(idx)>=ZERO&&formula.charCodeAt(idx)<=NINE){value=value*10+(formula.charCodeAt(idx)-ZERO);idx++;}// Return `null` if we didn't read anything.
return idx===start?null:value;}function skipWhitespace(){while(idx<formula.length&&whitespace.has(formula.charCodeAt(idx))){idx++;}}}/**
       * Returns a function that checks if an elements index matches the given rule
       * highly optimized to return the fastest solution.
       *
       * @param parsed A tuple [a, b], as returned by `parse`.
       * @returns A highly optimized function that returns whether an index matches the nth-check.
       * @example
       *
       * ```js
       * const check = nthCheck.compile([2, 3]);
       *
       * check(0); // `false`
       * check(1); // `false`
       * check(2); // `true`
       * check(3); // `false`
       * check(4); // `true`
       * check(5); // `false`
       * check(6); // `true`
       * ```
       */function compile(parsed){var a=parsed[0];// Subtract 1 from `b`, to convert from one- to zero-indexed.
var b=parsed[1]-1;/*
           * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.
           * Besides, the specification states that no elements are
           * matched when `a` and `b` are 0.
           *
           * `b < 0` here as we subtracted 1 from `b` above.
           */if(b<0&&a<=0)return boolbase.falseFunc;// When `a` is in the range -1..1, it matches any element (so only `b` is checked).
if(a===-1)return function(index){return index<=b;};if(a===0)return function(index){return index===b;};// When `b <= 0` and `a === 1`, they match any element.
if(a===1)return b<0?boolbase.trueFunc:function(index){return index>=b;};/*
           * Otherwise, modulo can be used to check if there is a match.
           *
           * Modulo doesn't care about the sign, so let's use `a`s absolute value.
           */var absA=Math.abs(a);// Get `b mod a`, + a if this is negative.
var bMod=(b%absA+absA)%absA;return a>1?function(index){return index>=b&&index%absA===bMod;}:function(index){return index<=b&&index%absA===bMod;};}/**
       * Parses and compiles a formula to a highly optimized function.
       * Combination of {@link parse} and {@link compile}.
       *
       * If the formula doesn't match any elements,
       * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.
       * Otherwise, a function accepting an _index_ is returned, which returns
       * whether or not the passed _index_ matches the formula.
       *
       * Note: The nth-rule starts counting at `1`, the returned function at `0`.
       *
       * @param formula The formula to compile.
       * @example
       * const check = nthCheck("2n+3");
       *
       * check(0); // `false`
       * check(1); // `false`
       * check(2); // `true`
       * check(3); // `false`
       * check(4); // `true`
       * check(5); // `false`
       * check(6); // `true`
       */function nthCheck(formula){return compile(parse$5(formula));}function getChildFunc(next,adapter){return function(elem){var parent=adapter.getParent(elem);return parent!=null&&adapter.isTag(parent)&&next(elem);};}var filters={contains:function contains(next,text,_ref109){var adapter=_ref109.adapter;return function contains(elem){return next(elem)&&adapter.getText(elem).includes(text);};},icontains:function icontains(next,text,_ref110){var adapter=_ref110.adapter;var itext=text.toLowerCase();return function icontains(elem){return next(elem)&&adapter.getText(elem).toLowerCase().includes(itext);};},// Location specific methods
"nth-child":function nthChild(next,rule,_ref111){var adapter=_ref111.adapter,equals=_ref111.equals;var func=nthCheck(rule);if(func===boolbase.falseFunc)return boolbase.falseFunc;if(func===boolbase.trueFunc)return getChildFunc(next,adapter);return function nthChild(elem){var siblings=adapter.getSiblings(elem);var pos=0;for(var _i21=0;_i21<siblings.length;_i21++){if(equals(elem,siblings[_i21]))break;if(adapter.isTag(siblings[_i21])){pos++;}}return func(pos)&&next(elem);};},"nth-last-child":function nthLastChild(next,rule,_ref112){var adapter=_ref112.adapter,equals=_ref112.equals;var func=nthCheck(rule);if(func===boolbase.falseFunc)return boolbase.falseFunc;if(func===boolbase.trueFunc)return getChildFunc(next,adapter);return function nthLastChild(elem){var siblings=adapter.getSiblings(elem);var pos=0;for(var _i22=siblings.length-1;_i22>=0;_i22--){if(equals(elem,siblings[_i22]))break;if(adapter.isTag(siblings[_i22])){pos++;}}return func(pos)&&next(elem);};},"nth-of-type":function nthOfType(next,rule,_ref113){var adapter=_ref113.adapter,equals=_ref113.equals;var func=nthCheck(rule);if(func===boolbase.falseFunc)return boolbase.falseFunc;if(func===boolbase.trueFunc)return getChildFunc(next,adapter);return function nthOfType(elem){var siblings=adapter.getSiblings(elem);var pos=0;for(var _i23=0;_i23<siblings.length;_i23++){var currentSibling=siblings[_i23];if(equals(elem,currentSibling))break;if(adapter.isTag(currentSibling)&&adapter.getName(currentSibling)===adapter.getName(elem)){pos++;}}return func(pos)&&next(elem);};},"nth-last-of-type":function nthLastOfType(next,rule,_ref114){var adapter=_ref114.adapter,equals=_ref114.equals;var func=nthCheck(rule);if(func===boolbase.falseFunc)return boolbase.falseFunc;if(func===boolbase.trueFunc)return getChildFunc(next,adapter);return function nthLastOfType(elem){var siblings=adapter.getSiblings(elem);var pos=0;for(var _i24=siblings.length-1;_i24>=0;_i24--){var currentSibling=siblings[_i24];if(equals(elem,currentSibling))break;if(adapter.isTag(currentSibling)&&adapter.getName(currentSibling)===adapter.getName(elem)){pos++;}}return func(pos)&&next(elem);};},// TODO determine the actual root element
root:function root(next,_rule,_ref115){var adapter=_ref115.adapter;return function(elem){var parent=adapter.getParent(elem);return(parent==null||!adapter.isTag(parent))&&next(elem);};},scope:function scope(next,rule,options,context){var equals=options.equals;if(!context||context.length===0){// Equivalent to :root
return filters["root"](next,rule,options);}if(context.length===1){// NOTE: can't be unpacked, as :has uses this for side-effects
return function(elem){return equals(context[0],elem)&&next(elem);};}return function(elem){return context.includes(elem)&&next(elem);};},hover:dynamicStatePseudo("isHovered"),visited:dynamicStatePseudo("isVisited"),active:dynamicStatePseudo("isActive")};/**
       * Dynamic state pseudos. These depend on optional Adapter methods.
       *
       * @param name The name of the adapter method to call.
       * @returns Pseudo for the `filters` object.
       */function dynamicStatePseudo(name){return function dynamicPseudo(next,_rule,_ref116){var adapter=_ref116.adapter;var func=adapter[name];if(typeof func!=="function"){return boolbase.falseFunc;}return function active(elem){return func(elem)&&next(elem);};};}// While filters are precompiled, pseudos get called when they are needed
var pseudos={empty:function empty(elem,_ref117){var adapter=_ref117.adapter;return!adapter.getChildren(elem).some(function(elem){return(// FIXME: `getText` call is potentially expensive.
adapter.isTag(elem)||adapter.getText(elem)!=="");});},"first-child":function firstChild(elem,_ref118){var adapter=_ref118.adapter,equals=_ref118.equals;if(adapter.prevElementSibling){return adapter.prevElementSibling(elem)==null;}var firstChild=adapter.getSiblings(elem).find(function(elem){return adapter.isTag(elem);});return firstChild!=null&&equals(elem,firstChild);},"last-child":function lastChild(elem,_ref119){var adapter=_ref119.adapter,equals=_ref119.equals;var siblings=adapter.getSiblings(elem);for(var _i25=siblings.length-1;_i25>=0;_i25--){if(equals(elem,siblings[_i25]))return true;if(adapter.isTag(siblings[_i25]))break;}return false;},"first-of-type":function firstOfType(elem,_ref120){var adapter=_ref120.adapter,equals=_ref120.equals;var siblings=adapter.getSiblings(elem);var elemName=adapter.getName(elem);for(var _i26=0;_i26<siblings.length;_i26++){var currentSibling=siblings[_i26];if(equals(elem,currentSibling))return true;if(adapter.isTag(currentSibling)&&adapter.getName(currentSibling)===elemName){break;}}return false;},"last-of-type":function lastOfType(elem,_ref121){var adapter=_ref121.adapter,equals=_ref121.equals;var siblings=adapter.getSiblings(elem);var elemName=adapter.getName(elem);for(var _i27=siblings.length-1;_i27>=0;_i27--){var currentSibling=siblings[_i27];if(equals(elem,currentSibling))return true;if(adapter.isTag(currentSibling)&&adapter.getName(currentSibling)===elemName){break;}}return false;},"only-of-type":function onlyOfType(elem,_ref122){var adapter=_ref122.adapter,equals=_ref122.equals;var elemName=adapter.getName(elem);return adapter.getSiblings(elem).every(function(sibling){return equals(elem,sibling)||!adapter.isTag(sibling)||adapter.getName(sibling)!==elemName;});},"only-child":function onlyChild(elem,_ref123){var adapter=_ref123.adapter,equals=_ref123.equals;return adapter.getSiblings(elem).every(function(sibling){return equals(elem,sibling)||!adapter.isTag(sibling);});}};function verifyPseudoArgs(func,name,subselect,argIndex){if(subselect===null){if(func.length>argIndex){throw new Error("Pseudo-class :".concat(name," requires an argument"));}}else if(func.length===argIndex){throw new Error("Pseudo-class :".concat(name," doesn't have any arguments"));}}/**
       * Aliases are pseudos that are expressed as selectors.
       */var aliases={// Links
"any-link":":is(a, area, link)[href]",link:":any-link:not(:visited)",// Forms
// https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements
disabled:":is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )",enabled:":not(:disabled)",checked:":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",required:":is(input, select, textarea)[required]",optional:":is(input, select, textarea):not([required])",// JQuery extensions
// https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness
selected:"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",checkbox:"[type=checkbox]",file:"[type=file]",password:"[type=password]",radio:"[type=radio]",reset:"[type=reset]",image:"[type=image]",submit:"[type=submit]",parent:":not(:empty)",header:":is(h1, h2, h3, h4, h5, h6)",button:":is(button, input[type=button])",input:":is(input, textarea, select, button)",text:"input:is(:not([type!='']), [type=text])"};/** Used as a placeholder for :has. Will be replaced with the actual element. */var PLACEHOLDER_ELEMENT={};function ensureIsTag(next,adapter){if(next===boolbase.falseFunc)return boolbase.falseFunc;return function(elem){return adapter.isTag(elem)&&next(elem);};}function getNextSiblings(elem,adapter){var siblings=adapter.getSiblings(elem);if(siblings.length<=1)return[];var elemIndex=siblings.indexOf(elem);if(elemIndex<0||elemIndex===siblings.length-1)return[];return siblings.slice(elemIndex+1).filter(adapter.isTag);}function copyOptions(options){// Not copied: context, rootFunc
return{xmlMode:!!options.xmlMode,lowerCaseAttributeNames:!!options.lowerCaseAttributeNames,lowerCaseTags:!!options.lowerCaseTags,quirksMode:!!options.quirksMode,cacheResults:!!options.cacheResults,pseudos:options.pseudos,adapter:options.adapter,equals:options.equals};}var is$2=function is$2(next,token,options,context,compileToken){var func=compileToken(token,copyOptions(options),context);return func===boolbase.trueFunc?next:func===boolbase.falseFunc?boolbase.falseFunc:function(elem){return func(elem)&&next(elem);};};/*
       * :not, :has, :is, :matches and :where have to compile selectors
       * doing this in src/pseudos.ts would lead to circular dependencies,
       * so we add them here
       */var subselects={is:is$2,/**
           * `:matches` and `:where` are aliases for `:is`.
           */matches:is$2,where:is$2,not:function not(next,token,options,context,compileToken){var func=compileToken(token,copyOptions(options),context);return func===boolbase.falseFunc?next:func===boolbase.trueFunc?boolbase.falseFunc:function(elem){return!func(elem)&&next(elem);};},has:function has(next,subselect,options,_context,compileToken){var adapter=options.adapter;var opts=copyOptions(options);opts.relativeSelector=true;var context=subselect.some(function(s){return s.some(isTraversal);})?// Used as a placeholder. Will be replaced with the actual element.
[PLACEHOLDER_ELEMENT]:undefined;var compiled=compileToken(subselect,opts,context);if(compiled===boolbase.falseFunc)return boolbase.falseFunc;var hasElement=ensureIsTag(compiled,adapter);// If `compiled` is `trueFunc`, we can skip this.
if(context&&compiled!==boolbase.trueFunc){/*
                   * `shouldTestNextSiblings` will only be true if the query starts with
                   * a traversal (sibling or adjacent). That means we will always have a context.
                   */var _compiled$shouldTestN=compiled.shouldTestNextSiblings,shouldTestNextSiblings=_compiled$shouldTestN===void 0?false:_compiled$shouldTestN;return function(elem){if(!next(elem))return false;context[0]=elem;var childs=adapter.getChildren(elem);var nextElements=shouldTestNextSiblings?[].concat(_toConsumableArray(childs),_toConsumableArray(getNextSiblings(elem,adapter))):childs;return adapter.existsOne(hasElement,nextElements);};}return function(elem){return next(elem)&&adapter.existsOne(hasElement,adapter.getChildren(elem));};}};function compilePseudoSelector(next,selector,options,context,compileToken){var _a;var name=selector.name,data=selector.data;if(Array.isArray(data)){if(!(name in subselects)){throw new Error("Unknown pseudo-class :".concat(name,"(").concat(data,")"));}return subselects[name](next,data,options,context,compileToken);}var userPseudo=(_a=options.pseudos)===null||_a===void 0?void 0:_a[name];var stringPseudo=typeof userPseudo==="string"?userPseudo:aliases[name];if(typeof stringPseudo==="string"){if(data!=null){throw new Error("Pseudo ".concat(name," doesn't have any arguments"));}// The alias has to be parsed here, to make sure options are respected.
var alias=parse$6(stringPseudo);return subselects["is"](next,alias,options,context,compileToken);}if(typeof userPseudo==="function"){verifyPseudoArgs(userPseudo,name,data,1);return function(elem){return userPseudo(elem,data)&&next(elem);};}if(name in filters){return filters[name](next,data,options,context);}if(name in pseudos){var pseudo=pseudos[name];verifyPseudoArgs(pseudo,name,data,2);return function(elem){return pseudo(elem,options,data)&&next(elem);};}throw new Error("Unknown pseudo-class :".concat(name));}function getElementParent(node,adapter){var parent=adapter.getParent(node);if(parent&&adapter.isTag(parent)){return parent;}return null;}/*
       * All available rules
       */function compileGeneralSelector(next,selector,options,context,compileToken){var adapter=options.adapter,equals=options.equals;switch(selector.type){case SelectorType.PseudoElement:{throw new Error("Pseudo-elements are not supported by css-select");}case SelectorType.ColumnCombinator:{throw new Error("Column combinators are not yet supported by css-select");}case SelectorType.Attribute:{if(selector.namespace!=null){throw new Error("Namespaced attributes are not yet supported by css-select");}if(!options.xmlMode||options.lowerCaseAttributeNames){selector.name=selector.name.toLowerCase();}return attributeRules[selector.action](next,selector,options);}case SelectorType.Pseudo:{return compilePseudoSelector(next,selector,options,context,compileToken);}// Tags
case SelectorType.Tag:{if(selector.namespace!=null){throw new Error("Namespaced tag names are not yet supported by css-select");}var _name4=selector.name;if(!options.xmlMode||options.lowerCaseTags){_name4=_name4.toLowerCase();}return function tag(elem){return adapter.getName(elem)===_name4&&next(elem);};}// Traversal
case SelectorType.Descendant:{if(options.cacheResults===false||typeof WeakSet==="undefined"){return function descendant(elem){var current=elem;while(current=getElementParent(current,adapter)){if(next(current)){return true;}}return false;};}// @ts-expect-error `ElementNode` is not extending object
var isFalseCache=new WeakSet();return function cachedDescendant(elem){var current=elem;while(current=getElementParent(current,adapter)){if(!isFalseCache.has(current)){if(adapter.isTag(current)&&next(current)){return true;}isFalseCache.add(current);}}return false;};}case"_flexibleDescendant":{// Include element itself, only used while querying an array
return function flexibleDescendant(elem){var current=elem;do{if(next(current))return true;}while(current=getElementParent(current,adapter));return false;};}case SelectorType.Parent:{return function parent(elem){return adapter.getChildren(elem).some(function(elem){return adapter.isTag(elem)&&next(elem);});};}case SelectorType.Child:{return function child(elem){var parent=adapter.getParent(elem);return parent!=null&&adapter.isTag(parent)&&next(parent);};}case SelectorType.Sibling:{return function sibling(elem){var siblings=adapter.getSiblings(elem);for(var _i28=0;_i28<siblings.length;_i28++){var currentSibling=siblings[_i28];if(equals(elem,currentSibling))break;if(adapter.isTag(currentSibling)&&next(currentSibling)){return true;}}return false;};}case SelectorType.Adjacent:{if(adapter.prevElementSibling){return function adjacent(elem){var previous=adapter.prevElementSibling(elem);return previous!=null&&next(previous);};}return function adjacent(elem){var siblings=adapter.getSiblings(elem);var lastElement;for(var _i29=0;_i29<siblings.length;_i29++){var currentSibling=siblings[_i29];if(equals(elem,currentSibling))break;if(adapter.isTag(currentSibling)){lastElement=currentSibling;}}return!!lastElement&&next(lastElement);};}case SelectorType.Universal:{if(selector.namespace!=null&&selector.namespace!=="*"){throw new Error("Namespaced universal selectors are not yet supported by css-select");}return next;}}}function includesScopePseudo(t){return t.type===SelectorType.Pseudo&&(t.name==="scope"||Array.isArray(t.data)&&t.data.some(function(data){return data.some(includesScopePseudo);}));}var DESCENDANT_TOKEN={type:SelectorType.Descendant};var FLEXIBLE_DESCENDANT_TOKEN={type:"_flexibleDescendant"};var SCOPE_TOKEN={type:SelectorType.Pseudo,name:"scope",data:null};/*
       * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector
       * http://www.w3.org/TR/selectors4/#absolutizing
       */function absolutize(token,_ref124,context){var adapter=_ref124.adapter;// TODO Use better check if the context is a document
var hasContext=!!(context===null||context===void 0?void 0:context.every(function(e){var parent=adapter.isTag(e)&&adapter.getParent(e);return e===PLACEHOLDER_ELEMENT||parent&&adapter.isTag(parent);}));var _iterator4=_createForOfIteratorHelper(token),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _t5=_step4.value;if(_t5.length>0&&isTraversal(_t5[0])&&_t5[0].type!==SelectorType.Descendant);else if(hasContext&&!_t5.some(includesScopePseudo)){_t5.unshift(DESCENDANT_TOKEN);}else{continue;}_t5.unshift(SCOPE_TOKEN);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}function compileToken(token,options,context){var _a;token.forEach(sortByProcedure);context=(_a=options.context)!==null&&_a!==void 0?_a:context;var isArrayContext=Array.isArray(context);var finalContext=context&&(Array.isArray(context)?context:[context]);// Check if the selector is relative
if(options.relativeSelector!==false){absolutize(token,options,finalContext);}else if(token.some(function(t){return t.length>0&&isTraversal(t[0]);})){throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled");}var shouldTestNextSiblings=false;var query=token.map(function(rules){if(rules.length>=2){var _rules=_slicedToArray(rules,2),_first=_rules[0],second=_rules[1];if(_first.type!==SelectorType.Pseudo||_first.name!=="scope");else if(isArrayContext&&second.type===SelectorType.Descendant){rules[1]=FLEXIBLE_DESCENDANT_TOKEN;}else if(second.type===SelectorType.Adjacent||second.type===SelectorType.Sibling){shouldTestNextSiblings=true;}}return compileRules(rules,options,finalContext);}).reduce(reduceRules,boolbase.falseFunc);query.shouldTestNextSiblings=shouldTestNextSiblings;return query;}function compileRules(rules,options,context){var _a;return rules.reduce(function(previous,rule){return previous===boolbase.falseFunc?boolbase.falseFunc:compileGeneralSelector(previous,rule,options,context,compileToken);},(_a=options.rootFunc)!==null&&_a!==void 0?_a:boolbase.trueFunc);}function reduceRules(a,b){if(b===boolbase.falseFunc||a===boolbase.trueFunc){return a;}if(a===boolbase.falseFunc||b===boolbase.trueFunc){return b;}return function combine(elem){return a(elem)||b(elem);};}var defaultEquals=function defaultEquals(a,b){return a===b;};var defaultOptions$1={adapter:DomUtils,equals:defaultEquals};function convertOptionFormats(options){var _a,_b,_c,_d;/*
           * We force one format of options to the other one.
           */ // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.
var opts=options!==null&&options!==void 0?options:defaultOptions$1;// @ts-expect-error Same as above.
(_a=opts.adapter)!==null&&_a!==void 0?_a:opts.adapter=DomUtils;// @ts-expect-error `equals` does not exist on `Options`
(_b=opts.equals)!==null&&_b!==void 0?_b:opts.equals=(_d=(_c=opts.adapter)===null||_c===void 0?void 0:_c.equals)!==null&&_d!==void 0?_d:defaultEquals;return opts;}function wrapCompile(func){return function addAdapter(selector,options,context){var opts=convertOptionFormats(options);return func(selector,opts,context);};}var _compileToken=wrapCompile(compileToken);function prepareContext(elems,adapter){var shouldTestNextSiblings=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;/*
           * Add siblings if the query requires them.
           * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692
           */if(shouldTestNextSiblings){elems=appendNextSiblings(elems,adapter);}return Array.isArray(elems)?adapter.removeSubsets(elems):adapter.getChildren(elems);}function appendNextSiblings(elem,adapter){// Order matters because jQuery seems to check the children before the siblings
var elems=Array.isArray(elem)?elem.slice(0):[elem];var elemsLength=elems.length;for(var _i30=0;_i30<elemsLength;_i30++){var nextSiblings=getNextSiblings(elems[_i30],adapter);elems.push.apply(elems,_toConsumableArray(nextSiblings));}return elems;}var filterNames=new Set(["first","last","eq","gt","nth","lt","even","odd"]);function isFilter(s){if(s.type!=="pseudo")return false;if(filterNames.has(s.name))return true;if(s.name==="not"&&Array.isArray(s.data)){// Only consider `:not` with embedded filters
return s.data.some(function(s){return s.some(isFilter);});}return false;}function getLimit(filter,data,partLimit){var num=data!=null?parseInt(data,10):NaN;switch(filter){case"first":return 1;case"nth":case"eq":return isFinite(num)?num>=0?num+1:Infinity:0;case"lt":return isFinite(num)?num>=0?Math.min(num,partLimit):Infinity:0;case"gt":return isFinite(num)?Infinity:0;case"odd":return 2*partLimit;case"even":return 2*partLimit-1;case"last":case"not":return Infinity;}}function getDocumentRoot(node){while(node.parent){node=node.parent;}return node;}function groupSelectors(selectors){var filteredSelectors=[];var plainSelectors=[];var _iterator5=_createForOfIteratorHelper(selectors),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var selector=_step5.value;if(selector.some(isFilter)){filteredSelectors.push(selector);}else{plainSelectors.push(selector);}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return[plainSelectors,filteredSelectors];}var UNIVERSAL_SELECTOR={type:SelectorType.Universal,namespace:null};var SCOPE_PSEUDO={type:SelectorType.Pseudo,name:"scope",data:null};function is$1(element,selector){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return some([element],selector,options);}function some(elements,selector){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof selector==="function")return elements.some(selector);var _groupSelectors=groupSelectors(parse$6(selector)),_groupSelectors2=_slicedToArray(_groupSelectors,2),plain=_groupSelectors2[0],filtered=_groupSelectors2[1];return plain.length>0&&elements.some(_compileToken(plain,options))||filtered.some(function(sel){return filterBySelector(sel,elements,options).length>0;});}function filterByPosition(filter,elems,data,options){var num=typeof data==="string"?parseInt(data,10):NaN;switch(filter){case"first":case"lt":// Already done in `getLimit`
return elems;case"last":return elems.length>0?[elems[elems.length-1]]:elems;case"nth":case"eq":return isFinite(num)&&Math.abs(num)<elems.length?[num<0?elems[elems.length+num]:elems[num]]:[];case"gt":return isFinite(num)?elems.slice(num+1):[];case"even":return elems.filter(function(_,i){return i%2===0;});case"odd":return elems.filter(function(_,i){return i%2===1;});case"not":{var filtered=new Set(filterParsed(data,elems,options));return elems.filter(function(e){return!filtered.has(e);});}}}function filter$1(selector,elements){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return filterParsed(parse$6(selector),elements,options);}/**
       * Filter a set of elements by a selector.
       *
       * Will return elements in the original order.
       *
       * @param selector Selector to filter by.
       * @param elements Elements to filter.
       * @param options Options for selector.
       */function filterParsed(selector,elements,options){if(elements.length===0)return[];var _groupSelectors3=groupSelectors(selector),_groupSelectors4=_slicedToArray(_groupSelectors3,2),plainSelectors=_groupSelectors4[0],filteredSelectors=_groupSelectors4[1];var found;if(plainSelectors.length){var filtered=filterElements(elements,plainSelectors,options);// If there are no filters, just return
if(filteredSelectors.length===0){return filtered;}// Otherwise, we have to do some filtering
if(filtered.length){found=new Set(filtered);}}for(var _i31=0;_i31<filteredSelectors.length&&(found===null||found===void 0?void 0:found.size)!==elements.length;_i31++){var filteredSelector=filteredSelectors[_i31];var missing=found?elements.filter(function(e){return isTag(e)&&!found.has(e);}):elements;if(missing.length===0)break;var _filtered=filterBySelector(filteredSelector,elements,options);if(_filtered.length){if(!found){/*
                       * If we haven't found anything before the last selector,
                       * just return what we found now.
                       */if(_i31===filteredSelectors.length-1){return _filtered;}found=new Set(_filtered);}else{_filtered.forEach(function(el){return found.add(el);});}}}return typeof found!=="undefined"?found.size===elements.length?elements:// Filter elements to preserve order
elements.filter(function(el){return found.has(el);}):[];}function filterBySelector(selector,elements,options){var _a;if(selector.some(isTraversal$1)){/*
               * Get root node, run selector with the scope
               * set to all of our nodes.
               */var _root=(_a=options.root)!==null&&_a!==void 0?_a:getDocumentRoot(elements[0]);var opts=_objectSpread(_objectSpread({},options),{},{context:elements,relativeSelector:false});selector.push(SCOPE_PSEUDO);return findFilterElements(_root,selector,opts,true,elements.length);}// Performance optimization: If we don't have to traverse, just filter set.
return findFilterElements(elements,selector,options,false,elements.length);}function select(selector,root){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;if(typeof selector==="function"){return find$3(root,selector);}var _groupSelectors5=groupSelectors(parse$6(selector)),_groupSelectors6=_slicedToArray(_groupSelectors5,2),plain=_groupSelectors6[0],filtered=_groupSelectors6[1];var results=filtered.map(function(sel){return findFilterElements(root,sel,options,true,limit);});// Plain selectors can be queried in a single go
if(plain.length){results.push(findElements(root,plain,options,limit));}if(results.length===0){return[];}// If there was only a single selector, just return the result
if(results.length===1){return results[0];}// Sort results, filtering for duplicates
return uniqueSort(results.reduce(function(a,b){return[].concat(_toConsumableArray(a),_toConsumableArray(b));}));}/**
       *
       * @param root Element(s) to search from.
       * @param selector Selector to look for.
       * @param options Options for querying.
       * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.
       */function findFilterElements(root,selector,options,queryForSelector,totalLimit){var filterIndex=selector.findIndex(isFilter);var sub=selector.slice(0,filterIndex);var filter=selector[filterIndex];// If we are at the end of the selector, we can limit the number of elements to retrieve.
var partLimit=selector.length-1===filterIndex?totalLimit:Infinity;/*
           * Set the number of elements to retrieve.
           * Eg. for :first, we only have to get a single element.
           */var limit=getLimit(filter.name,filter.data,partLimit);if(limit===0)return[];/*
           * Skip `findElements` call if our selector starts with a positional
           * pseudo.
           */var elemsNoLimit=sub.length===0&&!Array.isArray(root)?getChildren(root).filter(isTag):sub.length===0?(Array.isArray(root)?root:[root]).filter(isTag):queryForSelector||sub.some(isTraversal$1)?findElements(root,[sub],options,limit):filterElements(root,[sub],options);var elems=elemsNoLimit.slice(0,limit);var result=filterByPosition(filter.name,elems,filter.data,options);if(result.length===0||selector.length===filterIndex+1){return result;}var remainingSelector=selector.slice(filterIndex+1);var remainingHasTraversal=remainingSelector.some(isTraversal$1);if(remainingHasTraversal){if(isTraversal$1(remainingSelector[0])){var type=remainingSelector[0].type;if(type===SelectorType.Sibling||type===SelectorType.Adjacent){// If we have a sibling traversal, we need to also look at the siblings.
result=prepareContext(result,DomUtils,true);}// Avoid a traversal-first selector error.
remainingSelector.unshift(UNIVERSAL_SELECTOR);}options=_objectSpread(_objectSpread({},options),{},{// Avoid absolutizing the selector
relativeSelector:false,/*
                   * Add a custom root func, to make sure traversals don't match elements
                   * that aren't a part of the considered tree.
                   */rootFunc:function rootFunc(el){return result.includes(el);}});}else if(options.rootFunc&&options.rootFunc!==boolbase.trueFunc){options=_objectSpread(_objectSpread({},options),{},{rootFunc:boolbase.trueFunc});}/*
           * If we have another filter, recursively call `findFilterElements`,
           * with the `recursive` flag disabled. We only have to look for more
           * elements when we see a traversal.
           *
           * Otherwise,
           */return remainingSelector.some(isFilter)?findFilterElements(result,remainingSelector,options,false,totalLimit):remainingHasTraversal?// Query existing elements to resolve traversal.
findElements(result,[remainingSelector],options,totalLimit):// If we don't have any more traversals, simply filter elements.
filterElements(result,[remainingSelector],options);}function findElements(root,sel,options,limit){var query=_compileToken(sel,options,root);return find$3(root,query,limit);}function find$3(root,query){var limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Infinity;var elems=prepareContext(root,DomUtils,query.shouldTestNextSiblings);return find$4(function(node){return isTag(node)&&query(node);},elems,true,limit);}function filterElements(elements,sel,options){var els=(Array.isArray(elements)?elements:[elements]).filter(isTag);if(els.length===0)return els;var query=_compileToken(sel,options);return query===boolbase.trueFunc?els:els.filter(query);}/**
       * Methods for traversing the DOM structure.
       *
       * @module cheerio/traversing
       */var reSiblingSelector=/^\s*[~+]/;/**
       * Get the descendants of each element in the current set of matched elements,
       * filtered by a selector, jQuery object, or element.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('#fruits').find('li').length;
       * //=> 3
       * $('#fruits').find($('.apple')).length;
       * //=> 1
       * ```
       *
       * @param selectorOrHaystack - Element to look for.
       * @returns The found elements.
       * @see {@link https://api.jquery.com/find/}
       */function find$2(selectorOrHaystack){var _a;if(!selectorOrHaystack){return this._make([]);}var context=this.toArray();if(typeof selectorOrHaystack!=='string'){var haystack=isCheerio(selectorOrHaystack)?selectorOrHaystack.toArray():[selectorOrHaystack];return this._make(haystack.filter(function(elem){return context.some(function(node){return contains(node,elem);});}));}var elems=reSiblingSelector.test(selectorOrHaystack)?context:this.children().toArray();var options={context:context,root:(_a=this._root)===null||_a===void 0?void 0:_a[0],// Pass options that are recognized by `cheerio-select`
xmlMode:this.options.xmlMode,lowerCaseTags:this.options.lowerCaseTags,lowerCaseAttributeNames:this.options.lowerCaseAttributeNames,pseudos:this.options.pseudos,quirksMode:this.options.quirksMode};return this._make(select(selectorOrHaystack,elems,options));}/**
       * Creates a matcher, using a particular mapping function. Matchers provide a
       * function that finds elements using a generating function, supporting filtering.
       *
       * @private
       * @param matchMap - Mapping function.
       * @returns - Function for wrapping generating functions.
       */function _getMatcher(matchMap){return function(fn){for(var _len12=arguments.length,postFns=new Array(_len12>1?_len12-1:0),_key12=1;_key12<_len12;_key12++){postFns[_key12-1]=arguments[_key12];}return function(selector){var _a;var matched=matchMap(fn,this);if(selector){matched=filterArray(matched,selector,this.options.xmlMode,(_a=this._root)===null||_a===void 0?void 0:_a[0]);}return this._make(// Post processing is only necessary if there is more than one element.
this.length>1&&matched.length>1?postFns.reduce(function(elems,fn){return fn(elems);},matched):matched);};};}/** Matcher that adds multiple elements for each entry in the input. */var _matcher=_getMatcher(function(fn,elems){var _Array;var ret=[];for(var _i32=0;_i32<elems.length;_i32++){var value=fn(elems[_i32]);ret.push(value);}return(_Array=new Array()).concat.apply(_Array,ret);});/** Matcher that adds at most one element for each entry in the input. */var _singleMatcher=_getMatcher(function(fn,elems){var ret=[];for(var _i33=0;_i33<elems.length;_i33++){var value=fn(elems[_i33]);if(value!==null){ret.push(value);}}return ret;});/**
       * Matcher that supports traversing until a condition is met.
       *
       * @returns A function usable for `*Until` methods.
       */function _matchUntil(nextElem){// We use a variable here that is used from within the matcher.
var matches=null;for(var _len13=arguments.length,postFns=new Array(_len13>1?_len13-1:0),_key13=1;_key13<_len13;_key13++){postFns[_key13-1]=arguments[_key13];}var innerMatcher=_getMatcher(function(nextElem,elems){var matched=[];domEach(elems,function(elem){for(var _next4;_next4=nextElem(elem);elem=_next4){// FIXME: `matched` might contain duplicates here and the index is too large.
if(matches===null||matches===void 0?void 0:matches(_next4,matched.length))break;matched.push(_next4);}});return matched;}).apply(void 0,[nextElem].concat(postFns));return function(selector,filterSelector){var _this17=this;// Override `matches` variable with the new target.
matches=typeof selector==='string'?function(elem){return is$1(elem,selector,_this17.options);}:selector?getFilterFn(selector):null;var ret=innerMatcher.call(this,filterSelector);// Set `matches` to `null`, so we don't waste memory.
matches=null;return ret;};}function _removeDuplicates(elems){return Array.from(new Set(elems));}/**
       * Get the parent of each element in the current set of matched elements,
       * optionally filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.pear').parent().attr('id');
       * //=> fruits
       * ```
       *
       * @param selector - If specified filter for parent.
       * @returns The parents.
       * @see {@link https://api.jquery.com/parent/}
       */var parent=_singleMatcher(function(_ref125){var parent=_ref125.parent;return parent&&!isDocument(parent)?parent:null;},_removeDuplicates);/**
       * Get a set of parents filtered by `selector` of each element in the current
       * set of match elements.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.orange').parents().length;
       * //=> 2
       * $('.orange').parents('#fruits').length;
       * //=> 1
       * ```
       *
       * @param selector - If specified filter for parents.
       * @returns The parents.
       * @see {@link https://api.jquery.com/parents/}
       */var parents=_matcher(function(elem){var matched=[];while(elem.parent&&!isDocument(elem.parent)){matched.push(elem.parent);elem=elem.parent;}return matched;},uniqueSort,function(elems){return elems.reverse();});/**
       * Get the ancestors of each element in the current set of matched elements, up
       * to but not including the element matched by the selector, DOM node, or cheerio object.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.orange').parentsUntil('#food').length;
       * //=> 1
       * ```
       *
       * @param selector - Selector for element to stop at.
       * @param filterSelector - Optional filter for parents.
       * @returns The parents.
       * @see {@link https://api.jquery.com/parentsUntil/}
       */var parentsUntil=_matchUntil(function(_ref126){var parent=_ref126.parent;return parent&&!isDocument(parent)?parent:null;},uniqueSort,function(elems){return elems.reverse();});/**
       * For each element in the set, get the first element that matches the selector
       * by testing the element itself and traversing up through its ancestors in the DOM tree.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.orange').closest();
       * //=> []
       *
       * $('.orange').closest('.apple');
       * // => []
       *
       * $('.orange').closest('li');
       * //=> [<li class="orange">Orange</li>]
       *
       * $('.orange').closest('#fruits');
       * //=> [<ul id="fruits"> ... </ul>]
       * ```
       *
       * @param selector - Selector for the element to find.
       * @returns The closest nodes.
       * @see {@link https://api.jquery.com/closest/}
       */function closest(selector){var _a;var set=[];if(!selector){return this._make(set);}var selectOpts={xmlMode:this.options.xmlMode,root:(_a=this._root)===null||_a===void 0?void 0:_a[0]};var selectFn=typeof selector==='string'?function(elem){return is$1(elem,selector,selectOpts);}:getFilterFn(selector);domEach(this,function(elem){while(elem&&isTag(elem)){if(selectFn(elem,0)){// Do not add duplicate elements to the set
if(!set.includes(elem)){set.push(elem);}break;}elem=elem.parent;}});return this._make(set);}/**
       * Gets the next sibling of the first selected element, optionally filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.apple').next().hasClass('orange');
       * //=> true
       * ```
       *
       * @param selector - If specified filter for sibling.
       * @returns The next nodes.
       * @see {@link https://api.jquery.com/next/}
       */var next=_singleMatcher(function(elem){return nextElementSibling(elem);});/**
       * Gets all the following siblings of the first selected element, optionally
       * filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.apple').nextAll();
       * //=> [<li class="orange">Orange</li>, <li class="pear">Pear</li>]
       * $('.apple').nextAll('.orange');
       * //=> [<li class="orange">Orange</li>]
       * ```
       *
       * @param selector - If specified filter for siblings.
       * @returns The next nodes.
       * @see {@link https://api.jquery.com/nextAll/}
       */var nextAll=_matcher(function(elem){var matched=[];while(elem.next){elem=elem.next;if(isTag(elem))matched.push(elem);}return matched;},_removeDuplicates);/**
       * Gets all the following siblings up to but not including the element matched
       * by the selector, optionally filtered by another selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.apple').nextUntil('.pear');
       * //=> [<li class="orange">Orange</li>]
       * ```
       *
       * @param selector - Selector for element to stop at.
       * @param filterSelector - If specified filter for siblings.
       * @returns The next nodes.
       * @see {@link https://api.jquery.com/nextUntil/}
       */var nextUntil=_matchUntil(function(el){return nextElementSibling(el);},_removeDuplicates);/**
       * Gets the previous sibling of the first selected element optionally filtered
       * by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.orange').prev().hasClass('apple');
       * //=> true
       * ```
       *
       * @param selector - If specified filter for siblings.
       * @returns The previous nodes.
       * @see {@link https://api.jquery.com/prev/}
       */var prev=_singleMatcher(function(elem){return prevElementSibling(elem);});/**
       * Gets all the preceding siblings of the first selected element, optionally
       * filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.pear').prevAll();
       * //=> [<li class="orange">Orange</li>, <li class="apple">Apple</li>]
       *
       * $('.pear').prevAll('.orange');
       * //=> [<li class="orange">Orange</li>]
       * ```
       *
       * @param selector - If specified filter for siblings.
       * @returns The previous nodes.
       * @see {@link https://api.jquery.com/prevAll/}
       */var prevAll=_matcher(function(elem){var matched=[];while(elem.prev){elem=elem.prev;if(isTag(elem))matched.push(elem);}return matched;},_removeDuplicates);/**
       * Gets all the preceding siblings up to but not including the element matched
       * by the selector, optionally filtered by another selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.pear').prevUntil('.apple');
       * //=> [<li class="orange">Orange</li>]
       * ```
       *
       * @param selector - Selector for element to stop at.
       * @param filterSelector - If specified filter for siblings.
       * @returns The previous nodes.
       * @see {@link https://api.jquery.com/prevUntil/}
       */var prevUntil=_matchUntil(function(el){return prevElementSibling(el);},_removeDuplicates);/**
       * Get the siblings of each element (excluding the element) in the set of
       * matched elements, optionally filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.pear').siblings().length;
       * //=> 2
       *
       * $('.pear').siblings('.orange').length;
       * //=> 1
       * ```
       *
       * @param selector - If specified filter for siblings.
       * @returns The siblings.
       * @see {@link https://api.jquery.com/siblings/}
       */var siblings=_matcher(function(elem){return getSiblings(elem).filter(function(el){return isTag(el)&&el!==elem;});},uniqueSort);/**
       * Gets the element children of each element in the set of matched elements.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('#fruits').children().length;
       * //=> 3
       *
       * $('#fruits').children('.pear').text();
       * //=> Pear
       * ```
       *
       * @param selector - If specified filter for children.
       * @returns The children.
       * @see {@link https://api.jquery.com/children/}
       */var children=_matcher(function(elem){return getChildren(elem).filter(isTag);},_removeDuplicates);/**
       * Gets the children of each element in the set of matched elements, including
       * text and comment nodes.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('#fruits').contents().length;
       * //=> 3
       * ```
       *
       * @returns The children.
       * @see {@link https://api.jquery.com/contents/}
       */function contents(){var elems=this.toArray().reduce(function(newElems,elem){return hasChildren(elem)?newElems.concat(elem.children):newElems;},[]);return this._make(elems);}/**
       * Iterates over a cheerio object, executing a function for each matched
       * element. When the callback is fired, the function is fired in the context of
       * the DOM element, so `this` refers to the current element, which is equivalent
       * to the function parameter `element`. To break out of the `each` loop early,
       * return with `false`.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * const fruits = [];
       *
       * $('li').each(function (i, elem) {
       *   fruits[i] = $(this).text();
       * });
       *
       * fruits.join(', ');
       * //=> Apple, Orange, Pear
       * ```
       *
       * @param fn - Function to execute.
       * @returns The instance itself, useful for chaining.
       * @see {@link https://api.jquery.com/each/}
       */function each$1(fn){var i=0;var len=this.length;while(i<len&&fn.call(this[i],i,this[i])!==false){++i;}return this;}/**
       * Pass each element in the current matched set through a function, producing a
       * new Cheerio object containing the return values. The function can return an
       * individual data item or an array of data items to be inserted into the
       * resulting set. If an array is returned, the elements inside the array are
       * inserted into the set. If the function returns null or undefined, no element
       * will be inserted.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('li')
       *   .map(function (i, el) {
       *     // this === el
       *     return $(this).text();
       *   })
       *   .toArray()
       *   .join(' ');
       * //=> "apple orange pear"
       * ```
       *
       * @param fn - Function to execute.
       * @returns The mapped elements, wrapped in a Cheerio collection.
       * @see {@link https://api.jquery.com/map/}
       */function map(fn){var elems=[];for(var _i34=0;_i34<this.length;_i34++){var el=this[_i34];var _val=fn.call(el,_i34,el);if(_val!=null){elems=elems.concat(_val);}}return this._make(elems);}/**
       * Creates a function to test if a filter is matched.
       *
       * @param match - A filter.
       * @returns A function that determines if a filter has been matched.
       */function getFilterFn(match){if(typeof match==='function'){return function(el,i){return match.call(el,i,el);};}if(isCheerio(match)){return function(el){return Array.prototype.includes.call(match,el);};}return function(el){return match===el;};}function filter(match){var _a;return this._make(filterArray(this.toArray(),match,this.options.xmlMode,(_a=this._root)===null||_a===void 0?void 0:_a[0]));}function filterArray(nodes,match,xmlMode,root){return typeof match==='string'?filter$1(match,nodes,{xmlMode:xmlMode,root:root}):nodes.filter(getFilterFn(match));}/**
       * Checks the current list of elements and returns `true` if _any_ of the
       * elements match the selector. If using an element or Cheerio selection,
       * returns `true` if _any_ of the elements match. If using a predicate function,
       * the function is executed in the context of the selected element, so `this`
       * refers to the current element.
       *
       * @category Attributes
       * @param selector - Selector for the selection.
       * @returns Whether or not the selector matches an element of the instance.
       * @see {@link https://api.jquery.com/is/}
       */function is(selector){var nodes=this.toArray();return typeof selector==='string'?some(nodes.filter(isTag),selector,this.options):selector?nodes.some(getFilterFn(selector)):false;}/**
       * Remove elements from the set of matched elements. Given a Cheerio object that
       * represents a set of DOM elements, the `.not()` method constructs a new
       * Cheerio object from a subset of the matching elements. The supplied selector
       * is tested against each element; the elements that don't match the selector
       * will be included in the result.
       *
       * The `.not()` method can take a function as its argument in the same way that
       * `.filter()` does. Elements for which the function returns `true` are excluded
       * from the filtered set; all other elements are included.
       *
       * @category Traversing
       * @example <caption>Selector</caption>
       *
       * ```js
       * $('li').not('.apple').length;
       * //=> 2
       * ```
       *
       * @example <caption>Function</caption>
       *
       * ```js
       * $('li').not(function (i, el) {
       *   // this === el
       *   return $(this).attr('class') === 'orange';
       * }).length; //=> 2
       * ```
       *
       * @param match - Value to look for, following the rules above.
       * @param container - Optional node to filter instead.
       * @returns The filtered collection.
       * @see {@link https://api.jquery.com/not/}
       */function not(match){var nodes=this.toArray();if(typeof match==='string'){var matches=new Set(filter$1(match,nodes,this.options));nodes=nodes.filter(function(el){return!matches.has(el);});}else{var filterFn=getFilterFn(match);nodes=nodes.filter(function(el,i){return!filterFn(el,i);});}return this._make(nodes);}/**
       * Filters the set of matched elements to only those which have the given DOM
       * element as a descendant or which have a descendant that matches the given
       * selector. Equivalent to `.filter(':has(selector)')`.
       *
       * @category Traversing
       * @example <caption>Selector</caption>
       *
       * ```js
       * $('ul').has('.pear').attr('id');
       * //=> fruits
       * ```
       *
       * @example <caption>Element</caption>
       *
       * ```js
       * $('ul').has($('.pear')[0]).attr('id');
       * //=> fruits
       * ```
       *
       * @param selectorOrHaystack - Element to look for.
       * @returns The filtered collection.
       * @see {@link https://api.jquery.com/has/}
       */function has(selectorOrHaystack){var _this18=this;return this.filter(typeof selectorOrHaystack==='string'?// Using the `:has` selector here short-circuits searches.
":has(".concat(selectorOrHaystack,")"):function(_,el){return _this18._make(el).find(selectorOrHaystack).length>0;});}/**
       * Will select the first element of a cheerio object.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('#fruits').children().first().text();
       * //=> Apple
       * ```
       *
       * @returns The first element.
       * @see {@link https://api.jquery.com/first/}
       */function first(){return this.length>1?this._make(this[0]):this;}/**
       * Will select the last element of a cheerio object.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('#fruits').children().last().text();
       * //=> Pear
       * ```
       *
       * @returns The last element.
       * @see {@link https://api.jquery.com/last/}
       */function last(){return this.length>0?this._make(this[this.length-1]):this;}/**
       * Reduce the set of matched elements to the one at the specified index. Use
       * `.eq(-i)` to count backwards from the last selected element.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('li').eq(0).text();
       * //=> Apple
       *
       * $('li').eq(-1).text();
       * //=> Pear
       * ```
       *
       * @param i - Index of the element to select.
       * @returns The element at the `i`th position.
       * @see {@link https://api.jquery.com/eq/}
       */function eq(i){var _a;i=+i;// Use the first identity optimization if possible
if(i===0&&this.length<=1)return this;if(i<0)i=this.length+i;return this._make((_a=this[i])!==null&&_a!==void 0?_a:[]);}function get$1(i){if(i==null){return this.toArray();}return this[i<0?this.length+i:i];}/**
       * Retrieve all the DOM elements contained in the jQuery set as an array.
       *
       * @example
       *
       * ```js
       * $('li').toArray();
       * //=> [ {...}, {...}, {...} ]
       * ```
       *
       * @returns The contained items.
       */function toArray(){return Array.prototype.slice.call(this);}/**
       * Search for a given element from among the matched elements.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.pear').index();
       * //=> 2 $('.orange').index('li');
       * //=> 1
       * $('.apple').index($('#fruit, li'));
       * //=> 1
       * ```
       *
       * @param selectorOrNeedle - Element to look for.
       * @returns The index of the element.
       * @see {@link https://api.jquery.com/index/}
       */function index(selectorOrNeedle){var $haystack;var needle;if(selectorOrNeedle==null){$haystack=this.parent().children();needle=this[0];}else if(typeof selectorOrNeedle==='string'){$haystack=this._make(selectorOrNeedle);needle=this[0];}else{// eslint-disable-next-line @typescript-eslint/no-this-alias
$haystack=this;needle=isCheerio(selectorOrNeedle)?selectorOrNeedle[0]:selectorOrNeedle;}return Array.prototype.indexOf.call($haystack,needle);}/**
       * Gets the elements matching the specified range (0-based position).
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('li').slice(1).eq(0).text();
       * //=> 'Orange'
       *
       * $('li').slice(1, 2).length;
       * //=> 1
       * ```
       *
       * @param start - A position at which the elements begin to be selected. If
       *   negative, it indicates an offset from the end of the set.
       * @param end - A position at which the elements stop being selected. If
       *   negative, it indicates an offset from the end of the set. If omitted, the
       *   range continues until the end of the set.
       * @returns The elements matching the specified range.
       * @see {@link https://api.jquery.com/slice/}
       */function slice(start,end){return this._make(Array.prototype.slice.call(this,start,end));}/**
       * End the most recent filtering operation in the current chain and return the
       * set of matched elements to its previous state.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('li').eq(0).end().length;
       * //=> 3
       * ```
       *
       * @returns The previous state of the set of matched elements.
       * @see {@link https://api.jquery.com/end/}
       */function end(){var _a;return(_a=this.prevObject)!==null&&_a!==void 0?_a:this._make([]);}/**
       * Add elements to the set of matched elements.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('.apple').add('.orange').length;
       * //=> 2
       * ```
       *
       * @param other - Elements to add.
       * @param context - Optionally the context of the new selection.
       * @returns The combined set.
       * @see {@link https://api.jquery.com/add/}
       */function add(other,context){var selection=this._make(other,context);var contents=uniqueSort([].concat(_toConsumableArray(this.get()),_toConsumableArray(selection.get())));return this._make(contents);}/**
       * Add the previous set of elements on the stack to the current set, optionally
       * filtered by a selector.
       *
       * @category Traversing
       * @example
       *
       * ```js
       * $('li').eq(0).addBack('.orange').length;
       * //=> 2
       * ```
       *
       * @param selector - Selector for the elements to add.
       * @returns The combined set.
       * @see {@link https://api.jquery.com/addBack/}
       */function addBack(selector){return this.prevObject?this.add(selector?this.prevObject.filter(selector):this.prevObject):this;}var Traversing=/*#__PURE__*/Object.freeze((_Object$freeze7={__proto__:null},_defineProperty(_Object$freeze7,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze7,"find",find$2),_defineProperty(_Object$freeze7,"parent",parent),_defineProperty(_Object$freeze7,"parents",parents),_defineProperty(_Object$freeze7,"parentsUntil",parentsUntil),_defineProperty(_Object$freeze7,"closest",closest),_defineProperty(_Object$freeze7,"next",next),_defineProperty(_Object$freeze7,"nextAll",nextAll),_defineProperty(_Object$freeze7,"nextUntil",nextUntil),_defineProperty(_Object$freeze7,"prev",prev),_defineProperty(_Object$freeze7,"prevAll",prevAll),_defineProperty(_Object$freeze7,"prevUntil",prevUntil),_defineProperty(_Object$freeze7,"siblings",siblings),_defineProperty(_Object$freeze7,"children",children),_defineProperty(_Object$freeze7,"contents",contents),_defineProperty(_Object$freeze7,"each",each$1),_defineProperty(_Object$freeze7,"map",map),_defineProperty(_Object$freeze7,"filter",filter),_defineProperty(_Object$freeze7,"filterArray",filterArray),_defineProperty(_Object$freeze7,"is",is),_defineProperty(_Object$freeze7,"not",not),_defineProperty(_Object$freeze7,"has",has),_defineProperty(_Object$freeze7,"first",first),_defineProperty(_Object$freeze7,"last",last),_defineProperty(_Object$freeze7,"eq",eq),_defineProperty(_Object$freeze7,"get",get$1),_defineProperty(_Object$freeze7,"toArray",toArray),_defineProperty(_Object$freeze7,"index",index),_defineProperty(_Object$freeze7,"slice",slice),_defineProperty(_Object$freeze7,"end",end),_defineProperty(_Object$freeze7,"add",add),_defineProperty(_Object$freeze7,"addBack",addBack),_Object$freeze7));/**
       * Get the parse function with options.
       *
       * @param parser - The parser function.
       * @returns The parse function with options.
       */function getParse(parser){/**
           * Parse a HTML string or a node.
           *
           * @param content - The HTML string or node.
           * @param options - The parser options.
           * @param isDocument - If `content` is a document.
           * @param context - The context node in the DOM tree.
           * @returns The parsed document node.
           */return function parse(content,options,isDocument$1,context){if(typeof Buffer!=='undefined'&&Buffer.isBuffer(content)){content=content.toString();}if(typeof content==='string'){return parser(content,options,isDocument$1,context);}var doc=content;if(!Array.isArray(doc)&&isDocument(doc)){// If `doc` is already a root, just return it
return doc;}// Add conent to new root element
var root=new Document$1([]);// Update the DOM using the root
update(doc,root);return root;};}/**
       * Update the dom structure, for one changed layer.
       *
       * @param newChilds - The new children.
       * @param parent - The new parent.
       * @returns The parent node.
       */function update(newChilds,parent){// Normalize
var arr=Array.isArray(newChilds)?newChilds:[newChilds];// Update parent
if(parent){parent.children=arr;}else{parent=null;}// Update neighbors
for(var _i35=0;_i35<arr.length;_i35++){var _node6=arr[_i35];// Cleanly remove existing nodes from their previous structures.
if(_node6.parent&&_node6.parent.children!==arr){removeElement(_node6);}if(parent){_node6.prev=arr[_i35-1]||null;_node6.next=arr[_i35+1]||null;}else{_node6.prev=_node6.next=null;}_node6.parent=parent;}return parent;}/**
       * Methods for modifying the DOM structure.
       *
       * @module cheerio/manipulation
       */ /**
       * Create an array of nodes, recursing into arrays and parsing strings if necessary.
       *
       * @private
       * @category Manipulation
       * @param elem - Elements to make an array of.
       * @param clone - Optionally clone nodes.
       * @returns The array of nodes.
       */function _makeDomArray(elem,clone){var _this19=this;if(elem==null){return[];}if(isCheerio(elem)){return clone?cloneDom(elem.get()):elem.get();}if(Array.isArray(elem)){return elem.reduce(function(newElems,el){return newElems.concat(_this19._makeDomArray(el,clone));},[]);}if(typeof elem==='string'){return this._parse(elem,this.options,false,null).children;}return clone?cloneDom([elem]):[elem];}function _insert(concatenator){return function(){var _this20=this;for(var _len14=arguments.length,elems=new Array(_len14),_key14=0;_key14<_len14;_key14++){elems[_key14]=arguments[_key14];}var lastIdx=this.length-1;return domEach(this,function(el,i){if(!hasChildren(el))return;var domSrc=typeof elems[0]==='function'?elems[0].call(el,i,_this20._render(el.children)):elems;var dom=_this20._makeDomArray(domSrc,i<lastIdx);concatenator(dom,el.children,el);});};}/**
       * Modify an array in-place, removing some number of elements and adding new
       * elements directly following them.
       *
       * @private
       * @category Manipulation
       * @param array - Target array to splice.
       * @param spliceIdx - Index at which to begin changing the array.
       * @param spliceCount - Number of elements to remove from the array.
       * @param newElems - Elements to insert into the array.
       * @param parent - The parent of the node.
       * @returns The spliced array.
       */function uniqueSplice(array,spliceIdx,spliceCount,newElems,parent){var _a,_b;var spliceArgs=[spliceIdx,spliceCount].concat(_toConsumableArray(newElems));var prev=spliceIdx===0?null:array[spliceIdx-1];var next=spliceIdx+spliceCount>=array.length?null:array[spliceIdx+spliceCount];/*
           * Before splicing in new elements, ensure they do not already appear in the
           * current array.
           */for(var idx=0;idx<newElems.length;++idx){var _node7=newElems[idx];var oldParent=_node7.parent;if(oldParent){var oldSiblings=oldParent.children;var prevIdx=oldSiblings.indexOf(_node7);if(prevIdx>-1){oldParent.children.splice(prevIdx,1);if(parent===oldParent&&spliceIdx>prevIdx){spliceArgs[0]--;}}}_node7.parent=parent;if(_node7.prev){_node7.prev.next=(_a=_node7.next)!==null&&_a!==void 0?_a:null;}if(_node7.next){_node7.next.prev=(_b=_node7.prev)!==null&&_b!==void 0?_b:null;}_node7.prev=idx===0?prev:newElems[idx-1];_node7.next=idx===newElems.length-1?next:newElems[idx+1];}if(prev){prev.next=newElems[0];}if(next){next.prev=newElems[newElems.length-1];}return array.splice.apply(array,_toConsumableArray(spliceArgs));}/**
       * Insert every element in the set of matched elements to the end of the target.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('<li class="plum">Plum</li>').appendTo('#fruits');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //      <li class="plum">Plum</li>
       * //    </ul>
       * ```
       *
       * @param target - Element to append elements to.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/appendTo/}
       */function appendTo(target){var appendTarget=isCheerio(target)?target:this._make(target);appendTarget.append(this);return this;}/**
       * Insert every element in the set of matched elements to the beginning of the target.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('<li class="plum">Plum</li>').prependTo('#fruits');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="plum">Plum</li>
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @param target - Element to prepend elements to.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/prependTo/}
       */function prependTo$1(target){var prependTarget=isCheerio(target)?target:this._make(target);prependTarget.prepend(this);return this;}/**
       * Inserts content as the _last_ child of each of the selected elements.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('ul').append('<li class="plum">Plum</li>');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //      <li class="plum">Plum</li>
       * //    </ul>
       * ```
       *
       * @see {@link https://api.jquery.com/append/}
       */var append=_insert(function(dom,children,parent){uniqueSplice(children,children.length,0,dom,parent);});/**
       * Inserts content as the _first_ child of each of the selected elements.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('ul').prepend('<li class="plum">Plum</li>');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="plum">Plum</li>
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @see {@link https://api.jquery.com/prepend/}
       */var prepend=_insert(function(dom,children,parent){uniqueSplice(children,0,0,dom,parent);});function _wrap(insert){return function(wrapper){var lastIdx=this.length-1;var lastParent=this.parents().last();for(var _i36=0;_i36<this.length;_i36++){var el=this[_i36];var _wrap2=typeof wrapper==='function'?wrapper.call(el,_i36,el):typeof wrapper==='string'&&!isHtml(wrapper)?lastParent.find(wrapper).clone():wrapper;var _this$_makeDomArray=this._makeDomArray(_wrap2,_i36<lastIdx),_this$_makeDomArray2=_slicedToArray(_this$_makeDomArray,1),wrapperDom=_this$_makeDomArray2[0];if(!wrapperDom||!hasChildren(wrapperDom))continue;var elInsertLocation=wrapperDom;/*
                   * Find the deepest child. Only consider the first tag child of each node
                   * (ignore text); stop if no children are found.
                   */var _j6=0;while(_j6<elInsertLocation.children.length){var child=elInsertLocation.children[_j6];if(isTag(child)){elInsertLocation=child;_j6=0;}else{_j6++;}}insert(el,elInsertLocation,[wrapperDom]);}return this;};}/**
       * The .wrap() function can take any string or object that could be passed to
       * the $() factory function to specify a DOM structure. This structure may be
       * nested several levels deep, but should contain only one inmost element. A
       * copy of this structure will be wrapped around each of the elements in the set
       * of matched elements. This method returns the original set of elements for
       * chaining purposes.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * const redFruit = $('<div class="red-fruit"></div>');
       * $('.apple').wrap(redFruit);
       *
       * //=> <ul id="fruits">
       * //     <div class="red-fruit">
       * //      <li class="apple">Apple</li>
       * //     </div>
       * //     <li class="orange">Orange</li>
       * //     <li class="plum">Plum</li>
       * //   </ul>
       *
       * const healthy = $('<div class="healthy"></div>');
       * $('li').wrap(healthy);
       *
       * //=> <ul id="fruits">
       * //     <div class="healthy">
       * //       <li class="apple">Apple</li>
       * //     </div>
       * //     <div class="healthy">
       * //       <li class="orange">Orange</li>
       * //     </div>
       * //     <div class="healthy">
       * //        <li class="plum">Plum</li>
       * //     </div>
       * //   </ul>
       * ```
       *
       * @param wrapper - The DOM structure to wrap around each element in the selection.
       * @see {@link https://api.jquery.com/wrap/}
       */var wrap=_wrap(function(el,elInsertLocation,wrapperDom){var parent=el.parent;if(!parent)return;var siblings=parent.children;var index=siblings.indexOf(el);update([el],elInsertLocation);/*
           * The previous operation removed the current element from the `siblings`
           * array, so the `dom` array can be inserted without removing any
           * additional elements.
           */uniqueSplice(siblings,index,0,wrapperDom,parent);});/**
       * The .wrapInner() function can take any string or object that could be passed
       * to the $() factory function to specify a DOM structure. This structure may be
       * nested several levels deep, but should contain only one inmost element. The
       * structure will be wrapped around the content of each of the elements in the
       * set of matched elements.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * const redFruit = $('<div class="red-fruit"></div>');
       * $('.apple').wrapInner(redFruit);
       *
       * //=> <ul id="fruits">
       * //     <li class="apple">
       * //       <div class="red-fruit">Apple</div>
       * //     </li>
       * //     <li class="orange">Orange</li>
       * //     <li class="pear">Pear</li>
       * //   </ul>
       *
       * const healthy = $('<div class="healthy"></div>');
       * $('li').wrapInner(healthy);
       *
       * //=> <ul id="fruits">
       * //     <li class="apple">
       * //       <div class="healthy">Apple</div>
       * //     </li>
       * //     <li class="orange">
       * //       <div class="healthy">Orange</div>
       * //     </li>
       * //     <li class="pear">
       * //       <div class="healthy">Pear</div>
       * //     </li>
       * //   </ul>
       * ```
       *
       * @param wrapper - The DOM structure to wrap around the content of each element
       *   in the selection.
       * @returns The instance itself, for chaining.
       * @see {@link https://api.jquery.com/wrapInner/}
       */var wrapInner=_wrap(function(el,elInsertLocation,wrapperDom){if(!hasChildren(el))return;update(el.children,elInsertLocation);update(wrapperDom,el);});/**
       * The .unwrap() function, removes the parents of the set of matched elements
       * from the DOM, leaving the matched elements in their place.
       *
       * @category Manipulation
       * @example <caption>without selector</caption>
       *
       * ```js
       * const $ = cheerio.load(
       *   '<div id=test>\n  <div><p>Hello</p></div>\n  <div><p>World</p></div>\n</div>'
       * );
       * $('#test p').unwrap();
       *
       * //=> <div id=test>
       * //     <p>Hello</p>
       * //     <p>World</p>
       * //   </div>
       * ```
       *
       * @example <caption>with selector</caption>
       *
       * ```js
       * const $ = cheerio.load(
       *   '<div id=test>\n  <p>Hello</p>\n  <b><p>World</p></b>\n</div>'
       * );
       * $('#test p').unwrap('b');
       *
       * //=> <div id=test>
       * //     <p>Hello</p>
       * //     <p>World</p>
       * //   </div>
       * ```
       *
       * @param selector - A selector to check the parent element against. If an
       *   element's parent does not match the selector, the element won't be unwrapped.
       * @returns The instance itself, for chaining.
       * @see {@link https://api.jquery.com/unwrap/}
       */function unwrap(selector){var _this21=this;this.parent(selector).not('body').each(function(_,el){_this21._make(el).replaceWith(el.children);});return this;}/**
       * The .wrapAll() function can take any string or object that could be passed to
       * the $() function to specify a DOM structure. This structure may be nested
       * several levels deep, but should contain only one inmost element. The
       * structure will be wrapped around all of the elements in the set of matched
       * elements, as a single group.
       *
       * @category Manipulation
       * @example <caption>With markup passed to `wrapAll`</caption>
       *
       * ```js
       * const $ = cheerio.load(
       *   '<div class="container"><div class="inner">First</div><div class="inner">Second</div></div>'
       * );
       * $('.inner').wrapAll("<div class='new'></div>");
       *
       * //=> <div class="container">
       * //     <div class='new'>
       * //       <div class="inner">First</div>
       * //       <div class="inner">Second</div>
       * //     </div>
       * //   </div>
       * ```
       *
       * @example <caption>With an existing cheerio instance</caption>
       *
       * ```js
       * const $ = cheerio.load(
       *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'
       * );
       * const wrap = $('<div><p><em><b></b></em></p></div>');
       * $('span').wrapAll(wrap);
       *
       * //=> <div>
       * //     <p>
       * //       <em>
       * //         <b>
       * //           <span>Span 1</span>
       * //           <span>Span 2</span>
       * //         </b>
       * //       </em>
       * //     </p>
       * //   </div>
       * //   <strong>Strong</strong>
       * ```
       *
       * @param wrapper - The DOM structure to wrap around all matched elements in the
       *   selection.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/wrapAll/}
       */function wrapAll(wrapper){var el=this[0];if(el){var _wrap3=this._make(typeof wrapper==='function'?wrapper.call(el,0,el):wrapper).insertBefore(el);// If html is given as wrapper, wrap may contain text elements
var elInsertLocation;for(var _i37=0;_i37<_wrap3.length;_i37++){if(_wrap3[_i37].type==='tag')elInsertLocation=_wrap3[_i37];}var _j7=0;/*
               * Find the deepest child. Only consider the first tag child of each node
               * (ignore text); stop if no children are found.
               */while(elInsertLocation&&_j7<elInsertLocation.children.length){var child=elInsertLocation.children[_j7];if(child.type==='tag'){elInsertLocation=child;_j7=0;}else{_j7++;}}if(elInsertLocation)this._make(elInsertLocation).append(this);}return this;}/* eslint-disable jsdoc/check-param-names*/ /**
       * Insert content next to each element in the set of matched elements.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('.apple').after('<li class="plum">Plum</li>');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="apple">Apple</li>
       * //      <li class="plum">Plum</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @param content - HTML string, DOM element, array of DOM elements or Cheerio
       *   to insert after each element in the set of matched elements.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/after/}
       */function after(){var _this22=this;for(var _len15=arguments.length,elems=new Array(_len15),_key15=0;_key15<_len15;_key15++){elems[_key15]=arguments[_key15];}var lastIdx=this.length-1;return domEach(this,function(el,i){var parent=el.parent;if(!hasChildren(el)||!parent){return;}var siblings=parent.children;var index=siblings.indexOf(el);// If not found, move on
/* istanbul ignore next */if(index<0)return;var domSrc=typeof elems[0]==='function'?elems[0].call(el,i,_this22._render(el.children)):elems;var dom=_this22._makeDomArray(domSrc,i<lastIdx);// Add element after `this` element
uniqueSplice(siblings,index+1,0,dom,parent);});}/* eslint-enable jsdoc/check-param-names*/ /**
       * Insert every element in the set of matched elements after the target.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('<li class="plum">Plum</li>').insertAfter('.apple');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="apple">Apple</li>
       * //      <li class="plum">Plum</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @param target - Element to insert elements after.
       * @returns The set of newly inserted elements.
       * @see {@link https://api.jquery.com/insertAfter/}
       */function insertAfter(target){var _this23=this;if(typeof target==='string'){target=this._make(target);}this.remove();var clones=[];this._makeDomArray(target).forEach(function(el){var clonedSelf=_this23.clone().toArray();var parent=el.parent;if(!parent){return;}var siblings=parent.children;var index=siblings.indexOf(el);// If not found, move on
/* istanbul ignore next */if(index<0)return;// Add cloned `this` element(s) after target element
uniqueSplice(siblings,index+1,0,clonedSelf,parent);clones.push.apply(clones,_toConsumableArray(clonedSelf));});return this._make(clones);}/* eslint-disable jsdoc/check-param-names*/ /**
       * Insert content previous to each element in the set of matched elements.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('.apple').before('<li class="plum">Plum</li>');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="plum">Plum</li>
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @param content - HTML string, DOM element, array of DOM elements or Cheerio
       *   to insert before each element in the set of matched elements.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/before/}
       */function before(){var _this24=this;for(var _len16=arguments.length,elems=new Array(_len16),_key16=0;_key16<_len16;_key16++){elems[_key16]=arguments[_key16];}var lastIdx=this.length-1;return domEach(this,function(el,i){var parent=el.parent;if(!hasChildren(el)||!parent){return;}var siblings=parent.children;var index=siblings.indexOf(el);// If not found, move on
/* istanbul ignore next */if(index<0)return;var domSrc=typeof elems[0]==='function'?elems[0].call(el,i,_this24._render(el.children)):elems;var dom=_this24._makeDomArray(domSrc,i<lastIdx);// Add element before `el` element
uniqueSplice(siblings,index,0,dom,parent);});}/* eslint-enable jsdoc/check-param-names*/ /**
       * Insert every element in the set of matched elements before the target.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('<li class="plum">Plum</li>').insertBefore('.apple');
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="plum">Plum</li>
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //      <li class="pear">Pear</li>
       * //    </ul>
       * ```
       *
       * @param target - Element to insert elements before.
       * @returns The set of newly inserted elements.
       * @see {@link https://api.jquery.com/insertBefore/}
       */function insertBefore(target){var _this25=this;var targetArr=this._make(target);this.remove();var clones=[];domEach(targetArr,function(el){var clonedSelf=_this25.clone().toArray();var parent=el.parent;if(!parent){return;}var siblings=parent.children;var index=siblings.indexOf(el);// If not found, move on
/* istanbul ignore next */if(index<0)return;// Add cloned `this` element(s) after target element
uniqueSplice(siblings,index,0,clonedSelf,parent);clones.push.apply(clones,_toConsumableArray(clonedSelf));});return this._make(clones);}/**
       * Removes the set of matched elements from the DOM and all their children.
       * `selector` filters the set of matched elements to be removed.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('.pear').remove();
       * $.html();
       * //=>  <ul id="fruits">
       * //      <li class="apple">Apple</li>
       * //      <li class="orange">Orange</li>
       * //    </ul>
       * ```
       *
       * @param selector - Optional selector for elements to remove.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/remove/}
       */function remove(selector){// Filter if we have selector
var elems=selector?this.filter(selector):this;domEach(elems,function(el){removeElement(el);el.prev=el.next=el.parent=null;});return this;}/**
       * Replaces matched elements with `content`.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * const plum = $('<li class="plum">Plum</li>');
       * $('.pear').replaceWith(plum);
       * $.html();
       * //=> <ul id="fruits">
       * //     <li class="apple">Apple</li>
       * //     <li class="orange">Orange</li>
       * //     <li class="plum">Plum</li>
       * //   </ul>
       * ```
       *
       * @param content - Replacement for matched elements.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/replaceWith/}
       */function replaceWith(content){var _this26=this;return domEach(this,function(el,i){var parent=el.parent;if(!parent){return;}var siblings=parent.children;var cont=typeof content==='function'?content.call(el,i,el):content;var dom=_this26._makeDomArray(cont);/*
               * In the case that `dom` contains nodes that already exist in other
               * structures, ensure those nodes are properly removed.
               */update(dom,null);var index=siblings.indexOf(el);// Completely remove old element
uniqueSplice(siblings,index,1,dom,parent);if(!dom.includes(el)){el.parent=el.prev=el.next=null;}});}/**
       * Empties an element, removing all its children.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * $('ul').empty();
       * $.html();
       * //=>  <ul id="fruits"></ul>
       * ```
       *
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/empty/}
       */function empty(){return domEach(this,function(el){if(!hasChildren(el))return;el.children.forEach(function(child){child.next=child.prev=child.parent=null;});el.children.length=0;});}function html(str){var _this27=this;if(str===undefined){var el=this[0];if(!el||!hasChildren(el))return null;return this._render(el.children);}return domEach(this,function(el){if(!hasChildren(el))return;el.children.forEach(function(child){child.next=child.prev=child.parent=null;});var content=isCheerio(str)?str.toArray():_this27._parse("".concat(str),_this27.options,false,el).children;update(content,el);});}/**
       * Turns the collection to a string. Alias for `.html()`.
       *
       * @category Manipulation
       * @returns The rendered document.
       */function toString$2(){return this._render(this);}function text(str){var _this28=this;// If `str` is undefined, act as a "getter"
if(str===undefined){return text$1(this);}if(typeof str==='function'){// Function support
return domEach(this,function(el,i){return _this28._make(el).text(str.call(el,i,text$1([el])));});}// Append text node to each selected elements
return domEach(this,function(el){if(!hasChildren(el))return;el.children.forEach(function(child){child.next=child.prev=child.parent=null;});var textNode=new Text$1("".concat(str));update(textNode,el);});}/**
       * Clone the cheerio object.
       *
       * @category Manipulation
       * @example
       *
       * ```js
       * const moreFruit = $('#fruits').clone();
       * ```
       *
       * @returns The cloned object.
       * @see {@link https://api.jquery.com/clone/}
       */function clone(){return this._make(cloneDom(this.get()));}var Manipulation=/*#__PURE__*/Object.freeze((_Object$freeze8={__proto__:null},_defineProperty(_Object$freeze8,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze8,"_makeDomArray",_makeDomArray),_defineProperty(_Object$freeze8,"appendTo",appendTo),_defineProperty(_Object$freeze8,"prependTo",prependTo$1),_defineProperty(_Object$freeze8,"append",append),_defineProperty(_Object$freeze8,"prepend",prepend),_defineProperty(_Object$freeze8,"wrap",wrap),_defineProperty(_Object$freeze8,"wrapInner",wrapInner),_defineProperty(_Object$freeze8,"unwrap",unwrap),_defineProperty(_Object$freeze8,"wrapAll",wrapAll),_defineProperty(_Object$freeze8,"after",after),_defineProperty(_Object$freeze8,"insertAfter",insertAfter),_defineProperty(_Object$freeze8,"before",before),_defineProperty(_Object$freeze8,"insertBefore",insertBefore),_defineProperty(_Object$freeze8,"remove",remove),_defineProperty(_Object$freeze8,"replaceWith",replaceWith),_defineProperty(_Object$freeze8,"empty",empty),_defineProperty(_Object$freeze8,"html",html),_defineProperty(_Object$freeze8,"toString",toString$2),_defineProperty(_Object$freeze8,"text",text),_defineProperty(_Object$freeze8,"clone",clone),_Object$freeze8));/**
       * Set multiple CSS properties for every matched element.
       *
       * @category CSS
       * @param prop - The names of the properties.
       * @param val - The new values.
       * @returns The instance itself.
       * @see {@link https://api.jquery.com/css/}
       */function css(prop,val){if(prop!=null&&val!=null||// When `prop` is a "plain" object
_typeof(prop)==='object'&&!Array.isArray(prop)){return domEach(this,function(el,i){if(isTag(el)){// `prop` can't be an array here anymore.
setCss(el,prop,val,i);}});}if(this.length===0){return undefined;}return getCss(this[0],prop);}/**
       * Set styles of all elements.
       *
       * @private
       * @param el - Element to set style of.
       * @param prop - Name of property.
       * @param value - Value to set property to.
       * @param idx - Optional index within the selection.
       */function setCss(el,prop,value,idx){if(typeof prop==='string'){var _styles=getCss(el);var _val2=typeof value==='function'?value.call(el,idx,_styles[prop]):value;if(_val2===''){delete _styles[prop];}else if(_val2!=null){_styles[prop]=_val2;}el.attribs['style']=stringify(_styles);}else if(_typeof(prop)==='object'){Object.keys(prop).forEach(function(k,i){setCss(el,k,prop[k],i);});}}function getCss(el,prop){if(!el||!isTag(el))return;var styles=parse$4(el.attribs['style']);if(typeof prop==='string'){return styles[prop];}if(Array.isArray(prop)){var newStyles={};prop.forEach(function(item){if(styles[item]!=null){newStyles[item]=styles[item];}});return newStyles;}return styles;}/**
       * Stringify `obj` to styles.
       *
       * @private
       * @category CSS
       * @param obj - Object to stringify.
       * @returns The serialized styles.
       */function stringify(obj){return Object.keys(obj).reduce(function(str,prop){return"".concat(str).concat(str?' ':'').concat(prop,": ").concat(obj[prop],";");},'');}/**
       * Parse `styles`.
       *
       * @private
       * @category CSS
       * @param styles - Styles to be parsed.
       * @returns The parsed styles.
       */function parse$4(styles){styles=(styles||'').trim();if(!styles)return{};var obj={};var key;var _iterator6=_createForOfIteratorHelper(styles.split(';')),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var str=_step6.value;var _n2=str.indexOf(':');// If there is no :, or if it is the first/last character, add to the previous item's value
if(_n2<1||_n2===str.length-1){var trimmed=str.trimEnd();if(trimmed.length>0&&key!==undefined){obj[key]+=";".concat(trimmed);}}else{key=str.slice(0,_n2).trim();obj[key]=str.slice(_n2+1).trim();}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}return obj;}var Css=/*#__PURE__*/Object.freeze((_Object$freeze9={__proto__:null},_defineProperty(_Object$freeze9,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze9,"css",css),_Object$freeze9));/*
       * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js
       * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js
       */var submittableSelector='input,select,textarea,keygen';var r20=/%20/g;var rCRLF=/\r?\n/g;/**
       * Encode a set of form elements as a string for submission.
       *
       * @category Forms
       * @example
       *
       * ```js
       * $('<form><input name="foo" value="bar" /></form>').serialize();
       * //=> 'foo=bar'
       * ```
       *
       * @returns The serialized form.
       * @see {@link https://api.jquery.com/serialize/}
       */function serialize(){// Convert form elements into name/value objects
var arr=this.serializeArray();// Serialize each element into a key/value string
var retArr=arr.map(function(data){return"".concat(encodeURIComponent(data.name),"=").concat(encodeURIComponent(data.value));});// Return the resulting serialization
return retArr.join('&').replace(r20,'+');}/**
       * Encode a set of form elements as an array of names and values.
       *
       * @category Forms
       * @example
       *
       * ```js
       * $('<form><input name="foo" value="bar" /></form>').serializeArray();
       * //=> [ { name: 'foo', value: 'bar' } ]
       * ```
       *
       * @returns The serialized form.
       * @see {@link https://api.jquery.com/serializeArray/}
       */function serializeArray(){var _this29=this;// Resolve all form elements from either forms or collections of form elements
return this.map(function(_,elem){var $elem=_this29._make(elem);if(isTag(elem)&&elem.name==='form'){return $elem.find(submittableSelector).toArray();}return $elem.filter(submittableSelector).toArray();}).filter(// Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)
'[name!=""]:enabled'+// And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)
':not(:submit, :button, :image, :reset, :file)'+// And are either checked/don't have a checkable state
':matches([checked], :not(:checkbox, :radio))'// Convert each of the elements to its value(s)
).map(function(_,elem){var _a;var $elem=_this29._make(elem);var name=$elem.attr('name');// We have filtered for elements with a name before.
// If there is no value set (e.g. `undefined`, `null`), then default value to empty
var value=(_a=$elem.val())!==null&&_a!==void 0?_a:'';// If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs
if(Array.isArray(value)){return value.map(function(val){return(/*
                   * We trim replace any line endings (e.g. `\r` or `\r\n` with `\r\n`) to guarantee consistency across platforms
                   * These can occur inside of `<textarea>'s`
                   */{name:name,value:val.replace(rCRLF,'\r\n')});});}// Otherwise (e.g. `<input type="text">`, return only one key/value pair
return{name:name,value:value.replace(rCRLF,'\r\n')};}).toArray();}var Forms=/*#__PURE__*/Object.freeze((_Object$freeze10={__proto__:null},_defineProperty(_Object$freeze10,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze10,"serialize",serialize),_defineProperty(_Object$freeze10,"serializeArray",serializeArray),_Object$freeze10));var Cheerio=/*#__PURE__*/_createClass(/**
           * Instance of cheerio. Methods are specified in the modules. Usage of this
           * constructor is not recommended. Please use `$.load` instead.
           *
           * @private
           * @param elements - The new selection.
           * @param root - Sets the root node.
           * @param options - Options for the instance.
           */function Cheerio(elements,root,options){_classCallCheck(this,Cheerio);this.length=0;this.options=options;this._root=root;if(elements){for(var idx=0;idx<elements.length;idx++){this[idx]=elements[idx];}this.length=elements.length;}});/** Set a signature of the object. */Cheerio.prototype.cheerio='[cheerio object]';/*
       * Make cheerio an array-like object
       */Cheerio.prototype.splice=Array.prototype.splice;// Support for (const element of $(...)) iteration:
Cheerio.prototype[Symbol.iterator]=Array.prototype[Symbol.iterator];// Plug in the API
Object.assign(Cheerio.prototype,Attributes,Traversing,Manipulation,Css,Forms);function getLoad(parse,render){/**
           * Create a querying function, bound to a document created from the provided markup.
           *
           * Note that similar to web browser contexts, this operation may introduce
           * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to
           * switch to fragment mode and disable this.
           *
           * @param content - Markup to be loaded.
           * @param options - Options for the created instance.
           * @param isDocument - Allows parser to be switched to fragment mode.
           * @returns The loaded document.
           * @see {@link https://cheerio.js.org#loading} for additional usage information.
           */return function load(content,options){var isDocument=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(content==null){throw new Error('cheerio.load() expects a string');}var internalOpts=_objectSpread(_objectSpread({},defaultOpts$2),flatten$1(options));var initialRoot=parse(content,internalOpts,isDocument,null);/** Create an extended class here, so that extensions only live on one instance. */var LoadedCheerio=/*#__PURE__*/function(_Cheerio){_inherits(LoadedCheerio,_Cheerio);var _super9=_createSuper(LoadedCheerio);function LoadedCheerio(){_classCallCheck(this,LoadedCheerio);return _super9.apply(this,arguments);}_createClass(LoadedCheerio,[{key:"_make",value:function _make(selector,context){var cheerio=initialize(selector,context);cheerio.prevObject=this;return cheerio;}},{key:"_parse",value:function _parse(content,options,isDocument,context){return parse(content,options,isDocument,context);}},{key:"_render",value:function _render(dom){return render(dom,this.options);}}]);return LoadedCheerio;}(Cheerio);function initialize(selector,context){var root=arguments.length>2&&arguments[2]!==undefined?arguments[2]:initialRoot;var opts=arguments.length>3?arguments[3]:undefined;// $($)
if(selector&&isCheerio(selector))return selector;var options=_objectSpread(_objectSpread({},internalOpts),flatten$1(opts));var r=typeof root==='string'?[parse(root,options,false,null)]:'length'in root?root:[root];var rootInstance=isCheerio(r)?r:new LoadedCheerio(r,null,options);// Add a cyclic reference, so that calling methods on `_root` never fails.
rootInstance._root=rootInstance;// $(), $(null), $(undefined), $(false)
if(!selector){return new LoadedCheerio(undefined,rootInstance,options);}var elements=typeof selector==='string'&&isHtml(selector)?// $(<html>)
parse(selector,options,false,null).children:isNode(selector)?// $(dom)
[selector]:Array.isArray(selector)?// $([dom])
selector:undefined;var instance=new LoadedCheerio(elements,rootInstance,options);if(elements){return instance;}if(typeof selector!=='string'){throw new Error('Unexpected type of selector');}// We know that our selector is a string now.
var search=selector;var searchContext=!context?// If we don't have a context, maybe we have a root, from loading
rootInstance:typeof context==='string'?isHtml(context)?// $('li', '<ul>...</ul>')
new LoadedCheerio([parse(context,options,false,null)],rootInstance,options):(// $('li', 'ul')
search="".concat(context," ").concat(search),rootInstance):isCheerio(context)?// $('li', $)
context:// $('li', node), $('li', [nodes])
new LoadedCheerio(Array.isArray(context)?context:[context],rootInstance,options);// If we still don't have a context, return
if(!searchContext)return instance;/*
                   * #id, .class, tag
                   */return searchContext.find(search);}// Add in static methods & properties
Object.assign(initialize,staticMethods,{load:load,// `_root` and `_options` are used in static methods.
_root:initialRoot,_options:internalOpts,// Add `fn` for plugins
fn:LoadedCheerio.prototype,// Add the prototype here to maintain `instanceof` behavior.
prototype:LoadedCheerio.prototype});return initialize;};}function isNode(obj){return!!obj.name||obj.type==='root'||obj.type==='text'||obj.type==='comment';}var UNDEFINED_CODE_POINTS=new Set([65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111]);var REPLACEMENT_CHARACTER="\uFFFD";var CODE_POINTS;(function(CODE_POINTS){CODE_POINTS[CODE_POINTS["EOF"]=-1]="EOF";CODE_POINTS[CODE_POINTS["NULL"]=0]="NULL";CODE_POINTS[CODE_POINTS["TABULATION"]=9]="TABULATION";CODE_POINTS[CODE_POINTS["CARRIAGE_RETURN"]=13]="CARRIAGE_RETURN";CODE_POINTS[CODE_POINTS["LINE_FEED"]=10]="LINE_FEED";CODE_POINTS[CODE_POINTS["FORM_FEED"]=12]="FORM_FEED";CODE_POINTS[CODE_POINTS["SPACE"]=32]="SPACE";CODE_POINTS[CODE_POINTS["EXCLAMATION_MARK"]=33]="EXCLAMATION_MARK";CODE_POINTS[CODE_POINTS["QUOTATION_MARK"]=34]="QUOTATION_MARK";CODE_POINTS[CODE_POINTS["NUMBER_SIGN"]=35]="NUMBER_SIGN";CODE_POINTS[CODE_POINTS["AMPERSAND"]=38]="AMPERSAND";CODE_POINTS[CODE_POINTS["APOSTROPHE"]=39]="APOSTROPHE";CODE_POINTS[CODE_POINTS["HYPHEN_MINUS"]=45]="HYPHEN_MINUS";CODE_POINTS[CODE_POINTS["SOLIDUS"]=47]="SOLIDUS";CODE_POINTS[CODE_POINTS["DIGIT_0"]=48]="DIGIT_0";CODE_POINTS[CODE_POINTS["DIGIT_9"]=57]="DIGIT_9";CODE_POINTS[CODE_POINTS["SEMICOLON"]=59]="SEMICOLON";CODE_POINTS[CODE_POINTS["LESS_THAN_SIGN"]=60]="LESS_THAN_SIGN";CODE_POINTS[CODE_POINTS["EQUALS_SIGN"]=61]="EQUALS_SIGN";CODE_POINTS[CODE_POINTS["GREATER_THAN_SIGN"]=62]="GREATER_THAN_SIGN";CODE_POINTS[CODE_POINTS["QUESTION_MARK"]=63]="QUESTION_MARK";CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_A"]=65]="LATIN_CAPITAL_A";CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_F"]=70]="LATIN_CAPITAL_F";CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_X"]=88]="LATIN_CAPITAL_X";CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_Z"]=90]="LATIN_CAPITAL_Z";CODE_POINTS[CODE_POINTS["RIGHT_SQUARE_BRACKET"]=93]="RIGHT_SQUARE_BRACKET";CODE_POINTS[CODE_POINTS["GRAVE_ACCENT"]=96]="GRAVE_ACCENT";CODE_POINTS[CODE_POINTS["LATIN_SMALL_A"]=97]="LATIN_SMALL_A";CODE_POINTS[CODE_POINTS["LATIN_SMALL_F"]=102]="LATIN_SMALL_F";CODE_POINTS[CODE_POINTS["LATIN_SMALL_X"]=120]="LATIN_SMALL_X";CODE_POINTS[CODE_POINTS["LATIN_SMALL_Z"]=122]="LATIN_SMALL_Z";CODE_POINTS[CODE_POINTS["REPLACEMENT_CHARACTER"]=65533]="REPLACEMENT_CHARACTER";})(CODE_POINTS=CODE_POINTS||(CODE_POINTS={}));var SEQUENCES={DASH_DASH:'--',CDATA_START:'[CDATA[',DOCTYPE:'doctype',SCRIPT:'script',PUBLIC:'public',SYSTEM:'system'};//Surrogates
function isSurrogate(cp){return cp>=55296&&cp<=57343;}function isSurrogatePair(cp){return cp>=56320&&cp<=57343;}function getSurrogatePairCodePoint(cp1,cp2){return(cp1-55296)*1024+9216+cp2;}//NOTE: excluding NULL and ASCII whitespace
function isControlCodePoint(cp){return cp!==0x20&&cp!==0x0a&&cp!==0x0d&&cp!==0x09&&cp!==0x0c&&cp>=0x01&&cp<=0x1f||cp>=0x7f&&cp<=0x9f;}function isUndefinedCodePoint(cp){return cp>=64976&&cp<=65007||UNDEFINED_CODE_POINTS.has(cp);}var ERR;(function(ERR){ERR["controlCharacterInInputStream"]="control-character-in-input-stream";ERR["noncharacterInInputStream"]="noncharacter-in-input-stream";ERR["surrogateInInputStream"]="surrogate-in-input-stream";ERR["nonVoidHtmlElementStartTagWithTrailingSolidus"]="non-void-html-element-start-tag-with-trailing-solidus";ERR["endTagWithAttributes"]="end-tag-with-attributes";ERR["endTagWithTrailingSolidus"]="end-tag-with-trailing-solidus";ERR["unexpectedSolidusInTag"]="unexpected-solidus-in-tag";ERR["unexpectedNullCharacter"]="unexpected-null-character";ERR["unexpectedQuestionMarkInsteadOfTagName"]="unexpected-question-mark-instead-of-tag-name";ERR["invalidFirstCharacterOfTagName"]="invalid-first-character-of-tag-name";ERR["unexpectedEqualsSignBeforeAttributeName"]="unexpected-equals-sign-before-attribute-name";ERR["missingEndTagName"]="missing-end-tag-name";ERR["unexpectedCharacterInAttributeName"]="unexpected-character-in-attribute-name";ERR["unknownNamedCharacterReference"]="unknown-named-character-reference";ERR["missingSemicolonAfterCharacterReference"]="missing-semicolon-after-character-reference";ERR["unexpectedCharacterAfterDoctypeSystemIdentifier"]="unexpected-character-after-doctype-system-identifier";ERR["unexpectedCharacterInUnquotedAttributeValue"]="unexpected-character-in-unquoted-attribute-value";ERR["eofBeforeTagName"]="eof-before-tag-name";ERR["eofInTag"]="eof-in-tag";ERR["missingAttributeValue"]="missing-attribute-value";ERR["missingWhitespaceBetweenAttributes"]="missing-whitespace-between-attributes";ERR["missingWhitespaceAfterDoctypePublicKeyword"]="missing-whitespace-after-doctype-public-keyword";ERR["missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers"]="missing-whitespace-between-doctype-public-and-system-identifiers";ERR["missingWhitespaceAfterDoctypeSystemKeyword"]="missing-whitespace-after-doctype-system-keyword";ERR["missingQuoteBeforeDoctypePublicIdentifier"]="missing-quote-before-doctype-public-identifier";ERR["missingQuoteBeforeDoctypeSystemIdentifier"]="missing-quote-before-doctype-system-identifier";ERR["missingDoctypePublicIdentifier"]="missing-doctype-public-identifier";ERR["missingDoctypeSystemIdentifier"]="missing-doctype-system-identifier";ERR["abruptDoctypePublicIdentifier"]="abrupt-doctype-public-identifier";ERR["abruptDoctypeSystemIdentifier"]="abrupt-doctype-system-identifier";ERR["cdataInHtmlContent"]="cdata-in-html-content";ERR["incorrectlyOpenedComment"]="incorrectly-opened-comment";ERR["eofInScriptHtmlCommentLikeText"]="eof-in-script-html-comment-like-text";ERR["eofInDoctype"]="eof-in-doctype";ERR["nestedComment"]="nested-comment";ERR["abruptClosingOfEmptyComment"]="abrupt-closing-of-empty-comment";ERR["eofInComment"]="eof-in-comment";ERR["incorrectlyClosedComment"]="incorrectly-closed-comment";ERR["eofInCdata"]="eof-in-cdata";ERR["absenceOfDigitsInNumericCharacterReference"]="absence-of-digits-in-numeric-character-reference";ERR["nullCharacterReference"]="null-character-reference";ERR["surrogateCharacterReference"]="surrogate-character-reference";ERR["characterReferenceOutsideUnicodeRange"]="character-reference-outside-unicode-range";ERR["controlCharacterReference"]="control-character-reference";ERR["noncharacterCharacterReference"]="noncharacter-character-reference";ERR["missingWhitespaceBeforeDoctypeName"]="missing-whitespace-before-doctype-name";ERR["missingDoctypeName"]="missing-doctype-name";ERR["invalidCharacterSequenceAfterDoctypeName"]="invalid-character-sequence-after-doctype-name";ERR["duplicateAttribute"]="duplicate-attribute";ERR["nonConformingDoctype"]="non-conforming-doctype";ERR["missingDoctype"]="missing-doctype";ERR["misplacedDoctype"]="misplaced-doctype";ERR["endTagWithoutMatchingOpenElement"]="end-tag-without-matching-open-element";ERR["closingOfElementWithOpenChildElements"]="closing-of-element-with-open-child-elements";ERR["disallowedContentInNoscriptInHead"]="disallowed-content-in-noscript-in-head";ERR["openElementsLeftAfterEof"]="open-elements-left-after-eof";ERR["abandonedHeadElementChild"]="abandoned-head-element-child";ERR["misplacedStartTagForHeadElement"]="misplaced-start-tag-for-head-element";ERR["nestedNoscriptInHead"]="nested-noscript-in-head";ERR["eofInElementThatCanContainOnlyText"]="eof-in-element-that-can-contain-only-text";})(ERR=ERR||(ERR={}));//Const
var DEFAULT_BUFFER_WATERLINE=1<<16;//Preprocessor
//NOTE: HTML input preprocessing
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
var Preprocessor=/*#__PURE__*/function(){function Preprocessor(handler){_classCallCheck(this,Preprocessor);this.handler=handler;this.html='';this.pos=-1;// NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0
this.lastGapPos=-2;this.gapStack=[];this.skipNextNewLine=false;this.lastChunkWritten=false;this.endOfChunkHit=false;this.bufferWaterline=DEFAULT_BUFFER_WATERLINE;this.isEol=false;this.lineStartPos=0;this.droppedBufferSize=0;this.line=1;//NOTE: avoid reporting errors twice on advance/retreat
this.lastErrOffset=-1;}/** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */_createClass(Preprocessor,[{key:"col",get:function get(){return this.pos-this.lineStartPos+Number(this.lastGapPos!==this.pos);}},{key:"offset",get:function get(){return this.droppedBufferSize+this.pos;}},{key:"getError",value:function getError(code){var line=this.line,col=this.col,offset=this.offset;return{code:code,startLine:line,endLine:line,startCol:col,endCol:col,startOffset:offset,endOffset:offset};}},{key:"_err",value:function _err(code){if(this.handler.onParseError&&this.lastErrOffset!==this.offset){this.lastErrOffset=this.offset;this.handler.onParseError(this.getError(code));}}},{key:"_addGap",value:function _addGap(){this.gapStack.push(this.lastGapPos);this.lastGapPos=this.pos;}},{key:"_processSurrogate",value:function _processSurrogate(cp){//NOTE: try to peek a surrogate pair
if(this.pos!==this.html.length-1){var nextCp=this.html.charCodeAt(this.pos+1);if(isSurrogatePair(nextCp)){//NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
this.pos++;//NOTE: add a gap that should be avoided during retreat
this._addGap();return getSurrogatePairCodePoint(cp,nextCp);}}//NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.
else if(!this.lastChunkWritten){this.endOfChunkHit=true;return CODE_POINTS.EOF;}//NOTE: isolated surrogate
this._err(ERR.surrogateInInputStream);return cp;}},{key:"willDropParsedChunk",value:function willDropParsedChunk(){return this.pos>this.bufferWaterline;}},{key:"dropParsedChunk",value:function dropParsedChunk(){if(this.willDropParsedChunk()){this.html=this.html.substring(this.pos);this.lineStartPos-=this.pos;this.droppedBufferSize+=this.pos;this.pos=0;this.lastGapPos=-2;this.gapStack.length=0;}}},{key:"write",value:function write(chunk,isLastChunk){if(this.html.length>0){this.html+=chunk;}else{this.html=chunk;}this.endOfChunkHit=false;this.lastChunkWritten=isLastChunk;}},{key:"insertHtmlAtCurrentPos",value:function insertHtmlAtCurrentPos(chunk){this.html=this.html.substring(0,this.pos+1)+chunk+this.html.substring(this.pos+1);this.endOfChunkHit=false;}},{key:"startsWith",value:function startsWith(pattern,caseSensitive){// Check if our buffer has enough characters
if(this.pos+pattern.length>this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return false;}if(caseSensitive){return this.html.startsWith(pattern,this.pos);}for(var _i38=0;_i38<pattern.length;_i38++){var cp=this.html.charCodeAt(this.pos+_i38)|0x20;if(cp!==pattern.charCodeAt(_i38)){return false;}}return true;}},{key:"peek",value:function peek(offset){var pos=this.pos+offset;if(pos>=this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return CODE_POINTS.EOF;}var code=this.html.charCodeAt(pos);return code===CODE_POINTS.CARRIAGE_RETURN?CODE_POINTS.LINE_FEED:code;}},{key:"advance",value:function advance(){this.pos++;//NOTE: LF should be in the last column of the line
if(this.isEol){this.isEol=false;this.line++;this.lineStartPos=this.pos;}if(this.pos>=this.html.length){this.endOfChunkHit=!this.lastChunkWritten;return CODE_POINTS.EOF;}var cp=this.html.charCodeAt(this.pos);//NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
if(cp===CODE_POINTS.CARRIAGE_RETURN){this.isEol=true;this.skipNextNewLine=true;return CODE_POINTS.LINE_FEED;}//NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
//must be ignored.
if(cp===CODE_POINTS.LINE_FEED){this.isEol=true;if(this.skipNextNewLine){// `line` will be bumped again in the recursive call.
this.line--;this.skipNextNewLine=false;this._addGap();return this.advance();}}this.skipNextNewLine=false;if(isSurrogate(cp)){cp=this._processSurrogate(cp);}//OPTIMIZATION: first check if code point is in the common allowed
//range (ASCII alphanumeric, whitespaces, big chunk of BMP)
//before going into detailed performance cost validation.
var isCommonValidRange=this.handler.onParseError===null||cp>0x1f&&cp<0x7f||cp===CODE_POINTS.LINE_FEED||cp===CODE_POINTS.CARRIAGE_RETURN||cp>0x9f&&cp<64976;if(!isCommonValidRange){this._checkForProblematicCharacters(cp);}return cp;}},{key:"_checkForProblematicCharacters",value:function _checkForProblematicCharacters(cp){if(isControlCodePoint(cp)){this._err(ERR.controlCharacterInInputStream);}else if(isUndefinedCodePoint(cp)){this._err(ERR.noncharacterInInputStream);}}},{key:"retreat",value:function retreat(count){this.pos-=count;while(this.pos<this.lastGapPos){this.lastGapPos=this.gapStack.pop();this.pos--;}this.isEol=false;}}]);return Preprocessor;}();var TokenType;(function(TokenType){TokenType[TokenType["CHARACTER"]=0]="CHARACTER";TokenType[TokenType["NULL_CHARACTER"]=1]="NULL_CHARACTER";TokenType[TokenType["WHITESPACE_CHARACTER"]=2]="WHITESPACE_CHARACTER";TokenType[TokenType["START_TAG"]=3]="START_TAG";TokenType[TokenType["END_TAG"]=4]="END_TAG";TokenType[TokenType["COMMENT"]=5]="COMMENT";TokenType[TokenType["DOCTYPE"]=6]="DOCTYPE";TokenType[TokenType["EOF"]=7]="EOF";TokenType[TokenType["HIBERNATION"]=8]="HIBERNATION";})(TokenType=TokenType||(TokenType={}));function getTokenAttr(token,attrName){for(var _i39=token.attrs.length-1;_i39>=0;_i39--){if(token.attrs[_i39].name===attrName){return token.attrs[_i39].value;}}return null;}/** All valid namespaces in HTML. */var NS;(function(NS){NS["HTML"]="http://www.w3.org/1999/xhtml";NS["MATHML"]="http://www.w3.org/1998/Math/MathML";NS["SVG"]="http://www.w3.org/2000/svg";NS["XLINK"]="http://www.w3.org/1999/xlink";NS["XML"]="http://www.w3.org/XML/1998/namespace";NS["XMLNS"]="http://www.w3.org/2000/xmlns/";})(NS=NS||(NS={}));var ATTRS;(function(ATTRS){ATTRS["TYPE"]="type";ATTRS["ACTION"]="action";ATTRS["ENCODING"]="encoding";ATTRS["PROMPT"]="prompt";ATTRS["NAME"]="name";ATTRS["COLOR"]="color";ATTRS["FACE"]="face";ATTRS["SIZE"]="size";})(ATTRS=ATTRS||(ATTRS={}));/**
       * The mode of the document.
       *
       * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}
       */var DOCUMENT_MODE;(function(DOCUMENT_MODE){DOCUMENT_MODE["NO_QUIRKS"]="no-quirks";DOCUMENT_MODE["QUIRKS"]="quirks";DOCUMENT_MODE["LIMITED_QUIRKS"]="limited-quirks";})(DOCUMENT_MODE=DOCUMENT_MODE||(DOCUMENT_MODE={}));var TAG_NAMES;(function(TAG_NAMES){TAG_NAMES["A"]="a";TAG_NAMES["ADDRESS"]="address";TAG_NAMES["ANNOTATION_XML"]="annotation-xml";TAG_NAMES["APPLET"]="applet";TAG_NAMES["AREA"]="area";TAG_NAMES["ARTICLE"]="article";TAG_NAMES["ASIDE"]="aside";TAG_NAMES["B"]="b";TAG_NAMES["BASE"]="base";TAG_NAMES["BASEFONT"]="basefont";TAG_NAMES["BGSOUND"]="bgsound";TAG_NAMES["BIG"]="big";TAG_NAMES["BLOCKQUOTE"]="blockquote";TAG_NAMES["BODY"]="body";TAG_NAMES["BR"]="br";TAG_NAMES["BUTTON"]="button";TAG_NAMES["CAPTION"]="caption";TAG_NAMES["CENTER"]="center";TAG_NAMES["CODE"]="code";TAG_NAMES["COL"]="col";TAG_NAMES["COLGROUP"]="colgroup";TAG_NAMES["DD"]="dd";TAG_NAMES["DESC"]="desc";TAG_NAMES["DETAILS"]="details";TAG_NAMES["DIALOG"]="dialog";TAG_NAMES["DIR"]="dir";TAG_NAMES["DIV"]="div";TAG_NAMES["DL"]="dl";TAG_NAMES["DT"]="dt";TAG_NAMES["EM"]="em";TAG_NAMES["EMBED"]="embed";TAG_NAMES["FIELDSET"]="fieldset";TAG_NAMES["FIGCAPTION"]="figcaption";TAG_NAMES["FIGURE"]="figure";TAG_NAMES["FONT"]="font";TAG_NAMES["FOOTER"]="footer";TAG_NAMES["FOREIGN_OBJECT"]="foreignObject";TAG_NAMES["FORM"]="form";TAG_NAMES["FRAME"]="frame";TAG_NAMES["FRAMESET"]="frameset";TAG_NAMES["H1"]="h1";TAG_NAMES["H2"]="h2";TAG_NAMES["H3"]="h3";TAG_NAMES["H4"]="h4";TAG_NAMES["H5"]="h5";TAG_NAMES["H6"]="h6";TAG_NAMES["HEAD"]="head";TAG_NAMES["HEADER"]="header";TAG_NAMES["HGROUP"]="hgroup";TAG_NAMES["HR"]="hr";TAG_NAMES["HTML"]="html";TAG_NAMES["I"]="i";TAG_NAMES["IMG"]="img";TAG_NAMES["IMAGE"]="image";TAG_NAMES["INPUT"]="input";TAG_NAMES["IFRAME"]="iframe";TAG_NAMES["KEYGEN"]="keygen";TAG_NAMES["LABEL"]="label";TAG_NAMES["LI"]="li";TAG_NAMES["LINK"]="link";TAG_NAMES["LISTING"]="listing";TAG_NAMES["MAIN"]="main";TAG_NAMES["MALIGNMARK"]="malignmark";TAG_NAMES["MARQUEE"]="marquee";TAG_NAMES["MATH"]="math";TAG_NAMES["MENU"]="menu";TAG_NAMES["META"]="meta";TAG_NAMES["MGLYPH"]="mglyph";TAG_NAMES["MI"]="mi";TAG_NAMES["MO"]="mo";TAG_NAMES["MN"]="mn";TAG_NAMES["MS"]="ms";TAG_NAMES["MTEXT"]="mtext";TAG_NAMES["NAV"]="nav";TAG_NAMES["NOBR"]="nobr";TAG_NAMES["NOFRAMES"]="noframes";TAG_NAMES["NOEMBED"]="noembed";TAG_NAMES["NOSCRIPT"]="noscript";TAG_NAMES["OBJECT"]="object";TAG_NAMES["OL"]="ol";TAG_NAMES["OPTGROUP"]="optgroup";TAG_NAMES["OPTION"]="option";TAG_NAMES["P"]="p";TAG_NAMES["PARAM"]="param";TAG_NAMES["PLAINTEXT"]="plaintext";TAG_NAMES["PRE"]="pre";TAG_NAMES["RB"]="rb";TAG_NAMES["RP"]="rp";TAG_NAMES["RT"]="rt";TAG_NAMES["RTC"]="rtc";TAG_NAMES["RUBY"]="ruby";TAG_NAMES["S"]="s";TAG_NAMES["SCRIPT"]="script";TAG_NAMES["SECTION"]="section";TAG_NAMES["SELECT"]="select";TAG_NAMES["SOURCE"]="source";TAG_NAMES["SMALL"]="small";TAG_NAMES["SPAN"]="span";TAG_NAMES["STRIKE"]="strike";TAG_NAMES["STRONG"]="strong";TAG_NAMES["STYLE"]="style";TAG_NAMES["SUB"]="sub";TAG_NAMES["SUMMARY"]="summary";TAG_NAMES["SUP"]="sup";TAG_NAMES["TABLE"]="table";TAG_NAMES["TBODY"]="tbody";TAG_NAMES["TEMPLATE"]="template";TAG_NAMES["TEXTAREA"]="textarea";TAG_NAMES["TFOOT"]="tfoot";TAG_NAMES["TD"]="td";TAG_NAMES["TH"]="th";TAG_NAMES["THEAD"]="thead";TAG_NAMES["TITLE"]="title";TAG_NAMES["TR"]="tr";TAG_NAMES["TRACK"]="track";TAG_NAMES["TT"]="tt";TAG_NAMES["U"]="u";TAG_NAMES["UL"]="ul";TAG_NAMES["SVG"]="svg";TAG_NAMES["VAR"]="var";TAG_NAMES["WBR"]="wbr";TAG_NAMES["XMP"]="xmp";})(TAG_NAMES=TAG_NAMES||(TAG_NAMES={}));/**
       * Tag IDs are numeric IDs for known tag names.
       *
       * We use tag IDs to improve the performance of tag name comparisons.
       */var TAG_ID;(function(TAG_ID){TAG_ID[TAG_ID["UNKNOWN"]=0]="UNKNOWN";TAG_ID[TAG_ID["A"]=1]="A";TAG_ID[TAG_ID["ADDRESS"]=2]="ADDRESS";TAG_ID[TAG_ID["ANNOTATION_XML"]=3]="ANNOTATION_XML";TAG_ID[TAG_ID["APPLET"]=4]="APPLET";TAG_ID[TAG_ID["AREA"]=5]="AREA";TAG_ID[TAG_ID["ARTICLE"]=6]="ARTICLE";TAG_ID[TAG_ID["ASIDE"]=7]="ASIDE";TAG_ID[TAG_ID["B"]=8]="B";TAG_ID[TAG_ID["BASE"]=9]="BASE";TAG_ID[TAG_ID["BASEFONT"]=10]="BASEFONT";TAG_ID[TAG_ID["BGSOUND"]=11]="BGSOUND";TAG_ID[TAG_ID["BIG"]=12]="BIG";TAG_ID[TAG_ID["BLOCKQUOTE"]=13]="BLOCKQUOTE";TAG_ID[TAG_ID["BODY"]=14]="BODY";TAG_ID[TAG_ID["BR"]=15]="BR";TAG_ID[TAG_ID["BUTTON"]=16]="BUTTON";TAG_ID[TAG_ID["CAPTION"]=17]="CAPTION";TAG_ID[TAG_ID["CENTER"]=18]="CENTER";TAG_ID[TAG_ID["CODE"]=19]="CODE";TAG_ID[TAG_ID["COL"]=20]="COL";TAG_ID[TAG_ID["COLGROUP"]=21]="COLGROUP";TAG_ID[TAG_ID["DD"]=22]="DD";TAG_ID[TAG_ID["DESC"]=23]="DESC";TAG_ID[TAG_ID["DETAILS"]=24]="DETAILS";TAG_ID[TAG_ID["DIALOG"]=25]="DIALOG";TAG_ID[TAG_ID["DIR"]=26]="DIR";TAG_ID[TAG_ID["DIV"]=27]="DIV";TAG_ID[TAG_ID["DL"]=28]="DL";TAG_ID[TAG_ID["DT"]=29]="DT";TAG_ID[TAG_ID["EM"]=30]="EM";TAG_ID[TAG_ID["EMBED"]=31]="EMBED";TAG_ID[TAG_ID["FIELDSET"]=32]="FIELDSET";TAG_ID[TAG_ID["FIGCAPTION"]=33]="FIGCAPTION";TAG_ID[TAG_ID["FIGURE"]=34]="FIGURE";TAG_ID[TAG_ID["FONT"]=35]="FONT";TAG_ID[TAG_ID["FOOTER"]=36]="FOOTER";TAG_ID[TAG_ID["FOREIGN_OBJECT"]=37]="FOREIGN_OBJECT";TAG_ID[TAG_ID["FORM"]=38]="FORM";TAG_ID[TAG_ID["FRAME"]=39]="FRAME";TAG_ID[TAG_ID["FRAMESET"]=40]="FRAMESET";TAG_ID[TAG_ID["H1"]=41]="H1";TAG_ID[TAG_ID["H2"]=42]="H2";TAG_ID[TAG_ID["H3"]=43]="H3";TAG_ID[TAG_ID["H4"]=44]="H4";TAG_ID[TAG_ID["H5"]=45]="H5";TAG_ID[TAG_ID["H6"]=46]="H6";TAG_ID[TAG_ID["HEAD"]=47]="HEAD";TAG_ID[TAG_ID["HEADER"]=48]="HEADER";TAG_ID[TAG_ID["HGROUP"]=49]="HGROUP";TAG_ID[TAG_ID["HR"]=50]="HR";TAG_ID[TAG_ID["HTML"]=51]="HTML";TAG_ID[TAG_ID["I"]=52]="I";TAG_ID[TAG_ID["IMG"]=53]="IMG";TAG_ID[TAG_ID["IMAGE"]=54]="IMAGE";TAG_ID[TAG_ID["INPUT"]=55]="INPUT";TAG_ID[TAG_ID["IFRAME"]=56]="IFRAME";TAG_ID[TAG_ID["KEYGEN"]=57]="KEYGEN";TAG_ID[TAG_ID["LABEL"]=58]="LABEL";TAG_ID[TAG_ID["LI"]=59]="LI";TAG_ID[TAG_ID["LINK"]=60]="LINK";TAG_ID[TAG_ID["LISTING"]=61]="LISTING";TAG_ID[TAG_ID["MAIN"]=62]="MAIN";TAG_ID[TAG_ID["MALIGNMARK"]=63]="MALIGNMARK";TAG_ID[TAG_ID["MARQUEE"]=64]="MARQUEE";TAG_ID[TAG_ID["MATH"]=65]="MATH";TAG_ID[TAG_ID["MENU"]=66]="MENU";TAG_ID[TAG_ID["META"]=67]="META";TAG_ID[TAG_ID["MGLYPH"]=68]="MGLYPH";TAG_ID[TAG_ID["MI"]=69]="MI";TAG_ID[TAG_ID["MO"]=70]="MO";TAG_ID[TAG_ID["MN"]=71]="MN";TAG_ID[TAG_ID["MS"]=72]="MS";TAG_ID[TAG_ID["MTEXT"]=73]="MTEXT";TAG_ID[TAG_ID["NAV"]=74]="NAV";TAG_ID[TAG_ID["NOBR"]=75]="NOBR";TAG_ID[TAG_ID["NOFRAMES"]=76]="NOFRAMES";TAG_ID[TAG_ID["NOEMBED"]=77]="NOEMBED";TAG_ID[TAG_ID["NOSCRIPT"]=78]="NOSCRIPT";TAG_ID[TAG_ID["OBJECT"]=79]="OBJECT";TAG_ID[TAG_ID["OL"]=80]="OL";TAG_ID[TAG_ID["OPTGROUP"]=81]="OPTGROUP";TAG_ID[TAG_ID["OPTION"]=82]="OPTION";TAG_ID[TAG_ID["P"]=83]="P";TAG_ID[TAG_ID["PARAM"]=84]="PARAM";TAG_ID[TAG_ID["PLAINTEXT"]=85]="PLAINTEXT";TAG_ID[TAG_ID["PRE"]=86]="PRE";TAG_ID[TAG_ID["RB"]=87]="RB";TAG_ID[TAG_ID["RP"]=88]="RP";TAG_ID[TAG_ID["RT"]=89]="RT";TAG_ID[TAG_ID["RTC"]=90]="RTC";TAG_ID[TAG_ID["RUBY"]=91]="RUBY";TAG_ID[TAG_ID["S"]=92]="S";TAG_ID[TAG_ID["SCRIPT"]=93]="SCRIPT";TAG_ID[TAG_ID["SECTION"]=94]="SECTION";TAG_ID[TAG_ID["SELECT"]=95]="SELECT";TAG_ID[TAG_ID["SOURCE"]=96]="SOURCE";TAG_ID[TAG_ID["SMALL"]=97]="SMALL";TAG_ID[TAG_ID["SPAN"]=98]="SPAN";TAG_ID[TAG_ID["STRIKE"]=99]="STRIKE";TAG_ID[TAG_ID["STRONG"]=100]="STRONG";TAG_ID[TAG_ID["STYLE"]=101]="STYLE";TAG_ID[TAG_ID["SUB"]=102]="SUB";TAG_ID[TAG_ID["SUMMARY"]=103]="SUMMARY";TAG_ID[TAG_ID["SUP"]=104]="SUP";TAG_ID[TAG_ID["TABLE"]=105]="TABLE";TAG_ID[TAG_ID["TBODY"]=106]="TBODY";TAG_ID[TAG_ID["TEMPLATE"]=107]="TEMPLATE";TAG_ID[TAG_ID["TEXTAREA"]=108]="TEXTAREA";TAG_ID[TAG_ID["TFOOT"]=109]="TFOOT";TAG_ID[TAG_ID["TD"]=110]="TD";TAG_ID[TAG_ID["TH"]=111]="TH";TAG_ID[TAG_ID["THEAD"]=112]="THEAD";TAG_ID[TAG_ID["TITLE"]=113]="TITLE";TAG_ID[TAG_ID["TR"]=114]="TR";TAG_ID[TAG_ID["TRACK"]=115]="TRACK";TAG_ID[TAG_ID["TT"]=116]="TT";TAG_ID[TAG_ID["U"]=117]="U";TAG_ID[TAG_ID["UL"]=118]="UL";TAG_ID[TAG_ID["SVG"]=119]="SVG";TAG_ID[TAG_ID["VAR"]=120]="VAR";TAG_ID[TAG_ID["WBR"]=121]="WBR";TAG_ID[TAG_ID["XMP"]=122]="XMP";})(TAG_ID=TAG_ID||(TAG_ID={}));var TAG_NAME_TO_ID=new Map([[TAG_NAMES.A,TAG_ID.A],[TAG_NAMES.ADDRESS,TAG_ID.ADDRESS],[TAG_NAMES.ANNOTATION_XML,TAG_ID.ANNOTATION_XML],[TAG_NAMES.APPLET,TAG_ID.APPLET],[TAG_NAMES.AREA,TAG_ID.AREA],[TAG_NAMES.ARTICLE,TAG_ID.ARTICLE],[TAG_NAMES.ASIDE,TAG_ID.ASIDE],[TAG_NAMES.B,TAG_ID.B],[TAG_NAMES.BASE,TAG_ID.BASE],[TAG_NAMES.BASEFONT,TAG_ID.BASEFONT],[TAG_NAMES.BGSOUND,TAG_ID.BGSOUND],[TAG_NAMES.BIG,TAG_ID.BIG],[TAG_NAMES.BLOCKQUOTE,TAG_ID.BLOCKQUOTE],[TAG_NAMES.BODY,TAG_ID.BODY],[TAG_NAMES.BR,TAG_ID.BR],[TAG_NAMES.BUTTON,TAG_ID.BUTTON],[TAG_NAMES.CAPTION,TAG_ID.CAPTION],[TAG_NAMES.CENTER,TAG_ID.CENTER],[TAG_NAMES.CODE,TAG_ID.CODE],[TAG_NAMES.COL,TAG_ID.COL],[TAG_NAMES.COLGROUP,TAG_ID.COLGROUP],[TAG_NAMES.DD,TAG_ID.DD],[TAG_NAMES.DESC,TAG_ID.DESC],[TAG_NAMES.DETAILS,TAG_ID.DETAILS],[TAG_NAMES.DIALOG,TAG_ID.DIALOG],[TAG_NAMES.DIR,TAG_ID.DIR],[TAG_NAMES.DIV,TAG_ID.DIV],[TAG_NAMES.DL,TAG_ID.DL],[TAG_NAMES.DT,TAG_ID.DT],[TAG_NAMES.EM,TAG_ID.EM],[TAG_NAMES.EMBED,TAG_ID.EMBED],[TAG_NAMES.FIELDSET,TAG_ID.FIELDSET],[TAG_NAMES.FIGCAPTION,TAG_ID.FIGCAPTION],[TAG_NAMES.FIGURE,TAG_ID.FIGURE],[TAG_NAMES.FONT,TAG_ID.FONT],[TAG_NAMES.FOOTER,TAG_ID.FOOTER],[TAG_NAMES.FOREIGN_OBJECT,TAG_ID.FOREIGN_OBJECT],[TAG_NAMES.FORM,TAG_ID.FORM],[TAG_NAMES.FRAME,TAG_ID.FRAME],[TAG_NAMES.FRAMESET,TAG_ID.FRAMESET],[TAG_NAMES.H1,TAG_ID.H1],[TAG_NAMES.H2,TAG_ID.H2],[TAG_NAMES.H3,TAG_ID.H3],[TAG_NAMES.H4,TAG_ID.H4],[TAG_NAMES.H5,TAG_ID.H5],[TAG_NAMES.H6,TAG_ID.H6],[TAG_NAMES.HEAD,TAG_ID.HEAD],[TAG_NAMES.HEADER,TAG_ID.HEADER],[TAG_NAMES.HGROUP,TAG_ID.HGROUP],[TAG_NAMES.HR,TAG_ID.HR],[TAG_NAMES.HTML,TAG_ID.HTML],[TAG_NAMES.I,TAG_ID.I],[TAG_NAMES.IMG,TAG_ID.IMG],[TAG_NAMES.IMAGE,TAG_ID.IMAGE],[TAG_NAMES.INPUT,TAG_ID.INPUT],[TAG_NAMES.IFRAME,TAG_ID.IFRAME],[TAG_NAMES.KEYGEN,TAG_ID.KEYGEN],[TAG_NAMES.LABEL,TAG_ID.LABEL],[TAG_NAMES.LI,TAG_ID.LI],[TAG_NAMES.LINK,TAG_ID.LINK],[TAG_NAMES.LISTING,TAG_ID.LISTING],[TAG_NAMES.MAIN,TAG_ID.MAIN],[TAG_NAMES.MALIGNMARK,TAG_ID.MALIGNMARK],[TAG_NAMES.MARQUEE,TAG_ID.MARQUEE],[TAG_NAMES.MATH,TAG_ID.MATH],[TAG_NAMES.MENU,TAG_ID.MENU],[TAG_NAMES.META,TAG_ID.META],[TAG_NAMES.MGLYPH,TAG_ID.MGLYPH],[TAG_NAMES.MI,TAG_ID.MI],[TAG_NAMES.MO,TAG_ID.MO],[TAG_NAMES.MN,TAG_ID.MN],[TAG_NAMES.MS,TAG_ID.MS],[TAG_NAMES.MTEXT,TAG_ID.MTEXT],[TAG_NAMES.NAV,TAG_ID.NAV],[TAG_NAMES.NOBR,TAG_ID.NOBR],[TAG_NAMES.NOFRAMES,TAG_ID.NOFRAMES],[TAG_NAMES.NOEMBED,TAG_ID.NOEMBED],[TAG_NAMES.NOSCRIPT,TAG_ID.NOSCRIPT],[TAG_NAMES.OBJECT,TAG_ID.OBJECT],[TAG_NAMES.OL,TAG_ID.OL],[TAG_NAMES.OPTGROUP,TAG_ID.OPTGROUP],[TAG_NAMES.OPTION,TAG_ID.OPTION],[TAG_NAMES.P,TAG_ID.P],[TAG_NAMES.PARAM,TAG_ID.PARAM],[TAG_NAMES.PLAINTEXT,TAG_ID.PLAINTEXT],[TAG_NAMES.PRE,TAG_ID.PRE],[TAG_NAMES.RB,TAG_ID.RB],[TAG_NAMES.RP,TAG_ID.RP],[TAG_NAMES.RT,TAG_ID.RT],[TAG_NAMES.RTC,TAG_ID.RTC],[TAG_NAMES.RUBY,TAG_ID.RUBY],[TAG_NAMES.S,TAG_ID.S],[TAG_NAMES.SCRIPT,TAG_ID.SCRIPT],[TAG_NAMES.SECTION,TAG_ID.SECTION],[TAG_NAMES.SELECT,TAG_ID.SELECT],[TAG_NAMES.SOURCE,TAG_ID.SOURCE],[TAG_NAMES.SMALL,TAG_ID.SMALL],[TAG_NAMES.SPAN,TAG_ID.SPAN],[TAG_NAMES.STRIKE,TAG_ID.STRIKE],[TAG_NAMES.STRONG,TAG_ID.STRONG],[TAG_NAMES.STYLE,TAG_ID.STYLE],[TAG_NAMES.SUB,TAG_ID.SUB],[TAG_NAMES.SUMMARY,TAG_ID.SUMMARY],[TAG_NAMES.SUP,TAG_ID.SUP],[TAG_NAMES.TABLE,TAG_ID.TABLE],[TAG_NAMES.TBODY,TAG_ID.TBODY],[TAG_NAMES.TEMPLATE,TAG_ID.TEMPLATE],[TAG_NAMES.TEXTAREA,TAG_ID.TEXTAREA],[TAG_NAMES.TFOOT,TAG_ID.TFOOT],[TAG_NAMES.TD,TAG_ID.TD],[TAG_NAMES.TH,TAG_ID.TH],[TAG_NAMES.THEAD,TAG_ID.THEAD],[TAG_NAMES.TITLE,TAG_ID.TITLE],[TAG_NAMES.TR,TAG_ID.TR],[TAG_NAMES.TRACK,TAG_ID.TRACK],[TAG_NAMES.TT,TAG_ID.TT],[TAG_NAMES.U,TAG_ID.U],[TAG_NAMES.UL,TAG_ID.UL],[TAG_NAMES.SVG,TAG_ID.SVG],[TAG_NAMES.VAR,TAG_ID.VAR],[TAG_NAMES.WBR,TAG_ID.WBR],[TAG_NAMES.XMP,TAG_ID.XMP]]);function getTagID(tagName){var _a;return(_a=TAG_NAME_TO_ID.get(tagName))!==null&&_a!==void 0?_a:TAG_ID.UNKNOWN;}var $$1=TAG_ID;var SPECIAL_ELEMENTS=(_SPECIAL_ELEMENTS={},_defineProperty(_SPECIAL_ELEMENTS,NS.HTML,new Set([$$1.ADDRESS,$$1.APPLET,$$1.AREA,$$1.ARTICLE,$$1.ASIDE,$$1.BASE,$$1.BASEFONT,$$1.BGSOUND,$$1.BLOCKQUOTE,$$1.BODY,$$1.BR,$$1.BUTTON,$$1.CAPTION,$$1.CENTER,$$1.COL,$$1.COLGROUP,$$1.DD,$$1.DETAILS,$$1.DIR,$$1.DIV,$$1.DL,$$1.DT,$$1.EMBED,$$1.FIELDSET,$$1.FIGCAPTION,$$1.FIGURE,$$1.FOOTER,$$1.FORM,$$1.FRAME,$$1.FRAMESET,$$1.H1,$$1.H2,$$1.H3,$$1.H4,$$1.H5,$$1.H6,$$1.HEAD,$$1.HEADER,$$1.HGROUP,$$1.HR,$$1.HTML,$$1.IFRAME,$$1.IMG,$$1.INPUT,$$1.LI,$$1.LINK,$$1.LISTING,$$1.MAIN,$$1.MARQUEE,$$1.MENU,$$1.META,$$1.NAV,$$1.NOEMBED,$$1.NOFRAMES,$$1.NOSCRIPT,$$1.OBJECT,$$1.OL,$$1.P,$$1.PARAM,$$1.PLAINTEXT,$$1.PRE,$$1.SCRIPT,$$1.SECTION,$$1.SELECT,$$1.SOURCE,$$1.STYLE,$$1.SUMMARY,$$1.TABLE,$$1.TBODY,$$1.TD,$$1.TEMPLATE,$$1.TEXTAREA,$$1.TFOOT,$$1.TH,$$1.THEAD,$$1.TITLE,$$1.TR,$$1.TRACK,$$1.UL,$$1.WBR,$$1.XMP])),_defineProperty(_SPECIAL_ELEMENTS,NS.MATHML,new Set([$$1.MI,$$1.MO,$$1.MN,$$1.MS,$$1.MTEXT,$$1.ANNOTATION_XML])),_defineProperty(_SPECIAL_ELEMENTS,NS.SVG,new Set([$$1.TITLE,$$1.FOREIGN_OBJECT,$$1.DESC])),_defineProperty(_SPECIAL_ELEMENTS,NS.XLINK,new Set()),_defineProperty(_SPECIAL_ELEMENTS,NS.XML,new Set()),_defineProperty(_SPECIAL_ELEMENTS,NS.XMLNS,new Set()),_SPECIAL_ELEMENTS);function isNumberedHeader(tn){return tn===$$1.H1||tn===$$1.H2||tn===$$1.H3||tn===$$1.H4||tn===$$1.H5||tn===$$1.H6;}var UNESCAPED_TEXT=new Set([TAG_NAMES.STYLE,TAG_NAMES.SCRIPT,TAG_NAMES.XMP,TAG_NAMES.IFRAME,TAG_NAMES.NOEMBED,TAG_NAMES.NOFRAMES,TAG_NAMES.PLAINTEXT]);function hasUnescapedText(tn,scriptingEnabled){return UNESCAPED_TEXT.has(tn)||scriptingEnabled&&tn===TAG_NAMES.NOSCRIPT;}//C1 Unicode control character reference replacements
var C1_CONTROLS_REFERENCE_REPLACEMENTS=new Map([[0x80,8364],[0x82,8218],[0x83,402],[0x84,8222],[0x85,8230],[0x86,8224],[0x87,8225],[0x88,710],[0x89,8240],[0x8a,352],[0x8b,8249],[0x8c,338],[0x8e,381],[0x91,8216],[0x92,8217],[0x93,8220],[0x94,8221],[0x95,8226],[0x96,8211],[0x97,8212],[0x98,732],[0x99,8482],[0x9a,353],[0x9b,8250],[0x9c,339],[0x9e,382],[0x9f,376]]);//States
var State$1;(function(State){State[State["DATA"]=0]="DATA";State[State["RCDATA"]=1]="RCDATA";State[State["RAWTEXT"]=2]="RAWTEXT";State[State["SCRIPT_DATA"]=3]="SCRIPT_DATA";State[State["PLAINTEXT"]=4]="PLAINTEXT";State[State["TAG_OPEN"]=5]="TAG_OPEN";State[State["END_TAG_OPEN"]=6]="END_TAG_OPEN";State[State["TAG_NAME"]=7]="TAG_NAME";State[State["RCDATA_LESS_THAN_SIGN"]=8]="RCDATA_LESS_THAN_SIGN";State[State["RCDATA_END_TAG_OPEN"]=9]="RCDATA_END_TAG_OPEN";State[State["RCDATA_END_TAG_NAME"]=10]="RCDATA_END_TAG_NAME";State[State["RAWTEXT_LESS_THAN_SIGN"]=11]="RAWTEXT_LESS_THAN_SIGN";State[State["RAWTEXT_END_TAG_OPEN"]=12]="RAWTEXT_END_TAG_OPEN";State[State["RAWTEXT_END_TAG_NAME"]=13]="RAWTEXT_END_TAG_NAME";State[State["SCRIPT_DATA_LESS_THAN_SIGN"]=14]="SCRIPT_DATA_LESS_THAN_SIGN";State[State["SCRIPT_DATA_END_TAG_OPEN"]=15]="SCRIPT_DATA_END_TAG_OPEN";State[State["SCRIPT_DATA_END_TAG_NAME"]=16]="SCRIPT_DATA_END_TAG_NAME";State[State["SCRIPT_DATA_ESCAPE_START"]=17]="SCRIPT_DATA_ESCAPE_START";State[State["SCRIPT_DATA_ESCAPE_START_DASH"]=18]="SCRIPT_DATA_ESCAPE_START_DASH";State[State["SCRIPT_DATA_ESCAPED"]=19]="SCRIPT_DATA_ESCAPED";State[State["SCRIPT_DATA_ESCAPED_DASH"]=20]="SCRIPT_DATA_ESCAPED_DASH";State[State["SCRIPT_DATA_ESCAPED_DASH_DASH"]=21]="SCRIPT_DATA_ESCAPED_DASH_DASH";State[State["SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN"]=22]="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN";State[State["SCRIPT_DATA_ESCAPED_END_TAG_OPEN"]=23]="SCRIPT_DATA_ESCAPED_END_TAG_OPEN";State[State["SCRIPT_DATA_ESCAPED_END_TAG_NAME"]=24]="SCRIPT_DATA_ESCAPED_END_TAG_NAME";State[State["SCRIPT_DATA_DOUBLE_ESCAPE_START"]=25]="SCRIPT_DATA_DOUBLE_ESCAPE_START";State[State["SCRIPT_DATA_DOUBLE_ESCAPED"]=26]="SCRIPT_DATA_DOUBLE_ESCAPED";State[State["SCRIPT_DATA_DOUBLE_ESCAPED_DASH"]=27]="SCRIPT_DATA_DOUBLE_ESCAPED_DASH";State[State["SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH"]=28]="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH";State[State["SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN"]=29]="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN";State[State["SCRIPT_DATA_DOUBLE_ESCAPE_END"]=30]="SCRIPT_DATA_DOUBLE_ESCAPE_END";State[State["BEFORE_ATTRIBUTE_NAME"]=31]="BEFORE_ATTRIBUTE_NAME";State[State["ATTRIBUTE_NAME"]=32]="ATTRIBUTE_NAME";State[State["AFTER_ATTRIBUTE_NAME"]=33]="AFTER_ATTRIBUTE_NAME";State[State["BEFORE_ATTRIBUTE_VALUE"]=34]="BEFORE_ATTRIBUTE_VALUE";State[State["ATTRIBUTE_VALUE_DOUBLE_QUOTED"]=35]="ATTRIBUTE_VALUE_DOUBLE_QUOTED";State[State["ATTRIBUTE_VALUE_SINGLE_QUOTED"]=36]="ATTRIBUTE_VALUE_SINGLE_QUOTED";State[State["ATTRIBUTE_VALUE_UNQUOTED"]=37]="ATTRIBUTE_VALUE_UNQUOTED";State[State["AFTER_ATTRIBUTE_VALUE_QUOTED"]=38]="AFTER_ATTRIBUTE_VALUE_QUOTED";State[State["SELF_CLOSING_START_TAG"]=39]="SELF_CLOSING_START_TAG";State[State["BOGUS_COMMENT"]=40]="BOGUS_COMMENT";State[State["MARKUP_DECLARATION_OPEN"]=41]="MARKUP_DECLARATION_OPEN";State[State["COMMENT_START"]=42]="COMMENT_START";State[State["COMMENT_START_DASH"]=43]="COMMENT_START_DASH";State[State["COMMENT"]=44]="COMMENT";State[State["COMMENT_LESS_THAN_SIGN"]=45]="COMMENT_LESS_THAN_SIGN";State[State["COMMENT_LESS_THAN_SIGN_BANG"]=46]="COMMENT_LESS_THAN_SIGN_BANG";State[State["COMMENT_LESS_THAN_SIGN_BANG_DASH"]=47]="COMMENT_LESS_THAN_SIGN_BANG_DASH";State[State["COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH"]=48]="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH";State[State["COMMENT_END_DASH"]=49]="COMMENT_END_DASH";State[State["COMMENT_END"]=50]="COMMENT_END";State[State["COMMENT_END_BANG"]=51]="COMMENT_END_BANG";State[State["DOCTYPE"]=52]="DOCTYPE";State[State["BEFORE_DOCTYPE_NAME"]=53]="BEFORE_DOCTYPE_NAME";State[State["DOCTYPE_NAME"]=54]="DOCTYPE_NAME";State[State["AFTER_DOCTYPE_NAME"]=55]="AFTER_DOCTYPE_NAME";State[State["AFTER_DOCTYPE_PUBLIC_KEYWORD"]=56]="AFTER_DOCTYPE_PUBLIC_KEYWORD";State[State["BEFORE_DOCTYPE_PUBLIC_IDENTIFIER"]=57]="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER";State[State["DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED"]=58]="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED";State[State["DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED"]=59]="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED";State[State["AFTER_DOCTYPE_PUBLIC_IDENTIFIER"]=60]="AFTER_DOCTYPE_PUBLIC_IDENTIFIER";State[State["BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS"]=61]="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS";State[State["AFTER_DOCTYPE_SYSTEM_KEYWORD"]=62]="AFTER_DOCTYPE_SYSTEM_KEYWORD";State[State["BEFORE_DOCTYPE_SYSTEM_IDENTIFIER"]=63]="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER";State[State["DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED"]=64]="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED";State[State["DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED"]=65]="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED";State[State["AFTER_DOCTYPE_SYSTEM_IDENTIFIER"]=66]="AFTER_DOCTYPE_SYSTEM_IDENTIFIER";State[State["BOGUS_DOCTYPE"]=67]="BOGUS_DOCTYPE";State[State["CDATA_SECTION"]=68]="CDATA_SECTION";State[State["CDATA_SECTION_BRACKET"]=69]="CDATA_SECTION_BRACKET";State[State["CDATA_SECTION_END"]=70]="CDATA_SECTION_END";State[State["CHARACTER_REFERENCE"]=71]="CHARACTER_REFERENCE";State[State["NAMED_CHARACTER_REFERENCE"]=72]="NAMED_CHARACTER_REFERENCE";State[State["AMBIGUOUS_AMPERSAND"]=73]="AMBIGUOUS_AMPERSAND";State[State["NUMERIC_CHARACTER_REFERENCE"]=74]="NUMERIC_CHARACTER_REFERENCE";State[State["HEXADEMICAL_CHARACTER_REFERENCE_START"]=75]="HEXADEMICAL_CHARACTER_REFERENCE_START";State[State["HEXADEMICAL_CHARACTER_REFERENCE"]=76]="HEXADEMICAL_CHARACTER_REFERENCE";State[State["DECIMAL_CHARACTER_REFERENCE"]=77]="DECIMAL_CHARACTER_REFERENCE";State[State["NUMERIC_CHARACTER_REFERENCE_END"]=78]="NUMERIC_CHARACTER_REFERENCE_END";})(State$1||(State$1={}));//Tokenizer initial states for different modes
var TokenizerMode={DATA:State$1.DATA,RCDATA:State$1.RCDATA,RAWTEXT:State$1.RAWTEXT,SCRIPT_DATA:State$1.SCRIPT_DATA,PLAINTEXT:State$1.PLAINTEXT,CDATA_SECTION:State$1.CDATA_SECTION};//Utils
//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
//this functions if they will be situated in another module due to context switch.
//Always perform inlining check before modifying this functions ('node --trace-inlining').
function isAsciiDigit(cp){return cp>=CODE_POINTS.DIGIT_0&&cp<=CODE_POINTS.DIGIT_9;}function isAsciiUpper(cp){return cp>=CODE_POINTS.LATIN_CAPITAL_A&&cp<=CODE_POINTS.LATIN_CAPITAL_Z;}function isAsciiLower(cp){return cp>=CODE_POINTS.LATIN_SMALL_A&&cp<=CODE_POINTS.LATIN_SMALL_Z;}function isAsciiLetter(cp){return isAsciiLower(cp)||isAsciiUpper(cp);}function isAsciiAlphaNumeric(cp){return isAsciiLetter(cp)||isAsciiDigit(cp);}function isAsciiUpperHexDigit(cp){return cp>=CODE_POINTS.LATIN_CAPITAL_A&&cp<=CODE_POINTS.LATIN_CAPITAL_F;}function isAsciiLowerHexDigit(cp){return cp>=CODE_POINTS.LATIN_SMALL_A&&cp<=CODE_POINTS.LATIN_SMALL_F;}function isAsciiHexDigit(cp){return isAsciiDigit(cp)||isAsciiUpperHexDigit(cp)||isAsciiLowerHexDigit(cp);}function toAsciiLower(cp){return cp+32;}function isWhitespace$1(cp){return cp===CODE_POINTS.SPACE||cp===CODE_POINTS.LINE_FEED||cp===CODE_POINTS.TABULATION||cp===CODE_POINTS.FORM_FEED;}function isEntityInAttributeInvalidEnd(nextCp){return nextCp===CODE_POINTS.EQUALS_SIGN||isAsciiAlphaNumeric(nextCp);}function isScriptDataDoubleEscapeSequenceEnd(cp){return isWhitespace$1(cp)||cp===CODE_POINTS.SOLIDUS||cp===CODE_POINTS.GREATER_THAN_SIGN;}//Tokenizer
var Tokenizer$1=/*#__PURE__*/function(){function Tokenizer$1(options,handler){_classCallCheck(this,Tokenizer$1);this.options=options;this.handler=handler;this.paused=false;/** Ensures that the parsing loop isn't run multiple times at once. */this.inLoop=false;/**
               * Indicates that the current adjusted node exists, is not an element in the HTML namespace,
               * and that it is not an integration point for either MathML or HTML.
               *
               * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}
               */this.inForeignNode=false;this.lastStartTagName='';this.active=false;this.state=State$1.DATA;this.returnState=State$1.DATA;this.charRefCode=-1;this.consumedAfterSnapshot=-1;this.currentCharacterToken=null;this.currentToken=null;this.currentAttr={name:'',value:''};this.preprocessor=new Preprocessor(handler);this.currentLocation=this.getCurrentLocation(-1);}//Errors
_createClass(Tokenizer$1,[{key:"_err",value:function _err(code){var _a,_b;(_b=(_a=this.handler).onParseError)===null||_b===void 0?void 0:_b.call(_a,this.preprocessor.getError(code));}// NOTE: `offset` may never run across line boundaries.
},{key:"getCurrentLocation",value:function getCurrentLocation(offset){if(!this.options.sourceCodeLocationInfo){return null;}return{startLine:this.preprocessor.line,startCol:this.preprocessor.col-offset,startOffset:this.preprocessor.offset-offset,endLine:-1,endCol:-1,endOffset:-1};}},{key:"_runParsingLoop",value:function _runParsingLoop(){if(this.inLoop)return;this.inLoop=true;while(this.active&&!this.paused){this.consumedAfterSnapshot=0;var cp=this._consume();if(!this._ensureHibernation()){this._callState(cp);}}this.inLoop=false;}//API
},{key:"pause",value:function pause(){this.paused=true;}},{key:"resume",value:function resume(writeCallback){if(!this.paused){throw new Error('Parser was already resumed');}this.paused=false;// Necessary for synchronous resume.
if(this.inLoop)return;this._runParsingLoop();if(!this.paused){writeCallback===null||writeCallback===void 0?void 0:writeCallback();}}},{key:"write",value:function write(chunk,isLastChunk,writeCallback){this.active=true;this.preprocessor.write(chunk,isLastChunk);this._runParsingLoop();if(!this.paused){writeCallback===null||writeCallback===void 0?void 0:writeCallback();}}},{key:"insertHtmlAtCurrentPos",value:function insertHtmlAtCurrentPos(chunk){this.active=true;this.preprocessor.insertHtmlAtCurrentPos(chunk);this._runParsingLoop();}//Hibernation
},{key:"_ensureHibernation",value:function _ensureHibernation(){if(this.preprocessor.endOfChunkHit){this._unconsume(this.consumedAfterSnapshot);this.active=false;return true;}return false;}//Consumption
},{key:"_consume",value:function _consume(){this.consumedAfterSnapshot++;return this.preprocessor.advance();}},{key:"_unconsume",value:function _unconsume(count){this.consumedAfterSnapshot-=count;this.preprocessor.retreat(count);}},{key:"_reconsumeInState",value:function _reconsumeInState(state,cp){this.state=state;this._callState(cp);}},{key:"_advanceBy",value:function _advanceBy(count){this.consumedAfterSnapshot+=count;for(var _i40=0;_i40<count;_i40++){this.preprocessor.advance();}}},{key:"_consumeSequenceIfMatch",value:function _consumeSequenceIfMatch(pattern,caseSensitive){if(this.preprocessor.startsWith(pattern,caseSensitive)){// We will already have consumed one character before calling this method.
this._advanceBy(pattern.length-1);return true;}return false;}//Token creation
},{key:"_createStartTagToken",value:function _createStartTagToken(){this.currentToken={type:TokenType.START_TAG,tagName:'',tagID:TAG_ID.UNKNOWN,selfClosing:false,ackSelfClosing:false,attrs:[],location:this.getCurrentLocation(1)};}},{key:"_createEndTagToken",value:function _createEndTagToken(){this.currentToken={type:TokenType.END_TAG,tagName:'',tagID:TAG_ID.UNKNOWN,selfClosing:false,ackSelfClosing:false,attrs:[],location:this.getCurrentLocation(2)};}},{key:"_createCommentToken",value:function _createCommentToken(offset){this.currentToken={type:TokenType.COMMENT,data:'',location:this.getCurrentLocation(offset)};}},{key:"_createDoctypeToken",value:function _createDoctypeToken(initialName){this.currentToken={type:TokenType.DOCTYPE,name:initialName,forceQuirks:false,publicId:null,systemId:null,location:this.currentLocation};}},{key:"_createCharacterToken",value:function _createCharacterToken(type,chars){this.currentCharacterToken={type:type,chars:chars,location:this.currentLocation};}//Tag attributes
},{key:"_createAttr",value:function _createAttr(attrNameFirstCh){this.currentAttr={name:attrNameFirstCh,value:''};this.currentLocation=this.getCurrentLocation(0);}},{key:"_leaveAttrName",value:function _leaveAttrName(){var _a;var _b;var token=this.currentToken;if(getTokenAttr(token,this.currentAttr.name)===null){token.attrs.push(this.currentAttr);if(token.location&&this.currentLocation){var attrLocations=(_a=(_b=token.location).attrs)!==null&&_a!==void 0?_a:_b.attrs=Object.create(null);attrLocations[this.currentAttr.name]=this.currentLocation;// Set end location
this._leaveAttrValue();}}else{this._err(ERR.duplicateAttribute);}}},{key:"_leaveAttrValue",value:function _leaveAttrValue(){if(this.currentLocation){this.currentLocation.endLine=this.preprocessor.line;this.currentLocation.endCol=this.preprocessor.col;this.currentLocation.endOffset=this.preprocessor.offset;}}//Token emission
},{key:"prepareToken",value:function prepareToken(ct){this._emitCurrentCharacterToken(ct.location);this.currentToken=null;if(ct.location){ct.location.endLine=this.preprocessor.line;ct.location.endCol=this.preprocessor.col+1;ct.location.endOffset=this.preprocessor.offset+1;}this.currentLocation=this.getCurrentLocation(-1);}},{key:"emitCurrentTagToken",value:function emitCurrentTagToken(){var ct=this.currentToken;this.prepareToken(ct);ct.tagID=getTagID(ct.tagName);if(ct.type===TokenType.START_TAG){this.lastStartTagName=ct.tagName;this.handler.onStartTag(ct);}else{if(ct.attrs.length>0){this._err(ERR.endTagWithAttributes);}if(ct.selfClosing){this._err(ERR.endTagWithTrailingSolidus);}this.handler.onEndTag(ct);}this.preprocessor.dropParsedChunk();}},{key:"emitCurrentComment",value:function emitCurrentComment(ct){this.prepareToken(ct);this.handler.onComment(ct);this.preprocessor.dropParsedChunk();}},{key:"emitCurrentDoctype",value:function emitCurrentDoctype(ct){this.prepareToken(ct);this.handler.onDoctype(ct);this.preprocessor.dropParsedChunk();}},{key:"_emitCurrentCharacterToken",value:function _emitCurrentCharacterToken(nextLocation){if(this.currentCharacterToken){//NOTE: if we have a pending character token, make it's end location equal to the
//current token's start location.
if(nextLocation&&this.currentCharacterToken.location){this.currentCharacterToken.location.endLine=nextLocation.startLine;this.currentCharacterToken.location.endCol=nextLocation.startCol;this.currentCharacterToken.location.endOffset=nextLocation.startOffset;}switch(this.currentCharacterToken.type){case TokenType.CHARACTER:{this.handler.onCharacter(this.currentCharacterToken);break;}case TokenType.NULL_CHARACTER:{this.handler.onNullCharacter(this.currentCharacterToken);break;}case TokenType.WHITESPACE_CHARACTER:{this.handler.onWhitespaceCharacter(this.currentCharacterToken);break;}}this.currentCharacterToken=null;}}},{key:"_emitEOFToken",value:function _emitEOFToken(){var location=this.getCurrentLocation(0);if(location){location.endLine=location.startLine;location.endCol=location.startCol;location.endOffset=location.startOffset;}this._emitCurrentCharacterToken(location);this.handler.onEof({type:TokenType.EOF,location:location});this.active=false;}//Characters emission
//OPTIMIZATION: specification uses only one type of character tokens (one token per character).
//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
//If we have a sequence of characters that belong to the same group, the parser can process it
//as a single solid character token.
//So, there are 3 types of character tokens in parse5:
//1)TokenType.NULL_CHARACTER - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
//2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
//3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
},{key:"_appendCharToCurrentCharacterToken",value:function _appendCharToCurrentCharacterToken(type,ch){if(this.currentCharacterToken){if(this.currentCharacterToken.type!==type){this.currentLocation=this.getCurrentLocation(0);this._emitCurrentCharacterToken(this.currentLocation);this.preprocessor.dropParsedChunk();}else{this.currentCharacterToken.chars+=ch;return;}}this._createCharacterToken(type,ch);}},{key:"_emitCodePoint",value:function _emitCodePoint(cp){var type=isWhitespace$1(cp)?TokenType.WHITESPACE_CHARACTER:cp===CODE_POINTS.NULL?TokenType.NULL_CHARACTER:TokenType.CHARACTER;this._appendCharToCurrentCharacterToken(type,String.fromCodePoint(cp));}//NOTE: used when we emit characters explicitly.
//This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.
},{key:"_emitChars",value:function _emitChars(ch){this._appendCharToCurrentCharacterToken(TokenType.CHARACTER,ch);}// Character reference helpers
},{key:"_matchNamedCharacterReference",value:function _matchNamedCharacterReference(cp){var result=null;var excess=0;var withoutSemicolon=false;for(var _i41=0,current=htmlDecodeTree[0];_i41>=0;cp=this._consume()){_i41=determineBranch(htmlDecodeTree,current,_i41+1,cp);if(_i41<0)break;excess+=1;current=htmlDecodeTree[_i41];var masked=current&BinTrieFlags.VALUE_LENGTH;// If the branch is a value, store it and continue
if(masked){// The mask is the number of bytes of the value, including the current byte.
var valueLength=(masked>>14)-1;// Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.
// See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state
if(cp!==CODE_POINTS.SEMICOLON&&this._isCharacterReferenceInAttribute()&&isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))){//NOTE: we don't flush all consumed code points here, and instead switch back to the original state after
//emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.
result=[CODE_POINTS.AMPERSAND];// Skip over the value.
_i41+=valueLength;}else{// If this is a surrogate pair, consume the next two bytes.
result=valueLength===0?[htmlDecodeTree[_i41]&~BinTrieFlags.VALUE_LENGTH]:valueLength===1?[htmlDecodeTree[++_i41]]:[htmlDecodeTree[++_i41],htmlDecodeTree[++_i41]];excess=0;withoutSemicolon=cp!==CODE_POINTS.SEMICOLON;}if(valueLength===0){// If the value is zero-length, we're done.
this._consume();break;}}}this._unconsume(excess);if(withoutSemicolon&&!this.preprocessor.endOfChunkHit){this._err(ERR.missingSemicolonAfterCharacterReference);}// We want to emit the error above on the code point after the entity.
// We always consume one code point too many in the loop, and we wait to
// unconsume it until after the error is emitted.
this._unconsume(1);return result;}},{key:"_isCharacterReferenceInAttribute",value:function _isCharacterReferenceInAttribute(){return this.returnState===State$1.ATTRIBUTE_VALUE_DOUBLE_QUOTED||this.returnState===State$1.ATTRIBUTE_VALUE_SINGLE_QUOTED||this.returnState===State$1.ATTRIBUTE_VALUE_UNQUOTED;}},{key:"_flushCodePointConsumedAsCharacterReference",value:function _flushCodePointConsumedAsCharacterReference(cp){if(this._isCharacterReferenceInAttribute()){this.currentAttr.value+=String.fromCodePoint(cp);}else{this._emitCodePoint(cp);}}// Calling states this way turns out to be much faster than any other approach.
},{key:"_callState",value:function _callState(cp){switch(this.state){case State$1.DATA:{this._stateData(cp);break;}case State$1.RCDATA:{this._stateRcdata(cp);break;}case State$1.RAWTEXT:{this._stateRawtext(cp);break;}case State$1.SCRIPT_DATA:{this._stateScriptData(cp);break;}case State$1.PLAINTEXT:{this._statePlaintext(cp);break;}case State$1.TAG_OPEN:{this._stateTagOpen(cp);break;}case State$1.END_TAG_OPEN:{this._stateEndTagOpen(cp);break;}case State$1.TAG_NAME:{this._stateTagName(cp);break;}case State$1.RCDATA_LESS_THAN_SIGN:{this._stateRcdataLessThanSign(cp);break;}case State$1.RCDATA_END_TAG_OPEN:{this._stateRcdataEndTagOpen(cp);break;}case State$1.RCDATA_END_TAG_NAME:{this._stateRcdataEndTagName(cp);break;}case State$1.RAWTEXT_LESS_THAN_SIGN:{this._stateRawtextLessThanSign(cp);break;}case State$1.RAWTEXT_END_TAG_OPEN:{this._stateRawtextEndTagOpen(cp);break;}case State$1.RAWTEXT_END_TAG_NAME:{this._stateRawtextEndTagName(cp);break;}case State$1.SCRIPT_DATA_LESS_THAN_SIGN:{this._stateScriptDataLessThanSign(cp);break;}case State$1.SCRIPT_DATA_END_TAG_OPEN:{this._stateScriptDataEndTagOpen(cp);break;}case State$1.SCRIPT_DATA_END_TAG_NAME:{this._stateScriptDataEndTagName(cp);break;}case State$1.SCRIPT_DATA_ESCAPE_START:{this._stateScriptDataEscapeStart(cp);break;}case State$1.SCRIPT_DATA_ESCAPE_START_DASH:{this._stateScriptDataEscapeStartDash(cp);break;}case State$1.SCRIPT_DATA_ESCAPED:{this._stateScriptDataEscaped(cp);break;}case State$1.SCRIPT_DATA_ESCAPED_DASH:{this._stateScriptDataEscapedDash(cp);break;}case State$1.SCRIPT_DATA_ESCAPED_DASH_DASH:{this._stateScriptDataEscapedDashDash(cp);break;}case State$1.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:{this._stateScriptDataEscapedLessThanSign(cp);break;}case State$1.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:{this._stateScriptDataEscapedEndTagOpen(cp);break;}case State$1.SCRIPT_DATA_ESCAPED_END_TAG_NAME:{this._stateScriptDataEscapedEndTagName(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPE_START:{this._stateScriptDataDoubleEscapeStart(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPED:{this._stateScriptDataDoubleEscaped(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:{this._stateScriptDataDoubleEscapedDash(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:{this._stateScriptDataDoubleEscapedDashDash(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:{this._stateScriptDataDoubleEscapedLessThanSign(cp);break;}case State$1.SCRIPT_DATA_DOUBLE_ESCAPE_END:{this._stateScriptDataDoubleEscapeEnd(cp);break;}case State$1.BEFORE_ATTRIBUTE_NAME:{this._stateBeforeAttributeName(cp);break;}case State$1.ATTRIBUTE_NAME:{this._stateAttributeName(cp);break;}case State$1.AFTER_ATTRIBUTE_NAME:{this._stateAfterAttributeName(cp);break;}case State$1.BEFORE_ATTRIBUTE_VALUE:{this._stateBeforeAttributeValue(cp);break;}case State$1.ATTRIBUTE_VALUE_DOUBLE_QUOTED:{this._stateAttributeValueDoubleQuoted(cp);break;}case State$1.ATTRIBUTE_VALUE_SINGLE_QUOTED:{this._stateAttributeValueSingleQuoted(cp);break;}case State$1.ATTRIBUTE_VALUE_UNQUOTED:{this._stateAttributeValueUnquoted(cp);break;}case State$1.AFTER_ATTRIBUTE_VALUE_QUOTED:{this._stateAfterAttributeValueQuoted(cp);break;}case State$1.SELF_CLOSING_START_TAG:{this._stateSelfClosingStartTag(cp);break;}case State$1.BOGUS_COMMENT:{this._stateBogusComment(cp);break;}case State$1.MARKUP_DECLARATION_OPEN:{this._stateMarkupDeclarationOpen(cp);break;}case State$1.COMMENT_START:{this._stateCommentStart(cp);break;}case State$1.COMMENT_START_DASH:{this._stateCommentStartDash(cp);break;}case State$1.COMMENT:{this._stateComment(cp);break;}case State$1.COMMENT_LESS_THAN_SIGN:{this._stateCommentLessThanSign(cp);break;}case State$1.COMMENT_LESS_THAN_SIGN_BANG:{this._stateCommentLessThanSignBang(cp);break;}case State$1.COMMENT_LESS_THAN_SIGN_BANG_DASH:{this._stateCommentLessThanSignBangDash(cp);break;}case State$1.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:{this._stateCommentLessThanSignBangDashDash(cp);break;}case State$1.COMMENT_END_DASH:{this._stateCommentEndDash(cp);break;}case State$1.COMMENT_END:{this._stateCommentEnd(cp);break;}case State$1.COMMENT_END_BANG:{this._stateCommentEndBang(cp);break;}case State$1.DOCTYPE:{this._stateDoctype(cp);break;}case State$1.BEFORE_DOCTYPE_NAME:{this._stateBeforeDoctypeName(cp);break;}case State$1.DOCTYPE_NAME:{this._stateDoctypeName(cp);break;}case State$1.AFTER_DOCTYPE_NAME:{this._stateAfterDoctypeName(cp);break;}case State$1.AFTER_DOCTYPE_PUBLIC_KEYWORD:{this._stateAfterDoctypePublicKeyword(cp);break;}case State$1.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:{this._stateBeforeDoctypePublicIdentifier(cp);break;}case State$1.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:{this._stateDoctypePublicIdentifierDoubleQuoted(cp);break;}case State$1.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:{this._stateDoctypePublicIdentifierSingleQuoted(cp);break;}case State$1.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:{this._stateAfterDoctypePublicIdentifier(cp);break;}case State$1.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:{this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);break;}case State$1.AFTER_DOCTYPE_SYSTEM_KEYWORD:{this._stateAfterDoctypeSystemKeyword(cp);break;}case State$1.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:{this._stateBeforeDoctypeSystemIdentifier(cp);break;}case State$1.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:{this._stateDoctypeSystemIdentifierDoubleQuoted(cp);break;}case State$1.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:{this._stateDoctypeSystemIdentifierSingleQuoted(cp);break;}case State$1.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:{this._stateAfterDoctypeSystemIdentifier(cp);break;}case State$1.BOGUS_DOCTYPE:{this._stateBogusDoctype(cp);break;}case State$1.CDATA_SECTION:{this._stateCdataSection(cp);break;}case State$1.CDATA_SECTION_BRACKET:{this._stateCdataSectionBracket(cp);break;}case State$1.CDATA_SECTION_END:{this._stateCdataSectionEnd(cp);break;}case State$1.CHARACTER_REFERENCE:{this._stateCharacterReference(cp);break;}case State$1.NAMED_CHARACTER_REFERENCE:{this._stateNamedCharacterReference(cp);break;}case State$1.AMBIGUOUS_AMPERSAND:{this._stateAmbiguousAmpersand(cp);break;}case State$1.NUMERIC_CHARACTER_REFERENCE:{this._stateNumericCharacterReference(cp);break;}case State$1.HEXADEMICAL_CHARACTER_REFERENCE_START:{this._stateHexademicalCharacterReferenceStart(cp);break;}case State$1.HEXADEMICAL_CHARACTER_REFERENCE:{this._stateHexademicalCharacterReference(cp);break;}case State$1.DECIMAL_CHARACTER_REFERENCE:{this._stateDecimalCharacterReference(cp);break;}case State$1.NUMERIC_CHARACTER_REFERENCE_END:{this._stateNumericCharacterReferenceEnd(cp);break;}default:{throw new Error('Unknown state');}}}// State machine
// Data state
//------------------------------------------------------------------
},{key:"_stateData",value:function _stateData(cp){switch(cp){case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.TAG_OPEN;break;}case CODE_POINTS.AMPERSAND:{this.returnState=State$1.DATA;this.state=State$1.CHARACTER_REFERENCE;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitCodePoint(cp);break;}case CODE_POINTS.EOF:{this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}//  RCDATA state
//------------------------------------------------------------------
},{key:"_stateRcdata",value:function _stateRcdata(cp){switch(cp){case CODE_POINTS.AMPERSAND:{this.returnState=State$1.RCDATA;this.state=State$1.CHARACTER_REFERENCE;break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.RCDATA_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// RAWTEXT state
//------------------------------------------------------------------
},{key:"_stateRawtext",value:function _stateRawtext(cp){switch(cp){case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.RAWTEXT_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// Script data state
//------------------------------------------------------------------
},{key:"_stateScriptData",value:function _stateScriptData(cp){switch(cp){case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// PLAINTEXT state
//------------------------------------------------------------------
},{key:"_statePlaintext",value:function _statePlaintext(cp){switch(cp){case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// Tag open state
//------------------------------------------------------------------
},{key:"_stateTagOpen",value:function _stateTagOpen(cp){if(isAsciiLetter(cp)){this._createStartTagToken();this.state=State$1.TAG_NAME;this._stateTagName(cp);}else switch(cp){case CODE_POINTS.EXCLAMATION_MARK:{this.state=State$1.MARKUP_DECLARATION_OPEN;break;}case CODE_POINTS.SOLIDUS:{this.state=State$1.END_TAG_OPEN;break;}case CODE_POINTS.QUESTION_MARK:{this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);this._createCommentToken(1);this.state=State$1.BOGUS_COMMENT;this._stateBogusComment(cp);break;}case CODE_POINTS.EOF:{this._err(ERR.eofBeforeTagName);this._emitChars('<');this._emitEOFToken();break;}default:{this._err(ERR.invalidFirstCharacterOfTagName);this._emitChars('<');this.state=State$1.DATA;this._stateData(cp);}}}// End tag open state
//------------------------------------------------------------------
},{key:"_stateEndTagOpen",value:function _stateEndTagOpen(cp){if(isAsciiLetter(cp)){this._createEndTagToken();this.state=State$1.TAG_NAME;this._stateTagName(cp);}else switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingEndTagName);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofBeforeTagName);this._emitChars('</');this._emitEOFToken();break;}default:{this._err(ERR.invalidFirstCharacterOfTagName);this._createCommentToken(2);this.state=State$1.BOGUS_COMMENT;this._stateBogusComment(cp);}}}// Tag name state
//------------------------------------------------------------------
},{key:"_stateTagName",value:function _stateTagName(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.BEFORE_ATTRIBUTE_NAME;break;}case CODE_POINTS.SOLIDUS:{this.state=State$1.SELF_CLOSING_START_TAG;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentTagToken();break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.tagName+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{token.tagName+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp);}}}// RCDATA less-than sign state
//------------------------------------------------------------------
},{key:"_stateRcdataLessThanSign",value:function _stateRcdataLessThanSign(cp){if(cp===CODE_POINTS.SOLIDUS){this.state=State$1.RCDATA_END_TAG_OPEN;}else{this._emitChars('<');this.state=State$1.RCDATA;this._stateRcdata(cp);}}// RCDATA end tag open state
//------------------------------------------------------------------
},{key:"_stateRcdataEndTagOpen",value:function _stateRcdataEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State$1.RCDATA_END_TAG_NAME;this._stateRcdataEndTagName(cp);}else{this._emitChars('</');this.state=State$1.RCDATA;this._stateRcdata(cp);}}},{key:"handleSpecialEndTag",value:function handleSpecialEndTag(_cp){if(!this.preprocessor.startsWith(this.lastStartTagName,false)){return!this._ensureHibernation();}this._createEndTagToken();var token=this.currentToken;token.tagName=this.lastStartTagName;var cp=this.preprocessor.peek(this.lastStartTagName.length);switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this._advanceBy(this.lastStartTagName.length);this.state=State$1.BEFORE_ATTRIBUTE_NAME;return false;}case CODE_POINTS.SOLIDUS:{this._advanceBy(this.lastStartTagName.length);this.state=State$1.SELF_CLOSING_START_TAG;return false;}case CODE_POINTS.GREATER_THAN_SIGN:{this._advanceBy(this.lastStartTagName.length);this.emitCurrentTagToken();this.state=State$1.DATA;return false;}default:{return!this._ensureHibernation();}}}// RCDATA end tag name state
//------------------------------------------------------------------
},{key:"_stateRcdataEndTagName",value:function _stateRcdataEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars('</');this.state=State$1.RCDATA;this._stateRcdata(cp);}}// RAWTEXT less-than sign state
//------------------------------------------------------------------
},{key:"_stateRawtextLessThanSign",value:function _stateRawtextLessThanSign(cp){if(cp===CODE_POINTS.SOLIDUS){this.state=State$1.RAWTEXT_END_TAG_OPEN;}else{this._emitChars('<');this.state=State$1.RAWTEXT;this._stateRawtext(cp);}}// RAWTEXT end tag open state
//------------------------------------------------------------------
},{key:"_stateRawtextEndTagOpen",value:function _stateRawtextEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State$1.RAWTEXT_END_TAG_NAME;this._stateRawtextEndTagName(cp);}else{this._emitChars('</');this.state=State$1.RAWTEXT;this._stateRawtext(cp);}}// RAWTEXT end tag name state
//------------------------------------------------------------------
},{key:"_stateRawtextEndTagName",value:function _stateRawtextEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars('</');this.state=State$1.RAWTEXT;this._stateRawtext(cp);}}// Script data less-than sign state
//------------------------------------------------------------------
},{key:"_stateScriptDataLessThanSign",value:function _stateScriptDataLessThanSign(cp){switch(cp){case CODE_POINTS.SOLIDUS:{this.state=State$1.SCRIPT_DATA_END_TAG_OPEN;break;}case CODE_POINTS.EXCLAMATION_MARK:{this.state=State$1.SCRIPT_DATA_ESCAPE_START;this._emitChars('<!');break;}default:{this._emitChars('<');this.state=State$1.SCRIPT_DATA;this._stateScriptData(cp);}}}// Script data end tag open state
//------------------------------------------------------------------
},{key:"_stateScriptDataEndTagOpen",value:function _stateScriptDataEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State$1.SCRIPT_DATA_END_TAG_NAME;this._stateScriptDataEndTagName(cp);}else{this._emitChars('</');this.state=State$1.SCRIPT_DATA;this._stateScriptData(cp);}}// Script data end tag name state
//------------------------------------------------------------------
},{key:"_stateScriptDataEndTagName",value:function _stateScriptDataEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars('</');this.state=State$1.SCRIPT_DATA;this._stateScriptData(cp);}}// Script data escape start state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapeStart",value:function _stateScriptDataEscapeStart(cp){if(cp===CODE_POINTS.HYPHEN_MINUS){this.state=State$1.SCRIPT_DATA_ESCAPE_START_DASH;this._emitChars('-');}else{this.state=State$1.SCRIPT_DATA;this._stateScriptData(cp);}}// Script data escape start dash state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapeStartDash",value:function _stateScriptDataEscapeStartDash(cp){if(cp===CODE_POINTS.HYPHEN_MINUS){this.state=State$1.SCRIPT_DATA_ESCAPED_DASH_DASH;this._emitChars('-');}else{this.state=State$1.SCRIPT_DATA;this._stateScriptData(cp);}}// Script data escaped state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscaped",value:function _stateScriptDataEscaped(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.SCRIPT_DATA_ESCAPED_DASH;this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// Script data escaped dash state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapedDash",value:function _stateScriptDataEscapedDash(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.SCRIPT_DATA_ESCAPED_DASH_DASH;this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.state=State$1.SCRIPT_DATA_ESCAPED;this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this.state=State$1.SCRIPT_DATA_ESCAPED;this._emitCodePoint(cp);}}}// Script data escaped dash dash state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapedDashDash",value:function _stateScriptDataEscapedDashDash(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.SCRIPT_DATA;this._emitChars('>');break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.state=State$1.SCRIPT_DATA_ESCAPED;this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this.state=State$1.SCRIPT_DATA_ESCAPED;this._emitCodePoint(cp);}}}// Script data escaped less-than sign state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapedLessThanSign",value:function _stateScriptDataEscapedLessThanSign(cp){if(cp===CODE_POINTS.SOLIDUS){this.state=State$1.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;}else if(isAsciiLetter(cp)){this._emitChars('<');this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPE_START;this._stateScriptDataDoubleEscapeStart(cp);}else{this._emitChars('<');this.state=State$1.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp);}}// Script data escaped end tag open state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapedEndTagOpen",value:function _stateScriptDataEscapedEndTagOpen(cp){if(isAsciiLetter(cp)){this.state=State$1.SCRIPT_DATA_ESCAPED_END_TAG_NAME;this._stateScriptDataEscapedEndTagName(cp);}else{this._emitChars('</');this.state=State$1.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp);}}// Script data escaped end tag name state
//------------------------------------------------------------------
},{key:"_stateScriptDataEscapedEndTagName",value:function _stateScriptDataEscapedEndTagName(cp){if(this.handleSpecialEndTag(cp)){this._emitChars('</');this.state=State$1.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp);}}// Script data double escape start state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscapeStart",value:function _stateScriptDataDoubleEscapeStart(cp){if(this.preprocessor.startsWith(SEQUENCES.SCRIPT,false)&&isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))){this._emitCodePoint(cp);for(var _i42=0;_i42<SEQUENCES.SCRIPT.length;_i42++){this._emitCodePoint(this._consume());}this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;}else if(!this._ensureHibernation()){this.state=State$1.SCRIPT_DATA_ESCAPED;this._stateScriptDataEscaped(cp);}}// Script data double escaped state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscaped",value:function _stateScriptDataDoubleEscaped(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars('<');break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// Script data double escaped dash state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscapedDash",value:function _stateScriptDataDoubleEscapedDash(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars('<');break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitCodePoint(cp);}}}// Script data double escaped dash dash state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscapedDashDash",value:function _stateScriptDataDoubleEscapedDashDash(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this._emitChars('-');break;}case CODE_POINTS.LESS_THAN_SIGN:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;this._emitChars('<');break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.SCRIPT_DATA;this._emitChars('>');break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitChars(REPLACEMENT_CHARACTER);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInScriptHtmlCommentLikeText);this._emitEOFToken();break;}default:{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._emitCodePoint(cp);}}}// Script data double escaped less-than sign state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscapedLessThanSign",value:function _stateScriptDataDoubleEscapedLessThanSign(cp){if(cp===CODE_POINTS.SOLIDUS){this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPE_END;this._emitChars('/');}else{this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._stateScriptDataDoubleEscaped(cp);}}// Script data double escape end state
//------------------------------------------------------------------
},{key:"_stateScriptDataDoubleEscapeEnd",value:function _stateScriptDataDoubleEscapeEnd(cp){if(this.preprocessor.startsWith(SEQUENCES.SCRIPT,false)&&isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))){this._emitCodePoint(cp);for(var _i43=0;_i43<SEQUENCES.SCRIPT.length;_i43++){this._emitCodePoint(this._consume());}this.state=State$1.SCRIPT_DATA_ESCAPED;}else if(!this._ensureHibernation()){this.state=State$1.SCRIPT_DATA_DOUBLE_ESCAPED;this._stateScriptDataDoubleEscaped(cp);}}// Before attribute name state
//------------------------------------------------------------------
},{key:"_stateBeforeAttributeName",value:function _stateBeforeAttributeName(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.SOLIDUS:case CODE_POINTS.GREATER_THAN_SIGN:case CODE_POINTS.EOF:{this.state=State$1.AFTER_ATTRIBUTE_NAME;this._stateAfterAttributeName(cp);break;}case CODE_POINTS.EQUALS_SIGN:{this._err(ERR.unexpectedEqualsSignBeforeAttributeName);this._createAttr('=');this.state=State$1.ATTRIBUTE_NAME;break;}default:{this._createAttr('');this.state=State$1.ATTRIBUTE_NAME;this._stateAttributeName(cp);}}}// Attribute name state
//------------------------------------------------------------------
},{key:"_stateAttributeName",value:function _stateAttributeName(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:case CODE_POINTS.SOLIDUS:case CODE_POINTS.GREATER_THAN_SIGN:case CODE_POINTS.EOF:{this._leaveAttrName();this.state=State$1.AFTER_ATTRIBUTE_NAME;this._stateAfterAttributeName(cp);break;}case CODE_POINTS.EQUALS_SIGN:{this._leaveAttrName();this.state=State$1.BEFORE_ATTRIBUTE_VALUE;break;}case CODE_POINTS.QUOTATION_MARK:case CODE_POINTS.APOSTROPHE:case CODE_POINTS.LESS_THAN_SIGN:{this._err(ERR.unexpectedCharacterInAttributeName);this.currentAttr.name+=String.fromCodePoint(cp);break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.currentAttr.name+=REPLACEMENT_CHARACTER;break;}default:{this.currentAttr.name+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp);}}}// After attribute name state
//------------------------------------------------------------------
},{key:"_stateAfterAttributeName",value:function _stateAfterAttributeName(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.SOLIDUS:{this.state=State$1.SELF_CLOSING_START_TAG;break;}case CODE_POINTS.EQUALS_SIGN:{this.state=State$1.BEFORE_ATTRIBUTE_VALUE;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentTagToken();break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this._createAttr('');this.state=State$1.ATTRIBUTE_NAME;this._stateAttributeName(cp);}}}// Before attribute value state
//------------------------------------------------------------------
},{key:"_stateBeforeAttributeValue",value:function _stateBeforeAttributeValue(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.QUOTATION_MARK:{this.state=State$1.ATTRIBUTE_VALUE_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{this.state=State$1.ATTRIBUTE_VALUE_SINGLE_QUOTED;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingAttributeValue);this.state=State$1.DATA;this.emitCurrentTagToken();break;}default:{this.state=State$1.ATTRIBUTE_VALUE_UNQUOTED;this._stateAttributeValueUnquoted(cp);}}}// Attribute value (double-quoted) state
//------------------------------------------------------------------
},{key:"_stateAttributeValueDoubleQuoted",value:function _stateAttributeValueDoubleQuoted(cp){switch(cp){case CODE_POINTS.QUOTATION_MARK:{this.state=State$1.AFTER_ATTRIBUTE_VALUE_QUOTED;break;}case CODE_POINTS.AMPERSAND:{this.returnState=State$1.ATTRIBUTE_VALUE_DOUBLE_QUOTED;this.state=State$1.CHARACTER_REFERENCE;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.currentAttr.value+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this.currentAttr.value+=String.fromCodePoint(cp);}}}// Attribute value (single-quoted) state
//------------------------------------------------------------------
},{key:"_stateAttributeValueSingleQuoted",value:function _stateAttributeValueSingleQuoted(cp){switch(cp){case CODE_POINTS.APOSTROPHE:{this.state=State$1.AFTER_ATTRIBUTE_VALUE_QUOTED;break;}case CODE_POINTS.AMPERSAND:{this.returnState=State$1.ATTRIBUTE_VALUE_SINGLE_QUOTED;this.state=State$1.CHARACTER_REFERENCE;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.currentAttr.value+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this.currentAttr.value+=String.fromCodePoint(cp);}}}// Attribute value (unquoted) state
//------------------------------------------------------------------
},{key:"_stateAttributeValueUnquoted",value:function _stateAttributeValueUnquoted(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this._leaveAttrValue();this.state=State$1.BEFORE_ATTRIBUTE_NAME;break;}case CODE_POINTS.AMPERSAND:{this.returnState=State$1.ATTRIBUTE_VALUE_UNQUOTED;this.state=State$1.CHARACTER_REFERENCE;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._leaveAttrValue();this.state=State$1.DATA;this.emitCurrentTagToken();break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this.currentAttr.value+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.QUOTATION_MARK:case CODE_POINTS.APOSTROPHE:case CODE_POINTS.LESS_THAN_SIGN:case CODE_POINTS.EQUALS_SIGN:case CODE_POINTS.GRAVE_ACCENT:{this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);this.currentAttr.value+=String.fromCodePoint(cp);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this.currentAttr.value+=String.fromCodePoint(cp);}}}// After attribute value (quoted) state
//------------------------------------------------------------------
},{key:"_stateAfterAttributeValueQuoted",value:function _stateAfterAttributeValueQuoted(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this._leaveAttrValue();this.state=State$1.BEFORE_ATTRIBUTE_NAME;break;}case CODE_POINTS.SOLIDUS:{this._leaveAttrValue();this.state=State$1.SELF_CLOSING_START_TAG;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._leaveAttrValue();this.state=State$1.DATA;this.emitCurrentTagToken();break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this._err(ERR.missingWhitespaceBetweenAttributes);this.state=State$1.BEFORE_ATTRIBUTE_NAME;this._stateBeforeAttributeName(cp);}}}// Self-closing start tag state
//------------------------------------------------------------------
},{key:"_stateSelfClosingStartTag",value:function _stateSelfClosingStartTag(cp){switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{var _token2=this.currentToken;_token2.selfClosing=true;this.state=State$1.DATA;this.emitCurrentTagToken();break;}case CODE_POINTS.EOF:{this._err(ERR.eofInTag);this._emitEOFToken();break;}default:{this._err(ERR.unexpectedSolidusInTag);this.state=State$1.BEFORE_ATTRIBUTE_NAME;this._stateBeforeAttributeName(cp);}}}// Bogus comment state
//------------------------------------------------------------------
},{key:"_stateBogusComment",value:function _stateBogusComment(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentComment(token);break;}case CODE_POINTS.EOF:{this.emitCurrentComment(token);this._emitEOFToken();break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.data+=REPLACEMENT_CHARACTER;break;}default:{token.data+=String.fromCodePoint(cp);}}}// Markup declaration open state
//------------------------------------------------------------------
},{key:"_stateMarkupDeclarationOpen",value:function _stateMarkupDeclarationOpen(cp){if(this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH,true)){this._createCommentToken(SEQUENCES.DASH_DASH.length+1);this.state=State$1.COMMENT_START;}else if(this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE,false)){// NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.
this.currentLocation=this.getCurrentLocation(SEQUENCES.DOCTYPE.length+1);this.state=State$1.DOCTYPE;}else if(this._consumeSequenceIfMatch(SEQUENCES.CDATA_START,true)){if(this.inForeignNode){this.state=State$1.CDATA_SECTION;}else{this._err(ERR.cdataInHtmlContent);this._createCommentToken(SEQUENCES.CDATA_START.length+1);this.currentToken.data='[CDATA[';this.state=State$1.BOGUS_COMMENT;}}//NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup
//results are no longer valid and we will need to start over.
else if(!this._ensureHibernation()){this._err(ERR.incorrectlyOpenedComment);this._createCommentToken(2);this.state=State$1.BOGUS_COMMENT;this._stateBogusComment(cp);}}// Comment start state
//------------------------------------------------------------------
},{key:"_stateCommentStart",value:function _stateCommentStart(cp){switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.COMMENT_START_DASH;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptClosingOfEmptyComment);this.state=State$1.DATA;var _token3=this.currentToken;this.emitCurrentComment(_token3);break;}default:{this.state=State$1.COMMENT;this._stateComment(cp);}}}// Comment start dash state
//------------------------------------------------------------------
},{key:"_stateCommentStartDash",value:function _stateCommentStartDash(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.COMMENT_END;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptClosingOfEmptyComment);this.state=State$1.DATA;this.emitCurrentComment(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break;}default:{token.data+='-';this.state=State$1.COMMENT;this._stateComment(cp);}}}// Comment state
//------------------------------------------------------------------
},{key:"_stateComment",value:function _stateComment(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.COMMENT_END_DASH;break;}case CODE_POINTS.LESS_THAN_SIGN:{token.data+='<';this.state=State$1.COMMENT_LESS_THAN_SIGN;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.data+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break;}default:{token.data+=String.fromCodePoint(cp);}}}// Comment less-than sign state
//------------------------------------------------------------------
},{key:"_stateCommentLessThanSign",value:function _stateCommentLessThanSign(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.EXCLAMATION_MARK:{token.data+='!';this.state=State$1.COMMENT_LESS_THAN_SIGN_BANG;break;}case CODE_POINTS.LESS_THAN_SIGN:{token.data+='<';break;}default:{this.state=State$1.COMMENT;this._stateComment(cp);}}}// Comment less-than sign bang state
//------------------------------------------------------------------
},{key:"_stateCommentLessThanSignBang",value:function _stateCommentLessThanSignBang(cp){if(cp===CODE_POINTS.HYPHEN_MINUS){this.state=State$1.COMMENT_LESS_THAN_SIGN_BANG_DASH;}else{this.state=State$1.COMMENT;this._stateComment(cp);}}// Comment less-than sign bang dash state
//------------------------------------------------------------------
},{key:"_stateCommentLessThanSignBangDash",value:function _stateCommentLessThanSignBangDash(cp){if(cp===CODE_POINTS.HYPHEN_MINUS){this.state=State$1.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;}else{this.state=State$1.COMMENT_END_DASH;this._stateCommentEndDash(cp);}}// Comment less-than sign bang dash dash state
//------------------------------------------------------------------
},{key:"_stateCommentLessThanSignBangDashDash",value:function _stateCommentLessThanSignBangDashDash(cp){if(cp!==CODE_POINTS.GREATER_THAN_SIGN&&cp!==CODE_POINTS.EOF){this._err(ERR.nestedComment);}this.state=State$1.COMMENT_END;this._stateCommentEnd(cp);}// Comment end dash state
//------------------------------------------------------------------
},{key:"_stateCommentEndDash",value:function _stateCommentEndDash(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.HYPHEN_MINUS:{this.state=State$1.COMMENT_END;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break;}default:{token.data+='-';this.state=State$1.COMMENT;this._stateComment(cp);}}}// Comment end state
//------------------------------------------------------------------
},{key:"_stateCommentEnd",value:function _stateCommentEnd(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentComment(token);break;}case CODE_POINTS.EXCLAMATION_MARK:{this.state=State$1.COMMENT_END_BANG;break;}case CODE_POINTS.HYPHEN_MINUS:{token.data+='-';break;}case CODE_POINTS.EOF:{this._err(ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break;}default:{token.data+='--';this.state=State$1.COMMENT;this._stateComment(cp);}}}// Comment end bang state
//------------------------------------------------------------------
},{key:"_stateCommentEndBang",value:function _stateCommentEndBang(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.HYPHEN_MINUS:{token.data+='--!';this.state=State$1.COMMENT_END_DASH;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.incorrectlyClosedComment);this.state=State$1.DATA;this.emitCurrentComment(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInComment);this.emitCurrentComment(token);this._emitEOFToken();break;}default:{token.data+='--!';this.state=State$1.COMMENT;this._stateComment(cp);}}}// DOCTYPE state
//------------------------------------------------------------------
},{key:"_stateDoctype",value:function _stateDoctype(cp){switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.BEFORE_DOCTYPE_NAME;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.BEFORE_DOCTYPE_NAME;this._stateBeforeDoctypeName(cp);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);this._createDoctypeToken(null);var _token4=this.currentToken;_token4.forceQuirks=true;this.emitCurrentDoctype(_token4);this._emitEOFToken();break;}default:{this._err(ERR.missingWhitespaceBeforeDoctypeName);this.state=State$1.BEFORE_DOCTYPE_NAME;this._stateBeforeDoctypeName(cp);}}}// Before DOCTYPE name state
//------------------------------------------------------------------
},{key:"_stateBeforeDoctypeName",value:function _stateBeforeDoctypeName(cp){if(isAsciiUpper(cp)){this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));this.state=State$1.DOCTYPE_NAME;}else switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);this._createDoctypeToken(REPLACEMENT_CHARACTER);this.state=State$1.DOCTYPE_NAME;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingDoctypeName);this._createDoctypeToken(null);var _token5=this.currentToken;_token5.forceQuirks=true;this.emitCurrentDoctype(_token5);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);this._createDoctypeToken(null);var _token6=this.currentToken;_token6.forceQuirks=true;this.emitCurrentDoctype(_token6);this._emitEOFToken();break;}default:{this._createDoctypeToken(String.fromCodePoint(cp));this.state=State$1.DOCTYPE_NAME;}}}// DOCTYPE name state
//------------------------------------------------------------------
},{key:"_stateDoctypeName",value:function _stateDoctypeName(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.AFTER_DOCTYPE_NAME;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.name+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{token.name+=String.fromCodePoint(isAsciiUpper(cp)?toAsciiLower(cp):cp);}}}// After DOCTYPE name state
//------------------------------------------------------------------
},{key:"_stateAfterDoctypeName",value:function _stateAfterDoctypeName(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{if(this._consumeSequenceIfMatch(SEQUENCES.PUBLIC,false)){this.state=State$1.AFTER_DOCTYPE_PUBLIC_KEYWORD;}else if(this._consumeSequenceIfMatch(SEQUENCES.SYSTEM,false)){this.state=State$1.AFTER_DOCTYPE_SYSTEM_KEYWORD;}//NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
//results are no longer valid and we will need to start over.
else if(!this._ensureHibernation()){this._err(ERR.invalidCharacterSequenceAfterDoctypeName);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}}// After DOCTYPE public keyword state
//------------------------------------------------------------------
},{key:"_stateAfterDoctypePublicKeyword",value:function _stateAfterDoctypePublicKeyword(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;break;}case CODE_POINTS.QUOTATION_MARK:{this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);token.publicId='';this.state=State$1.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);token.publicId='';this.state=State$1.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingDoctypePublicIdentifier);token.forceQuirks=true;this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// Before DOCTYPE public identifier state
//------------------------------------------------------------------
},{key:"_stateBeforeDoctypePublicIdentifier",value:function _stateBeforeDoctypePublicIdentifier(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.QUOTATION_MARK:{token.publicId='';this.state=State$1.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{token.publicId='';this.state=State$1.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingDoctypePublicIdentifier);token.forceQuirks=true;this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// DOCTYPE public identifier (double-quoted) state
//------------------------------------------------------------------
},{key:"_stateDoctypePublicIdentifierDoubleQuoted",value:function _stateDoctypePublicIdentifierDoubleQuoted(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.QUOTATION_MARK:{this.state=State$1.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.publicId+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptDoctypePublicIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{token.publicId+=String.fromCodePoint(cp);}}}// DOCTYPE public identifier (single-quoted) state
//------------------------------------------------------------------
},{key:"_stateDoctypePublicIdentifierSingleQuoted",value:function _stateDoctypePublicIdentifierSingleQuoted(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.APOSTROPHE:{this.state=State$1.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.publicId+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptDoctypePublicIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{token.publicId+=String.fromCodePoint(cp);}}}// After DOCTYPE public identifier state
//------------------------------------------------------------------
},{key:"_stateAfterDoctypePublicIdentifier",value:function _stateAfterDoctypePublicIdentifier(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.QUOTATION_MARK:{this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// Between DOCTYPE public and system identifiers state
//------------------------------------------------------------------
},{key:"_stateBetweenDoctypePublicAndSystemIdentifiers",value:function _stateBetweenDoctypePublicAndSystemIdentifiers(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.QUOTATION_MARK:{token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// After DOCTYPE system keyword state
//------------------------------------------------------------------
},{key:"_stateAfterDoctypeSystemKeyword",value:function _stateAfterDoctypeSystemKeyword(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{this.state=State$1.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;break;}case CODE_POINTS.QUOTATION_MARK:{this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// Before DOCTYPE system identifier state
//------------------------------------------------------------------
},{key:"_stateBeforeDoctypeSystemIdentifier",value:function _stateBeforeDoctypeSystemIdentifier(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.QUOTATION_MARK:{token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;}case CODE_POINTS.APOSTROPHE:{token.systemId='';this.state=State$1.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.missingDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.DATA;this.emitCurrentDoctype(token);break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);token.forceQuirks=true;this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// DOCTYPE system identifier (double-quoted) state
//------------------------------------------------------------------
},{key:"_stateDoctypeSystemIdentifierDoubleQuoted",value:function _stateDoctypeSystemIdentifierDoubleQuoted(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.QUOTATION_MARK:{this.state=State$1.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.systemId+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptDoctypeSystemIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{token.systemId+=String.fromCodePoint(cp);}}}// DOCTYPE system identifier (single-quoted) state
//------------------------------------------------------------------
},{key:"_stateDoctypeSystemIdentifierSingleQuoted",value:function _stateDoctypeSystemIdentifierSingleQuoted(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.APOSTROPHE:{this.state=State$1.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);token.systemId+=REPLACEMENT_CHARACTER;break;}case CODE_POINTS.GREATER_THAN_SIGN:{this._err(ERR.abruptDoctypeSystemIdentifier);token.forceQuirks=true;this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{token.systemId+=String.fromCodePoint(cp);}}}// After DOCTYPE system identifier state
//------------------------------------------------------------------
},{key:"_stateAfterDoctypeSystemIdentifier",value:function _stateAfterDoctypeSystemIdentifier(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.SPACE:case CODE_POINTS.LINE_FEED:case CODE_POINTS.TABULATION:case CODE_POINTS.FORM_FEED:{// Ignore whitespace
break;}case CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInDoctype);token.forceQuirks=true;this.emitCurrentDoctype(token);this._emitEOFToken();break;}default:{this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);this.state=State$1.BOGUS_DOCTYPE;this._stateBogusDoctype(cp);}}}// Bogus DOCTYPE state
//------------------------------------------------------------------
},{key:"_stateBogusDoctype",value:function _stateBogusDoctype(cp){var token=this.currentToken;switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{this.emitCurrentDoctype(token);this.state=State$1.DATA;break;}case CODE_POINTS.NULL:{this._err(ERR.unexpectedNullCharacter);break;}case CODE_POINTS.EOF:{this.emitCurrentDoctype(token);this._emitEOFToken();break;}// Do nothing
}}// CDATA section state
//------------------------------------------------------------------
},{key:"_stateCdataSection",value:function _stateCdataSection(cp){switch(cp){case CODE_POINTS.RIGHT_SQUARE_BRACKET:{this.state=State$1.CDATA_SECTION_BRACKET;break;}case CODE_POINTS.EOF:{this._err(ERR.eofInCdata);this._emitEOFToken();break;}default:{this._emitCodePoint(cp);}}}// CDATA section bracket state
//------------------------------------------------------------------
},{key:"_stateCdataSectionBracket",value:function _stateCdataSectionBracket(cp){if(cp===CODE_POINTS.RIGHT_SQUARE_BRACKET){this.state=State$1.CDATA_SECTION_END;}else{this._emitChars(']');this.state=State$1.CDATA_SECTION;this._stateCdataSection(cp);}}// CDATA section end state
//------------------------------------------------------------------
},{key:"_stateCdataSectionEnd",value:function _stateCdataSectionEnd(cp){switch(cp){case CODE_POINTS.GREATER_THAN_SIGN:{this.state=State$1.DATA;break;}case CODE_POINTS.RIGHT_SQUARE_BRACKET:{this._emitChars(']');break;}default:{this._emitChars(']]');this.state=State$1.CDATA_SECTION;this._stateCdataSection(cp);}}}// Character reference state
//------------------------------------------------------------------
},{key:"_stateCharacterReference",value:function _stateCharacterReference(cp){if(cp===CODE_POINTS.NUMBER_SIGN){this.state=State$1.NUMERIC_CHARACTER_REFERENCE;}else if(isAsciiAlphaNumeric(cp)){this.state=State$1.NAMED_CHARACTER_REFERENCE;this._stateNamedCharacterReference(cp);}else{this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);this._reconsumeInState(this.returnState,cp);}}// Named character reference state
//------------------------------------------------------------------
},{key:"_stateNamedCharacterReference",value:function _stateNamedCharacterReference(cp){var matchResult=this._matchNamedCharacterReference(cp);//NOTE: Matching can be abrupted by hibernation. In that case, match
//results are no longer valid and we will need to start over.
if(this._ensureHibernation());else if(matchResult){for(var _i44=0;_i44<matchResult.length;_i44++){this._flushCodePointConsumedAsCharacterReference(matchResult[_i44]);}this.state=this.returnState;}else{this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);this.state=State$1.AMBIGUOUS_AMPERSAND;}}// Ambiguos ampersand state
//------------------------------------------------------------------
},{key:"_stateAmbiguousAmpersand",value:function _stateAmbiguousAmpersand(cp){if(isAsciiAlphaNumeric(cp)){this._flushCodePointConsumedAsCharacterReference(cp);}else{if(cp===CODE_POINTS.SEMICOLON){this._err(ERR.unknownNamedCharacterReference);}this._reconsumeInState(this.returnState,cp);}}// Numeric character reference state
//------------------------------------------------------------------
},{key:"_stateNumericCharacterReference",value:function _stateNumericCharacterReference(cp){this.charRefCode=0;if(cp===CODE_POINTS.LATIN_SMALL_X||cp===CODE_POINTS.LATIN_CAPITAL_X){this.state=State$1.HEXADEMICAL_CHARACTER_REFERENCE_START;}// Inlined decimal character reference start state
else if(isAsciiDigit(cp)){this.state=State$1.DECIMAL_CHARACTER_REFERENCE;this._stateDecimalCharacterReference(cp);}else{this._err(ERR.absenceOfDigitsInNumericCharacterReference);this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);this._reconsumeInState(this.returnState,cp);}}// Hexademical character reference start state
//------------------------------------------------------------------
},{key:"_stateHexademicalCharacterReferenceStart",value:function _stateHexademicalCharacterReferenceStart(cp){if(isAsciiHexDigit(cp)){this.state=State$1.HEXADEMICAL_CHARACTER_REFERENCE;this._stateHexademicalCharacterReference(cp);}else{this._err(ERR.absenceOfDigitsInNumericCharacterReference);this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);this._unconsume(2);this.state=this.returnState;}}// Hexademical character reference state
//------------------------------------------------------------------
},{key:"_stateHexademicalCharacterReference",value:function _stateHexademicalCharacterReference(cp){if(isAsciiUpperHexDigit(cp)){this.charRefCode=this.charRefCode*16+cp-0x37;}else if(isAsciiLowerHexDigit(cp)){this.charRefCode=this.charRefCode*16+cp-0x57;}else if(isAsciiDigit(cp)){this.charRefCode=this.charRefCode*16+cp-0x30;}else if(cp===CODE_POINTS.SEMICOLON){this.state=State$1.NUMERIC_CHARACTER_REFERENCE_END;}else{this._err(ERR.missingSemicolonAfterCharacterReference);this.state=State$1.NUMERIC_CHARACTER_REFERENCE_END;this._stateNumericCharacterReferenceEnd(cp);}}// Decimal character reference state
//------------------------------------------------------------------
},{key:"_stateDecimalCharacterReference",value:function _stateDecimalCharacterReference(cp){if(isAsciiDigit(cp)){this.charRefCode=this.charRefCode*10+cp-0x30;}else if(cp===CODE_POINTS.SEMICOLON){this.state=State$1.NUMERIC_CHARACTER_REFERENCE_END;}else{this._err(ERR.missingSemicolonAfterCharacterReference);this.state=State$1.NUMERIC_CHARACTER_REFERENCE_END;this._stateNumericCharacterReferenceEnd(cp);}}// Numeric character reference end state
//------------------------------------------------------------------
},{key:"_stateNumericCharacterReferenceEnd",value:function _stateNumericCharacterReferenceEnd(cp){if(this.charRefCode===CODE_POINTS.NULL){this._err(ERR.nullCharacterReference);this.charRefCode=CODE_POINTS.REPLACEMENT_CHARACTER;}else if(this.charRefCode>1114111){this._err(ERR.characterReferenceOutsideUnicodeRange);this.charRefCode=CODE_POINTS.REPLACEMENT_CHARACTER;}else if(isSurrogate(this.charRefCode)){this._err(ERR.surrogateCharacterReference);this.charRefCode=CODE_POINTS.REPLACEMENT_CHARACTER;}else if(isUndefinedCodePoint(this.charRefCode)){this._err(ERR.noncharacterCharacterReference);}else if(isControlCodePoint(this.charRefCode)||this.charRefCode===CODE_POINTS.CARRIAGE_RETURN){this._err(ERR.controlCharacterReference);var replacement=C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);if(replacement!==undefined){this.charRefCode=replacement;}}this._flushCodePointConsumedAsCharacterReference(this.charRefCode);this._reconsumeInState(this.returnState,cp);}}]);return Tokenizer$1;}();//Element utils
var IMPLICIT_END_TAG_REQUIRED=new Set([TAG_ID.DD,TAG_ID.DT,TAG_ID.LI,TAG_ID.OPTGROUP,TAG_ID.OPTION,TAG_ID.P,TAG_ID.RB,TAG_ID.RP,TAG_ID.RT,TAG_ID.RTC]);var IMPLICIT_END_TAG_REQUIRED_THOROUGHLY=new Set([].concat(_toConsumableArray(IMPLICIT_END_TAG_REQUIRED),[TAG_ID.CAPTION,TAG_ID.COLGROUP,TAG_ID.TBODY,TAG_ID.TD,TAG_ID.TFOOT,TAG_ID.TH,TAG_ID.THEAD,TAG_ID.TR]));var SCOPING_ELEMENT_NS=new Map([[TAG_ID.APPLET,NS.HTML],[TAG_ID.CAPTION,NS.HTML],[TAG_ID.HTML,NS.HTML],[TAG_ID.MARQUEE,NS.HTML],[TAG_ID.OBJECT,NS.HTML],[TAG_ID.TABLE,NS.HTML],[TAG_ID.TD,NS.HTML],[TAG_ID.TEMPLATE,NS.HTML],[TAG_ID.TH,NS.HTML],[TAG_ID.ANNOTATION_XML,NS.MATHML],[TAG_ID.MI,NS.MATHML],[TAG_ID.MN,NS.MATHML],[TAG_ID.MO,NS.MATHML],[TAG_ID.MS,NS.MATHML],[TAG_ID.MTEXT,NS.MATHML],[TAG_ID.DESC,NS.SVG],[TAG_ID.FOREIGN_OBJECT,NS.SVG],[TAG_ID.TITLE,NS.SVG]]);var NAMED_HEADERS=[TAG_ID.H1,TAG_ID.H2,TAG_ID.H3,TAG_ID.H4,TAG_ID.H5,TAG_ID.H6];var TABLE_ROW_CONTEXT=[TAG_ID.TR,TAG_ID.TEMPLATE,TAG_ID.HTML];var TABLE_BODY_CONTEXT=[TAG_ID.TBODY,TAG_ID.TFOOT,TAG_ID.THEAD,TAG_ID.TEMPLATE,TAG_ID.HTML];var TABLE_CONTEXT=[TAG_ID.TABLE,TAG_ID.TEMPLATE,TAG_ID.HTML];var TABLE_CELLS=[TAG_ID.TD,TAG_ID.TH];//Stack of open elements
var OpenElementStack=/*#__PURE__*/function(){function OpenElementStack(document,treeAdapter,handler){_classCallCheck(this,OpenElementStack);this.treeAdapter=treeAdapter;this.handler=handler;this.items=[];this.tagIDs=[];this.stackTop=-1;this.tmplCount=0;this.currentTagId=TAG_ID.UNKNOWN;this.current=document;}//Index of element
_createClass(OpenElementStack,[{key:"currentTmplContentOrNode",get:function get(){return this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):this.current;}},{key:"_indexOf",value:function _indexOf(element){return this.items.lastIndexOf(element,this.stackTop);}//Update current element
},{key:"_isInTemplate",value:function _isInTemplate(){return this.currentTagId===TAG_ID.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===NS.HTML;}},{key:"_updateCurrentElement",value:function _updateCurrentElement(){this.current=this.items[this.stackTop];this.currentTagId=this.tagIDs[this.stackTop];}//Mutations
},{key:"push",value:function push(element,tagID){this.stackTop++;this.items[this.stackTop]=element;this.current=element;this.tagIDs[this.stackTop]=tagID;this.currentTagId=tagID;if(this._isInTemplate()){this.tmplCount++;}this.handler.onItemPush(element,tagID,true);}},{key:"pop",value:function pop(){var popped=this.current;if(this.tmplCount>0&&this._isInTemplate()){this.tmplCount--;}this.stackTop--;this._updateCurrentElement();this.handler.onItemPop(popped,true);}},{key:"replace",value:function replace(oldElement,newElement){var idx=this._indexOf(oldElement);this.items[idx]=newElement;if(idx===this.stackTop){this.current=newElement;}}},{key:"insertAfter",value:function insertAfter(referenceElement,newElement,newElementID){var insertionIdx=this._indexOf(referenceElement)+1;this.items.splice(insertionIdx,0,newElement);this.tagIDs.splice(insertionIdx,0,newElementID);this.stackTop++;if(insertionIdx===this.stackTop){this._updateCurrentElement();}this.handler.onItemPush(this.current,this.currentTagId,insertionIdx===this.stackTop);}},{key:"popUntilTagNamePopped",value:function popUntilTagNamePopped(tagName){var targetIdx=this.stackTop+1;do{targetIdx=this.tagIDs.lastIndexOf(tagName,targetIdx-1);}while(targetIdx>0&&this.treeAdapter.getNamespaceURI(this.items[targetIdx])!==NS.HTML);this.shortenToLength(targetIdx<0?0:targetIdx);}},{key:"shortenToLength",value:function shortenToLength(idx){while(this.stackTop>=idx){var popped=this.current;if(this.tmplCount>0&&this._isInTemplate()){this.tmplCount-=1;}this.stackTop--;this._updateCurrentElement();this.handler.onItemPop(popped,this.stackTop<idx);}}},{key:"popUntilElementPopped",value:function popUntilElementPopped(element){var idx=this._indexOf(element);this.shortenToLength(idx<0?0:idx);}},{key:"popUntilPopped",value:function popUntilPopped(tagNames,targetNS){var idx=this._indexOfTagNames(tagNames,targetNS);this.shortenToLength(idx<0?0:idx);}},{key:"popUntilNumberedHeaderPopped",value:function popUntilNumberedHeaderPopped(){this.popUntilPopped(NAMED_HEADERS,NS.HTML);}},{key:"popUntilTableCellPopped",value:function popUntilTableCellPopped(){this.popUntilPopped(TABLE_CELLS,NS.HTML);}},{key:"popAllUpToHtmlElement",value:function popAllUpToHtmlElement(){//NOTE: here we assume that the root <html> element is always first in the open element stack, so
//we perform this fast stack clean up.
this.tmplCount=0;this.shortenToLength(1);}},{key:"_indexOfTagNames",value:function _indexOfTagNames(tagNames,namespace){for(var _i45=this.stackTop;_i45>=0;_i45--){if(tagNames.includes(this.tagIDs[_i45])&&this.treeAdapter.getNamespaceURI(this.items[_i45])===namespace){return _i45;}}return-1;}},{key:"clearBackTo",value:function clearBackTo(tagNames,targetNS){var idx=this._indexOfTagNames(tagNames,targetNS);this.shortenToLength(idx+1);}},{key:"clearBackToTableContext",value:function clearBackToTableContext(){this.clearBackTo(TABLE_CONTEXT,NS.HTML);}},{key:"clearBackToTableBodyContext",value:function clearBackToTableBodyContext(){this.clearBackTo(TABLE_BODY_CONTEXT,NS.HTML);}},{key:"clearBackToTableRowContext",value:function clearBackToTableRowContext(){this.clearBackTo(TABLE_ROW_CONTEXT,NS.HTML);}},{key:"remove",value:function remove(element){var idx=this._indexOf(element);if(idx>=0){if(idx===this.stackTop){this.pop();}else{this.items.splice(idx,1);this.tagIDs.splice(idx,1);this.stackTop--;this._updateCurrentElement();this.handler.onItemPop(element,false);}}}//Search
},{key:"tryPeekProperlyNestedBodyElement",value:function tryPeekProperlyNestedBodyElement(){//Properly nested <body> element (should be second element in stack).
return this.stackTop>=1&&this.tagIDs[1]===TAG_ID.BODY?this.items[1]:null;}},{key:"contains",value:function contains(element){return this._indexOf(element)>-1;}},{key:"getCommonAncestor",value:function getCommonAncestor(element){var elementIdx=this._indexOf(element)-1;return elementIdx>=0?this.items[elementIdx]:null;}},{key:"isRootHtmlElementCurrent",value:function isRootHtmlElementCurrent(){return this.stackTop===0&&this.tagIDs[0]===TAG_ID.HTML;}//Element in scope
},{key:"hasInScope",value:function hasInScope(tagName){for(var _i46=this.stackTop;_i46>=0;_i46--){var _tn=this.tagIDs[_i46];var ns=this.treeAdapter.getNamespaceURI(this.items[_i46]);if(_tn===tagName&&ns===NS.HTML){return true;}if(SCOPING_ELEMENT_NS.get(_tn)===ns){return false;}}return true;}},{key:"hasNumberedHeaderInScope",value:function hasNumberedHeaderInScope(){for(var _i47=this.stackTop;_i47>=0;_i47--){var _tn2=this.tagIDs[_i47];var ns=this.treeAdapter.getNamespaceURI(this.items[_i47]);if(isNumberedHeader(_tn2)&&ns===NS.HTML){return true;}if(SCOPING_ELEMENT_NS.get(_tn2)===ns){return false;}}return true;}},{key:"hasInListItemScope",value:function hasInListItemScope(tagName){for(var _i48=this.stackTop;_i48>=0;_i48--){var _tn3=this.tagIDs[_i48];var ns=this.treeAdapter.getNamespaceURI(this.items[_i48]);if(_tn3===tagName&&ns===NS.HTML){return true;}if((_tn3===TAG_ID.UL||_tn3===TAG_ID.OL)&&ns===NS.HTML||SCOPING_ELEMENT_NS.get(_tn3)===ns){return false;}}return true;}},{key:"hasInButtonScope",value:function hasInButtonScope(tagName){for(var _i49=this.stackTop;_i49>=0;_i49--){var _tn4=this.tagIDs[_i49];var ns=this.treeAdapter.getNamespaceURI(this.items[_i49]);if(_tn4===tagName&&ns===NS.HTML){return true;}if(_tn4===TAG_ID.BUTTON&&ns===NS.HTML||SCOPING_ELEMENT_NS.get(_tn4)===ns){return false;}}return true;}},{key:"hasInTableScope",value:function hasInTableScope(tagName){for(var _i50=this.stackTop;_i50>=0;_i50--){var _tn5=this.tagIDs[_i50];var ns=this.treeAdapter.getNamespaceURI(this.items[_i50]);if(ns!==NS.HTML){continue;}if(_tn5===tagName){return true;}if(_tn5===TAG_ID.TABLE||_tn5===TAG_ID.TEMPLATE||_tn5===TAG_ID.HTML){return false;}}return true;}},{key:"hasTableBodyContextInTableScope",value:function hasTableBodyContextInTableScope(){for(var _i51=this.stackTop;_i51>=0;_i51--){var _tn6=this.tagIDs[_i51];var ns=this.treeAdapter.getNamespaceURI(this.items[_i51]);if(ns!==NS.HTML){continue;}if(_tn6===TAG_ID.TBODY||_tn6===TAG_ID.THEAD||_tn6===TAG_ID.TFOOT){return true;}if(_tn6===TAG_ID.TABLE||_tn6===TAG_ID.HTML){return false;}}return true;}},{key:"hasInSelectScope",value:function hasInSelectScope(tagName){for(var _i52=this.stackTop;_i52>=0;_i52--){var _tn7=this.tagIDs[_i52];var ns=this.treeAdapter.getNamespaceURI(this.items[_i52]);if(ns!==NS.HTML){continue;}if(_tn7===tagName){return true;}if(_tn7!==TAG_ID.OPTION&&_tn7!==TAG_ID.OPTGROUP){return false;}}return true;}//Implied end tags
},{key:"generateImpliedEndTags",value:function generateImpliedEndTags(){while(IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)){this.pop();}}},{key:"generateImpliedEndTagsThoroughly",value:function generateImpliedEndTagsThoroughly(){while(IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){this.pop();}}},{key:"generateImpliedEndTagsWithExclusion",value:function generateImpliedEndTagsWithExclusion(exclusionId){while(this.currentTagId!==exclusionId&&IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){this.pop();}}}]);return OpenElementStack;}();//Const
var NOAH_ARK_CAPACITY=3;var EntryType;(function(EntryType){EntryType[EntryType["Marker"]=0]="Marker";EntryType[EntryType["Element"]=1]="Element";})(EntryType=EntryType||(EntryType={}));var MARKER={type:EntryType.Marker};//List of formatting elements
var FormattingElementList=/*#__PURE__*/function(){function FormattingElementList(treeAdapter){_classCallCheck(this,FormattingElementList);this.treeAdapter=treeAdapter;this.entries=[];this.bookmark=null;}//Noah Ark's condition
//OPTIMIZATION: at first we try to find possible candidates for exclusion using
//lightweight heuristics without thorough attributes check.
_createClass(FormattingElementList,[{key:"_getNoahArkConditionCandidates",value:function _getNoahArkConditionCandidates(newElement,neAttrs){var candidates=[];var neAttrsLength=neAttrs.length;var neTagName=this.treeAdapter.getTagName(newElement);var neNamespaceURI=this.treeAdapter.getNamespaceURI(newElement);for(var _i53=0;_i53<this.entries.length;_i53++){var entry=this.entries[_i53];if(entry.type===EntryType.Marker){break;}var element=entry.element;if(this.treeAdapter.getTagName(element)===neTagName&&this.treeAdapter.getNamespaceURI(element)===neNamespaceURI){var elementAttrs=this.treeAdapter.getAttrList(element);if(elementAttrs.length===neAttrsLength){candidates.push({idx:_i53,attrs:elementAttrs});}}}return candidates;}},{key:"_ensureNoahArkCondition",value:function _ensureNoahArkCondition(newElement){if(this.entries.length<NOAH_ARK_CAPACITY)return;var neAttrs=this.treeAdapter.getAttrList(newElement);var candidates=this._getNoahArkConditionCandidates(newElement,neAttrs);if(candidates.length<NOAH_ARK_CAPACITY)return;//NOTE: build attrs map for the new element, so we can perform fast lookups
var neAttrsMap=new Map(neAttrs.map(function(neAttr){return[neAttr.name,neAttr.value];}));var validCandidates=0;//NOTE: remove bottommost candidates, until Noah's Ark condition will not be met
for(var _i54=0;_i54<candidates.length;_i54++){var candidate=candidates[_i54];// We know that `candidate.attrs.length === neAttrs.length`
if(candidate.attrs.every(function(cAttr){return neAttrsMap.get(cAttr.name)===cAttr.value;})){validCandidates+=1;if(validCandidates>=NOAH_ARK_CAPACITY){this.entries.splice(candidate.idx,1);}}}}//Mutations
},{key:"insertMarker",value:function insertMarker(){this.entries.unshift(MARKER);}},{key:"pushElement",value:function pushElement(element,token){this._ensureNoahArkCondition(element);this.entries.unshift({type:EntryType.Element,element:element,token:token});}},{key:"insertElementAfterBookmark",value:function insertElementAfterBookmark(element,token){var bookmarkIdx=this.entries.indexOf(this.bookmark);this.entries.splice(bookmarkIdx,0,{type:EntryType.Element,element:element,token:token});}},{key:"removeEntry",value:function removeEntry(entry){var entryIndex=this.entries.indexOf(entry);if(entryIndex>=0){this.entries.splice(entryIndex,1);}}/**
           * Clears the list of formatting elements up to the last marker.
           *
           * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker
           */},{key:"clearToLastMarker",value:function clearToLastMarker(){var markerIdx=this.entries.indexOf(MARKER);if(markerIdx>=0){this.entries.splice(0,markerIdx+1);}else{this.entries.length=0;}}//Search
},{key:"getElementEntryInScopeWithTagName",value:function getElementEntryInScopeWithTagName(tagName){var _this30=this;var entry=this.entries.find(function(entry){return entry.type===EntryType.Marker||_this30.treeAdapter.getTagName(entry.element)===tagName;});return entry&&entry.type===EntryType.Element?entry:null;}},{key:"getElementEntry",value:function getElementEntry(element){return this.entries.find(function(entry){return entry.type===EntryType.Element&&entry.element===element;});}}]);return FormattingElementList;}();function createTextNode$1(value){return{nodeName:'#text',value:value,parentNode:null};}var defaultTreeAdapter={//Node construction
createDocument:function createDocument(){return{nodeName:'#document',mode:DOCUMENT_MODE.NO_QUIRKS,childNodes:[]};},createDocumentFragment:function createDocumentFragment(){return{nodeName:'#document-fragment',childNodes:[]};},createElement:function createElement(tagName,namespaceURI,attrs){return{nodeName:tagName,tagName:tagName,attrs:attrs,namespaceURI:namespaceURI,childNodes:[],parentNode:null};},createCommentNode:function createCommentNode(data){return{nodeName:'#comment',data:data,parentNode:null};},//Tree mutation
appendChild:function appendChild(parentNode,newNode){parentNode.childNodes.push(newNode);newNode.parentNode=parentNode;},insertBefore:function insertBefore(parentNode,newNode,referenceNode){var insertionIdx=parentNode.childNodes.indexOf(referenceNode);parentNode.childNodes.splice(insertionIdx,0,newNode);newNode.parentNode=parentNode;},setTemplateContent:function setTemplateContent(templateElement,contentElement){templateElement.content=contentElement;},getTemplateContent:function getTemplateContent(templateElement){return templateElement.content;},setDocumentType:function setDocumentType(document,name,publicId,systemId){var doctypeNode=document.childNodes.find(function(node){return node.nodeName==='#documentType';});if(doctypeNode){doctypeNode.name=name;doctypeNode.publicId=publicId;doctypeNode.systemId=systemId;}else{var _node8={nodeName:'#documentType',name:name,publicId:publicId,systemId:systemId,parentNode:null};defaultTreeAdapter.appendChild(document,_node8);}},setDocumentMode:function setDocumentMode(document,mode){document.mode=mode;},getDocumentMode:function getDocumentMode(document){return document.mode;},detachNode:function detachNode(node){if(node.parentNode){var idx=node.parentNode.childNodes.indexOf(node);node.parentNode.childNodes.splice(idx,1);node.parentNode=null;}},insertText:function insertText(parentNode,text){if(parentNode.childNodes.length>0){var prevNode=parentNode.childNodes[parentNode.childNodes.length-1];if(defaultTreeAdapter.isTextNode(prevNode)){prevNode.value+=text;return;}}defaultTreeAdapter.appendChild(parentNode,createTextNode$1(text));},insertTextBefore:function insertTextBefore(parentNode,text,referenceNode){var prevNode=parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode)-1];if(prevNode&&defaultTreeAdapter.isTextNode(prevNode)){prevNode.value+=text;}else{defaultTreeAdapter.insertBefore(parentNode,createTextNode$1(text),referenceNode);}},adoptAttributes:function adoptAttributes(recipient,attrs){var recipientAttrsMap=new Set(recipient.attrs.map(function(attr){return attr.name;}));for(var _j8=0;_j8<attrs.length;_j8++){if(!recipientAttrsMap.has(attrs[_j8].name)){recipient.attrs.push(attrs[_j8]);}}},//Tree traversing
getFirstChild:function getFirstChild(node){return node.childNodes[0];},getChildNodes:function getChildNodes(node){return node.childNodes;},getParentNode:function getParentNode(node){return node.parentNode;},getAttrList:function getAttrList(element){return element.attrs;},//Node data
getTagName:function getTagName(element){return element.tagName;},getNamespaceURI:function getNamespaceURI(element){return element.namespaceURI;},getTextNodeContent:function getTextNodeContent(textNode){return textNode.value;},getCommentNodeContent:function getCommentNodeContent(commentNode){return commentNode.data;},getDocumentTypeNodeName:function getDocumentTypeNodeName(doctypeNode){return doctypeNode.name;},getDocumentTypeNodePublicId:function getDocumentTypeNodePublicId(doctypeNode){return doctypeNode.publicId;},getDocumentTypeNodeSystemId:function getDocumentTypeNodeSystemId(doctypeNode){return doctypeNode.systemId;},//Node types
isTextNode:function isTextNode(node){return node.nodeName==='#text';},isCommentNode:function isCommentNode(node){return node.nodeName==='#comment';},isDocumentTypeNode:function isDocumentTypeNode(node){return node.nodeName==='#documentType';},isElementNode:function isElementNode(node){return Object.prototype.hasOwnProperty.call(node,'tagName');},// Source code location
setNodeSourceCodeLocation:function setNodeSourceCodeLocation(node,location){node.sourceCodeLocation=location;},getNodeSourceCodeLocation:function getNodeSourceCodeLocation(node){return node.sourceCodeLocation;},updateNodeSourceCodeLocation:function updateNodeSourceCodeLocation(node,endLocation){node.sourceCodeLocation=_objectSpread(_objectSpread({},node.sourceCodeLocation),endLocation);}};//Const
var VALID_DOCTYPE_NAME='html';var VALID_SYSTEM_ID='about:legacy-compat';var QUIRKS_MODE_SYSTEM_ID='http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';var QUIRKS_MODE_PUBLIC_ID_PREFIXES=['+//silmaril//dtd html pro v0r11 19970101//','-//as//dtd html 3.0 aswedit + extensions//','-//advasoft ltd//dtd html 3.0 aswedit + extensions//','-//ietf//dtd html 2.0 level 1//','-//ietf//dtd html 2.0 level 2//','-//ietf//dtd html 2.0 strict level 1//','-//ietf//dtd html 2.0 strict level 2//','-//ietf//dtd html 2.0 strict//','-//ietf//dtd html 2.0//','-//ietf//dtd html 2.1e//','-//ietf//dtd html 3.0//','-//ietf//dtd html 3.2 final//','-//ietf//dtd html 3.2//','-//ietf//dtd html 3//','-//ietf//dtd html level 0//','-//ietf//dtd html level 1//','-//ietf//dtd html level 2//','-//ietf//dtd html level 3//','-//ietf//dtd html strict level 0//','-//ietf//dtd html strict level 1//','-//ietf//dtd html strict level 2//','-//ietf//dtd html strict level 3//','-//ietf//dtd html strict//','-//ietf//dtd html//','-//metrius//dtd metrius presentational//','-//microsoft//dtd internet explorer 2.0 html strict//','-//microsoft//dtd internet explorer 2.0 html//','-//microsoft//dtd internet explorer 2.0 tables//','-//microsoft//dtd internet explorer 3.0 html strict//','-//microsoft//dtd internet explorer 3.0 html//','-//microsoft//dtd internet explorer 3.0 tables//','-//netscape comm. corp.//dtd html//','-//netscape comm. corp.//dtd strict html//',"-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//",'-//sq//dtd html 2.0 hotmetal + extensions//','-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//','-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//','-//spyglass//dtd html 2.0 extended//','-//sun microsystems corp.//dtd hotjava html//','-//sun microsystems corp.//dtd hotjava strict html//','-//w3c//dtd html 3 1995-03-24//','-//w3c//dtd html 3.2 draft//','-//w3c//dtd html 3.2 final//','-//w3c//dtd html 3.2//','-//w3c//dtd html 3.2s draft//','-//w3c//dtd html 4.0 frameset//','-//w3c//dtd html 4.0 transitional//','-//w3c//dtd html experimental 19960712//','-//w3c//dtd html experimental 970421//','-//w3c//dtd w3 html//','-//w3o//dtd w3 html 3.0//','-//webtechs//dtd mozilla html 2.0//','-//webtechs//dtd mozilla html//'];var QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES=[].concat(QUIRKS_MODE_PUBLIC_ID_PREFIXES,['-//w3c//dtd html 4.01 frameset//','-//w3c//dtd html 4.01 transitional//']);var QUIRKS_MODE_PUBLIC_IDS=new Set(['-//w3o//dtd w3 html strict 3.0//en//','-/w3c/dtd html 4.0 transitional/en','html']);var LIMITED_QUIRKS_PUBLIC_ID_PREFIXES=['-//w3c//dtd xhtml 1.0 frameset//','-//w3c//dtd xhtml 1.0 transitional//'];var LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES=[].concat(LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,['-//w3c//dtd html 4.01 frameset//','-//w3c//dtd html 4.01 transitional//']);//Utils
function hasPrefix(publicId,prefixes){return prefixes.some(function(prefix){return publicId.startsWith(prefix);});}//API
function isConforming(token){return token.name===VALID_DOCTYPE_NAME&&token.publicId===null&&(token.systemId===null||token.systemId===VALID_SYSTEM_ID);}function getDocumentMode(token){if(token.name!==VALID_DOCTYPE_NAME){return DOCUMENT_MODE.QUIRKS;}var systemId=token.systemId;if(systemId&&systemId.toLowerCase()===QUIRKS_MODE_SYSTEM_ID){return DOCUMENT_MODE.QUIRKS;}var publicId=token.publicId;if(publicId!==null){publicId=publicId.toLowerCase();if(QUIRKS_MODE_PUBLIC_IDS.has(publicId)){return DOCUMENT_MODE.QUIRKS;}var prefixes=systemId===null?QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES:QUIRKS_MODE_PUBLIC_ID_PREFIXES;if(hasPrefix(publicId,prefixes)){return DOCUMENT_MODE.QUIRKS;}prefixes=systemId===null?LIMITED_QUIRKS_PUBLIC_ID_PREFIXES:LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;if(hasPrefix(publicId,prefixes)){return DOCUMENT_MODE.LIMITED_QUIRKS;}}return DOCUMENT_MODE.NO_QUIRKS;}//MIME types
var MIME_TYPES={TEXT_HTML:'text/html',APPLICATION_XML:'application/xhtml+xml'};//Attributes
var DEFINITION_URL_ATTR='definitionurl';var ADJUSTED_DEFINITION_URL_ATTR='definitionURL';var SVG_ATTRS_ADJUSTMENT_MAP=new Map(['attributeName','attributeType','baseFrequency','baseProfile','calcMode','clipPathUnits','diffuseConstant','edgeMode','filterUnits','glyphRef','gradientTransform','gradientUnits','kernelMatrix','kernelUnitLength','keyPoints','keySplines','keyTimes','lengthAdjust','limitingConeAngle','markerHeight','markerUnits','markerWidth','maskContentUnits','maskUnits','numOctaves','pathLength','patternContentUnits','patternTransform','patternUnits','pointsAtX','pointsAtY','pointsAtZ','preserveAlpha','preserveAspectRatio','primitiveUnits','refX','refY','repeatCount','repeatDur','requiredExtensions','requiredFeatures','specularConstant','specularExponent','spreadMethod','startOffset','stdDeviation','stitchTiles','surfaceScale','systemLanguage','tableValues','targetX','targetY','textLength','viewBox','viewTarget','xChannelSelector','yChannelSelector','zoomAndPan'].map(function(attr){return[attr.toLowerCase(),attr];}));var XML_ATTRS_ADJUSTMENT_MAP=new Map([['xlink:actuate',{prefix:'xlink',name:'actuate',namespace:NS.XLINK}],['xlink:arcrole',{prefix:'xlink',name:'arcrole',namespace:NS.XLINK}],['xlink:href',{prefix:'xlink',name:'href',namespace:NS.XLINK}],['xlink:role',{prefix:'xlink',name:'role',namespace:NS.XLINK}],['xlink:show',{prefix:'xlink',name:'show',namespace:NS.XLINK}],['xlink:title',{prefix:'xlink',name:'title',namespace:NS.XLINK}],['xlink:type',{prefix:'xlink',name:'type',namespace:NS.XLINK}],['xml:base',{prefix:'xml',name:'base',namespace:NS.XML}],['xml:lang',{prefix:'xml',name:'lang',namespace:NS.XML}],['xml:space',{prefix:'xml',name:'space',namespace:NS.XML}],['xmlns',{prefix:'',name:'xmlns',namespace:NS.XMLNS}],['xmlns:xlink',{prefix:'xmlns',name:'xlink',namespace:NS.XMLNS}]]);//SVG tag names adjustment map
var SVG_TAG_NAMES_ADJUSTMENT_MAP=new Map(['altGlyph','altGlyphDef','altGlyphItem','animateColor','animateMotion','animateTransform','clipPath','feBlend','feColorMatrix','feComponentTransfer','feComposite','feConvolveMatrix','feDiffuseLighting','feDisplacementMap','feDistantLight','feFlood','feFuncA','feFuncB','feFuncG','feFuncR','feGaussianBlur','feImage','feMerge','feMergeNode','feMorphology','feOffset','fePointLight','feSpecularLighting','feSpotLight','feTile','feTurbulence','foreignObject','glyphRef','linearGradient','radialGradient','textPath'].map(function(tn){return[tn.toLowerCase(),tn];}));//Tags that causes exit from foreign content
var EXITS_FOREIGN_CONTENT=new Set([TAG_ID.B,TAG_ID.BIG,TAG_ID.BLOCKQUOTE,TAG_ID.BODY,TAG_ID.BR,TAG_ID.CENTER,TAG_ID.CODE,TAG_ID.DD,TAG_ID.DIV,TAG_ID.DL,TAG_ID.DT,TAG_ID.EM,TAG_ID.EMBED,TAG_ID.H1,TAG_ID.H2,TAG_ID.H3,TAG_ID.H4,TAG_ID.H5,TAG_ID.H6,TAG_ID.HEAD,TAG_ID.HR,TAG_ID.I,TAG_ID.IMG,TAG_ID.LI,TAG_ID.LISTING,TAG_ID.MENU,TAG_ID.META,TAG_ID.NOBR,TAG_ID.OL,TAG_ID.P,TAG_ID.PRE,TAG_ID.RUBY,TAG_ID.S,TAG_ID.SMALL,TAG_ID.SPAN,TAG_ID.STRONG,TAG_ID.STRIKE,TAG_ID.SUB,TAG_ID.SUP,TAG_ID.TABLE,TAG_ID.TT,TAG_ID.U,TAG_ID.UL,TAG_ID.VAR]);//Check exit from foreign content
function causesExit(startTagToken){var tn=startTagToken.tagID;var isFontWithAttrs=tn===TAG_ID.FONT&&startTagToken.attrs.some(function(_ref127){var name=_ref127.name;return name===ATTRS.COLOR||name===ATTRS.SIZE||name===ATTRS.FACE;});return isFontWithAttrs||EXITS_FOREIGN_CONTENT.has(tn);}//Token adjustments
function adjustTokenMathMLAttrs(token){for(var _i55=0;_i55<token.attrs.length;_i55++){if(token.attrs[_i55].name===DEFINITION_URL_ATTR){token.attrs[_i55].name=ADJUSTED_DEFINITION_URL_ATTR;break;}}}function adjustTokenSVGAttrs(token){for(var _i56=0;_i56<token.attrs.length;_i56++){var adjustedAttrName=SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[_i56].name);if(adjustedAttrName!=null){token.attrs[_i56].name=adjustedAttrName;}}}function adjustTokenXMLAttrs(token){for(var _i57=0;_i57<token.attrs.length;_i57++){var adjustedAttrEntry=XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[_i57].name);if(adjustedAttrEntry){token.attrs[_i57].prefix=adjustedAttrEntry.prefix;token.attrs[_i57].name=adjustedAttrEntry.name;token.attrs[_i57].namespace=adjustedAttrEntry.namespace;}}}function adjustTokenSVGTagName(token){var adjustedTagName=SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);if(adjustedTagName!=null){token.tagName=adjustedTagName;token.tagID=getTagID(token.tagName);}}//Integration points
function isMathMLTextIntegrationPoint(tn,ns){return ns===NS.MATHML&&(tn===TAG_ID.MI||tn===TAG_ID.MO||tn===TAG_ID.MN||tn===TAG_ID.MS||tn===TAG_ID.MTEXT);}function isHtmlIntegrationPoint(tn,ns,attrs){if(ns===NS.MATHML&&tn===TAG_ID.ANNOTATION_XML){for(var _i58=0;_i58<attrs.length;_i58++){if(attrs[_i58].name===ATTRS.ENCODING){var value=attrs[_i58].value.toLowerCase();return value===MIME_TYPES.TEXT_HTML||value===MIME_TYPES.APPLICATION_XML;}}}return ns===NS.SVG&&(tn===TAG_ID.FOREIGN_OBJECT||tn===TAG_ID.DESC||tn===TAG_ID.TITLE);}function isIntegrationPoint(tn,ns,attrs,foreignNS){return(!foreignNS||foreignNS===NS.HTML)&&isHtmlIntegrationPoint(tn,ns,attrs)||(!foreignNS||foreignNS===NS.MATHML)&&isMathMLTextIntegrationPoint(tn,ns);}//Misc constants
var HIDDEN_INPUT_TYPE='hidden';//Adoption agency loops iteration count
var AA_OUTER_LOOP_ITER=8;var AA_INNER_LOOP_ITER=3;//Insertion modes
var InsertionMode;(function(InsertionMode){InsertionMode[InsertionMode["INITIAL"]=0]="INITIAL";InsertionMode[InsertionMode["BEFORE_HTML"]=1]="BEFORE_HTML";InsertionMode[InsertionMode["BEFORE_HEAD"]=2]="BEFORE_HEAD";InsertionMode[InsertionMode["IN_HEAD"]=3]="IN_HEAD";InsertionMode[InsertionMode["IN_HEAD_NO_SCRIPT"]=4]="IN_HEAD_NO_SCRIPT";InsertionMode[InsertionMode["AFTER_HEAD"]=5]="AFTER_HEAD";InsertionMode[InsertionMode["IN_BODY"]=6]="IN_BODY";InsertionMode[InsertionMode["TEXT"]=7]="TEXT";InsertionMode[InsertionMode["IN_TABLE"]=8]="IN_TABLE";InsertionMode[InsertionMode["IN_TABLE_TEXT"]=9]="IN_TABLE_TEXT";InsertionMode[InsertionMode["IN_CAPTION"]=10]="IN_CAPTION";InsertionMode[InsertionMode["IN_COLUMN_GROUP"]=11]="IN_COLUMN_GROUP";InsertionMode[InsertionMode["IN_TABLE_BODY"]=12]="IN_TABLE_BODY";InsertionMode[InsertionMode["IN_ROW"]=13]="IN_ROW";InsertionMode[InsertionMode["IN_CELL"]=14]="IN_CELL";InsertionMode[InsertionMode["IN_SELECT"]=15]="IN_SELECT";InsertionMode[InsertionMode["IN_SELECT_IN_TABLE"]=16]="IN_SELECT_IN_TABLE";InsertionMode[InsertionMode["IN_TEMPLATE"]=17]="IN_TEMPLATE";InsertionMode[InsertionMode["AFTER_BODY"]=18]="AFTER_BODY";InsertionMode[InsertionMode["IN_FRAMESET"]=19]="IN_FRAMESET";InsertionMode[InsertionMode["AFTER_FRAMESET"]=20]="AFTER_FRAMESET";InsertionMode[InsertionMode["AFTER_AFTER_BODY"]=21]="AFTER_AFTER_BODY";InsertionMode[InsertionMode["AFTER_AFTER_FRAMESET"]=22]="AFTER_AFTER_FRAMESET";})(InsertionMode||(InsertionMode={}));var BASE_LOC={startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1};var TABLE_STRUCTURE_TAGS=new Set([TAG_ID.TABLE,TAG_ID.TBODY,TAG_ID.TFOOT,TAG_ID.THEAD,TAG_ID.TR]);var defaultParserOptions={scriptingEnabled:true,sourceCodeLocationInfo:false,treeAdapter:defaultTreeAdapter,onParseError:null};//Parser
var Parser$2=/*#__PURE__*/function(){function Parser$2(options,document){var fragmentContext=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var scriptHandler=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;_classCallCheck(this,Parser$2);this.fragmentContext=fragmentContext;this.scriptHandler=scriptHandler;this.currentToken=null;this.stopped=false;this.insertionMode=InsertionMode.INITIAL;this.originalInsertionMode=InsertionMode.INITIAL;this.headElement=null;this.formElement=null;/** Indicates that the current node is not an element in the HTML namespace */this.currentNotInHTML=false;/**
               * The template insertion mode stack is maintained from the left.
               * Ie. the topmost element will always have index 0.
               */this.tmplInsertionModeStack=[];this.pendingCharacterTokens=[];this.hasNonWhitespacePendingCharacterToken=false;this.framesetOk=true;this.skipNextNewLine=false;this.fosterParentingEnabled=false;this.options=_objectSpread(_objectSpread({},defaultParserOptions),options);this.treeAdapter=this.options.treeAdapter;this.onParseError=this.options.onParseError;// Always enable location info if we report parse errors.
if(this.onParseError){this.options.sourceCodeLocationInfo=true;}this.document=document!==null&&document!==void 0?document:this.treeAdapter.createDocument();this.tokenizer=new Tokenizer$1(this.options,this);this.activeFormattingElements=new FormattingElementList(this.treeAdapter);this.fragmentContextID=fragmentContext?getTagID(this.treeAdapter.getTagName(fragmentContext)):TAG_ID.UNKNOWN;this._setContextModes(fragmentContext!==null&&fragmentContext!==void 0?fragmentContext:this.document,this.fragmentContextID);this.openElements=new OpenElementStack(this.document,this.treeAdapter,this);}// API
_createClass(Parser$2,[{key:"getFragment",value:function getFragment(){var rootElement=this.treeAdapter.getFirstChild(this.document);var fragment=this.treeAdapter.createDocumentFragment();this._adoptNodes(rootElement,fragment);return fragment;}//Errors
},{key:"_err",value:function _err(token,code,beforeToken){var _a;if(!this.onParseError)return;var loc=(_a=token.location)!==null&&_a!==void 0?_a:BASE_LOC;var err={code:code,startLine:loc.startLine,startCol:loc.startCol,startOffset:loc.startOffset,endLine:beforeToken?loc.startLine:loc.endLine,endCol:beforeToken?loc.startCol:loc.endCol,endOffset:beforeToken?loc.startOffset:loc.endOffset};this.onParseError(err);}//Stack events
},{key:"onItemPush",value:function onItemPush(node,tid,isTop){var _a,_b;(_b=(_a=this.treeAdapter).onItemPush)===null||_b===void 0?void 0:_b.call(_a,node);if(isTop&&this.openElements.stackTop>0)this._setContextModes(node,tid);}},{key:"onItemPop",value:function onItemPop(node,isTop){var _a,_b;if(this.options.sourceCodeLocationInfo){this._setEndLocation(node,this.currentToken);}(_b=(_a=this.treeAdapter).onItemPop)===null||_b===void 0?void 0:_b.call(_a,node,this.openElements.current);if(isTop){var current;var currentTagId;if(this.openElements.stackTop===0&&this.fragmentContext){current=this.fragmentContext;currentTagId=this.fragmentContextID;}else{var _this$openElements=this.openElements;current=_this$openElements.current;currentTagId=_this$openElements.currentTagId;}this._setContextModes(current,currentTagId);}}},{key:"_setContextModes",value:function _setContextModes(current,tid){var isHTML=current===this.document||this.treeAdapter.getNamespaceURI(current)===NS.HTML;this.currentNotInHTML=!isHTML;this.tokenizer.inForeignNode=!isHTML&&!this._isIntegrationPoint(tid,current);}},{key:"_switchToTextParsing",value:function _switchToTextParsing(currentToken,nextTokenizerState){this._insertElement(currentToken,NS.HTML);this.tokenizer.state=nextTokenizerState;this.originalInsertionMode=this.insertionMode;this.insertionMode=InsertionMode.TEXT;}},{key:"switchToPlaintextParsing",value:function switchToPlaintextParsing(){this.insertionMode=InsertionMode.TEXT;this.originalInsertionMode=InsertionMode.IN_BODY;this.tokenizer.state=TokenizerMode.PLAINTEXT;}//Fragment parsing
},{key:"_getAdjustedCurrentElement",value:function _getAdjustedCurrentElement(){return this.openElements.stackTop===0&&this.fragmentContext?this.fragmentContext:this.openElements.current;}},{key:"_findFormInFragmentContext",value:function _findFormInFragmentContext(){var node=this.fragmentContext;while(node){if(this.treeAdapter.getTagName(node)===TAG_NAMES.FORM){this.formElement=node;break;}node=this.treeAdapter.getParentNode(node);}}},{key:"_initTokenizerForFragmentParsing",value:function _initTokenizerForFragmentParsing(){if(!this.fragmentContext||this.treeAdapter.getNamespaceURI(this.fragmentContext)!==NS.HTML){return;}switch(this.fragmentContextID){case TAG_ID.TITLE:case TAG_ID.TEXTAREA:{this.tokenizer.state=TokenizerMode.RCDATA;break;}case TAG_ID.STYLE:case TAG_ID.XMP:case TAG_ID.IFRAME:case TAG_ID.NOEMBED:case TAG_ID.NOFRAMES:case TAG_ID.NOSCRIPT:{this.tokenizer.state=TokenizerMode.RAWTEXT;break;}case TAG_ID.SCRIPT:{this.tokenizer.state=TokenizerMode.SCRIPT_DATA;break;}case TAG_ID.PLAINTEXT:{this.tokenizer.state=TokenizerMode.PLAINTEXT;break;}// Do nothing
}}//Tree mutation
},{key:"_setDocumentType",value:function _setDocumentType(token){var _this31=this;var name=token.name||'';var publicId=token.publicId||'';var systemId=token.systemId||'';this.treeAdapter.setDocumentType(this.document,name,publicId,systemId);if(token.location){var documentChildren=this.treeAdapter.getChildNodes(this.document);var docTypeNode=documentChildren.find(function(node){return _this31.treeAdapter.isDocumentTypeNode(node);});if(docTypeNode){this.treeAdapter.setNodeSourceCodeLocation(docTypeNode,token.location);}}}},{key:"_attachElementToTree",value:function _attachElementToTree(element,location){if(this.options.sourceCodeLocationInfo){var loc=location&&_objectSpread(_objectSpread({},location),{},{startTag:location});this.treeAdapter.setNodeSourceCodeLocation(element,loc);}if(this._shouldFosterParentOnInsertion()){this._fosterParentElement(element);}else{var _parent2=this.openElements.currentTmplContentOrNode;this.treeAdapter.appendChild(_parent2,element);}}},{key:"_appendElement",value:function _appendElement(token,namespaceURI){var element=this.treeAdapter.createElement(token.tagName,namespaceURI,token.attrs);this._attachElementToTree(element,token.location);}},{key:"_insertElement",value:function _insertElement(token,namespaceURI){var element=this.treeAdapter.createElement(token.tagName,namespaceURI,token.attrs);this._attachElementToTree(element,token.location);this.openElements.push(element,token.tagID);}},{key:"_insertFakeElement",value:function _insertFakeElement(tagName,tagID){var element=this.treeAdapter.createElement(tagName,NS.HTML,[]);this._attachElementToTree(element,null);this.openElements.push(element,tagID);}},{key:"_insertTemplate",value:function _insertTemplate(token){var tmpl=this.treeAdapter.createElement(token.tagName,NS.HTML,token.attrs);var content=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(tmpl,content);this._attachElementToTree(tmpl,token.location);this.openElements.push(tmpl,token.tagID);if(this.options.sourceCodeLocationInfo)this.treeAdapter.setNodeSourceCodeLocation(content,null);}},{key:"_insertFakeRootElement",value:function _insertFakeRootElement(){var element=this.treeAdapter.createElement(TAG_NAMES.HTML,NS.HTML,[]);if(this.options.sourceCodeLocationInfo)this.treeAdapter.setNodeSourceCodeLocation(element,null);this.treeAdapter.appendChild(this.openElements.current,element);this.openElements.push(element,TAG_ID.HTML);}},{key:"_appendCommentNode",value:function _appendCommentNode(token,parent){var commentNode=this.treeAdapter.createCommentNode(token.data);this.treeAdapter.appendChild(parent,commentNode);if(this.options.sourceCodeLocationInfo){this.treeAdapter.setNodeSourceCodeLocation(commentNode,token.location);}}},{key:"_insertCharacters",value:function _insertCharacters(token){var parent;var beforeElement;if(this._shouldFosterParentOnInsertion()){var _this$_findFosterPare=this._findFosterParentingLocation();parent=_this$_findFosterPare.parent;beforeElement=_this$_findFosterPare.beforeElement;if(beforeElement){this.treeAdapter.insertTextBefore(parent,token.chars,beforeElement);}else{this.treeAdapter.insertText(parent,token.chars);}}else{parent=this.openElements.currentTmplContentOrNode;this.treeAdapter.insertText(parent,token.chars);}if(!token.location)return;var siblings=this.treeAdapter.getChildNodes(parent);var textNodeIdx=beforeElement?siblings.lastIndexOf(beforeElement):siblings.length;var textNode=siblings[textNodeIdx-1];//NOTE: if we have a location assigned by another token, then just update the end position
var tnLoc=this.treeAdapter.getNodeSourceCodeLocation(textNode);if(tnLoc){var _token$location=token.location,endLine=_token$location.endLine,endCol=_token$location.endCol,endOffset=_token$location.endOffset;this.treeAdapter.updateNodeSourceCodeLocation(textNode,{endLine:endLine,endCol:endCol,endOffset:endOffset});}else if(this.options.sourceCodeLocationInfo){this.treeAdapter.setNodeSourceCodeLocation(textNode,token.location);}}},{key:"_adoptNodes",value:function _adoptNodes(donor,recipient){for(var child=this.treeAdapter.getFirstChild(donor);child;child=this.treeAdapter.getFirstChild(donor)){this.treeAdapter.detachNode(child);this.treeAdapter.appendChild(recipient,child);}}},{key:"_setEndLocation",value:function _setEndLocation(element,closingToken){if(this.treeAdapter.getNodeSourceCodeLocation(element)&&closingToken.location){var ctLoc=closingToken.location;var _tn8=this.treeAdapter.getTagName(element);var endLoc=// NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
// tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
closingToken.type===TokenType.END_TAG&&_tn8===closingToken.tagName?{endTag:_objectSpread({},ctLoc),endLine:ctLoc.endLine,endCol:ctLoc.endCol,endOffset:ctLoc.endOffset}:{endLine:ctLoc.startLine,endCol:ctLoc.startCol,endOffset:ctLoc.startOffset};this.treeAdapter.updateNodeSourceCodeLocation(element,endLoc);}}//Token processing
},{key:"shouldProcessStartTagTokenInForeignContent",value:function shouldProcessStartTagTokenInForeignContent(token){// Check that neither current === document, or ns === NS.HTML
if(!this.currentNotInHTML)return false;var current;var currentTagId;if(this.openElements.stackTop===0&&this.fragmentContext){current=this.fragmentContext;currentTagId=this.fragmentContextID;}else{var _this$openElements2=this.openElements;current=_this$openElements2.current;currentTagId=_this$openElements2.currentTagId;}if(token.tagID===TAG_ID.SVG&&this.treeAdapter.getTagName(current)===TAG_NAMES.ANNOTATION_XML&&this.treeAdapter.getNamespaceURI(current)===NS.MATHML){return false;}return(// Check that `current` is not an integration point for HTML or MathML elements.
this.tokenizer.inForeignNode||// If it _is_ an integration point, then we might have to check that it is not an HTML
// integration point.
(token.tagID===TAG_ID.MGLYPH||token.tagID===TAG_ID.MALIGNMARK)&&!this._isIntegrationPoint(currentTagId,current,NS.HTML));}},{key:"_processToken",value:function _processToken(token){switch(token.type){case TokenType.CHARACTER:{this.onCharacter(token);break;}case TokenType.NULL_CHARACTER:{this.onNullCharacter(token);break;}case TokenType.COMMENT:{this.onComment(token);break;}case TokenType.DOCTYPE:{this.onDoctype(token);break;}case TokenType.START_TAG:{this._processStartTag(token);break;}case TokenType.END_TAG:{this.onEndTag(token);break;}case TokenType.EOF:{this.onEof(token);break;}case TokenType.WHITESPACE_CHARACTER:{this.onWhitespaceCharacter(token);break;}}}//Integration points
},{key:"_isIntegrationPoint",value:function _isIntegrationPoint(tid,element,foreignNS){var ns=this.treeAdapter.getNamespaceURI(element);var attrs=this.treeAdapter.getAttrList(element);return isIntegrationPoint(tid,ns,attrs,foreignNS);}//Active formatting elements reconstruction
},{key:"_reconstructActiveFormattingElements",value:function _reconstructActiveFormattingElements(){var _this32=this;var listLength=this.activeFormattingElements.entries.length;if(listLength){var endIndex=this.activeFormattingElements.entries.findIndex(function(entry){return entry.type===EntryType.Marker||_this32.openElements.contains(entry.element);});var unopenIdx=endIndex<0?listLength-1:endIndex-1;for(var _i59=unopenIdx;_i59>=0;_i59--){var entry=this.activeFormattingElements.entries[_i59];this._insertElement(entry.token,this.treeAdapter.getNamespaceURI(entry.element));entry.element=this.openElements.current;}}}//Close elements
},{key:"_closeTableCell",value:function _closeTableCell(){this.openElements.generateImpliedEndTags();this.openElements.popUntilTableCellPopped();this.activeFormattingElements.clearToLastMarker();this.insertionMode=InsertionMode.IN_ROW;}},{key:"_closePElement",value:function _closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);this.openElements.popUntilTagNamePopped(TAG_ID.P);}//Insertion modes
},{key:"_resetInsertionMode",value:function _resetInsertionMode(){for(var _i60=this.openElements.stackTop;_i60>=0;_i60--){//Insertion mode reset map
switch(_i60===0&&this.fragmentContext?this.fragmentContextID:this.openElements.tagIDs[_i60]){case TAG_ID.TR:{this.insertionMode=InsertionMode.IN_ROW;return;}case TAG_ID.TBODY:case TAG_ID.THEAD:case TAG_ID.TFOOT:{this.insertionMode=InsertionMode.IN_TABLE_BODY;return;}case TAG_ID.CAPTION:{this.insertionMode=InsertionMode.IN_CAPTION;return;}case TAG_ID.COLGROUP:{this.insertionMode=InsertionMode.IN_COLUMN_GROUP;return;}case TAG_ID.TABLE:{this.insertionMode=InsertionMode.IN_TABLE;return;}case TAG_ID.BODY:{this.insertionMode=InsertionMode.IN_BODY;return;}case TAG_ID.FRAMESET:{this.insertionMode=InsertionMode.IN_FRAMESET;return;}case TAG_ID.SELECT:{this._resetInsertionModeForSelect(_i60);return;}case TAG_ID.TEMPLATE:{this.insertionMode=this.tmplInsertionModeStack[0];return;}case TAG_ID.HTML:{this.insertionMode=this.headElement?InsertionMode.AFTER_HEAD:InsertionMode.BEFORE_HEAD;return;}case TAG_ID.TD:case TAG_ID.TH:{if(_i60>0){this.insertionMode=InsertionMode.IN_CELL;return;}break;}case TAG_ID.HEAD:{if(_i60>0){this.insertionMode=InsertionMode.IN_HEAD;return;}break;}}}this.insertionMode=InsertionMode.IN_BODY;}},{key:"_resetInsertionModeForSelect",value:function _resetInsertionModeForSelect(selectIdx){if(selectIdx>0){for(var _i61=selectIdx-1;_i61>0;_i61--){var _tn9=this.openElements.tagIDs[_i61];if(_tn9===TAG_ID.TEMPLATE){break;}else if(_tn9===TAG_ID.TABLE){this.insertionMode=InsertionMode.IN_SELECT_IN_TABLE;return;}}}this.insertionMode=InsertionMode.IN_SELECT;}//Foster parenting
},{key:"_isElementCausesFosterParenting",value:function _isElementCausesFosterParenting(tn){return TABLE_STRUCTURE_TAGS.has(tn);}},{key:"_shouldFosterParentOnInsertion",value:function _shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.currentTagId);}},{key:"_findFosterParentingLocation",value:function _findFosterParentingLocation(){for(var _i62=this.openElements.stackTop;_i62>=0;_i62--){var openElement=this.openElements.items[_i62];switch(this.openElements.tagIDs[_i62]){case TAG_ID.TEMPLATE:{if(this.treeAdapter.getNamespaceURI(openElement)===NS.HTML){return{parent:this.treeAdapter.getTemplateContent(openElement),beforeElement:null};}break;}case TAG_ID.TABLE:{var _parent3=this.treeAdapter.getParentNode(openElement);if(_parent3){return{parent:_parent3,beforeElement:openElement};}return{parent:this.openElements.items[_i62-1],beforeElement:null};}// Do nothing
}}return{parent:this.openElements.items[0],beforeElement:null};}},{key:"_fosterParentElement",value:function _fosterParentElement(element){var location=this._findFosterParentingLocation();if(location.beforeElement){this.treeAdapter.insertBefore(location.parent,element,location.beforeElement);}else{this.treeAdapter.appendChild(location.parent,element);}}//Special elements
},{key:"_isSpecialElement",value:function _isSpecialElement(element,id){var ns=this.treeAdapter.getNamespaceURI(element);return SPECIAL_ELEMENTS[ns].has(id);}},{key:"onCharacter",value:function onCharacter(token){this.skipNextNewLine=false;if(this.tokenizer.inForeignNode){characterInForeignContent(this,token);return;}switch(this.insertionMode){case InsertionMode.INITIAL:{tokenInInitialMode(this,token);break;}case InsertionMode.BEFORE_HTML:{tokenBeforeHtml(this,token);break;}case InsertionMode.BEFORE_HEAD:{tokenBeforeHead(this,token);break;}case InsertionMode.IN_HEAD:{tokenInHead(this,token);break;}case InsertionMode.IN_HEAD_NO_SCRIPT:{tokenInHeadNoScript(this,token);break;}case InsertionMode.AFTER_HEAD:{tokenAfterHead(this,token);break;}case InsertionMode.IN_BODY:case InsertionMode.IN_CAPTION:case InsertionMode.IN_CELL:case InsertionMode.IN_TEMPLATE:{characterInBody(this,token);break;}case InsertionMode.TEXT:case InsertionMode.IN_SELECT:case InsertionMode.IN_SELECT_IN_TABLE:{this._insertCharacters(token);break;}case InsertionMode.IN_TABLE:case InsertionMode.IN_TABLE_BODY:case InsertionMode.IN_ROW:{characterInTable(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{characterInTableText(this,token);break;}case InsertionMode.IN_COLUMN_GROUP:{tokenInColumnGroup(this,token);break;}case InsertionMode.AFTER_BODY:{tokenAfterBody(this,token);break;}case InsertionMode.AFTER_AFTER_BODY:{tokenAfterAfterBody(this,token);break;}// Do nothing
}}},{key:"onNullCharacter",value:function onNullCharacter(token){this.skipNextNewLine=false;if(this.tokenizer.inForeignNode){nullCharacterInForeignContent(this,token);return;}switch(this.insertionMode){case InsertionMode.INITIAL:{tokenInInitialMode(this,token);break;}case InsertionMode.BEFORE_HTML:{tokenBeforeHtml(this,token);break;}case InsertionMode.BEFORE_HEAD:{tokenBeforeHead(this,token);break;}case InsertionMode.IN_HEAD:{tokenInHead(this,token);break;}case InsertionMode.IN_HEAD_NO_SCRIPT:{tokenInHeadNoScript(this,token);break;}case InsertionMode.AFTER_HEAD:{tokenAfterHead(this,token);break;}case InsertionMode.TEXT:{this._insertCharacters(token);break;}case InsertionMode.IN_TABLE:case InsertionMode.IN_TABLE_BODY:case InsertionMode.IN_ROW:{characterInTable(this,token);break;}case InsertionMode.IN_COLUMN_GROUP:{tokenInColumnGroup(this,token);break;}case InsertionMode.AFTER_BODY:{tokenAfterBody(this,token);break;}case InsertionMode.AFTER_AFTER_BODY:{tokenAfterAfterBody(this,token);break;}// Do nothing
}}},{key:"onComment",value:function onComment(token){this.skipNextNewLine=false;if(this.currentNotInHTML){appendComment(this,token);return;}switch(this.insertionMode){case InsertionMode.INITIAL:case InsertionMode.BEFORE_HTML:case InsertionMode.BEFORE_HEAD:case InsertionMode.IN_HEAD:case InsertionMode.IN_HEAD_NO_SCRIPT:case InsertionMode.AFTER_HEAD:case InsertionMode.IN_BODY:case InsertionMode.IN_TABLE:case InsertionMode.IN_CAPTION:case InsertionMode.IN_COLUMN_GROUP:case InsertionMode.IN_TABLE_BODY:case InsertionMode.IN_ROW:case InsertionMode.IN_CELL:case InsertionMode.IN_SELECT:case InsertionMode.IN_SELECT_IN_TABLE:case InsertionMode.IN_TEMPLATE:case InsertionMode.IN_FRAMESET:case InsertionMode.AFTER_FRAMESET:{appendComment(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{tokenInTableText(this,token);break;}case InsertionMode.AFTER_BODY:{appendCommentToRootHtmlElement(this,token);break;}case InsertionMode.AFTER_AFTER_BODY:case InsertionMode.AFTER_AFTER_FRAMESET:{appendCommentToDocument(this,token);break;}// Do nothing
}}},{key:"onDoctype",value:function onDoctype(token){this.skipNextNewLine=false;switch(this.insertionMode){case InsertionMode.INITIAL:{doctypeInInitialMode(this,token);break;}case InsertionMode.BEFORE_HEAD:case InsertionMode.IN_HEAD:case InsertionMode.IN_HEAD_NO_SCRIPT:case InsertionMode.AFTER_HEAD:{this._err(token,ERR.misplacedDoctype);break;}case InsertionMode.IN_TABLE_TEXT:{tokenInTableText(this,token);break;}// Do nothing
}}},{key:"onStartTag",value:function onStartTag(token){this.skipNextNewLine=false;this.currentToken=token;this._processStartTag(token);if(token.selfClosing&&!token.ackSelfClosing){this._err(token,ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);}}/**
           * Processes a given start tag.
           *
           * `onStartTag` checks if a self-closing tag was recognized. When a token
           * is moved inbetween multiple insertion modes, this check for self-closing
           * could lead to false positives. To avoid this, `_processStartTag` is used
           * for nested calls.
           *
           * @param token The token to process.
           */},{key:"_processStartTag",value:function _processStartTag(token){if(this.shouldProcessStartTagTokenInForeignContent(token)){startTagInForeignContent(this,token);}else{this._startTagOutsideForeignContent(token);}}},{key:"_startTagOutsideForeignContent",value:function _startTagOutsideForeignContent(token){switch(this.insertionMode){case InsertionMode.INITIAL:{tokenInInitialMode(this,token);break;}case InsertionMode.BEFORE_HTML:{startTagBeforeHtml(this,token);break;}case InsertionMode.BEFORE_HEAD:{startTagBeforeHead(this,token);break;}case InsertionMode.IN_HEAD:{startTagInHead(this,token);break;}case InsertionMode.IN_HEAD_NO_SCRIPT:{startTagInHeadNoScript(this,token);break;}case InsertionMode.AFTER_HEAD:{startTagAfterHead(this,token);break;}case InsertionMode.IN_BODY:{startTagInBody(this,token);break;}case InsertionMode.IN_TABLE:{startTagInTable(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{tokenInTableText(this,token);break;}case InsertionMode.IN_CAPTION:{startTagInCaption(this,token);break;}case InsertionMode.IN_COLUMN_GROUP:{startTagInColumnGroup(this,token);break;}case InsertionMode.IN_TABLE_BODY:{startTagInTableBody(this,token);break;}case InsertionMode.IN_ROW:{startTagInRow(this,token);break;}case InsertionMode.IN_CELL:{startTagInCell(this,token);break;}case InsertionMode.IN_SELECT:{startTagInSelect(this,token);break;}case InsertionMode.IN_SELECT_IN_TABLE:{startTagInSelectInTable(this,token);break;}case InsertionMode.IN_TEMPLATE:{startTagInTemplate(this,token);break;}case InsertionMode.AFTER_BODY:{startTagAfterBody(this,token);break;}case InsertionMode.IN_FRAMESET:{startTagInFrameset(this,token);break;}case InsertionMode.AFTER_FRAMESET:{startTagAfterFrameset(this,token);break;}case InsertionMode.AFTER_AFTER_BODY:{startTagAfterAfterBody(this,token);break;}case InsertionMode.AFTER_AFTER_FRAMESET:{startTagAfterAfterFrameset(this,token);break;}// Do nothing
}}},{key:"onEndTag",value:function onEndTag(token){this.skipNextNewLine=false;this.currentToken=token;if(this.currentNotInHTML){endTagInForeignContent(this,token);}else{this._endTagOutsideForeignContent(token);}}},{key:"_endTagOutsideForeignContent",value:function _endTagOutsideForeignContent(token){switch(this.insertionMode){case InsertionMode.INITIAL:{tokenInInitialMode(this,token);break;}case InsertionMode.BEFORE_HTML:{endTagBeforeHtml(this,token);break;}case InsertionMode.BEFORE_HEAD:{endTagBeforeHead(this,token);break;}case InsertionMode.IN_HEAD:{endTagInHead(this,token);break;}case InsertionMode.IN_HEAD_NO_SCRIPT:{endTagInHeadNoScript(this,token);break;}case InsertionMode.AFTER_HEAD:{endTagAfterHead(this,token);break;}case InsertionMode.IN_BODY:{endTagInBody(this,token);break;}case InsertionMode.TEXT:{endTagInText(this,token);break;}case InsertionMode.IN_TABLE:{endTagInTable(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{tokenInTableText(this,token);break;}case InsertionMode.IN_CAPTION:{endTagInCaption(this,token);break;}case InsertionMode.IN_COLUMN_GROUP:{endTagInColumnGroup(this,token);break;}case InsertionMode.IN_TABLE_BODY:{endTagInTableBody(this,token);break;}case InsertionMode.IN_ROW:{endTagInRow(this,token);break;}case InsertionMode.IN_CELL:{endTagInCell(this,token);break;}case InsertionMode.IN_SELECT:{endTagInSelect(this,token);break;}case InsertionMode.IN_SELECT_IN_TABLE:{endTagInSelectInTable(this,token);break;}case InsertionMode.IN_TEMPLATE:{endTagInTemplate(this,token);break;}case InsertionMode.AFTER_BODY:{endTagAfterBody(this,token);break;}case InsertionMode.IN_FRAMESET:{endTagInFrameset(this,token);break;}case InsertionMode.AFTER_FRAMESET:{endTagAfterFrameset(this,token);break;}case InsertionMode.AFTER_AFTER_BODY:{tokenAfterAfterBody(this,token);break;}// Do nothing
}}},{key:"onEof",value:function onEof(token){switch(this.insertionMode){case InsertionMode.INITIAL:{tokenInInitialMode(this,token);break;}case InsertionMode.BEFORE_HTML:{tokenBeforeHtml(this,token);break;}case InsertionMode.BEFORE_HEAD:{tokenBeforeHead(this,token);break;}case InsertionMode.IN_HEAD:{tokenInHead(this,token);break;}case InsertionMode.IN_HEAD_NO_SCRIPT:{tokenInHeadNoScript(this,token);break;}case InsertionMode.AFTER_HEAD:{tokenAfterHead(this,token);break;}case InsertionMode.IN_BODY:case InsertionMode.IN_TABLE:case InsertionMode.IN_CAPTION:case InsertionMode.IN_COLUMN_GROUP:case InsertionMode.IN_TABLE_BODY:case InsertionMode.IN_ROW:case InsertionMode.IN_CELL:case InsertionMode.IN_SELECT:case InsertionMode.IN_SELECT_IN_TABLE:{eofInBody(this,token);break;}case InsertionMode.TEXT:{eofInText(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{tokenInTableText(this,token);break;}case InsertionMode.IN_TEMPLATE:{eofInTemplate(this,token);break;}case InsertionMode.AFTER_BODY:case InsertionMode.IN_FRAMESET:case InsertionMode.AFTER_FRAMESET:case InsertionMode.AFTER_AFTER_BODY:case InsertionMode.AFTER_AFTER_FRAMESET:{stopParsing(this,token);break;}// Do nothing
}}},{key:"onWhitespaceCharacter",value:function onWhitespaceCharacter(token){if(this.skipNextNewLine){this.skipNextNewLine=false;if(token.chars.charCodeAt(0)===CODE_POINTS.LINE_FEED){if(token.chars.length===1){return;}token.chars=token.chars.substr(1);}}if(this.tokenizer.inForeignNode){this._insertCharacters(token);return;}switch(this.insertionMode){case InsertionMode.IN_HEAD:case InsertionMode.IN_HEAD_NO_SCRIPT:case InsertionMode.AFTER_HEAD:case InsertionMode.TEXT:case InsertionMode.IN_COLUMN_GROUP:case InsertionMode.IN_SELECT:case InsertionMode.IN_SELECT_IN_TABLE:case InsertionMode.IN_FRAMESET:case InsertionMode.AFTER_FRAMESET:{this._insertCharacters(token);break;}case InsertionMode.IN_BODY:case InsertionMode.IN_CAPTION:case InsertionMode.IN_CELL:case InsertionMode.IN_TEMPLATE:case InsertionMode.AFTER_BODY:case InsertionMode.AFTER_AFTER_BODY:case InsertionMode.AFTER_AFTER_FRAMESET:{whitespaceCharacterInBody(this,token);break;}case InsertionMode.IN_TABLE:case InsertionMode.IN_TABLE_BODY:case InsertionMode.IN_ROW:{characterInTable(this,token);break;}case InsertionMode.IN_TABLE_TEXT:{whitespaceCharacterInTableText(this,token);break;}// Do nothing
}}}],[{key:"parse",value:function parse(html,options){var parser=new this(options);parser.tokenizer.write(html,true);return parser.document;}},{key:"getFragmentParser",value:function getFragmentParser(fragmentContext,options){var opts=_objectSpread(_objectSpread({},defaultParserOptions),options);//NOTE: use a <template> element as the fragment context if no context element was provided,
//so we will parse in a "forgiving" manner
fragmentContext!==null&&fragmentContext!==void 0?fragmentContext:fragmentContext=opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE,NS.HTML,[]);//NOTE: create a fake element which will be used as the `document` for fragment parsing.
//This is important for jsdom, where a new `document` cannot be created. This led to
//fragment parsing messing with the main `document`.
var documentMock=opts.treeAdapter.createElement('documentmock',NS.HTML,[]);var parser=new this(opts,documentMock,fragmentContext);if(parser.fragmentContextID===TAG_ID.TEMPLATE){parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);}parser._initTokenizerForFragmentParsing();parser._insertFakeRootElement();parser._resetInsertionMode();parser._findFormInFragmentContext();return parser;}}]);return Parser$2;}();//Adoption agency algorithm
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
//------------------------------------------------------------------
//Steps 5-8 of the algorithm
function aaObtainFormattingElementEntry(p,token){var formattingElementEntry=p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);if(formattingElementEntry){if(!p.openElements.contains(formattingElementEntry.element)){p.activeFormattingElements.removeEntry(formattingElementEntry);formattingElementEntry=null;}else if(!p.openElements.hasInScope(token.tagID)){formattingElementEntry=null;}}else{genericEndTagInBody(p,token);}return formattingElementEntry;}//Steps 9 and 10 of the algorithm
function aaObtainFurthestBlock(p,formattingElementEntry){var furthestBlock=null;var idx=p.openElements.stackTop;for(;idx>=0;idx--){var element=p.openElements.items[idx];if(element===formattingElementEntry.element){break;}if(p._isSpecialElement(element,p.openElements.tagIDs[idx])){furthestBlock=element;}}if(!furthestBlock){p.openElements.shortenToLength(idx<0?0:idx);p.activeFormattingElements.removeEntry(formattingElementEntry);}return furthestBlock;}//Step 13 of the algorithm
function aaInnerLoop(p,furthestBlock,formattingElement){var lastElement=furthestBlock;var nextElement=p.openElements.getCommonAncestor(furthestBlock);for(var _i63=0,element=nextElement;element!==formattingElement;_i63++,element=nextElement){//NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)
nextElement=p.openElements.getCommonAncestor(element);var elementEntry=p.activeFormattingElements.getElementEntry(element);var counterOverflow=elementEntry&&_i63>=AA_INNER_LOOP_ITER;var shouldRemoveFromOpenElements=!elementEntry||counterOverflow;if(shouldRemoveFromOpenElements){if(counterOverflow){p.activeFormattingElements.removeEntry(elementEntry);}p.openElements.remove(element);}else{element=aaRecreateElementFromEntry(p,elementEntry);if(lastElement===furthestBlock){p.activeFormattingElements.bookmark=elementEntry;}p.treeAdapter.detachNode(lastElement);p.treeAdapter.appendChild(element,lastElement);lastElement=element;}}return lastElement;}//Step 13.7 of the algorithm
function aaRecreateElementFromEntry(p,elementEntry){var ns=p.treeAdapter.getNamespaceURI(elementEntry.element);var newElement=p.treeAdapter.createElement(elementEntry.token.tagName,ns,elementEntry.token.attrs);p.openElements.replace(elementEntry.element,newElement);elementEntry.element=newElement;return newElement;}//Step 14 of the algorithm
function aaInsertLastNodeInCommonAncestor(p,commonAncestor,lastElement){var tn=p.treeAdapter.getTagName(commonAncestor);var tid=getTagID(tn);if(p._isElementCausesFosterParenting(tid)){p._fosterParentElement(lastElement);}else{var ns=p.treeAdapter.getNamespaceURI(commonAncestor);if(tid===TAG_ID.TEMPLATE&&ns===NS.HTML){commonAncestor=p.treeAdapter.getTemplateContent(commonAncestor);}p.treeAdapter.appendChild(commonAncestor,lastElement);}}//Steps 15-19 of the algorithm
function aaReplaceFormattingElement(p,furthestBlock,formattingElementEntry){var ns=p.treeAdapter.getNamespaceURI(formattingElementEntry.element);var token=formattingElementEntry.token;var newElement=p.treeAdapter.createElement(token.tagName,ns,token.attrs);p._adoptNodes(furthestBlock,newElement);p.treeAdapter.appendChild(furthestBlock,newElement);p.activeFormattingElements.insertElementAfterBookmark(newElement,token);p.activeFormattingElements.removeEntry(formattingElementEntry);p.openElements.remove(formattingElementEntry.element);p.openElements.insertAfter(furthestBlock,newElement,token.tagID);}//Algorithm entry point
function callAdoptionAgency(p,token){for(var _i64=0;_i64<AA_OUTER_LOOP_ITER;_i64++){var formattingElementEntry=aaObtainFormattingElementEntry(p,token);if(!formattingElementEntry){break;}var furthestBlock=aaObtainFurthestBlock(p,formattingElementEntry);if(!furthestBlock){break;}p.activeFormattingElements.bookmark=formattingElementEntry;var lastElement=aaInnerLoop(p,furthestBlock,formattingElementEntry.element);var commonAncestor=p.openElements.getCommonAncestor(formattingElementEntry.element);p.treeAdapter.detachNode(lastElement);if(commonAncestor)aaInsertLastNodeInCommonAncestor(p,commonAncestor,lastElement);aaReplaceFormattingElement(p,furthestBlock,formattingElementEntry);}}//Generic token handlers
//------------------------------------------------------------------
function appendComment(p,token){p._appendCommentNode(token,p.openElements.currentTmplContentOrNode);}function appendCommentToRootHtmlElement(p,token){p._appendCommentNode(token,p.openElements.items[0]);}function appendCommentToDocument(p,token){p._appendCommentNode(token,p.document);}function stopParsing(p,token){p.stopped=true;// NOTE: Set end locations for elements that remain on the open element stack.
if(token.location){// NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.
// This is a problem, as we might overwrite their end position here.
var target=p.fragmentContext?0:2;for(var _i65=p.openElements.stackTop;_i65>=target;_i65--){p._setEndLocation(p.openElements.items[_i65],token);}// Handle `html` and `body`
if(!p.fragmentContext&&p.openElements.stackTop>=0){var htmlElement=p.openElements.items[0];var htmlLocation=p.treeAdapter.getNodeSourceCodeLocation(htmlElement);if(htmlLocation&&!htmlLocation.endTag){p._setEndLocation(htmlElement,token);if(p.openElements.stackTop>=1){var bodyElement=p.openElements.items[1];var bodyLocation=p.treeAdapter.getNodeSourceCodeLocation(bodyElement);if(bodyLocation&&!bodyLocation.endTag){p._setEndLocation(bodyElement,token);}}}}}}// The "initial" insertion mode
//------------------------------------------------------------------
function doctypeInInitialMode(p,token){p._setDocumentType(token);var mode=token.forceQuirks?DOCUMENT_MODE.QUIRKS:getDocumentMode(token);if(!isConforming(token)){p._err(token,ERR.nonConformingDoctype);}p.treeAdapter.setDocumentMode(p.document,mode);p.insertionMode=InsertionMode.BEFORE_HTML;}function tokenInInitialMode(p,token){p._err(token,ERR.missingDoctype,true);p.treeAdapter.setDocumentMode(p.document,DOCUMENT_MODE.QUIRKS);p.insertionMode=InsertionMode.BEFORE_HTML;p._processToken(token);}// The "before html" insertion mode
//------------------------------------------------------------------
function startTagBeforeHtml(p,token){if(token.tagID===TAG_ID.HTML){p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.BEFORE_HEAD;}else{tokenBeforeHtml(p,token);}}function endTagBeforeHtml(p,token){var tn=token.tagID;if(tn===TAG_ID.HTML||tn===TAG_ID.HEAD||tn===TAG_ID.BODY||tn===TAG_ID.BR){tokenBeforeHtml(p,token);}}function tokenBeforeHtml(p,token){p._insertFakeRootElement();p.insertionMode=InsertionMode.BEFORE_HEAD;p._processToken(token);}// The "before head" insertion mode
//------------------------------------------------------------------
function startTagBeforeHead(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.HEAD:{p._insertElement(token,NS.HTML);p.headElement=p.openElements.current;p.insertionMode=InsertionMode.IN_HEAD;break;}default:{tokenBeforeHead(p,token);}}}function endTagBeforeHead(p,token){var tn=token.tagID;if(tn===TAG_ID.HEAD||tn===TAG_ID.BODY||tn===TAG_ID.HTML||tn===TAG_ID.BR){tokenBeforeHead(p,token);}else{p._err(token,ERR.endTagWithoutMatchingOpenElement);}}function tokenBeforeHead(p,token){p._insertFakeElement(TAG_NAMES.HEAD,TAG_ID.HEAD);p.headElement=p.openElements.current;p.insertionMode=InsertionMode.IN_HEAD;p._processToken(token);}// The "in head" insertion mode
//------------------------------------------------------------------
function startTagInHead(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.BASE:case TAG_ID.BASEFONT:case TAG_ID.BGSOUND:case TAG_ID.LINK:case TAG_ID.META:{p._appendElement(token,NS.HTML);token.ackSelfClosing=true;break;}case TAG_ID.TITLE:{p._switchToTextParsing(token,TokenizerMode.RCDATA);break;}case TAG_ID.NOSCRIPT:{if(p.options.scriptingEnabled){p._switchToTextParsing(token,TokenizerMode.RAWTEXT);}else{p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_HEAD_NO_SCRIPT;}break;}case TAG_ID.NOFRAMES:case TAG_ID.STYLE:{p._switchToTextParsing(token,TokenizerMode.RAWTEXT);break;}case TAG_ID.SCRIPT:{p._switchToTextParsing(token,TokenizerMode.SCRIPT_DATA);break;}case TAG_ID.TEMPLATE:{p._insertTemplate(token);p.activeFormattingElements.insertMarker();p.framesetOk=false;p.insertionMode=InsertionMode.IN_TEMPLATE;p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);break;}case TAG_ID.HEAD:{p._err(token,ERR.misplacedStartTagForHeadElement);break;}default:{tokenInHead(p,token);}}}function endTagInHead(p,token){switch(token.tagID){case TAG_ID.HEAD:{p.openElements.pop();p.insertionMode=InsertionMode.AFTER_HEAD;break;}case TAG_ID.BODY:case TAG_ID.BR:case TAG_ID.HTML:{tokenInHead(p,token);break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}default:{p._err(token,ERR.endTagWithoutMatchingOpenElement);}}}function templateEndTagInHead(p,token){if(p.openElements.tmplCount>0){p.openElements.generateImpliedEndTagsThoroughly();if(p.openElements.currentTagId!==TAG_ID.TEMPLATE){p._err(token,ERR.closingOfElementWithOpenChildElements);}p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);p.activeFormattingElements.clearToLastMarker();p.tmplInsertionModeStack.shift();p._resetInsertionMode();}else{p._err(token,ERR.endTagWithoutMatchingOpenElement);}}function tokenInHead(p,token){p.openElements.pop();p.insertionMode=InsertionMode.AFTER_HEAD;p._processToken(token);}// The "in head no script" insertion mode
//------------------------------------------------------------------
function startTagInHeadNoScript(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.BASEFONT:case TAG_ID.BGSOUND:case TAG_ID.HEAD:case TAG_ID.LINK:case TAG_ID.META:case TAG_ID.NOFRAMES:case TAG_ID.STYLE:{startTagInHead(p,token);break;}case TAG_ID.NOSCRIPT:{p._err(token,ERR.nestedNoscriptInHead);break;}default:{tokenInHeadNoScript(p,token);}}}function endTagInHeadNoScript(p,token){switch(token.tagID){case TAG_ID.NOSCRIPT:{p.openElements.pop();p.insertionMode=InsertionMode.IN_HEAD;break;}case TAG_ID.BR:{tokenInHeadNoScript(p,token);break;}default:{p._err(token,ERR.endTagWithoutMatchingOpenElement);}}}function tokenInHeadNoScript(p,token){var errCode=token.type===TokenType.EOF?ERR.openElementsLeftAfterEof:ERR.disallowedContentInNoscriptInHead;p._err(token,errCode);p.openElements.pop();p.insertionMode=InsertionMode.IN_HEAD;p._processToken(token);}// The "after head" insertion mode
//------------------------------------------------------------------
function startTagAfterHead(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.BODY:{p._insertElement(token,NS.HTML);p.framesetOk=false;p.insertionMode=InsertionMode.IN_BODY;break;}case TAG_ID.FRAMESET:{p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_FRAMESET;break;}case TAG_ID.BASE:case TAG_ID.BASEFONT:case TAG_ID.BGSOUND:case TAG_ID.LINK:case TAG_ID.META:case TAG_ID.NOFRAMES:case TAG_ID.SCRIPT:case TAG_ID.STYLE:case TAG_ID.TEMPLATE:case TAG_ID.TITLE:{p._err(token,ERR.abandonedHeadElementChild);p.openElements.push(p.headElement,TAG_ID.HEAD);startTagInHead(p,token);p.openElements.remove(p.headElement);break;}case TAG_ID.HEAD:{p._err(token,ERR.misplacedStartTagForHeadElement);break;}default:{tokenAfterHead(p,token);}}}function endTagAfterHead(p,token){switch(token.tagID){case TAG_ID.BODY:case TAG_ID.HTML:case TAG_ID.BR:{tokenAfterHead(p,token);break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}default:{p._err(token,ERR.endTagWithoutMatchingOpenElement);}}}function tokenAfterHead(p,token){p._insertFakeElement(TAG_NAMES.BODY,TAG_ID.BODY);p.insertionMode=InsertionMode.IN_BODY;modeInBody(p,token);}// The "in body" insertion mode
//------------------------------------------------------------------
function modeInBody(p,token){switch(token.type){case TokenType.CHARACTER:{characterInBody(p,token);break;}case TokenType.WHITESPACE_CHARACTER:{whitespaceCharacterInBody(p,token);break;}case TokenType.COMMENT:{appendComment(p,token);break;}case TokenType.START_TAG:{startTagInBody(p,token);break;}case TokenType.END_TAG:{endTagInBody(p,token);break;}case TokenType.EOF:{eofInBody(p,token);break;}// Do nothing
}}function whitespaceCharacterInBody(p,token){p._reconstructActiveFormattingElements();p._insertCharacters(token);}function characterInBody(p,token){p._reconstructActiveFormattingElements();p._insertCharacters(token);p.framesetOk=false;}function htmlStartTagInBody(p,token){if(p.openElements.tmplCount===0){p.treeAdapter.adoptAttributes(p.openElements.items[0],token.attrs);}}function bodyStartTagInBody(p,token){var bodyElement=p.openElements.tryPeekProperlyNestedBodyElement();if(bodyElement&&p.openElements.tmplCount===0){p.framesetOk=false;p.treeAdapter.adoptAttributes(bodyElement,token.attrs);}}function framesetStartTagInBody(p,token){var bodyElement=p.openElements.tryPeekProperlyNestedBodyElement();if(p.framesetOk&&bodyElement){p.treeAdapter.detachNode(bodyElement);p.openElements.popAllUpToHtmlElement();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_FRAMESET;}}function addressStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);}function numberedHeaderStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}if(isNumberedHeader(p.openElements.currentTagId)){p.openElements.pop();}p._insertElement(token,NS.HTML);}function preStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);//NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
//on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
p.skipNextNewLine=true;p.framesetOk=false;}function formStartTagInBody(p,token){var inTemplate=p.openElements.tmplCount>0;if(!p.formElement||inTemplate){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);if(!inTemplate){p.formElement=p.openElements.current;}}}function listItemStartTagInBody(p,token){p.framesetOk=false;var tn=token.tagID;for(var _i66=p.openElements.stackTop;_i66>=0;_i66--){var elementId=p.openElements.tagIDs[_i66];if(tn===TAG_ID.LI&&elementId===TAG_ID.LI||(tn===TAG_ID.DD||tn===TAG_ID.DT)&&(elementId===TAG_ID.DD||elementId===TAG_ID.DT)){p.openElements.generateImpliedEndTagsWithExclusion(elementId);p.openElements.popUntilTagNamePopped(elementId);break;}if(elementId!==TAG_ID.ADDRESS&&elementId!==TAG_ID.DIV&&elementId!==TAG_ID.P&&p._isSpecialElement(p.openElements.items[_i66],elementId)){break;}}if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);}function plaintextStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);p.tokenizer.state=TokenizerMode.PLAINTEXT;}function buttonStartTagInBody(p,token){if(p.openElements.hasInScope(TAG_ID.BUTTON)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);}p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);p.framesetOk=false;}function aStartTagInBody(p,token){var activeElementEntry=p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);if(activeElementEntry){callAdoptionAgency(p,token);p.openElements.remove(activeElementEntry.element);p.activeFormattingElements.removeEntry(activeElementEntry);}p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);p.activeFormattingElements.pushElement(p.openElements.current,token);}function bStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);p.activeFormattingElements.pushElement(p.openElements.current,token);}function nobrStartTagInBody(p,token){p._reconstructActiveFormattingElements();if(p.openElements.hasInScope(TAG_ID.NOBR)){callAdoptionAgency(p,token);p._reconstructActiveFormattingElements();}p._insertElement(token,NS.HTML);p.activeFormattingElements.pushElement(p.openElements.current,token);}function appletStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);p.activeFormattingElements.insertMarker();p.framesetOk=false;}function tableStartTagInBody(p,token){if(p.treeAdapter.getDocumentMode(p.document)!==DOCUMENT_MODE.QUIRKS&&p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._insertElement(token,NS.HTML);p.framesetOk=false;p.insertionMode=InsertionMode.IN_TABLE;}function areaStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._appendElement(token,NS.HTML);p.framesetOk=false;token.ackSelfClosing=true;}function isHiddenInput(token){var inputType=getTokenAttr(token,ATTRS.TYPE);return inputType!=null&&inputType.toLowerCase()===HIDDEN_INPUT_TYPE;}function inputStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._appendElement(token,NS.HTML);if(!isHiddenInput(token)){p.framesetOk=false;}token.ackSelfClosing=true;}function paramStartTagInBody(p,token){p._appendElement(token,NS.HTML);token.ackSelfClosing=true;}function hrStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._appendElement(token,NS.HTML);p.framesetOk=false;token.ackSelfClosing=true;}function imageStartTagInBody(p,token){token.tagName=TAG_NAMES.IMG;token.tagID=TAG_ID.IMG;areaStartTagInBody(p,token);}function textareaStartTagInBody(p,token){p._insertElement(token,NS.HTML);//NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
//on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
p.skipNextNewLine=true;p.tokenizer.state=TokenizerMode.RCDATA;p.originalInsertionMode=p.insertionMode;p.framesetOk=false;p.insertionMode=InsertionMode.TEXT;}function xmpStartTagInBody(p,token){if(p.openElements.hasInButtonScope(TAG_ID.P)){p._closePElement();}p._reconstructActiveFormattingElements();p.framesetOk=false;p._switchToTextParsing(token,TokenizerMode.RAWTEXT);}function iframeStartTagInBody(p,token){p.framesetOk=false;p._switchToTextParsing(token,TokenizerMode.RAWTEXT);}//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
//<noembed> as rawtext.
function noembedStartTagInBody(p,token){p._switchToTextParsing(token,TokenizerMode.RAWTEXT);}function selectStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);p.framesetOk=false;p.insertionMode=p.insertionMode===InsertionMode.IN_TABLE||p.insertionMode===InsertionMode.IN_CAPTION||p.insertionMode===InsertionMode.IN_TABLE_BODY||p.insertionMode===InsertionMode.IN_ROW||p.insertionMode===InsertionMode.IN_CELL?InsertionMode.IN_SELECT_IN_TABLE:InsertionMode.IN_SELECT;}function optgroupStartTagInBody(p,token){if(p.openElements.currentTagId===TAG_ID.OPTION){p.openElements.pop();}p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);}function rbStartTagInBody(p,token){if(p.openElements.hasInScope(TAG_ID.RUBY)){p.openElements.generateImpliedEndTags();}p._insertElement(token,NS.HTML);}function rtStartTagInBody(p,token){if(p.openElements.hasInScope(TAG_ID.RUBY)){p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);}p._insertElement(token,NS.HTML);}function mathStartTagInBody(p,token){p._reconstructActiveFormattingElements();adjustTokenMathMLAttrs(token);adjustTokenXMLAttrs(token);if(token.selfClosing){p._appendElement(token,NS.MATHML);}else{p._insertElement(token,NS.MATHML);}token.ackSelfClosing=true;}function svgStartTagInBody(p,token){p._reconstructActiveFormattingElements();adjustTokenSVGAttrs(token);adjustTokenXMLAttrs(token);if(token.selfClosing){p._appendElement(token,NS.SVG);}else{p._insertElement(token,NS.SVG);}token.ackSelfClosing=true;}function genericStartTagInBody(p,token){p._reconstructActiveFormattingElements();p._insertElement(token,NS.HTML);}function startTagInBody(p,token){switch(token.tagID){case TAG_ID.I:case TAG_ID.S:case TAG_ID.B:case TAG_ID.U:case TAG_ID.EM:case TAG_ID.TT:case TAG_ID.BIG:case TAG_ID.CODE:case TAG_ID.FONT:case TAG_ID.SMALL:case TAG_ID.STRIKE:case TAG_ID.STRONG:{bStartTagInBody(p,token);break;}case TAG_ID.A:{aStartTagInBody(p,token);break;}case TAG_ID.H1:case TAG_ID.H2:case TAG_ID.H3:case TAG_ID.H4:case TAG_ID.H5:case TAG_ID.H6:{numberedHeaderStartTagInBody(p,token);break;}case TAG_ID.P:case TAG_ID.DL:case TAG_ID.OL:case TAG_ID.UL:case TAG_ID.DIV:case TAG_ID.DIR:case TAG_ID.NAV:case TAG_ID.MAIN:case TAG_ID.MENU:case TAG_ID.ASIDE:case TAG_ID.CENTER:case TAG_ID.FIGURE:case TAG_ID.FOOTER:case TAG_ID.HEADER:case TAG_ID.HGROUP:case TAG_ID.DIALOG:case TAG_ID.DETAILS:case TAG_ID.ADDRESS:case TAG_ID.ARTICLE:case TAG_ID.SECTION:case TAG_ID.SUMMARY:case TAG_ID.FIELDSET:case TAG_ID.BLOCKQUOTE:case TAG_ID.FIGCAPTION:{addressStartTagInBody(p,token);break;}case TAG_ID.LI:case TAG_ID.DD:case TAG_ID.DT:{listItemStartTagInBody(p,token);break;}case TAG_ID.BR:case TAG_ID.IMG:case TAG_ID.WBR:case TAG_ID.AREA:case TAG_ID.EMBED:case TAG_ID.KEYGEN:{areaStartTagInBody(p,token);break;}case TAG_ID.HR:{hrStartTagInBody(p,token);break;}case TAG_ID.RB:case TAG_ID.RTC:{rbStartTagInBody(p,token);break;}case TAG_ID.RT:case TAG_ID.RP:{rtStartTagInBody(p,token);break;}case TAG_ID.PRE:case TAG_ID.LISTING:{preStartTagInBody(p,token);break;}case TAG_ID.XMP:{xmpStartTagInBody(p,token);break;}case TAG_ID.SVG:{svgStartTagInBody(p,token);break;}case TAG_ID.HTML:{htmlStartTagInBody(p,token);break;}case TAG_ID.BASE:case TAG_ID.LINK:case TAG_ID.META:case TAG_ID.STYLE:case TAG_ID.TITLE:case TAG_ID.SCRIPT:case TAG_ID.BGSOUND:case TAG_ID.BASEFONT:case TAG_ID.TEMPLATE:{startTagInHead(p,token);break;}case TAG_ID.BODY:{bodyStartTagInBody(p,token);break;}case TAG_ID.FORM:{formStartTagInBody(p,token);break;}case TAG_ID.NOBR:{nobrStartTagInBody(p,token);break;}case TAG_ID.MATH:{mathStartTagInBody(p,token);break;}case TAG_ID.TABLE:{tableStartTagInBody(p,token);break;}case TAG_ID.INPUT:{inputStartTagInBody(p,token);break;}case TAG_ID.PARAM:case TAG_ID.TRACK:case TAG_ID.SOURCE:{paramStartTagInBody(p,token);break;}case TAG_ID.IMAGE:{imageStartTagInBody(p,token);break;}case TAG_ID.BUTTON:{buttonStartTagInBody(p,token);break;}case TAG_ID.APPLET:case TAG_ID.OBJECT:case TAG_ID.MARQUEE:{appletStartTagInBody(p,token);break;}case TAG_ID.IFRAME:{iframeStartTagInBody(p,token);break;}case TAG_ID.SELECT:{selectStartTagInBody(p,token);break;}case TAG_ID.OPTION:case TAG_ID.OPTGROUP:{optgroupStartTagInBody(p,token);break;}case TAG_ID.NOEMBED:{noembedStartTagInBody(p,token);break;}case TAG_ID.FRAMESET:{framesetStartTagInBody(p,token);break;}case TAG_ID.TEXTAREA:{textareaStartTagInBody(p,token);break;}case TAG_ID.NOSCRIPT:{if(p.options.scriptingEnabled){noembedStartTagInBody(p,token);}else{genericStartTagInBody(p,token);}break;}case TAG_ID.PLAINTEXT:{plaintextStartTagInBody(p,token);break;}case TAG_ID.COL:case TAG_ID.TH:case TAG_ID.TD:case TAG_ID.TR:case TAG_ID.HEAD:case TAG_ID.FRAME:case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:case TAG_ID.CAPTION:case TAG_ID.COLGROUP:{// Ignore token
break;}default:{genericStartTagInBody(p,token);}}}function bodyEndTagInBody(p,token){if(p.openElements.hasInScope(TAG_ID.BODY)){p.insertionMode=InsertionMode.AFTER_BODY;//NOTE: <body> is never popped from the stack, so we need to updated
//the end location explicitly.
if(p.options.sourceCodeLocationInfo){var bodyElement=p.openElements.tryPeekProperlyNestedBodyElement();if(bodyElement){p._setEndLocation(bodyElement,token);}}}}function htmlEndTagInBody(p,token){if(p.openElements.hasInScope(TAG_ID.BODY)){p.insertionMode=InsertionMode.AFTER_BODY;endTagAfterBody(p,token);}}function addressEndTagInBody(p,token){var tn=token.tagID;if(p.openElements.hasInScope(tn)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(tn);}}function formEndTagInBody(p){var inTemplate=p.openElements.tmplCount>0;var formElement=p.formElement;if(!inTemplate){p.formElement=null;}if((formElement||inTemplate)&&p.openElements.hasInScope(TAG_ID.FORM)){p.openElements.generateImpliedEndTags();if(inTemplate){p.openElements.popUntilTagNamePopped(TAG_ID.FORM);}else if(formElement){p.openElements.remove(formElement);}}}function pEndTagInBody(p){if(!p.openElements.hasInButtonScope(TAG_ID.P)){p._insertFakeElement(TAG_NAMES.P,TAG_ID.P);}p._closePElement();}function liEndTagInBody(p){if(p.openElements.hasInListItemScope(TAG_ID.LI)){p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);p.openElements.popUntilTagNamePopped(TAG_ID.LI);}}function ddEndTagInBody(p,token){var tn=token.tagID;if(p.openElements.hasInScope(tn)){p.openElements.generateImpliedEndTagsWithExclusion(tn);p.openElements.popUntilTagNamePopped(tn);}}function numberedHeaderEndTagInBody(p){if(p.openElements.hasNumberedHeaderInScope()){p.openElements.generateImpliedEndTags();p.openElements.popUntilNumberedHeaderPopped();}}function appletEndTagInBody(p,token){var tn=token.tagID;if(p.openElements.hasInScope(tn)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(tn);p.activeFormattingElements.clearToLastMarker();}}function brEndTagInBody(p){p._reconstructActiveFormattingElements();p._insertFakeElement(TAG_NAMES.BR,TAG_ID.BR);p.openElements.pop();p.framesetOk=false;}function genericEndTagInBody(p,token){var tn=token.tagName;var tid=token.tagID;for(var _i67=p.openElements.stackTop;_i67>0;_i67--){var element=p.openElements.items[_i67];var elementId=p.openElements.tagIDs[_i67];// Compare the tag name here, as the tag might not be a known tag with an ID.
if(tid===elementId&&(tid!==TAG_ID.UNKNOWN||p.treeAdapter.getTagName(element)===tn)){p.openElements.generateImpliedEndTagsWithExclusion(tid);if(p.openElements.stackTop>=_i67)p.openElements.shortenToLength(_i67);break;}if(p._isSpecialElement(element,elementId)){break;}}}function endTagInBody(p,token){switch(token.tagID){case TAG_ID.A:case TAG_ID.B:case TAG_ID.I:case TAG_ID.S:case TAG_ID.U:case TAG_ID.EM:case TAG_ID.TT:case TAG_ID.BIG:case TAG_ID.CODE:case TAG_ID.FONT:case TAG_ID.NOBR:case TAG_ID.SMALL:case TAG_ID.STRIKE:case TAG_ID.STRONG:{callAdoptionAgency(p,token);break;}case TAG_ID.P:{pEndTagInBody(p);break;}case TAG_ID.DL:case TAG_ID.UL:case TAG_ID.OL:case TAG_ID.DIR:case TAG_ID.DIV:case TAG_ID.NAV:case TAG_ID.PRE:case TAG_ID.MAIN:case TAG_ID.MENU:case TAG_ID.ASIDE:case TAG_ID.BUTTON:case TAG_ID.CENTER:case TAG_ID.FIGURE:case TAG_ID.FOOTER:case TAG_ID.HEADER:case TAG_ID.HGROUP:case TAG_ID.DIALOG:case TAG_ID.ADDRESS:case TAG_ID.ARTICLE:case TAG_ID.DETAILS:case TAG_ID.SECTION:case TAG_ID.SUMMARY:case TAG_ID.LISTING:case TAG_ID.FIELDSET:case TAG_ID.BLOCKQUOTE:case TAG_ID.FIGCAPTION:{addressEndTagInBody(p,token);break;}case TAG_ID.LI:{liEndTagInBody(p);break;}case TAG_ID.DD:case TAG_ID.DT:{ddEndTagInBody(p,token);break;}case TAG_ID.H1:case TAG_ID.H2:case TAG_ID.H3:case TAG_ID.H4:case TAG_ID.H5:case TAG_ID.H6:{numberedHeaderEndTagInBody(p);break;}case TAG_ID.BR:{brEndTagInBody(p);break;}case TAG_ID.BODY:{bodyEndTagInBody(p,token);break;}case TAG_ID.HTML:{htmlEndTagInBody(p,token);break;}case TAG_ID.FORM:{formEndTagInBody(p);break;}case TAG_ID.APPLET:case TAG_ID.OBJECT:case TAG_ID.MARQUEE:{appletEndTagInBody(p,token);break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}default:{genericEndTagInBody(p,token);}}}function eofInBody(p,token){if(p.tmplInsertionModeStack.length>0){eofInTemplate(p,token);}else{stopParsing(p,token);}}// The "text" insertion mode
//------------------------------------------------------------------
function endTagInText(p,token){var _a;if(token.tagID===TAG_ID.SCRIPT){(_a=p.scriptHandler)===null||_a===void 0?void 0:_a.call(p,p.openElements.current);}p.openElements.pop();p.insertionMode=p.originalInsertionMode;}function eofInText(p,token){p._err(token,ERR.eofInElementThatCanContainOnlyText);p.openElements.pop();p.insertionMode=p.originalInsertionMode;p.onEof(token);}// The "in table" insertion mode
//------------------------------------------------------------------
function characterInTable(p,token){if(TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)){p.pendingCharacterTokens.length=0;p.hasNonWhitespacePendingCharacterToken=false;p.originalInsertionMode=p.insertionMode;p.insertionMode=InsertionMode.IN_TABLE_TEXT;switch(token.type){case TokenType.CHARACTER:{characterInTableText(p,token);break;}case TokenType.WHITESPACE_CHARACTER:{whitespaceCharacterInTableText(p,token);break;}// Ignore null
}}else{tokenInTable(p,token);}}function captionStartTagInTable(p,token){p.openElements.clearBackToTableContext();p.activeFormattingElements.insertMarker();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_CAPTION;}function colgroupStartTagInTable(p,token){p.openElements.clearBackToTableContext();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_COLUMN_GROUP;}function colStartTagInTable(p,token){p.openElements.clearBackToTableContext();p._insertFakeElement(TAG_NAMES.COLGROUP,TAG_ID.COLGROUP);p.insertionMode=InsertionMode.IN_COLUMN_GROUP;startTagInColumnGroup(p,token);}function tbodyStartTagInTable(p,token){p.openElements.clearBackToTableContext();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_TABLE_BODY;}function tdStartTagInTable(p,token){p.openElements.clearBackToTableContext();p._insertFakeElement(TAG_NAMES.TBODY,TAG_ID.TBODY);p.insertionMode=InsertionMode.IN_TABLE_BODY;startTagInTableBody(p,token);}function tableStartTagInTable(p,token){if(p.openElements.hasInTableScope(TAG_ID.TABLE)){p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);p._resetInsertionMode();p._processStartTag(token);}}function inputStartTagInTable(p,token){if(isHiddenInput(token)){p._appendElement(token,NS.HTML);}else{tokenInTable(p,token);}token.ackSelfClosing=true;}function formStartTagInTable(p,token){if(!p.formElement&&p.openElements.tmplCount===0){p._insertElement(token,NS.HTML);p.formElement=p.openElements.current;p.openElements.pop();}}function startTagInTable(p,token){switch(token.tagID){case TAG_ID.TD:case TAG_ID.TH:case TAG_ID.TR:{tdStartTagInTable(p,token);break;}case TAG_ID.STYLE:case TAG_ID.SCRIPT:case TAG_ID.TEMPLATE:{startTagInHead(p,token);break;}case TAG_ID.COL:{colStartTagInTable(p,token);break;}case TAG_ID.FORM:{formStartTagInTable(p,token);break;}case TAG_ID.TABLE:{tableStartTagInTable(p,token);break;}case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:{tbodyStartTagInTable(p,token);break;}case TAG_ID.INPUT:{inputStartTagInTable(p,token);break;}case TAG_ID.CAPTION:{captionStartTagInTable(p,token);break;}case TAG_ID.COLGROUP:{colgroupStartTagInTable(p,token);break;}default:{tokenInTable(p,token);}}}function endTagInTable(p,token){switch(token.tagID){case TAG_ID.TABLE:{if(p.openElements.hasInTableScope(TAG_ID.TABLE)){p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);p._resetInsertionMode();}break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}case TAG_ID.BODY:case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.HTML:case TAG_ID.TBODY:case TAG_ID.TD:case TAG_ID.TFOOT:case TAG_ID.TH:case TAG_ID.THEAD:case TAG_ID.TR:{// Ignore token
break;}default:{tokenInTable(p,token);}}}function tokenInTable(p,token){var savedFosterParentingState=p.fosterParentingEnabled;p.fosterParentingEnabled=true;// Process token in `In Body` mode
modeInBody(p,token);p.fosterParentingEnabled=savedFosterParentingState;}// The "in table text" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInTableText(p,token){p.pendingCharacterTokens.push(token);}function characterInTableText(p,token){p.pendingCharacterTokens.push(token);p.hasNonWhitespacePendingCharacterToken=true;}function tokenInTableText(p,token){var i=0;if(p.hasNonWhitespacePendingCharacterToken){for(;i<p.pendingCharacterTokens.length;i++){tokenInTable(p,p.pendingCharacterTokens[i]);}}else{for(;i<p.pendingCharacterTokens.length;i++){p._insertCharacters(p.pendingCharacterTokens[i]);}}p.insertionMode=p.originalInsertionMode;p._processToken(token);}// The "in caption" insertion mode
//------------------------------------------------------------------
var TABLE_VOID_ELEMENTS=new Set([TAG_ID.CAPTION,TAG_ID.COL,TAG_ID.COLGROUP,TAG_ID.TBODY,TAG_ID.TD,TAG_ID.TFOOT,TAG_ID.TH,TAG_ID.THEAD,TAG_ID.TR]);function startTagInCaption(p,token){var tn=token.tagID;if(TABLE_VOID_ELEMENTS.has(tn)){if(p.openElements.hasInTableScope(TAG_ID.CAPTION)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);p.activeFormattingElements.clearToLastMarker();p.insertionMode=InsertionMode.IN_TABLE;startTagInTable(p,token);}}else{startTagInBody(p,token);}}function endTagInCaption(p,token){var tn=token.tagID;switch(tn){case TAG_ID.CAPTION:case TAG_ID.TABLE:{if(p.openElements.hasInTableScope(TAG_ID.CAPTION)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);p.activeFormattingElements.clearToLastMarker();p.insertionMode=InsertionMode.IN_TABLE;if(tn===TAG_ID.TABLE){endTagInTable(p,token);}}break;}case TAG_ID.BODY:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.HTML:case TAG_ID.TBODY:case TAG_ID.TD:case TAG_ID.TFOOT:case TAG_ID.TH:case TAG_ID.THEAD:case TAG_ID.TR:{// Ignore token
break;}default:{endTagInBody(p,token);}}}// The "in column group" insertion mode
//------------------------------------------------------------------
function startTagInColumnGroup(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.COL:{p._appendElement(token,NS.HTML);token.ackSelfClosing=true;break;}case TAG_ID.TEMPLATE:{startTagInHead(p,token);break;}default:{tokenInColumnGroup(p,token);}}}function endTagInColumnGroup(p,token){switch(token.tagID){case TAG_ID.COLGROUP:{if(p.openElements.currentTagId===TAG_ID.COLGROUP){p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE;}break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}case TAG_ID.COL:{// Ignore token
break;}default:{tokenInColumnGroup(p,token);}}}function tokenInColumnGroup(p,token){if(p.openElements.currentTagId===TAG_ID.COLGROUP){p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE;p._processToken(token);}}// The "in table body" insertion mode
//------------------------------------------------------------------
function startTagInTableBody(p,token){switch(token.tagID){case TAG_ID.TR:{p.openElements.clearBackToTableBodyContext();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_ROW;break;}case TAG_ID.TH:case TAG_ID.TD:{p.openElements.clearBackToTableBodyContext();p._insertFakeElement(TAG_NAMES.TR,TAG_ID.TR);p.insertionMode=InsertionMode.IN_ROW;startTagInRow(p,token);break;}case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:{if(p.openElements.hasTableBodyContextInTableScope()){p.openElements.clearBackToTableBodyContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE;startTagInTable(p,token);}break;}default:{startTagInTable(p,token);}}}function endTagInTableBody(p,token){var tn=token.tagID;switch(token.tagID){case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:{if(p.openElements.hasInTableScope(tn)){p.openElements.clearBackToTableBodyContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE;}break;}case TAG_ID.TABLE:{if(p.openElements.hasTableBodyContextInTableScope()){p.openElements.clearBackToTableBodyContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE;endTagInTable(p,token);}break;}case TAG_ID.BODY:case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.HTML:case TAG_ID.TD:case TAG_ID.TH:case TAG_ID.TR:{// Ignore token
break;}default:{endTagInTable(p,token);}}}// The "in row" insertion mode
//------------------------------------------------------------------
function startTagInRow(p,token){switch(token.tagID){case TAG_ID.TH:case TAG_ID.TD:{p.openElements.clearBackToTableRowContext();p._insertElement(token,NS.HTML);p.insertionMode=InsertionMode.IN_CELL;p.activeFormattingElements.insertMarker();break;}case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:case TAG_ID.TR:{if(p.openElements.hasInTableScope(TAG_ID.TR)){p.openElements.clearBackToTableRowContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE_BODY;startTagInTableBody(p,token);}break;}default:{startTagInTable(p,token);}}}function endTagInRow(p,token){switch(token.tagID){case TAG_ID.TR:{if(p.openElements.hasInTableScope(TAG_ID.TR)){p.openElements.clearBackToTableRowContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE_BODY;}break;}case TAG_ID.TABLE:{if(p.openElements.hasInTableScope(TAG_ID.TR)){p.openElements.clearBackToTableRowContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE_BODY;endTagInTableBody(p,token);}break;}case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:{if(p.openElements.hasInTableScope(token.tagID)||p.openElements.hasInTableScope(TAG_ID.TR)){p.openElements.clearBackToTableRowContext();p.openElements.pop();p.insertionMode=InsertionMode.IN_TABLE_BODY;endTagInTableBody(p,token);}break;}case TAG_ID.BODY:case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.HTML:case TAG_ID.TD:case TAG_ID.TH:{// Ignore end tag
break;}default:{endTagInTable(p,token);}}}// The "in cell" insertion mode
//------------------------------------------------------------------
function startTagInCell(p,token){var tn=token.tagID;if(TABLE_VOID_ELEMENTS.has(tn)){if(p.openElements.hasInTableScope(TAG_ID.TD)||p.openElements.hasInTableScope(TAG_ID.TH)){p._closeTableCell();startTagInRow(p,token);}}else{startTagInBody(p,token);}}function endTagInCell(p,token){var tn=token.tagID;switch(tn){case TAG_ID.TD:case TAG_ID.TH:{if(p.openElements.hasInTableScope(tn)){p.openElements.generateImpliedEndTags();p.openElements.popUntilTagNamePopped(tn);p.activeFormattingElements.clearToLastMarker();p.insertionMode=InsertionMode.IN_ROW;}break;}case TAG_ID.TABLE:case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:case TAG_ID.TR:{if(p.openElements.hasInTableScope(tn)){p._closeTableCell();endTagInRow(p,token);}break;}case TAG_ID.BODY:case TAG_ID.CAPTION:case TAG_ID.COL:case TAG_ID.COLGROUP:case TAG_ID.HTML:{// Ignore token
break;}default:{endTagInBody(p,token);}}}// The "in select" insertion mode
//------------------------------------------------------------------
function startTagInSelect(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.OPTION:{if(p.openElements.currentTagId===TAG_ID.OPTION){p.openElements.pop();}p._insertElement(token,NS.HTML);break;}case TAG_ID.OPTGROUP:{if(p.openElements.currentTagId===TAG_ID.OPTION){p.openElements.pop();}if(p.openElements.currentTagId===TAG_ID.OPTGROUP){p.openElements.pop();}p._insertElement(token,NS.HTML);break;}case TAG_ID.INPUT:case TAG_ID.KEYGEN:case TAG_ID.TEXTAREA:case TAG_ID.SELECT:{if(p.openElements.hasInSelectScope(TAG_ID.SELECT)){p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);p._resetInsertionMode();if(token.tagID!==TAG_ID.SELECT){p._processStartTag(token);}}break;}case TAG_ID.SCRIPT:case TAG_ID.TEMPLATE:{startTagInHead(p,token);break;}// Do nothing
}}function endTagInSelect(p,token){switch(token.tagID){case TAG_ID.OPTGROUP:{if(p.openElements.stackTop>0&&p.openElements.currentTagId===TAG_ID.OPTION&&p.openElements.tagIDs[p.openElements.stackTop-1]===TAG_ID.OPTGROUP){p.openElements.pop();}if(p.openElements.currentTagId===TAG_ID.OPTGROUP){p.openElements.pop();}break;}case TAG_ID.OPTION:{if(p.openElements.currentTagId===TAG_ID.OPTION){p.openElements.pop();}break;}case TAG_ID.SELECT:{if(p.openElements.hasInSelectScope(TAG_ID.SELECT)){p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);p._resetInsertionMode();}break;}case TAG_ID.TEMPLATE:{templateEndTagInHead(p,token);break;}// Do nothing
}}// The "in select in table" insertion mode
//------------------------------------------------------------------
function startTagInSelectInTable(p,token){var tn=token.tagID;if(tn===TAG_ID.CAPTION||tn===TAG_ID.TABLE||tn===TAG_ID.TBODY||tn===TAG_ID.TFOOT||tn===TAG_ID.THEAD||tn===TAG_ID.TR||tn===TAG_ID.TD||tn===TAG_ID.TH){p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);p._resetInsertionMode();p._processStartTag(token);}else{startTagInSelect(p,token);}}function endTagInSelectInTable(p,token){var tn=token.tagID;if(tn===TAG_ID.CAPTION||tn===TAG_ID.TABLE||tn===TAG_ID.TBODY||tn===TAG_ID.TFOOT||tn===TAG_ID.THEAD||tn===TAG_ID.TR||tn===TAG_ID.TD||tn===TAG_ID.TH){if(p.openElements.hasInTableScope(tn)){p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);p._resetInsertionMode();p.onEndTag(token);}}else{endTagInSelect(p,token);}}// The "in template" insertion mode
//------------------------------------------------------------------
function startTagInTemplate(p,token){switch(token.tagID){// First, handle tags that can start without a mode change
case TAG_ID.BASE:case TAG_ID.BASEFONT:case TAG_ID.BGSOUND:case TAG_ID.LINK:case TAG_ID.META:case TAG_ID.NOFRAMES:case TAG_ID.SCRIPT:case TAG_ID.STYLE:case TAG_ID.TEMPLATE:case TAG_ID.TITLE:{startTagInHead(p,token);break;}// Re-process the token in the appropriate mode
case TAG_ID.CAPTION:case TAG_ID.COLGROUP:case TAG_ID.TBODY:case TAG_ID.TFOOT:case TAG_ID.THEAD:{p.tmplInsertionModeStack[0]=InsertionMode.IN_TABLE;p.insertionMode=InsertionMode.IN_TABLE;startTagInTable(p,token);break;}case TAG_ID.COL:{p.tmplInsertionModeStack[0]=InsertionMode.IN_COLUMN_GROUP;p.insertionMode=InsertionMode.IN_COLUMN_GROUP;startTagInColumnGroup(p,token);break;}case TAG_ID.TR:{p.tmplInsertionModeStack[0]=InsertionMode.IN_TABLE_BODY;p.insertionMode=InsertionMode.IN_TABLE_BODY;startTagInTableBody(p,token);break;}case TAG_ID.TD:case TAG_ID.TH:{p.tmplInsertionModeStack[0]=InsertionMode.IN_ROW;p.insertionMode=InsertionMode.IN_ROW;startTagInRow(p,token);break;}default:{p.tmplInsertionModeStack[0]=InsertionMode.IN_BODY;p.insertionMode=InsertionMode.IN_BODY;startTagInBody(p,token);}}}function endTagInTemplate(p,token){if(token.tagID===TAG_ID.TEMPLATE){templateEndTagInHead(p,token);}}function eofInTemplate(p,token){if(p.openElements.tmplCount>0){p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);p.activeFormattingElements.clearToLastMarker();p.tmplInsertionModeStack.shift();p._resetInsertionMode();p.onEof(token);}else{stopParsing(p,token);}}// The "after body" insertion mode
//------------------------------------------------------------------
function startTagAfterBody(p,token){if(token.tagID===TAG_ID.HTML){startTagInBody(p,token);}else{tokenAfterBody(p,token);}}function endTagAfterBody(p,token){var _a;if(token.tagID===TAG_ID.HTML){if(!p.fragmentContext){p.insertionMode=InsertionMode.AFTER_AFTER_BODY;}//NOTE: <html> is never popped from the stack, so we need to updated
//the end location explicitly.
if(p.options.sourceCodeLocationInfo&&p.openElements.tagIDs[0]===TAG_ID.HTML){p._setEndLocation(p.openElements.items[0],token);// Update the body element, if it doesn't have an end tag
var bodyElement=p.openElements.items[1];if(bodyElement&&!((_a=p.treeAdapter.getNodeSourceCodeLocation(bodyElement))===null||_a===void 0?void 0:_a.endTag)){p._setEndLocation(bodyElement,token);}}}else{tokenAfterBody(p,token);}}function tokenAfterBody(p,token){p.insertionMode=InsertionMode.IN_BODY;modeInBody(p,token);}// The "in frameset" insertion mode
//------------------------------------------------------------------
function startTagInFrameset(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.FRAMESET:{p._insertElement(token,NS.HTML);break;}case TAG_ID.FRAME:{p._appendElement(token,NS.HTML);token.ackSelfClosing=true;break;}case TAG_ID.NOFRAMES:{startTagInHead(p,token);break;}// Do nothing
}}function endTagInFrameset(p,token){if(token.tagID===TAG_ID.FRAMESET&&!p.openElements.isRootHtmlElementCurrent()){p.openElements.pop();if(!p.fragmentContext&&p.openElements.currentTagId!==TAG_ID.FRAMESET){p.insertionMode=InsertionMode.AFTER_FRAMESET;}}}// The "after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterFrameset(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.NOFRAMES:{startTagInHead(p,token);break;}// Do nothing
}}function endTagAfterFrameset(p,token){if(token.tagID===TAG_ID.HTML){p.insertionMode=InsertionMode.AFTER_AFTER_FRAMESET;}}// The "after after body" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterBody(p,token){if(token.tagID===TAG_ID.HTML){startTagInBody(p,token);}else{tokenAfterAfterBody(p,token);}}function tokenAfterAfterBody(p,token){p.insertionMode=InsertionMode.IN_BODY;modeInBody(p,token);}// The "after after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterFrameset(p,token){switch(token.tagID){case TAG_ID.HTML:{startTagInBody(p,token);break;}case TAG_ID.NOFRAMES:{startTagInHead(p,token);break;}// Do nothing
}}// The rules for parsing tokens in foreign content
//------------------------------------------------------------------
function nullCharacterInForeignContent(p,token){token.chars=REPLACEMENT_CHARACTER;p._insertCharacters(token);}function characterInForeignContent(p,token){p._insertCharacters(token);p.framesetOk=false;}function popUntilHtmlOrIntegrationPoint(p){while(p.treeAdapter.getNamespaceURI(p.openElements.current)!==NS.HTML&&!p._isIntegrationPoint(p.openElements.currentTagId,p.openElements.current)){p.openElements.pop();}}function startTagInForeignContent(p,token){if(causesExit(token)){popUntilHtmlOrIntegrationPoint(p);p._startTagOutsideForeignContent(token);}else{var current=p._getAdjustedCurrentElement();var currentNs=p.treeAdapter.getNamespaceURI(current);if(currentNs===NS.MATHML){adjustTokenMathMLAttrs(token);}else if(currentNs===NS.SVG){adjustTokenSVGTagName(token);adjustTokenSVGAttrs(token);}adjustTokenXMLAttrs(token);if(token.selfClosing){p._appendElement(token,currentNs);}else{p._insertElement(token,currentNs);}token.ackSelfClosing=true;}}function endTagInForeignContent(p,token){if(token.tagID===TAG_ID.P||token.tagID===TAG_ID.BR){popUntilHtmlOrIntegrationPoint(p);p._endTagOutsideForeignContent(token);return;}for(var _i68=p.openElements.stackTop;_i68>0;_i68--){var element=p.openElements.items[_i68];if(p.treeAdapter.getNamespaceURI(element)===NS.HTML){p._endTagOutsideForeignContent(token);break;}var tagName=p.treeAdapter.getTagName(element);if(tagName.toLowerCase()===token.tagName){//NOTE: update the token tag name for `_setEndLocation`.
token.tagName=tagName;p.openElements.shortenToLength(_i68);break;}}}// Sets
var VOID_ELEMENTS=new Set([TAG_NAMES.AREA,TAG_NAMES.BASE,TAG_NAMES.BASEFONT,TAG_NAMES.BGSOUND,TAG_NAMES.BR,TAG_NAMES.COL,TAG_NAMES.EMBED,TAG_NAMES.FRAME,TAG_NAMES.HR,TAG_NAMES.IMG,TAG_NAMES.INPUT,TAG_NAMES.KEYGEN,TAG_NAMES.LINK,TAG_NAMES.META,TAG_NAMES.PARAM,TAG_NAMES.SOURCE,TAG_NAMES.TRACK,TAG_NAMES.WBR]);function isVoidElement(node,options){return options.treeAdapter.isElementNode(node)&&options.treeAdapter.getNamespaceURI(node)===NS.HTML&&VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));}var defaultOpts={treeAdapter:defaultTreeAdapter,scriptingEnabled:true};/**
       * Serializes an AST element node to an HTML string, including the element node.
       *
       * @example
       *
       * ```js
       * const parse5 = require('parse5');
       *
       * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');
       *
       * // Serializes the <div> element.
       * const html = parse5.serializeOuter(document.childNodes[0]);
       *
       * console.log(str); //> '<div>Hello, <b>world</b>!</div>'
       * ```
       *
       * @param node Node to serialize.
       * @param options Serialization options.
       */function serializeOuter(node,options){var opts=_objectSpread(_objectSpread({},defaultOpts),options);return serializeNode(node,opts);}function serializeChildNodes(parentNode,options){var html='';// Get container of the child nodes
var container=options.treeAdapter.isElementNode(parentNode)&&options.treeAdapter.getTagName(parentNode)===TAG_NAMES.TEMPLATE&&options.treeAdapter.getNamespaceURI(parentNode)===NS.HTML?options.treeAdapter.getTemplateContent(parentNode):parentNode;var childNodes=options.treeAdapter.getChildNodes(container);if(childNodes){var _iterator7=_createForOfIteratorHelper(childNodes),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var currentNode=_step7.value;html+=serializeNode(currentNode,options);}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}}return html;}function serializeNode(node,options){if(options.treeAdapter.isElementNode(node)){return serializeElement(node,options);}if(options.treeAdapter.isTextNode(node)){return serializeTextNode(node,options);}if(options.treeAdapter.isCommentNode(node)){return serializeCommentNode(node,options);}if(options.treeAdapter.isDocumentTypeNode(node)){return serializeDocumentTypeNode(node,options);}// Return an empty string for unknown nodes
return'';}function serializeElement(node,options){var tn=options.treeAdapter.getTagName(node);return"<".concat(tn).concat(serializeAttributes(node,options),">").concat(isVoidElement(node,options)?'':"".concat(serializeChildNodes(node,options),"</").concat(tn,">"));}function serializeAttributes(node,_ref128){var treeAdapter=_ref128.treeAdapter;var html='';var _iterator8=_createForOfIteratorHelper(treeAdapter.getAttrList(node)),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var _attr=_step8.value;html+=' ';if(!_attr.namespace){html+=_attr.name;}else switch(_attr.namespace){case NS.XML:{html+="xml:".concat(_attr.name);break;}case NS.XMLNS:{if(_attr.name!=='xmlns'){html+='xmlns:';}html+=_attr.name;break;}case NS.XLINK:{html+="xlink:".concat(_attr.name);break;}default:{html+="".concat(_attr.prefix,":").concat(_attr.name);}}html+="=\"".concat(escapeAttribute(_attr.value),"\"");}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return html;}function serializeTextNode(node,options){var treeAdapter=options.treeAdapter;var content=treeAdapter.getTextNodeContent(node);var parent=treeAdapter.getParentNode(node);var parentTn=parent&&treeAdapter.isElementNode(parent)&&treeAdapter.getTagName(parent);return parentTn&&treeAdapter.getNamespaceURI(parent)===NS.HTML&&hasUnescapedText(parentTn,options.scriptingEnabled)?content:escapeText(content);}function serializeCommentNode(node,_ref129){var treeAdapter=_ref129.treeAdapter;return"<!--".concat(treeAdapter.getCommentNodeContent(node),"-->");}function serializeDocumentTypeNode(node,_ref130){var treeAdapter=_ref130.treeAdapter;return"<!DOCTYPE ".concat(treeAdapter.getDocumentTypeNodeName(node),">");}// Shorthands
/**
       * Parses an HTML string.
       *
       * @param html Input HTML string.
       * @param options Parsing options.
       * @returns Document
       *
       * @example
       *
       * ```js
       * const parse5 = require('parse5');
       *
       * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');
       *
       * console.log(document.childNodes[1].tagName); //> 'html'
       *```
       */function parse$3(html,options){return Parser$2.parse(html,options);}function parseFragment(fragmentContext,html,options){if(typeof fragmentContext==='string'){options=html;html=fragmentContext;fragmentContext=null;}var parser=Parser$2.getFragmentParser(fragmentContext,options);parser.tokenizer.write(html,true);return parser.getFragment();}function createTextNode(value){return new Text$1(value);}function enquoteDoctypeId(id){var quote=id.includes('"')?"'":'"';return quote+id+quote;}/** @internal */function serializeDoctypeContent(name,publicId,systemId){var str='!DOCTYPE ';if(name){str+=name;}if(publicId){str+=" PUBLIC ".concat(enquoteDoctypeId(publicId));}else if(systemId){str+=' SYSTEM';}if(systemId){str+=" ".concat(enquoteDoctypeId(systemId));}return str;}var adapter={// Re-exports from domhandler
isCommentNode:isComment,isElementNode:isTag,isTextNode:isText,//Node construction
createDocument:function createDocument(){var node=new Document$1([]);node['x-mode']=DOCUMENT_MODE.NO_QUIRKS;return node;},createDocumentFragment:function createDocumentFragment(){return new Document$1([]);},createElement:function createElement(tagName,namespaceURI,attrs){var attribs=Object.create(null);var attribsNamespace=Object.create(null);var attribsPrefix=Object.create(null);for(var _i69=0;_i69<attrs.length;_i69++){var attrName=attrs[_i69].name;attribs[attrName]=attrs[_i69].value;attribsNamespace[attrName]=attrs[_i69].namespace;attribsPrefix[attrName]=attrs[_i69].prefix;}var node=new Element$1(tagName,attribs,[]);node.namespace=namespaceURI;node['x-attribsNamespace']=attribsNamespace;node['x-attribsPrefix']=attribsPrefix;return node;},createCommentNode:function createCommentNode(data){return new Comment$1(data);},//Tree mutation
appendChild:function appendChild(parentNode,newNode){var prev=parentNode.children[parentNode.children.length-1];if(prev){prev.next=newNode;newNode.prev=prev;}parentNode.children.push(newNode);newNode.parent=parentNode;},insertBefore:function insertBefore(parentNode,newNode,referenceNode){var insertionIdx=parentNode.children.indexOf(referenceNode);var prev=referenceNode.prev;if(prev){prev.next=newNode;newNode.prev=prev;}referenceNode.prev=newNode;newNode.next=referenceNode;parentNode.children.splice(insertionIdx,0,newNode);newNode.parent=parentNode;},setTemplateContent:function setTemplateContent(templateElement,contentElement){adapter.appendChild(templateElement,contentElement);},getTemplateContent:function getTemplateContent(templateElement){return templateElement.children[0];},setDocumentType:function setDocumentType(document,name,publicId,systemId){var data=serializeDoctypeContent(name,publicId,systemId);var doctypeNode=document.children.find(function(node){return isDirective(node)&&node.name==='!doctype';});if(doctypeNode){doctypeNode.data=data!==null&&data!==void 0?data:null;}else{doctypeNode=new ProcessingInstruction$1('!doctype',data);adapter.appendChild(document,doctypeNode);}doctypeNode['x-name']=name!==null&&name!==void 0?name:undefined;doctypeNode['x-publicId']=publicId!==null&&publicId!==void 0?publicId:undefined;doctypeNode['x-systemId']=systemId!==null&&systemId!==void 0?systemId:undefined;},setDocumentMode:function setDocumentMode(document,mode){document['x-mode']=mode;},getDocumentMode:function getDocumentMode(document){return document['x-mode'];},detachNode:function detachNode(node){if(node.parent){var idx=node.parent.children.indexOf(node);var _prev3=node.prev,_next5=node.next;node.prev=null;node.next=null;if(_prev3){_prev3.next=_next5;}if(_next5){_next5.prev=_prev3;}node.parent.children.splice(idx,1);node.parent=null;}},insertText:function insertText(parentNode,text){var lastChild=parentNode.children[parentNode.children.length-1];if(lastChild&&isText(lastChild)){lastChild.data+=text;}else{adapter.appendChild(parentNode,createTextNode(text));}},insertTextBefore:function insertTextBefore(parentNode,text,referenceNode){var prevNode=parentNode.children[parentNode.children.indexOf(referenceNode)-1];if(prevNode&&isText(prevNode)){prevNode.data+=text;}else{adapter.insertBefore(parentNode,createTextNode(text),referenceNode);}},adoptAttributes:function adoptAttributes(recipient,attrs){for(var _i70=0;_i70<attrs.length;_i70++){var attrName=attrs[_i70].name;if(typeof recipient.attribs[attrName]==='undefined'){recipient.attribs[attrName]=attrs[_i70].value;recipient['x-attribsNamespace'][attrName]=attrs[_i70].namespace;recipient['x-attribsPrefix'][attrName]=attrs[_i70].prefix;}}},//Tree traversing
getFirstChild:function getFirstChild(node){return node.children[0];},getChildNodes:function getChildNodes(node){return node.children;},getParentNode:function getParentNode(node){return node.parent;},getAttrList:function getAttrList(element){return element.attributes;},//Node data
getTagName:function getTagName(element){return element.name;},getNamespaceURI:function getNamespaceURI(element){return element.namespace;},getTextNodeContent:function getTextNodeContent(textNode){return textNode.data;},getCommentNodeContent:function getCommentNodeContent(commentNode){return commentNode.data;},getDocumentTypeNodeName:function getDocumentTypeNodeName(doctypeNode){var _a;return(_a=doctypeNode['x-name'])!==null&&_a!==void 0?_a:'';},getDocumentTypeNodePublicId:function getDocumentTypeNodePublicId(doctypeNode){var _a;return(_a=doctypeNode['x-publicId'])!==null&&_a!==void 0?_a:'';},getDocumentTypeNodeSystemId:function getDocumentTypeNodeSystemId(doctypeNode){var _a;return(_a=doctypeNode['x-systemId'])!==null&&_a!==void 0?_a:'';},//Node types
isDocumentTypeNode:function isDocumentTypeNode(node){return isDirective(node)&&node.name==='!doctype';},// Source code location
setNodeSourceCodeLocation:function setNodeSourceCodeLocation(node,location){if(location){node.startIndex=location.startOffset;node.endIndex=location.endOffset;}node.sourceCodeLocation=location;},getNodeSourceCodeLocation:function getNodeSourceCodeLocation(node){return node.sourceCodeLocation;},updateNodeSourceCodeLocation:function updateNodeSourceCodeLocation(node,endLocation){if(endLocation.endOffset!=null)node.endIndex=endLocation.endOffset;node.sourceCodeLocation=_objectSpread(_objectSpread({},node.sourceCodeLocation),endLocation);}};/**
       * Parse the content with `parse5` in the context of the given `ParentNode`.
       *
       * @param content - The content to parse.
       * @param options - A set of options to use to parse.
       * @param isDocument - Whether to parse the content as a full HTML document.
       * @param context - The context in which to parse the content.
       * @returns The parsed content.
       */function parseWithParse5(content,options,isDocument,context){var opts={scriptingEnabled:typeof options.scriptingEnabled==='boolean'?options.scriptingEnabled:true,treeAdapter:adapter,sourceCodeLocationInfo:options.sourceCodeLocationInfo};return isDocument?parse$3(content,opts):parseFragment(context,content,opts);}var renderOpts={treeAdapter:adapter};/**
       * Renders the given DOM tree with `parse5` and returns the result as a string.
       *
       * @param dom - The DOM tree to render.
       * @returns The rendered document.
       */function renderWithParse5(dom){/*
           * `dom-serializer` passes over the special "root" node and renders the
           * node's children in its place. To mimic this behavior with `parse5`, an
           * equivalent operation must be applied to the input array.
           */var nodes='length'in dom?dom:[dom];for(var _index3=0;_index3<nodes.length;_index3+=1){var _node9=nodes[_index3];if(isDocument(_node9)){var _Array$prototype$spli;(_Array$prototype$spli=Array.prototype.splice).call.apply(_Array$prototype$spli,[nodes,_index3,1].concat(_toConsumableArray(_node9.children)));}}var result='';for(var _index4=0;_index4<nodes.length;_index4+=1){var _node10=nodes[_index4];result+=serializeOuter(_node10,renderOpts);}return result;}var CharCodes;(function(CharCodes){CharCodes[CharCodes["Tab"]=9]="Tab";CharCodes[CharCodes["NewLine"]=10]="NewLine";CharCodes[CharCodes["FormFeed"]=12]="FormFeed";CharCodes[CharCodes["CarriageReturn"]=13]="CarriageReturn";CharCodes[CharCodes["Space"]=32]="Space";CharCodes[CharCodes["ExclamationMark"]=33]="ExclamationMark";CharCodes[CharCodes["Number"]=35]="Number";CharCodes[CharCodes["Amp"]=38]="Amp";CharCodes[CharCodes["SingleQuote"]=39]="SingleQuote";CharCodes[CharCodes["DoubleQuote"]=34]="DoubleQuote";CharCodes[CharCodes["Dash"]=45]="Dash";CharCodes[CharCodes["Slash"]=47]="Slash";CharCodes[CharCodes["Zero"]=48]="Zero";CharCodes[CharCodes["Nine"]=57]="Nine";CharCodes[CharCodes["Semi"]=59]="Semi";CharCodes[CharCodes["Lt"]=60]="Lt";CharCodes[CharCodes["Eq"]=61]="Eq";CharCodes[CharCodes["Gt"]=62]="Gt";CharCodes[CharCodes["Questionmark"]=63]="Questionmark";CharCodes[CharCodes["UpperA"]=65]="UpperA";CharCodes[CharCodes["LowerA"]=97]="LowerA";CharCodes[CharCodes["UpperF"]=70]="UpperF";CharCodes[CharCodes["LowerF"]=102]="LowerF";CharCodes[CharCodes["UpperZ"]=90]="UpperZ";CharCodes[CharCodes["LowerZ"]=122]="LowerZ";CharCodes[CharCodes["LowerX"]=120]="LowerX";CharCodes[CharCodes["OpeningSquareBracket"]=91]="OpeningSquareBracket";})(CharCodes||(CharCodes={}));/** All the states the tokenizer can be in. */var State;(function(State){State[State["Text"]=1]="Text";State[State["BeforeTagName"]=2]="BeforeTagName";State[State["InTagName"]=3]="InTagName";State[State["InSelfClosingTag"]=4]="InSelfClosingTag";State[State["BeforeClosingTagName"]=5]="BeforeClosingTagName";State[State["InClosingTagName"]=6]="InClosingTagName";State[State["AfterClosingTagName"]=7]="AfterClosingTagName";// Attributes
State[State["BeforeAttributeName"]=8]="BeforeAttributeName";State[State["InAttributeName"]=9]="InAttributeName";State[State["AfterAttributeName"]=10]="AfterAttributeName";State[State["BeforeAttributeValue"]=11]="BeforeAttributeValue";State[State["InAttributeValueDq"]=12]="InAttributeValueDq";State[State["InAttributeValueSq"]=13]="InAttributeValueSq";State[State["InAttributeValueNq"]=14]="InAttributeValueNq";// Declarations
State[State["BeforeDeclaration"]=15]="BeforeDeclaration";State[State["InDeclaration"]=16]="InDeclaration";// Processing instructions
State[State["InProcessingInstruction"]=17]="InProcessingInstruction";// Comments & CDATA
State[State["BeforeComment"]=18]="BeforeComment";State[State["CDATASequence"]=19]="CDATASequence";State[State["InSpecialComment"]=20]="InSpecialComment";State[State["InCommentLike"]=21]="InCommentLike";// Special tags
State[State["BeforeSpecialS"]=22]="BeforeSpecialS";State[State["SpecialStartSequence"]=23]="SpecialStartSequence";State[State["InSpecialTag"]=24]="InSpecialTag";State[State["BeforeEntity"]=25]="BeforeEntity";State[State["BeforeNumericEntity"]=26]="BeforeNumericEntity";State[State["InNamedEntity"]=27]="InNamedEntity";State[State["InNumericEntity"]=28]="InNumericEntity";State[State["InHexEntity"]=29]="InHexEntity";})(State||(State={}));function isWhitespace(c){return c===CharCodes.Space||c===CharCodes.NewLine||c===CharCodes.Tab||c===CharCodes.FormFeed||c===CharCodes.CarriageReturn;}function isEndOfTagSection(c){return c===CharCodes.Slash||c===CharCodes.Gt||isWhitespace(c);}function isNumber(c){return c>=CharCodes.Zero&&c<=CharCodes.Nine;}function isASCIIAlpha(c){return c>=CharCodes.LowerA&&c<=CharCodes.LowerZ||c>=CharCodes.UpperA&&c<=CharCodes.UpperZ;}function isHexDigit(c){return c>=CharCodes.UpperA&&c<=CharCodes.UpperF||c>=CharCodes.LowerA&&c<=CharCodes.LowerF;}var QuoteType;(function(QuoteType){QuoteType[QuoteType["NoValue"]=0]="NoValue";QuoteType[QuoteType["Unquoted"]=1]="Unquoted";QuoteType[QuoteType["Single"]=2]="Single";QuoteType[QuoteType["Double"]=3]="Double";})(QuoteType||(QuoteType={}));/**
       * Sequences used to match longer strings.
       *
       * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End
       * sequences with an increased offset.
       */var Sequences={Cdata:new Uint8Array([0x43,0x44,0x41,0x54,0x41,0x5b]),CdataEnd:new Uint8Array([0x5d,0x5d,0x3e]),CommentEnd:new Uint8Array([0x2d,0x2d,0x3e]),ScriptEnd:new Uint8Array([0x3c,0x2f,0x73,0x63,0x72,0x69,0x70,0x74]),StyleEnd:new Uint8Array([0x3c,0x2f,0x73,0x74,0x79,0x6c,0x65]),TitleEnd:new Uint8Array([0x3c,0x2f,0x74,0x69,0x74,0x6c,0x65])// `</title`
};var Tokenizer=/*#__PURE__*/function(){function Tokenizer(_ref131,cbs){var _ref131$xmlMode=_ref131.xmlMode,xmlMode=_ref131$xmlMode===void 0?false:_ref131$xmlMode,_ref131$decodeEntitie=_ref131.decodeEntities,decodeEntities=_ref131$decodeEntitie===void 0?true:_ref131$decodeEntitie;_classCallCheck(this,Tokenizer);this.cbs=cbs;/** The current state the tokenizer is in. */this.state=State.Text;/** The read buffer. */this.buffer="";/** The beginning of the section that is currently being read. */this.sectionStart=0;/** The index within the buffer that we are currently looking at. */this.index=0;/** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */this.baseState=State.Text;/** For special parsing behavior inside of script and style tags. */this.isSpecial=false;/** Indicates whether the tokenizer has been paused. */this.running=true;/** The offset of the current buffer. */this.offset=0;this.currentSequence=undefined;this.sequenceIndex=0;this.trieIndex=0;this.trieCurrent=0;/** For named entities, the index of the value. For numeric entities, the code point. */this.entityResult=0;this.entityExcess=0;this.xmlMode=xmlMode;this.decodeEntities=decodeEntities;this.entityTrie=xmlMode?xmlDecodeTree:htmlDecodeTree;}_createClass(Tokenizer,[{key:"reset",value:function reset(){this.state=State.Text;this.buffer="";this.sectionStart=0;this.index=0;this.baseState=State.Text;this.currentSequence=undefined;this.running=true;this.offset=0;}},{key:"write",value:function write(chunk){this.offset+=this.buffer.length;this.buffer=chunk;this.parse();}},{key:"end",value:function end(){if(this.running)this.finish();}},{key:"pause",value:function pause(){this.running=false;}},{key:"resume",value:function resume(){this.running=true;if(this.index<this.buffer.length+this.offset){this.parse();}}/**
           * The current index within all of the written data.
           */},{key:"getIndex",value:function getIndex(){return this.index;}/**
           * The start of the current section.
           */},{key:"getSectionStart",value:function getSectionStart(){return this.sectionStart;}},{key:"stateText",value:function stateText(c){if(c===CharCodes.Lt||!this.decodeEntities&&this.fastForwardTo(CharCodes.Lt)){if(this.index>this.sectionStart){this.cbs.ontext(this.sectionStart,this.index);}this.state=State.BeforeTagName;this.sectionStart=this.index;}else if(this.decodeEntities&&c===CharCodes.Amp){this.state=State.BeforeEntity;}}},{key:"stateSpecialStartSequence",value:function stateSpecialStartSequence(c){var isEnd=this.sequenceIndex===this.currentSequence.length;var isMatch=isEnd?// If we are at the end of the sequence, make sure the tag name has ended
isEndOfTagSection(c):// Otherwise, do a case-insensitive comparison
(c|0x20)===this.currentSequence[this.sequenceIndex];if(!isMatch){this.isSpecial=false;}else if(!isEnd){this.sequenceIndex++;return;}this.sequenceIndex=0;this.state=State.InTagName;this.stateInTagName(c);}/** Look for an end tag. For <title> tags, also decode entities. */},{key:"stateInSpecialTag",value:function stateInSpecialTag(c){if(this.sequenceIndex===this.currentSequence.length){if(c===CharCodes.Gt||isWhitespace(c)){var endOfText=this.index-this.currentSequence.length;if(this.sectionStart<endOfText){// Spoof the index so that reported locations match up.
var actualIndex=this.index;this.index=endOfText;this.cbs.ontext(this.sectionStart,endOfText);this.index=actualIndex;}this.isSpecial=false;this.sectionStart=endOfText+2;// Skip over the `</`
this.stateInClosingTagName(c);return;// We are done; skip the rest of the function.
}this.sequenceIndex=0;}if((c|0x20)===this.currentSequence[this.sequenceIndex]){this.sequenceIndex+=1;}else if(this.sequenceIndex===0){if(this.currentSequence===Sequences.TitleEnd){// We have to parse entities in <title> tags.
if(this.decodeEntities&&c===CharCodes.Amp){this.state=State.BeforeEntity;}}else if(this.fastForwardTo(CharCodes.Lt)){// Outside of <title> tags, we can fast-forward.
this.sequenceIndex=1;}}else{// If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.
this.sequenceIndex=Number(c===CharCodes.Lt);}}},{key:"stateCDATASequence",value:function stateCDATASequence(c){if(c===Sequences.Cdata[this.sequenceIndex]){if(++this.sequenceIndex===Sequences.Cdata.length){this.state=State.InCommentLike;this.currentSequence=Sequences.CdataEnd;this.sequenceIndex=0;this.sectionStart=this.index+1;}}else{this.sequenceIndex=0;this.state=State.InDeclaration;this.stateInDeclaration(c);// Reconsume the character
}}/**
           * When we wait for one specific character, we can speed things up
           * by skipping through the buffer until we find it.
           *
           * @returns Whether the character was found.
           */},{key:"fastForwardTo",value:function fastForwardTo(c){while(++this.index<this.buffer.length+this.offset){if(this.buffer.charCodeAt(this.index-this.offset)===c){return true;}}/*
               * We increment the index at the end of the `parse` loop,
               * so set it to `buffer.length - 1` here.
               *
               * TODO: Refactor `parse` to increment index before calling states.
               */this.index=this.buffer.length+this.offset-1;return false;}/**
           * Comments and CDATA end with `-->` and `]]>`.
           *
           * Their common qualities are:
           * - Their end sequences have a distinct character they start with.
           * - That character is then repeated, so we have to check multiple repeats.
           * - All characters but the start character of the sequence can be skipped.
           */},{key:"stateInCommentLike",value:function stateInCommentLike(c){if(c===this.currentSequence[this.sequenceIndex]){if(++this.sequenceIndex===this.currentSequence.length){if(this.currentSequence===Sequences.CdataEnd){this.cbs.oncdata(this.sectionStart,this.index,2);}else{this.cbs.oncomment(this.sectionStart,this.index,2);}this.sequenceIndex=0;this.sectionStart=this.index+1;this.state=State.Text;}}else if(this.sequenceIndex===0){// Fast-forward to the first character of the sequence
if(this.fastForwardTo(this.currentSequence[0])){this.sequenceIndex=1;}}else if(c!==this.currentSequence[this.sequenceIndex-1]){// Allow long sequences, eg. --->, ]]]>
this.sequenceIndex=0;}}/**
           * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.
           *
           * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).
           * We allow anything that wouldn't end the tag.
           */},{key:"isTagStartChar",value:function isTagStartChar(c){return this.xmlMode?!isEndOfTagSection(c):isASCIIAlpha(c);}},{key:"startSpecial",value:function startSpecial(sequence,offset){this.isSpecial=true;this.currentSequence=sequence;this.sequenceIndex=offset;this.state=State.SpecialStartSequence;}},{key:"stateBeforeTagName",value:function stateBeforeTagName(c){if(c===CharCodes.ExclamationMark){this.state=State.BeforeDeclaration;this.sectionStart=this.index+1;}else if(c===CharCodes.Questionmark){this.state=State.InProcessingInstruction;this.sectionStart=this.index+1;}else if(this.isTagStartChar(c)){var lower=c|0x20;this.sectionStart=this.index;if(!this.xmlMode&&lower===Sequences.TitleEnd[2]){this.startSpecial(Sequences.TitleEnd,3);}else{this.state=!this.xmlMode&&lower===Sequences.ScriptEnd[2]?State.BeforeSpecialS:State.InTagName;}}else if(c===CharCodes.Slash){this.state=State.BeforeClosingTagName;}else{this.state=State.Text;this.stateText(c);}}},{key:"stateInTagName",value:function stateInTagName(c){if(isEndOfTagSection(c)){this.cbs.onopentagname(this.sectionStart,this.index);this.sectionStart=-1;this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c);}}},{key:"stateBeforeClosingTagName",value:function stateBeforeClosingTagName(c){if(isWhitespace(c));else if(c===CharCodes.Gt){this.state=State.Text;}else{this.state=this.isTagStartChar(c)?State.InClosingTagName:State.InSpecialComment;this.sectionStart=this.index;}}},{key:"stateInClosingTagName",value:function stateInClosingTagName(c){if(c===CharCodes.Gt||isWhitespace(c)){this.cbs.onclosetag(this.sectionStart,this.index);this.sectionStart=-1;this.state=State.AfterClosingTagName;this.stateAfterClosingTagName(c);}}},{key:"stateAfterClosingTagName",value:function stateAfterClosingTagName(c){// Skip everything until ">"
if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.state=State.Text;this.baseState=State.Text;this.sectionStart=this.index+1;}}},{key:"stateBeforeAttributeName",value:function stateBeforeAttributeName(c){if(c===CharCodes.Gt){this.cbs.onopentagend(this.index);if(this.isSpecial){this.state=State.InSpecialTag;this.sequenceIndex=0;}else{this.state=State.Text;}this.baseState=this.state;this.sectionStart=this.index+1;}else if(c===CharCodes.Slash){this.state=State.InSelfClosingTag;}else if(!isWhitespace(c)){this.state=State.InAttributeName;this.sectionStart=this.index;}}},{key:"stateInSelfClosingTag",value:function stateInSelfClosingTag(c){if(c===CharCodes.Gt){this.cbs.onselfclosingtag(this.index);this.state=State.Text;this.baseState=State.Text;this.sectionStart=this.index+1;this.isSpecial=false;// Reset special state, in case of self-closing special tags
}else if(!isWhitespace(c)){this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c);}}},{key:"stateInAttributeName",value:function stateInAttributeName(c){if(c===CharCodes.Eq||isEndOfTagSection(c)){this.cbs.onattribname(this.sectionStart,this.index);this.sectionStart=-1;this.state=State.AfterAttributeName;this.stateAfterAttributeName(c);}}},{key:"stateAfterAttributeName",value:function stateAfterAttributeName(c){if(c===CharCodes.Eq){this.state=State.BeforeAttributeValue;}else if(c===CharCodes.Slash||c===CharCodes.Gt){this.cbs.onattribend(QuoteType.NoValue,this.index);this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c);}else if(!isWhitespace(c)){this.cbs.onattribend(QuoteType.NoValue,this.index);this.state=State.InAttributeName;this.sectionStart=this.index;}}},{key:"stateBeforeAttributeValue",value:function stateBeforeAttributeValue(c){if(c===CharCodes.DoubleQuote){this.state=State.InAttributeValueDq;this.sectionStart=this.index+1;}else if(c===CharCodes.SingleQuote){this.state=State.InAttributeValueSq;this.sectionStart=this.index+1;}else if(!isWhitespace(c)){this.sectionStart=this.index;this.state=State.InAttributeValueNq;this.stateInAttributeValueNoQuotes(c);// Reconsume token
}}},{key:"handleInAttributeValue",value:function handleInAttributeValue(c,quote){if(c===quote||!this.decodeEntities&&this.fastForwardTo(quote)){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=-1;this.cbs.onattribend(quote===CharCodes.DoubleQuote?QuoteType.Double:QuoteType.Single,this.index);this.state=State.BeforeAttributeName;}else if(this.decodeEntities&&c===CharCodes.Amp){this.baseState=this.state;this.state=State.BeforeEntity;}}},{key:"stateInAttributeValueDoubleQuotes",value:function stateInAttributeValueDoubleQuotes(c){this.handleInAttributeValue(c,CharCodes.DoubleQuote);}},{key:"stateInAttributeValueSingleQuotes",value:function stateInAttributeValueSingleQuotes(c){this.handleInAttributeValue(c,CharCodes.SingleQuote);}},{key:"stateInAttributeValueNoQuotes",value:function stateInAttributeValueNoQuotes(c){if(isWhitespace(c)||c===CharCodes.Gt){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=-1;this.cbs.onattribend(QuoteType.Unquoted,this.index);this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c);}else if(this.decodeEntities&&c===CharCodes.Amp){this.baseState=this.state;this.state=State.BeforeEntity;}}},{key:"stateBeforeDeclaration",value:function stateBeforeDeclaration(c){if(c===CharCodes.OpeningSquareBracket){this.state=State.CDATASequence;this.sequenceIndex=0;}else{this.state=c===CharCodes.Dash?State.BeforeComment:State.InDeclaration;}}},{key:"stateInDeclaration",value:function stateInDeclaration(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.ondeclaration(this.sectionStart,this.index);this.state=State.Text;this.sectionStart=this.index+1;}}},{key:"stateInProcessingInstruction",value:function stateInProcessingInstruction(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.onprocessinginstruction(this.sectionStart,this.index);this.state=State.Text;this.sectionStart=this.index+1;}}},{key:"stateBeforeComment",value:function stateBeforeComment(c){if(c===CharCodes.Dash){this.state=State.InCommentLike;this.currentSequence=Sequences.CommentEnd;// Allow short comments (eg. <!-->)
this.sequenceIndex=2;this.sectionStart=this.index+1;}else{this.state=State.InDeclaration;}}},{key:"stateInSpecialComment",value:function stateInSpecialComment(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.oncomment(this.sectionStart,this.index,0);this.state=State.Text;this.sectionStart=this.index+1;}}},{key:"stateBeforeSpecialS",value:function stateBeforeSpecialS(c){var lower=c|0x20;if(lower===Sequences.ScriptEnd[3]){this.startSpecial(Sequences.ScriptEnd,4);}else if(lower===Sequences.StyleEnd[3]){this.startSpecial(Sequences.StyleEnd,4);}else{this.state=State.InTagName;this.stateInTagName(c);// Consume the token again
}}},{key:"stateBeforeEntity",value:function stateBeforeEntity(c){// Start excess with 1 to include the '&'
this.entityExcess=1;this.entityResult=0;if(c===CharCodes.Number){this.state=State.BeforeNumericEntity;}else if(c===CharCodes.Amp);else{this.trieIndex=0;this.trieCurrent=this.entityTrie[0];this.state=State.InNamedEntity;this.stateInNamedEntity(c);}}},{key:"stateInNamedEntity",value:function stateInNamedEntity(c){this.entityExcess+=1;this.trieIndex=determineBranch(this.entityTrie,this.trieCurrent,this.trieIndex+1,c);if(this.trieIndex<0){this.emitNamedEntity();this.index--;return;}this.trieCurrent=this.entityTrie[this.trieIndex];var masked=this.trieCurrent&BinTrieFlags.VALUE_LENGTH;// If the branch is a value, store it and continue
if(masked){// The mask is the number of bytes of the value, including the current byte.
var valueLength=(masked>>14)-1;// If we have a legacy entity while parsing strictly, just skip the number of bytes
if(!this.allowLegacyEntity()&&c!==CharCodes.Semi){this.trieIndex+=valueLength;}else{// Add 1 as we have already incremented the excess
var entityStart=this.index-this.entityExcess+1;if(entityStart>this.sectionStart){this.emitPartial(this.sectionStart,entityStart);}// If this is a surrogate pair, consume the next two bytes
this.entityResult=this.trieIndex;this.trieIndex+=valueLength;this.entityExcess=0;this.sectionStart=this.index+1;if(valueLength===0){this.emitNamedEntity();}}}}},{key:"emitNamedEntity",value:function emitNamedEntity(){this.state=this.baseState;if(this.entityResult===0){return;}var valueLength=(this.entityTrie[this.entityResult]&BinTrieFlags.VALUE_LENGTH)>>14;switch(valueLength){case 1:{this.emitCodePoint(this.entityTrie[this.entityResult]&~BinTrieFlags.VALUE_LENGTH);break;}case 2:{this.emitCodePoint(this.entityTrie[this.entityResult+1]);break;}case 3:{this.emitCodePoint(this.entityTrie[this.entityResult+1]);this.emitCodePoint(this.entityTrie[this.entityResult+2]);}}}},{key:"stateBeforeNumericEntity",value:function stateBeforeNumericEntity(c){if((c|0x20)===CharCodes.LowerX){this.entityExcess++;this.state=State.InHexEntity;}else{this.state=State.InNumericEntity;this.stateInNumericEntity(c);}}},{key:"emitNumericEntity",value:function emitNumericEntity(strict){var entityStart=this.index-this.entityExcess-1;var numberStart=entityStart+2+Number(this.state===State.InHexEntity);if(numberStart!==this.index){// Emit leading data if any
if(entityStart>this.sectionStart){this.emitPartial(this.sectionStart,entityStart);}this.sectionStart=this.index+Number(strict);this.emitCodePoint(replaceCodePoint(this.entityResult));}this.state=this.baseState;}},{key:"stateInNumericEntity",value:function stateInNumericEntity(c){if(c===CharCodes.Semi){this.emitNumericEntity(true);}else if(isNumber(c)){this.entityResult=this.entityResult*10+(c-CharCodes.Zero);this.entityExcess++;}else{if(this.allowLegacyEntity()){this.emitNumericEntity(false);}else{this.state=this.baseState;}this.index--;}}},{key:"stateInHexEntity",value:function stateInHexEntity(c){if(c===CharCodes.Semi){this.emitNumericEntity(true);}else if(isNumber(c)){this.entityResult=this.entityResult*16+(c-CharCodes.Zero);this.entityExcess++;}else if(isHexDigit(c)){this.entityResult=this.entityResult*16+((c|0x20)-CharCodes.LowerA+10);this.entityExcess++;}else{if(this.allowLegacyEntity()){this.emitNumericEntity(false);}else{this.state=this.baseState;}this.index--;}}},{key:"allowLegacyEntity",value:function allowLegacyEntity(){return!this.xmlMode&&(this.baseState===State.Text||this.baseState===State.InSpecialTag);}/**
           * Remove data that has already been consumed from the buffer.
           */},{key:"cleanup",value:function cleanup(){// If we are inside of text or attributes, emit what we already have.
if(this.running&&this.sectionStart!==this.index){if(this.state===State.Text||this.state===State.InSpecialTag&&this.sequenceIndex===0){this.cbs.ontext(this.sectionStart,this.index);this.sectionStart=this.index;}else if(this.state===State.InAttributeValueDq||this.state===State.InAttributeValueSq||this.state===State.InAttributeValueNq){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=this.index;}}}},{key:"shouldContinue",value:function shouldContinue(){return this.index<this.buffer.length+this.offset&&this.running;}/**
           * Iterates through the buffer, calling the function corresponding to the current state.
           *
           * States that are more likely to be hit are higher up, as a performance improvement.
           */},{key:"parse",value:function parse(){while(this.shouldContinue()){var _c2=this.buffer.charCodeAt(this.index-this.offset);switch(this.state){case State.Text:{this.stateText(_c2);break;}case State.SpecialStartSequence:{this.stateSpecialStartSequence(_c2);break;}case State.InSpecialTag:{this.stateInSpecialTag(_c2);break;}case State.CDATASequence:{this.stateCDATASequence(_c2);break;}case State.InAttributeValueDq:{this.stateInAttributeValueDoubleQuotes(_c2);break;}case State.InAttributeName:{this.stateInAttributeName(_c2);break;}case State.InCommentLike:{this.stateInCommentLike(_c2);break;}case State.InSpecialComment:{this.stateInSpecialComment(_c2);break;}case State.BeforeAttributeName:{this.stateBeforeAttributeName(_c2);break;}case State.InTagName:{this.stateInTagName(_c2);break;}case State.InClosingTagName:{this.stateInClosingTagName(_c2);break;}case State.BeforeTagName:{this.stateBeforeTagName(_c2);break;}case State.AfterAttributeName:{this.stateAfterAttributeName(_c2);break;}case State.InAttributeValueSq:{this.stateInAttributeValueSingleQuotes(_c2);break;}case State.BeforeAttributeValue:{this.stateBeforeAttributeValue(_c2);break;}case State.BeforeClosingTagName:{this.stateBeforeClosingTagName(_c2);break;}case State.AfterClosingTagName:{this.stateAfterClosingTagName(_c2);break;}case State.BeforeSpecialS:{this.stateBeforeSpecialS(_c2);break;}case State.InAttributeValueNq:{this.stateInAttributeValueNoQuotes(_c2);break;}case State.InSelfClosingTag:{this.stateInSelfClosingTag(_c2);break;}case State.InDeclaration:{this.stateInDeclaration(_c2);break;}case State.BeforeDeclaration:{this.stateBeforeDeclaration(_c2);break;}case State.BeforeComment:{this.stateBeforeComment(_c2);break;}case State.InProcessingInstruction:{this.stateInProcessingInstruction(_c2);break;}case State.InNamedEntity:{this.stateInNamedEntity(_c2);break;}case State.BeforeEntity:{this.stateBeforeEntity(_c2);break;}case State.InHexEntity:{this.stateInHexEntity(_c2);break;}case State.InNumericEntity:{this.stateInNumericEntity(_c2);break;}default:{// `this._state === State.BeforeNumericEntity`
this.stateBeforeNumericEntity(_c2);}}this.index++;}this.cleanup();}},{key:"finish",value:function finish(){if(this.state===State.InNamedEntity){this.emitNamedEntity();}// If there is remaining data, emit it in a reasonable way
if(this.sectionStart<this.index){this.handleTrailingData();}this.cbs.onend();}/** Handle any trailing data. */},{key:"handleTrailingData",value:function handleTrailingData(){var endIndex=this.buffer.length+this.offset;if(this.state===State.InCommentLike){if(this.currentSequence===Sequences.CdataEnd){this.cbs.oncdata(this.sectionStart,endIndex,0);}else{this.cbs.oncomment(this.sectionStart,endIndex,0);}}else if(this.state===State.InNumericEntity&&this.allowLegacyEntity()){this.emitNumericEntity(false);// All trailing data will have been consumed
}else if(this.state===State.InHexEntity&&this.allowLegacyEntity()){this.emitNumericEntity(false);// All trailing data will have been consumed
}else if(this.state===State.InTagName||this.state===State.BeforeAttributeName||this.state===State.BeforeAttributeValue||this.state===State.AfterAttributeName||this.state===State.InAttributeName||this.state===State.InAttributeValueSq||this.state===State.InAttributeValueDq||this.state===State.InAttributeValueNq||this.state===State.InClosingTagName);else{this.cbs.ontext(this.sectionStart,endIndex);}}},{key:"emitPartial",value:function emitPartial(start,endIndex){if(this.baseState!==State.Text&&this.baseState!==State.InSpecialTag){this.cbs.onattribdata(start,endIndex);}else{this.cbs.ontext(start,endIndex);}}},{key:"emitCodePoint",value:function emitCodePoint(cp){if(this.baseState!==State.Text&&this.baseState!==State.InSpecialTag){this.cbs.onattribentity(cp);}else{this.cbs.ontextentity(cp);}}}]);return Tokenizer;}();var formTags=new Set(["input","option","optgroup","select","button","datalist","textarea"]);var pTag=new Set(["p"]);var tableSectionTags=new Set(["thead","tbody"]);var ddtTags=new Set(["dd","dt"]);var rtpTags=new Set(["rt","rp"]);var openImpliesClose=new Map([["tr",new Set(["tr","th","td"])],["th",new Set(["th"])],["td",new Set(["thead","th","td"])],["body",new Set(["head","link","script"])],["li",new Set(["li"])],["p",pTag],["h1",pTag],["h2",pTag],["h3",pTag],["h4",pTag],["h5",pTag],["h6",pTag],["select",formTags],["input",formTags],["output",formTags],["button",formTags],["datalist",formTags],["textarea",formTags],["option",new Set(["option"])],["optgroup",new Set(["optgroup","option"])],["dd",ddtTags],["dt",ddtTags],["address",pTag],["article",pTag],["aside",pTag],["blockquote",pTag],["details",pTag],["div",pTag],["dl",pTag],["fieldset",pTag],["figcaption",pTag],["figure",pTag],["footer",pTag],["form",pTag],["header",pTag],["hr",pTag],["main",pTag],["nav",pTag],["ol",pTag],["pre",pTag],["section",pTag],["table",pTag],["ul",pTag],["rt",rtpTags],["rp",rtpTags],["tbody",tableSectionTags],["tfoot",tableSectionTags]]);var voidElements=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);var foreignContextElements=new Set(["math","svg"]);var htmlIntegrationElements=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignobject","desc","title"]);var reNameEnd=/\s|\//;var Parser$1=/*#__PURE__*/function(){function Parser$1(cbs){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Parser$1);var _a,_b,_c,_d,_e;this.options=options;/** The start index of the last event. */this.startIndex=0;/** The end index of the last event. */this.endIndex=0;/**
               * Store the start index of the current open tag,
               * so we can update the start index for attributes.
               */this.openTagStart=0;this.tagname="";this.attribname="";this.attribvalue="";this.attribs=null;this.stack=[];this.foreignContext=[];this.buffers=[];this.bufferOffset=0;/** The index of the last written buffer. Used when resuming after a `pause()`. */this.writeIndex=0;/** Indicates whether the parser has finished running / `.end` has been called. */this.ended=false;this.cbs=cbs!==null&&cbs!==void 0?cbs:{};this.lowerCaseTagNames=(_a=options.lowerCaseTags)!==null&&_a!==void 0?_a:!options.xmlMode;this.lowerCaseAttributeNames=(_b=options.lowerCaseAttributeNames)!==null&&_b!==void 0?_b:!options.xmlMode;this.tokenizer=new((_c=options.Tokenizer)!==null&&_c!==void 0?_c:Tokenizer)(this.options,this);(_e=(_d=this.cbs).onparserinit)===null||_e===void 0?void 0:_e.call(_d,this);}// Tokenizer event handlers
/** @internal */_createClass(Parser$1,[{key:"ontext",value:function ontext(start,endIndex){var _a,_b;var data=this.getSlice(start,endIndex);this.endIndex=endIndex-1;(_b=(_a=this.cbs).ontext)===null||_b===void 0?void 0:_b.call(_a,data);this.startIndex=endIndex;}/** @internal */},{key:"ontextentity",value:function ontextentity(cp){var _a,_b;/*
               * Entities can be emitted on the character, or directly after.
               * We use the section start here to get accurate indices.
               */var index=this.tokenizer.getSectionStart();this.endIndex=index-1;(_b=(_a=this.cbs).ontext)===null||_b===void 0?void 0:_b.call(_a,fromCodePoint(cp));this.startIndex=index;}},{key:"isVoidElement",value:function isVoidElement(name){return!this.options.xmlMode&&voidElements.has(name);}/** @internal */},{key:"onopentagname",value:function onopentagname(start,endIndex){this.endIndex=endIndex;var name=this.getSlice(start,endIndex);if(this.lowerCaseTagNames){name=name.toLowerCase();}this.emitOpenTag(name);}},{key:"emitOpenTag",value:function emitOpenTag(name){var _a,_b,_c,_d;this.openTagStart=this.startIndex;this.tagname=name;var impliesClose=!this.options.xmlMode&&openImpliesClose.get(name);if(impliesClose){while(this.stack.length>0&&impliesClose.has(this.stack[this.stack.length-1])){var element=this.stack.pop();(_b=(_a=this.cbs).onclosetag)===null||_b===void 0?void 0:_b.call(_a,element,true);}}if(!this.isVoidElement(name)){this.stack.push(name);if(foreignContextElements.has(name)){this.foreignContext.push(true);}else if(htmlIntegrationElements.has(name)){this.foreignContext.push(false);}}(_d=(_c=this.cbs).onopentagname)===null||_d===void 0?void 0:_d.call(_c,name);if(this.cbs.onopentag)this.attribs={};}},{key:"endOpenTag",value:function endOpenTag(isImplied){var _a,_b;this.startIndex=this.openTagStart;if(this.attribs){(_b=(_a=this.cbs).onopentag)===null||_b===void 0?void 0:_b.call(_a,this.tagname,this.attribs,isImplied);this.attribs=null;}if(this.cbs.onclosetag&&this.isVoidElement(this.tagname)){this.cbs.onclosetag(this.tagname,true);}this.tagname="";}/** @internal */},{key:"onopentagend",value:function onopentagend(endIndex){this.endIndex=endIndex;this.endOpenTag(false);// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"onclosetag",value:function onclosetag(start,endIndex){var _a,_b,_c,_d,_e,_f;this.endIndex=endIndex;var name=this.getSlice(start,endIndex);if(this.lowerCaseTagNames){name=name.toLowerCase();}if(foreignContextElements.has(name)||htmlIntegrationElements.has(name)){this.foreignContext.pop();}if(!this.isVoidElement(name)){var pos=this.stack.lastIndexOf(name);if(pos!==-1){if(this.cbs.onclosetag){var count=this.stack.length-pos;while(count--){// We know the stack has sufficient elements.
this.cbs.onclosetag(this.stack.pop(),count!==0);}}else this.stack.length=pos;}else if(!this.options.xmlMode&&name==="p"){// Implicit open before close
this.emitOpenTag("p");this.closeCurrentTag(true);}}else if(!this.options.xmlMode&&name==="br"){// We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.
(_b=(_a=this.cbs).onopentagname)===null||_b===void 0?void 0:_b.call(_a,"br");(_d=(_c=this.cbs).onopentag)===null||_d===void 0?void 0:_d.call(_c,"br",{},true);(_f=(_e=this.cbs).onclosetag)===null||_f===void 0?void 0:_f.call(_e,"br",false);}// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"onselfclosingtag",value:function onselfclosingtag(endIndex){this.endIndex=endIndex;if(this.options.xmlMode||this.options.recognizeSelfClosing||this.foreignContext[this.foreignContext.length-1]){this.closeCurrentTag(false);// Set `startIndex` for next node
this.startIndex=endIndex+1;}else{// Ignore the fact that the tag is self-closing.
this.onopentagend(endIndex);}}},{key:"closeCurrentTag",value:function closeCurrentTag(isOpenImplied){var _a,_b;var name=this.tagname;this.endOpenTag(isOpenImplied);// Self-closing tags will be on the top of the stack
if(this.stack[this.stack.length-1]===name){// If the opening tag isn't implied, the closing tag has to be implied.
(_b=(_a=this.cbs).onclosetag)===null||_b===void 0?void 0:_b.call(_a,name,!isOpenImplied);this.stack.pop();}}/** @internal */},{key:"onattribname",value:function onattribname(start,endIndex){this.startIndex=start;var name=this.getSlice(start,endIndex);this.attribname=this.lowerCaseAttributeNames?name.toLowerCase():name;}/** @internal */},{key:"onattribdata",value:function onattribdata(start,endIndex){this.attribvalue+=this.getSlice(start,endIndex);}/** @internal */},{key:"onattribentity",value:function onattribentity(cp){this.attribvalue+=fromCodePoint(cp);}/** @internal */},{key:"onattribend",value:function onattribend(quote,endIndex){var _a,_b;this.endIndex=endIndex;(_b=(_a=this.cbs).onattribute)===null||_b===void 0?void 0:_b.call(_a,this.attribname,this.attribvalue,quote===QuoteType.Double?'"':quote===QuoteType.Single?"'":quote===QuoteType.NoValue?undefined:null);if(this.attribs&&!Object.prototype.hasOwnProperty.call(this.attribs,this.attribname)){this.attribs[this.attribname]=this.attribvalue;}this.attribvalue="";}},{key:"getInstructionName",value:function getInstructionName(value){var index=value.search(reNameEnd);var name=index<0?value:value.substr(0,index);if(this.lowerCaseTagNames){name=name.toLowerCase();}return name;}/** @internal */},{key:"ondeclaration",value:function ondeclaration(start,endIndex){this.endIndex=endIndex;var value=this.getSlice(start,endIndex);if(this.cbs.onprocessinginstruction){var _name5=this.getInstructionName(value);this.cbs.onprocessinginstruction("!".concat(_name5),"!".concat(value));}// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"onprocessinginstruction",value:function onprocessinginstruction(start,endIndex){this.endIndex=endIndex;var value=this.getSlice(start,endIndex);if(this.cbs.onprocessinginstruction){var _name6=this.getInstructionName(value);this.cbs.onprocessinginstruction("?".concat(_name6),"?".concat(value));}// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"oncomment",value:function oncomment(start,endIndex,offset){var _a,_b,_c,_d;this.endIndex=endIndex;(_b=(_a=this.cbs).oncomment)===null||_b===void 0?void 0:_b.call(_a,this.getSlice(start,endIndex-offset));(_d=(_c=this.cbs).oncommentend)===null||_d===void 0?void 0:_d.call(_c);// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"oncdata",value:function oncdata(start,endIndex,offset){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;this.endIndex=endIndex;var value=this.getSlice(start,endIndex-offset);if(this.options.xmlMode||this.options.recognizeCDATA){(_b=(_a=this.cbs).oncdatastart)===null||_b===void 0?void 0:_b.call(_a);(_d=(_c=this.cbs).ontext)===null||_d===void 0?void 0:_d.call(_c,value);(_f=(_e=this.cbs).oncdataend)===null||_f===void 0?void 0:_f.call(_e);}else{(_h=(_g=this.cbs).oncomment)===null||_h===void 0?void 0:_h.call(_g,"[CDATA[".concat(value,"]]"));(_k=(_j=this.cbs).oncommentend)===null||_k===void 0?void 0:_k.call(_j);}// Set `startIndex` for next node
this.startIndex=endIndex+1;}/** @internal */},{key:"onend",value:function onend(){var _a,_b;if(this.cbs.onclosetag){// Set the end index for all remaining tags
this.endIndex=this.startIndex;for(var _index5=this.stack.length;_index5>0;this.cbs.onclosetag(this.stack[--_index5],true)){;}}(_b=(_a=this.cbs).onend)===null||_b===void 0?void 0:_b.call(_a);}/**
           * Resets the parser to a blank state, ready to parse a new HTML document
           */},{key:"reset",value:function reset(){var _a,_b,_c,_d;(_b=(_a=this.cbs).onreset)===null||_b===void 0?void 0:_b.call(_a);this.tokenizer.reset();this.tagname="";this.attribname="";this.attribs=null;this.stack.length=0;this.startIndex=0;this.endIndex=0;(_d=(_c=this.cbs).onparserinit)===null||_d===void 0?void 0:_d.call(_c,this);this.buffers.length=0;this.bufferOffset=0;this.writeIndex=0;this.ended=false;}/**
           * Resets the parser, then parses a complete document and
           * pushes it to the handler.
           *
           * @param data Document to parse.
           */},{key:"parseComplete",value:function parseComplete(data){this.reset();this.end(data);}},{key:"getSlice",value:function getSlice(start,end){while(start-this.bufferOffset>=this.buffers[0].length){this.shiftBuffer();}var slice=this.buffers[0].slice(start-this.bufferOffset,end-this.bufferOffset);while(end-this.bufferOffset>this.buffers[0].length){this.shiftBuffer();slice+=this.buffers[0].slice(0,end-this.bufferOffset);}return slice;}},{key:"shiftBuffer",value:function shiftBuffer(){this.bufferOffset+=this.buffers[0].length;this.writeIndex--;this.buffers.shift();}/**
           * Parses a chunk of data and calls the corresponding callbacks.
           *
           * @param chunk Chunk to parse.
           */},{key:"write",value:function write(chunk){var _a,_b;if(this.ended){(_b=(_a=this.cbs).onerror)===null||_b===void 0?void 0:_b.call(_a,new Error(".write() after done!"));return;}this.buffers.push(chunk);if(this.tokenizer.running){this.tokenizer.write(chunk);this.writeIndex++;}}/**
           * Parses the end of the buffer and clears the stack, calls onend.
           *
           * @param chunk Optional final chunk to parse.
           */},{key:"end",value:function end(chunk){var _a,_b;if(this.ended){(_b=(_a=this.cbs).onerror)===null||_b===void 0?void 0:_b.call(_a,new Error(".end() after done!"));return;}if(chunk)this.write(chunk);this.ended=true;this.tokenizer.end();}/**
           * Pauses parsing. The parser won't emit events until `resume` is called.
           */},{key:"pause",value:function pause(){this.tokenizer.pause();}/**
           * Resumes parsing after `pause` was called.
           */},{key:"resume",value:function resume(){this.tokenizer.resume();while(this.tokenizer.running&&this.writeIndex<this.buffers.length){this.tokenizer.write(this.buffers[this.writeIndex++]);}if(this.ended)this.tokenizer.end();}/**
           * Alias of `write`, for backwards compatibility.
           *
           * @param chunk Chunk to parse.
           * @deprecated
           */},{key:"parseChunk",value:function parseChunk(chunk){this.write(chunk);}/**
           * Alias of `end`, for backwards compatibility.
           *
           * @param chunk Optional final chunk to parse.
           * @deprecated
           */},{key:"done",value:function done(chunk){this.end(chunk);}}]);return Parser$1;}();// Helper methods
/**
       * Parses the data, returns the resulting document.
       *
       * @param data The data that should be parsed.
       * @param options Optional options for the parser and DOM builder.
       */function parseDocument(data,options){var handler=new DomHandler(undefined,options);new Parser$1(handler,options).end(data);return handler.root;}/**
       * Types used in signatures of Cheerio methods.
       *
       * @category Cheerio
       */var parse$2=getParse(function(content,options,isDocument,context){return options.xmlMode||options._useHtmlParser2?parseDocument(content,options):parseWithParse5(content,options,isDocument,context);});// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616
/**
       * Create a querying function, bound to a document created from the provided markup.
       *
       * Note that similar to web browser contexts, this operation may introduce
       * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to
       * switch to fragment mode and disable this.
       *
       * @param content - Markup to be loaded.
       * @param options - Options for the created instance.
       * @param isDocument - Allows parser to be switched to fragment mode.
       * @returns The loaded document.
       * @see {@link https://cheerio.js.org#loading} for additional usage information.
       */var load=exports('l',getLoad(parse$2,function(dom,options){return options.xmlMode||options._useHtmlParser2?render$1(dom,options):renderWithParse5(dom);}));/**
       * The default cheerio instance.
       *
       * @deprecated Use the function returned by `load` instead.
       */load([]);var createStoreImpl=function createStoreImpl(createState){var state;var listeners=/* @__PURE__ */new Set();var setState=function setState(partial,replace){var nextState=typeof partial==="function"?partial(state):partial;if(nextState!==state){var previousState=state;state=replace?nextState:Object.assign({},state,nextState);listeners.forEach(function(listener){return listener(state,previousState);});}};var getState=function getState(){return state;};var subscribe=function subscribe(listener){listeners.add(listener);return function(){return listeners.delete(listener);};};var destroy=function destroy(){return listeners.clear();};var api={setState:setState,getState:getState,subscribe:subscribe,destroy:destroy};state=createState(setState,getState,api);return api;};var createStore=function createStore(createState){return createState?createStoreImpl(createState):createStoreImpl;};var withSelector={exports:{}};var withSelector_production_min={};var require$$0$1=/*@__PURE__*/getAugmentedNamespace(compat_module);var shim={exports:{}};var useSyncExternalStoreShim_production_min={};/**
       * @license React
       * use-sync-external-store-shim.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var e=require$$0$1;function h$3(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b;}var k$1="function"===typeof Object.is?Object.is:h$3,l$1=e.useState,m=e.useEffect,n$2=e.useLayoutEffect,p$2=e.useDebugValue;function q$2(a,b){var d=b(),f=l$1({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n$2(function(){c.value=d;c.getSnapshot=b;r$2(c)&&g({inst:c});},[a,d,b]);m(function(){r$2(c)&&g({inst:c});return a(function(){r$2(c)&&g({inst:c});});},[a]);p$2(d);return d;}function r$2(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k$1(a,d);}catch(f){return!0;}}function t$2(a,b){return b();}var u$2="undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement?t$2:q$2;useSyncExternalStoreShim_production_min.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u$2;{shim.exports=useSyncExternalStoreShim_production_min;}/**
       * @license React
       * use-sync-external-store-shim/with-selector.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var h$2=require$$0$1,n$1=shim.exports;function p$1(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b;}var q$1="function"===typeof Object.is?Object.is:p$1,r$1=n$1.useSyncExternalStore,t$1=h$2.useRef,u$1=h$2.useEffect,v$1=h$2.useMemo,w$1=h$2.useDebugValue;withSelector_production_min.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t$1(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f;}else f=c.current;c=v$1(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b;}return k=a;}b=k;if(q$1(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e;}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b());},null===m?void 0:function(){return a(m());}];},[b,e,l,g]);var d=r$1(a,c[0],c[1]);u$1(function(){f.hasValue=!0;f.value=d;},[d]);w$1(d);return d;};{withSelector.exports=withSelector_production_min;}function useStore(api){var selector=arguments.length>1&&arguments[1]!==undefined?arguments[1]:api.getState;var equalityFn=arguments.length>2?arguments[2]:undefined;var slice=withSelector.exports.useSyncExternalStoreWithSelector(api.subscribe,api.getState,api.getServerState||api.getState,selector,equalityFn);d$3(slice);return slice;}var createImpl=function createImpl(createState){var api=typeof createState==="function"?createStore(createState):createState;var useBoundStore=function useBoundStore(selector,equalityFn){return useStore(api,selector,equalityFn);};Object.assign(useBoundStore,api);return useBoundStore;};var create=function create(createState){return createState?createImpl(createState):createImpl;};var create$1=exports('d',create);var __defProp=Object.defineProperty;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty;var __propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=function __defNormalProp(obj,key,value){return key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;};var __spreadValues=function __spreadValues(a,b){for(var prop in b||(b={})){if(__hasOwnProp.call(b,prop))__defNormalProp(a,prop,b[prop]);}if(__getOwnPropSymbols){var _iterator9=_createForOfIteratorHelper(__getOwnPropSymbols(b)),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var prop=_step9.value;if(__propIsEnum.call(b,prop))__defNormalProp(a,prop,b[prop]);}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}}return a;};var toThenable=function toThenable(fn){return function(input){try{var result=fn(input);if(result instanceof Promise){return result;}return{then:function then(onFulfilled){return toThenable(onFulfilled)(result);},catch:function _catch(_onRejected){return this;}};}catch(e){return{then:function then(_onFulfilled){return this;},catch:function _catch(onRejected){return toThenable(onRejected)(e);}};}};};var persistImpl=function persistImpl(config,baseOptions){return function(set,get,api){var options=__spreadValues({getStorage:function getStorage(){return localStorage;},serialize:JSON.stringify,deserialize:JSON.parse,partialize:function partialize(state){return state;},version:0,merge:function merge(persistedState,currentState){return __spreadValues(__spreadValues({},currentState),persistedState);}},baseOptions);var _hasHydrated=false;var hydrationListeners=/* @__PURE__ */new Set();var finishHydrationListeners=/* @__PURE__ */new Set();var storage;try{storage=options.getStorage();}catch(e){}if(!storage){return config(function(){console.warn("[zustand persist middleware] Unable to update item '".concat(options.name,"', the given storage is currently unavailable."));set.apply(void 0,arguments);},get,api);}var thenableSerialize=toThenable(options.serialize);var setItem=function setItem(){var state=options.partialize(__spreadValues({},get()));var errorInSync;var thenable=thenableSerialize({state:state,version:options.version}).then(function(serializedValue){return storage.setItem(options.name,serializedValue);}).catch(function(e){errorInSync=e;});if(errorInSync){throw errorInSync;}return thenable;};var savedSetState=api.setState;api.setState=function(state,replace){savedSetState(state,replace);void setItem();};var configResult=config(function(){set.apply(void 0,arguments);void setItem();},get,api);var stateFromStorage;var hydrate=function hydrate(){var _a;if(!storage)return;_hasHydrated=false;hydrationListeners.forEach(function(cb){return cb(get());});var postRehydrationCallback=((_a=options.onRehydrateStorage)==null?void 0:_a.call(options,get()))||void 0;return toThenable(storage.getItem.bind(storage))(options.name).then(function(storageValue){if(storageValue){return options.deserialize(storageValue);}}).then(function(deserializedStorageValue){if(deserializedStorageValue){if(typeof deserializedStorageValue.version==="number"&&deserializedStorageValue.version!==options.version){if(options.migrate){return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);}console.error("State loaded from storage couldn't be migrated since no migrate function was provided");}else{return deserializedStorageValue.state;}}}).then(function(migratedState){var _a2;stateFromStorage=options.merge(migratedState,(_a2=get())!=null?_a2:configResult);set(stateFromStorage,true);return setItem();}).then(function(){postRehydrationCallback==null?void 0:postRehydrationCallback(stateFromStorage,void 0);_hasHydrated=true;finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage);});}).catch(function(e){postRehydrationCallback==null?void 0:postRehydrationCallback(void 0,e);});};api.persist={setOptions:function setOptions(newOptions){options=__spreadValues(__spreadValues({},options),newOptions);if(newOptions.getStorage){storage=newOptions.getStorage();}},clearStorage:function clearStorage(){storage==null?void 0:storage.removeItem(options.name);},rehydrate:function rehydrate(){return hydrate();},hasHydrated:function hasHydrated(){return _hasHydrated;},onHydrate:function onHydrate(cb){hydrationListeners.add(cb);return function(){hydrationListeners.delete(cb);};},onFinishHydration:function onFinishHydration(cb){finishHydrationListeners.add(cb);return function(){finishHydrationListeners.delete(cb);};}};hydrate();return stateFromStorage||configResult;};};var persist=exports('p',persistImpl);function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++){t[e-1]=arguments[e];}throw Error("[Immer] minified error nr: "+n+(t.length?" "+t.map(function(n){return"'"+n+"'";}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf");}function r(n){return!!n&&!!n[Q];}function t(n){return!!n&&(function(n){if(!n||"object"!=_typeof(n))return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return t===Object||"function"==typeof t&&Function.toString.call(t)===Z;}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n));}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach(function(e){t&&"symbol"==_typeof(e)||r(e,n[e],n);}):n.forEach(function(t,e){return r(e,t,n);});}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0;}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r);}function a$1(n,r){return 2===o(n)?n.get(r):n[r];}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t;}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r;}function s(n){return X&&n instanceof Map;}function v(n){return q&&n instanceof Set;}function p(n){return n.o||n.t;}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]});}return Object.create(Object.getPrototypeOf(n),r);}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h$1),Object.freeze(n),e&&i(n,function(n,r){return d(r,!0);},!0),n);}function h$1(){n(2);}function y(n){return null==n||"object"!=_typeof(n)||Object.isFrozen(n);}function b(r){var t=tn[r];return t||n(18,r),t;}function _(){return U;}function j(n,r){r&&(b("Patches"),n.u=[],n.s=[],n.v=r);}function O(n){g(n),n.p.forEach(S),n.p=null;}function g(n){n===U&&(U=n.l);}function w(n){return U={p:[],l:U,h:n,m:!0,_:0};}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0;}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b("ES5").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x$1(e,r)),e.u&&b("Patches").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0;}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,function(i,o){return A(n,e,r,i,o,t);},!0),r;if(e.A!==n)return r;if(!e.P)return x$1(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,function(r,i){return A(n,e,o,r,i,t);}),x$1(n,o,!1),t&&n.u&&b("Patches").R(e,t,n.u,n.s);}return e.o;}function A(e,i,o,a,c,s){if(r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1;}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x$1(e,c);}}function x$1(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t);}function z(n,r){var t=n[Q];return(t?p(t):n)[r];}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t);}}function k(n){n.P||(n.P=!0,n.l&&k(n.l));}function E$1(n){n.o||(n.o=l(n.t));}function R$1(n,r,t){var e=s(r)?b("MapSet").N(r,t):v(r)?b("MapSet").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on$1);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f;}(r,t):b("ES5").J(r,t);return(t?t.A:_()).p.push(e),e;}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1;}else e=F(r,c);return i(e,function(r,t){u&&a$1(u.t,r)===t||f(e,r,n(t));}),3===c?new Set(e):e;}(e);}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n);}return l(n);}var G,U,W="undefined"!=typeof Symbol&&"symbol"==_typeof(Symbol("x")),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach(function(t){r[t]=Object.getOwnPropertyDescriptor(n,t);}),r;},tn={},en={get:function get(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0;}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E$1(n),n.o[r]=R$1(n.A.h,i,n)):i;},has:function has(n,r){return r in p(n);},ownKeys:function ownKeys(n){return Reflect.ownKeys(p(n));},set:function set(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E$1(n),k(n);}return n.o[r]===t&&"number"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0);},deleteProperty:function deleteProperty(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E$1(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0;},getOwnPropertyDescriptor:function getOwnPropertyDescriptor(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||"length"!==r,enumerable:e.enumerable,value:t[r]}:e;},defineProperty:function defineProperty(){n(11);},getPrototypeOf:function getPrototypeOf(n){return Object.getPrototypeOf(n.t);},setPrototypeOf:function setPrototypeOf(){n(12);}},on$1={};i(en,function(n,r){on$1[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments);};}),on$1.deleteProperty=function(r,t){return on$1.set.call(this,r,t,void 0);},on$1.set=function(r,t,e){return en.set.call(this,r[0],t,e,r[0]);};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if("function"==typeof r&&"function"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++){e[o-1]=arguments[o];}return a.produce(n,function(n){var t;return(t=i).call.apply(t,[r,n].concat(e));});};}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),t(r)){var c=w(e),s=R$1(e,r,void 0),v=!0;try{f=i(s),v=!1;}finally{v?O(c):g(c);}return"undefined"!=typeof Promise&&f instanceof Promise?f.then(function(n){return j(c,o),P(n,c);},function(n){throw O(c),n;}):(j(c,o),P(f,c));}if(!r||"object"!=_typeof(r)){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b("Patches").M(r,f,p,l),o(p,l);}return f;}n(21,r);},this.produceWithPatches=function(n,r){if("function"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++){i[o-1]=arguments[o];}return e.produceWithPatches(r,function(r){return n.apply(void 0,[r].concat(i));});};var t,i,o=e.produce(n,r,function(n,r){t=n,i=r;});return"undefined"!=typeof Promise&&o instanceof Promise?o.then(function(n){return[n,t,i];}):[o,t,i];},"boolean"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),"boolean"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze);}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R$1(this,e,void 0);return o[Q].C=!0,g(i),o;},i.finishDraft=function(r,t){var e=r&&r[Q];var i=e.A;return j(i,t),P(void 0,i);},i.setAutoFreeze=function(n){this.F=n;},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r;},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break;}}e>-1&&(t=t.slice(e+1));var o=b("Patches").$;return r(n)?o(n,t):this.produce(n,function(n){return o(n,t);});},e;}(),an=new un(),fn=an.produce;an.produceWithPatches.bind(an);an.setAutoFreeze.bind(an);an.setUseProxies.bind(an);an.applyPatches.bind(an);an.createDraft.bind(an);an.finishDraft.bind(an);var immerImpl=function immerImpl(initializer){return function(set,get,store){store.setState=function(updater,replace){var nextState=typeof updater==="function"?fn(updater):updater;for(var _len17=arguments.length,a=new Array(_len17>2?_len17-2:0),_key17=2;_key17<_len17;_key17++){a[_key17-2]=arguments[_key17];}return set.apply(void 0,[nextState,replace].concat(a));};return initializer(store.setState,get,store);};};var immer=exports('i',immerImpl);var win;if(typeof window!=="undefined"){win=window;}else if(typeof commonjsGlobal!=="undefined"){win=commonjsGlobal;}else if(typeof self!=="undefined"){win=self;}else{win={};}var window_1=win;var __viteBrowserExternal={};var __viteBrowserExternal$1=/*#__PURE__*/Object.freeze((_Object$freeze11={__proto__:null},_defineProperty(_Object$freeze11,Symbol.toStringTag,'Module'),_defineProperty(_Object$freeze11,'default',__viteBrowserExternal),_Object$freeze11));var require$$0=/*@__PURE__*/getAugmentedNamespace(__viteBrowserExternal$1);var topLevel=typeof commonjsGlobal!=='undefined'?commonjsGlobal:typeof window!=='undefined'?window:{};var minDoc=require$$0;var doccy;if(typeof document!=='undefined'){doccy=document;}else{doccy=topLevel['__GLOBAL_DOCUMENT_CACHE@4'];if(!doccy){doccy=topLevel['__GLOBAL_DOCUMENT_CACHE@4']=minDoc;}}var document_1=doccy;var keycode$1={exports:{}};(function(module,exports){// Source: http://jsfiddle.net/vWx8V/
// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes
/**
       * Conenience method returns corresponding value for given keyName or keyCode.
       *
       * @param {Mixed} keyCode {Number} or keyName {String}
       * @return {Mixed}
       * @api public
       */function keyCode(searchInput){// Keyboard Events
if(searchInput&&'object'===_typeof(searchInput)){var hasKeyCode=searchInput.which||searchInput.keyCode||searchInput.charCode;if(hasKeyCode)searchInput=hasKeyCode;}// Numbers
if('number'===typeof searchInput)return names[searchInput];// Everything else (cast to string)
var search=String(searchInput);// check codes
var foundNamedKey=codes[search.toLowerCase()];if(foundNamedKey)return foundNamedKey;// check aliases
var foundNamedKey=aliases[search.toLowerCase()];if(foundNamedKey)return foundNamedKey;// weird character?
if(search.length===1)return search.charCodeAt(0);return undefined;}/**
       * Compares a keyboard event with a given keyCode or keyName.
       *
       * @param {Event} event Keyboard event that should be tested
       * @param {Mixed} keyCode {Number} or keyName {String}
       * @return {Boolean}
       * @api public
       */keyCode.isEventKey=function isEventKey(event,nameOrCode){if(event&&'object'===_typeof(event)){var keyCode=event.which||event.keyCode||event.charCode;if(keyCode===null||keyCode===undefined){return false;}if(typeof nameOrCode==='string'){// check codes
var foundNamedKey=codes[nameOrCode.toLowerCase()];if(foundNamedKey){return foundNamedKey===keyCode;}// check aliases
var foundNamedKey=aliases[nameOrCode.toLowerCase()];if(foundNamedKey){return foundNamedKey===keyCode;}}else if(typeof nameOrCode==='number'){return nameOrCode===keyCode;}return false;}};exports=module.exports=keyCode;/**
       * Get by name
       *
       *   exports.code['enter'] // => 13
       */var codes=exports.code=exports.codes={'backspace':8,'tab':9,'enter':13,'shift':16,'ctrl':17,'alt':18,'pause/break':19,'caps lock':20,'esc':27,'space':32,'page up':33,'page down':34,'end':35,'home':36,'left':37,'up':38,'right':39,'down':40,'insert':45,'delete':46,'command':91,'left command':91,'right command':93,'numpad *':106,'numpad +':107,'numpad -':109,'numpad .':110,'numpad /':111,'num lock':144,'scroll lock':145,'my computer':182,'my calculator':183,';':186,'=':187,',':188,'-':189,'.':190,'/':191,'`':192,'[':219,'\\':220,']':221,"'":222};// Helper aliases
var aliases=exports.aliases={'windows':91,'⇧':16,'⌥':18,'⌃':17,'⌘':91,'ctl':17,'control':17,'option':18,'pause':19,'break':19,'caps':20,'return':13,'escape':27,'spc':32,'spacebar':32,'pgup':33,'pgdn':34,'ins':45,'del':46,'cmd':91};/*!
       * Programatically add the following
       */ // lower case chars
for(i=97;i<123;i++){codes[String.fromCharCode(i)]=i-32;}// numbers
for(var i=48;i<58;i++){codes[i-48]=i;}// function keys
for(i=1;i<13;i++){codes['f'+i]=i+111;}// numpad keys
for(i=0;i<10;i++){codes['numpad '+i]=i+96;}/**
       * Get by code
       *
       *   exports.name[13] // => 'Enter'
       */var names=exports.names=exports.title={};// title for backward compat
// Create reverse mapping
for(i in codes){names[codes[i]]=i;}// Add aliases
for(var alias in aliases){codes[alias]=aliases[alias];}})(keycode$1,keycode$1.exports);var keycode=keycode$1.exports;var tuple=SafeParseTuple;function SafeParseTuple(obj,reviver){var json;var error=null;try{json=JSON.parse(obj,reviver);}catch(err){error=err;}return[error,json];}var lib={exports:{}};var require$$1=/*@__PURE__*/getAugmentedNamespace(_extends$6);var isFunction_1=isFunction$1;var toString$1=Object.prototype.toString;function isFunction$1(fn){if(!fn){return false;}var string=toString$1.call(fn);return string==='[object Function]'||typeof fn==='function'&&string!=='[object RegExp]'||typeof window!=='undefined'&&(// IE8 and below
fn===window.setTimeout||fn===window.alert||fn===window.confirm||fn===window.prompt);}var window$3=window_1;var httpResponseHandler=function httpResponseHandler(callback,decodeResponseBody){if(decodeResponseBody===void 0){decodeResponseBody=false;}return function(err,response,responseBody){// if the XHR failed, return that error
if(err){callback(err);return;}// if the HTTP status code is 4xx or 5xx, the request also failed
if(response.statusCode>=400&&response.statusCode<=599){var cause=responseBody;if(decodeResponseBody){if(window$3.TextDecoder){var charset=getCharset(response.headers&&response.headers['content-type']);try{cause=new TextDecoder(charset).decode(responseBody);}catch(e){}}else{cause=String.fromCharCode.apply(null,new Uint8Array(responseBody));}}callback({cause:cause});return;}// otherwise, request succeeded
callback(null,responseBody);};};function getCharset(contentTypeHeader){if(contentTypeHeader===void 0){contentTypeHeader='';}return contentTypeHeader.toLowerCase().split(';').reduce(function(charset,contentType){var _contentType$split=contentType.split('='),type=_contentType$split[0],value=_contentType$split[1];if(type.trim()==='charset'){return value.trim();}return charset;},'utf-8');}var httpHandler=httpResponseHandler;var window$2=window_1;var _extends$3=require$$1;var isFunction=isFunction_1;createXHR.httpHandler=httpHandler;/**
       * @license
       * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>
       * Copyright (c) 2014 David Björklund
       * Available under the MIT license
       * <https://github.com/kesla/parse-headers/blob/master/LICENCE>
       */var parseHeaders=function parseHeaders(headers){var result={};if(!headers){return result;}headers.trim().split('\n').forEach(function(row){var index=row.indexOf(':');var key=row.slice(0,index).trim().toLowerCase();var value=row.slice(index+1).trim();if(typeof result[key]==='undefined'){result[key]=value;}else if(Array.isArray(result[key])){result[key].push(value);}else{result[key]=[result[key],value];}});return result;};lib.exports=createXHR;// Allow use of default import syntax in TypeScript
lib.exports.default=createXHR;createXHR.XMLHttpRequest=window$2.XMLHttpRequest||noop$1;createXHR.XDomainRequest="withCredentials"in new createXHR.XMLHttpRequest()?createXHR.XMLHttpRequest:window$2.XDomainRequest;forEachArray(["get","put","post","patch","head","delete"],function(method){createXHR[method==="delete"?"del":method]=function(uri,options,callback){options=initParams(uri,options,callback);options.method=method.toUpperCase();return _createXHR(options);};});function forEachArray(array,iterator){for(var i=0;i<array.length;i++){iterator(array[i]);}}function isEmpty(obj){for(var i in obj){if(obj.hasOwnProperty(i))return false;}return true;}function initParams(uri,options,callback){var params=uri;if(isFunction(options)){callback=options;if(typeof uri==="string"){params={uri:uri};}}else{params=_extends$3({},options,{uri:uri});}params.callback=callback;return params;}function createXHR(uri,options,callback){options=initParams(uri,options,callback);return _createXHR(options);}function _createXHR(options){if(typeof options.callback==="undefined"){throw new Error("callback argument missing");}var called=false;var callback=function cbOnce(err,response,body){if(!called){called=true;options.callback(err,response,body);}};function readystatechange(){if(xhr.readyState===4){setTimeout(loadFunc,0);}}function getBody(){// Chrome with requestType=blob throws errors arround when even testing access to responseText
var body=undefined;if(xhr.response){body=xhr.response;}else{body=xhr.responseText||getXml(xhr);}if(isJson){try{body=JSON.parse(body);}catch(e){}}return body;}function errorFunc(evt){clearTimeout(timeoutTimer);if(!(evt instanceof Error)){evt=new Error(""+(evt||"Unknown XMLHttpRequest Error"));}evt.statusCode=0;return callback(evt,failureResponse);}// will load the data & process the response in a special response object
function loadFunc(){if(aborted)return;var status;clearTimeout(timeoutTimer);if(options.useXDR&&xhr.status===undefined){//IE8 CORS GET successful response doesn't have a status field, but body is fine
status=200;}else{status=xhr.status===1223?204:xhr.status;}var response=failureResponse;var err=null;if(status!==0){response={body:getBody(),statusCode:status,method:method,headers:{},url:uri,rawRequest:xhr};if(xhr.getAllResponseHeaders){//remember xhr can in fact be XDR for CORS in IE
response.headers=parseHeaders(xhr.getAllResponseHeaders());}}else{err=new Error("Internal XMLHttpRequest Error");}return callback(err,response,response.body);}var xhr=options.xhr||null;if(!xhr){if(options.cors||options.useXDR){xhr=new createXHR.XDomainRequest();}else{xhr=new createXHR.XMLHttpRequest();}}var key;var aborted;var uri=xhr.url=options.uri||options.url;var method=xhr.method=options.method||"GET";var body=options.body||options.data;var headers=xhr.headers=options.headers||{};var sync=!!options.sync;var isJson=false;var timeoutTimer;var failureResponse={body:undefined,headers:{},statusCode:0,method:method,url:uri,rawRequest:xhr};if("json"in options&&options.json!==false){isJson=true;headers["accept"]||headers["Accept"]||(headers["Accept"]="application/json");//Don't override existing accept header declared by user
if(method!=="GET"&&method!=="HEAD"){headers["content-type"]||headers["Content-Type"]||(headers["Content-Type"]="application/json");//Don't override existing accept header declared by user
body=JSON.stringify(options.json===true?body:options.json);}}xhr.onreadystatechange=readystatechange;xhr.onload=loadFunc;xhr.onerror=errorFunc;// IE9 must have onprogress be set to a unique function.
xhr.onprogress=function(){// IE must die
};xhr.onabort=function(){aborted=true;};xhr.ontimeout=errorFunc;xhr.open(method,uri,!sync,options.username,options.password);//has to be after open
if(!sync){xhr.withCredentials=!!options.withCredentials;}// Cannot set timeout with sync request
// not setting timeout on the xhr object, because of old webkits etc. not handling that correctly
// both npm's request and jquery 1.x use this kind of timeout, so this is being consistent
if(!sync&&options.timeout>0){timeoutTimer=setTimeout(function(){if(aborted)return;aborted=true;//IE9 may still call readystatechange
xhr.abort("timeout");var e=new Error("XMLHttpRequest timeout");e.code="ETIMEDOUT";errorFunc(e);},options.timeout);}if(xhr.setRequestHeader){for(key in headers){if(headers.hasOwnProperty(key)){xhr.setRequestHeader(key,headers[key]);}}}else if(options.headers&&!isEmpty(options.headers)){throw new Error("Headers cannot be set on an XDomainRequest object");}if("responseType"in options){xhr.responseType=options.responseType;}if("beforeSend"in options&&typeof options.beforeSend==="function"){options.beforeSend(xhr);}// Microsoft Edge browser sends "undefined" when send is called with undefined value.
// XMLHttpRequest spec says to pass null as body to indicate no body
// See https://github.com/naugtur/xhr/issues/100.
xhr.send(body||null);return xhr;}function getXml(xhr){// xhr.responseXML will throw Exception "InvalidStateError" or "DOMException"
// See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.
try{if(xhr.responseType==="document"){return xhr.responseXML;}var firefoxBugTakenEffect=xhr.responseXML&&xhr.responseXML.documentElement.nodeName==="parsererror";if(xhr.responseType===""&&!firefoxBugTakenEffect){return xhr.responseXML;}}catch(e){}return null;}function noop$1(){}var XHR=lib.exports;var browserIndex={exports:{}};/**
       * Copyright 2013 vtt.js Contributors
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */ /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */var document$1=document_1;var _objCreate=Object.create||function(){function F(){}return function(o){if(arguments.length!==1){throw new Error('Object.create shim only accepts one parameter.');}F.prototype=o;return new F();};}();// Creates a new ParserError object from an errorData object. The errorData
// object should have default code and message properties. The default message
// property can be overriden by passing in a message parameter.
// See ParsingError.Errors below for acceptable errors.
function ParsingError(errorData,message){this.name="ParsingError";this.code=errorData.code;this.message=message||errorData.message;}ParsingError.prototype=_objCreate(Error.prototype);ParsingError.prototype.constructor=ParsingError;// ParsingError metadata for acceptable ParsingErrors.
ParsingError.Errors={BadSignature:{code:0,message:"Malformed WebVTT signature."},BadTimeStamp:{code:1,message:"Malformed time stamp."}};// Try to parse input as a time stamp.
function parseTimeStamp(input){function computeSeconds(h,m,s,f){return(h|0)*3600+(m|0)*60+(s|0)+(f|0)/1000;}var m=input.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/);if(!m){return null;}if(m[3]){// Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]
return computeSeconds(m[1],m[2],m[3].replace(":",""),m[4]);}else if(m[1]>59){// Timestamp takes the form of [hours]:[minutes].[milliseconds]
// First position is hours as it's over 59.
return computeSeconds(m[1],m[2],0,m[4]);}else{// Timestamp takes the form of [minutes]:[seconds].[milliseconds]
return computeSeconds(0,m[1],m[2],m[4]);}}// A settings object holds key/value pairs and will ignore anything but the first
// assignment to a specific key.
function Settings(){this.values=_objCreate(null);}Settings.prototype={// Only accept the first assignment to any key.
set:function set(k,v){if(!this.get(k)&&v!==""){this.values[k]=v;}},// Return the value for a key, or a default value.
// If 'defaultKey' is passed then 'dflt' is assumed to be an object with
// a number of possible default values as properties where 'defaultKey' is
// the key of the property that will be chosen; otherwise it's assumed to be
// a single value.
get:function get(k,dflt,defaultKey){if(defaultKey){return this.has(k)?this.values[k]:dflt[defaultKey];}return this.has(k)?this.values[k]:dflt;},// Check whether we have a value for a key.
has:function has(k){return k in this.values;},// Accept a setting if its one of the given alternatives.
alt:function alt(k,v,a){for(var n=0;n<a.length;++n){if(v===a[n]){this.set(k,v);break;}}},// Accept a setting if its a valid (signed) integer.
integer:function integer(k,v){if(/^-?\d+$/.test(v)){// integer
this.set(k,parseInt(v,10));}},// Accept a setting if its a valid percentage.
percent:function percent(k,v){if(v.match(/^([\d]{1,3})(\.[\d]*)?%$/)){v=parseFloat(v);if(v>=0&&v<=100){this.set(k,v);return true;}}return false;}};// Helper function to parse input into groups separated by 'groupDelim', and
// interprete each group as a key/value pair separated by 'keyValueDelim'.
function parseOptions(input,callback,keyValueDelim,groupDelim){var groups=groupDelim?input.split(groupDelim):[input];for(var i in groups){if(typeof groups[i]!=="string"){continue;}var kv=groups[i].split(keyValueDelim);if(kv.length!==2){continue;}var k=kv[0].trim();var v=kv[1].trim();callback(k,v);}}function parseCue(input,cue,regionList){// Remember the original input if we need to throw an error.
var oInput=input;// 4.1 WebVTT timestamp
function consumeTimeStamp(){var ts=parseTimeStamp(input);if(ts===null){throw new ParsingError(ParsingError.Errors.BadTimeStamp,"Malformed timestamp: "+oInput);}// Remove time stamp from input.
input=input.replace(/^[^\sa-zA-Z-]+/,"");return ts;}// 4.4.2 WebVTT cue settings
function consumeCueSettings(input,cue){var settings=new Settings();parseOptions(input,function(k,v){switch(k){case"region":// Find the last region we parsed with the same region id.
for(var i=regionList.length-1;i>=0;i--){if(regionList[i].id===v){settings.set(k,regionList[i].region);break;}}break;case"vertical":settings.alt(k,v,["rl","lr"]);break;case"line":var vals=v.split(","),vals0=vals[0];settings.integer(k,vals0);settings.percent(k,vals0)?settings.set("snapToLines",false):null;settings.alt(k,vals0,["auto"]);if(vals.length===2){settings.alt("lineAlign",vals[1],["start","center","end"]);}break;case"position":vals=v.split(",");settings.percent(k,vals[0]);if(vals.length===2){settings.alt("positionAlign",vals[1],["start","center","end"]);}break;case"size":settings.percent(k,v);break;case"align":settings.alt(k,v,["start","center","end","left","right"]);break;}},/:/,/\s/);// Apply default values for any missing fields.
cue.region=settings.get("region",null);cue.vertical=settings.get("vertical","");try{cue.line=settings.get("line","auto");}catch(e){}cue.lineAlign=settings.get("lineAlign","start");cue.snapToLines=settings.get("snapToLines",true);cue.size=settings.get("size",100);// Safari still uses the old middle value and won't accept center
try{cue.align=settings.get("align","center");}catch(e){cue.align=settings.get("align","middle");}try{cue.position=settings.get("position","auto");}catch(e){cue.position=settings.get("position",{start:0,left:0,center:50,middle:50,end:100,right:100},cue.align);}cue.positionAlign=settings.get("positionAlign",{start:"start",left:"start",center:"center",middle:"center",end:"end",right:"end"},cue.align);}function skipWhitespace(){input=input.replace(/^\s+/,"");}// 4.1 WebVTT cue timings.
skipWhitespace();cue.startTime=consumeTimeStamp();// (1) collect cue start time
skipWhitespace();if(input.substr(0,3)!=="-->"){// (3) next characters must match "-->"
throw new ParsingError(ParsingError.Errors.BadTimeStamp,"Malformed time stamp (time stamps must be separated by '-->'): "+oInput);}input=input.substr(3);skipWhitespace();cue.endTime=consumeTimeStamp();// (5) collect cue end time
// 4.1 WebVTT cue settings list.
skipWhitespace();consumeCueSettings(input,cue);}// When evaluating this file as part of a Webpack bundle for server
// side rendering, `document` is an empty object.
var TEXTAREA_ELEMENT=document$1.createElement&&document$1.createElement("textarea");var TAG_NAME={c:"span",i:"i",b:"b",u:"u",ruby:"ruby",rt:"rt",v:"span",lang:"span"};// 5.1 default text color
// 5.2 default text background color is equivalent to text color with bg_ prefix
var DEFAULT_COLOR_CLASS={white:'rgba(255,255,255,1)',lime:'rgba(0,255,0,1)',cyan:'rgba(0,255,255,1)',red:'rgba(255,0,0,1)',yellow:'rgba(255,255,0,1)',magenta:'rgba(255,0,255,1)',blue:'rgba(0,0,255,1)',black:'rgba(0,0,0,1)'};var TAG_ANNOTATION={v:"title",lang:"lang"};var NEEDS_PARENT={rt:"ruby"};// Parse content into a document fragment.
function parseContent(window,input){function nextToken(){// Check for end-of-string.
if(!input){return null;}// Consume 'n' characters from the input.
function consume(result){input=input.substr(result.length);return result;}var m=input.match(/^([^<]*)(<[^>]*>?)?/);// If there is some text before the next tag, return it, otherwise return
// the tag.
return consume(m[1]?m[1]:m[2]);}function unescape(s){TEXTAREA_ELEMENT.innerHTML=s;s=TEXTAREA_ELEMENT.textContent;TEXTAREA_ELEMENT.textContent="";return s;}function shouldAdd(current,element){return!NEEDS_PARENT[element.localName]||NEEDS_PARENT[element.localName]===current.localName;}// Create an element for this tag.
function createElement(type,annotation){var tagName=TAG_NAME[type];if(!tagName){return null;}var element=window.document.createElement(tagName);var name=TAG_ANNOTATION[type];if(name&&annotation){element[name]=annotation.trim();}return element;}var rootDiv=window.document.createElement("div"),current=rootDiv,t,tagStack=[];while((t=nextToken())!==null){if(t[0]==='<'){if(t[1]==="/"){// If the closing tag matches, move back up to the parent node.
if(tagStack.length&&tagStack[tagStack.length-1]===t.substr(2).replace(">","")){tagStack.pop();current=current.parentNode;}// Otherwise just ignore the end tag.
continue;}var ts=parseTimeStamp(t.substr(1,t.length-2));var node;if(ts){// Timestamps are lead nodes as well.
node=window.document.createProcessingInstruction("timestamp",ts);current.appendChild(node);continue;}var m=t.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);// If we can't parse the tag, skip to the next tag.
if(!m){continue;}// Try to construct an element, and ignore the tag if we couldn't.
node=createElement(m[1],m[3]);if(!node){continue;}// Determine if the tag should be added based on the context of where it
// is placed in the cuetext.
if(!shouldAdd(current,node)){continue;}// Set the class list (as a list of classes, separated by space).
if(m[2]){var classes=m[2].split('.');classes.forEach(function(cl){var bgColor=/^bg_/.test(cl);// slice out `bg_` if it's a background color
var colorName=bgColor?cl.slice(3):cl;if(DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)){var propName=bgColor?'background-color':'color';var propValue=DEFAULT_COLOR_CLASS[colorName];node.style[propName]=propValue;}});node.className=classes.join(' ');}// Append the node to the current node, and enter the scope of the new
// node.
tagStack.push(m[1]);current.appendChild(node);current=node;continue;}// Text nodes are leaf nodes.
current.appendChild(window.document.createTextNode(unescape(t)));}return rootDiv;}// This is a list of all the Unicode characters that have a strong
// right-to-left category. What this means is that these characters are
// written right-to-left for sure. It was generated by pulling all the strong
// right-to-left characters out of the Unicode data table. That table can
// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt
var strongRTLRanges=[[0x5be,0x5be],[0x5c0,0x5c0],[0x5c3,0x5c3],[0x5c6,0x5c6],[0x5d0,0x5ea],[0x5f0,0x5f4],[0x608,0x608],[0x60b,0x60b],[0x60d,0x60d],[0x61b,0x61b],[0x61e,0x64a],[0x66d,0x66f],[0x671,0x6d5],[0x6e5,0x6e6],[0x6ee,0x6ef],[0x6fa,0x70d],[0x70f,0x710],[0x712,0x72f],[0x74d,0x7a5],[0x7b1,0x7b1],[0x7c0,0x7ea],[0x7f4,0x7f5],[0x7fa,0x7fa],[0x800,0x815],[0x81a,0x81a],[0x824,0x824],[0x828,0x828],[0x830,0x83e],[0x840,0x858],[0x85e,0x85e],[0x8a0,0x8a0],[0x8a2,0x8ac],[0x200f,0x200f],[0xfb1d,0xfb1d],[0xfb1f,0xfb28],[0xfb2a,0xfb36],[0xfb38,0xfb3c],[0xfb3e,0xfb3e],[0xfb40,0xfb41],[0xfb43,0xfb44],[0xfb46,0xfbc1],[0xfbd3,0xfd3d],[0xfd50,0xfd8f],[0xfd92,0xfdc7],[0xfdf0,0xfdfc],[0xfe70,0xfe74],[0xfe76,0xfefc],[0x10800,0x10805],[0x10808,0x10808],[0x1080a,0x10835],[0x10837,0x10838],[0x1083c,0x1083c],[0x1083f,0x10855],[0x10857,0x1085f],[0x10900,0x1091b],[0x10920,0x10939],[0x1093f,0x1093f],[0x10980,0x109b7],[0x109be,0x109bf],[0x10a00,0x10a00],[0x10a10,0x10a13],[0x10a15,0x10a17],[0x10a19,0x10a33],[0x10a40,0x10a47],[0x10a50,0x10a58],[0x10a60,0x10a7f],[0x10b00,0x10b35],[0x10b40,0x10b55],[0x10b58,0x10b72],[0x10b78,0x10b7f],[0x10c00,0x10c48],[0x1ee00,0x1ee03],[0x1ee05,0x1ee1f],[0x1ee21,0x1ee22],[0x1ee24,0x1ee24],[0x1ee27,0x1ee27],[0x1ee29,0x1ee32],[0x1ee34,0x1ee37],[0x1ee39,0x1ee39],[0x1ee3b,0x1ee3b],[0x1ee42,0x1ee42],[0x1ee47,0x1ee47],[0x1ee49,0x1ee49],[0x1ee4b,0x1ee4b],[0x1ee4d,0x1ee4f],[0x1ee51,0x1ee52],[0x1ee54,0x1ee54],[0x1ee57,0x1ee57],[0x1ee59,0x1ee59],[0x1ee5b,0x1ee5b],[0x1ee5d,0x1ee5d],[0x1ee5f,0x1ee5f],[0x1ee61,0x1ee62],[0x1ee64,0x1ee64],[0x1ee67,0x1ee6a],[0x1ee6c,0x1ee72],[0x1ee74,0x1ee77],[0x1ee79,0x1ee7c],[0x1ee7e,0x1ee7e],[0x1ee80,0x1ee89],[0x1ee8b,0x1ee9b],[0x1eea1,0x1eea3],[0x1eea5,0x1eea9],[0x1eeab,0x1eebb],[0x10fffd,0x10fffd]];function isStrongRTLChar(charCode){for(var i=0;i<strongRTLRanges.length;i++){var currentRange=strongRTLRanges[i];if(charCode>=currentRange[0]&&charCode<=currentRange[1]){return true;}}return false;}function determineBidi(cueDiv){var nodeStack=[],text="",charCode;if(!cueDiv||!cueDiv.childNodes){return"ltr";}function pushNodes(nodeStack,node){for(var i=node.childNodes.length-1;i>=0;i--){nodeStack.push(node.childNodes[i]);}}function nextTextNode(nodeStack){if(!nodeStack||!nodeStack.length){return null;}var node=nodeStack.pop(),text=node.textContent||node.innerText;if(text){// TODO: This should match all unicode type B characters (paragraph
// separator characters). See issue #115.
var m=text.match(/^.*(\n|\r)/);if(m){nodeStack.length=0;return m[0];}return text;}if(node.tagName==="ruby"){return nextTextNode(nodeStack);}if(node.childNodes){pushNodes(nodeStack,node);return nextTextNode(nodeStack);}}pushNodes(nodeStack,cueDiv);while(text=nextTextNode(nodeStack)){for(var i=0;i<text.length;i++){charCode=text.charCodeAt(i);if(isStrongRTLChar(charCode)){return"rtl";}}}return"ltr";}function computeLinePos(cue){if(typeof cue.line==="number"&&(cue.snapToLines||cue.line>=0&&cue.line<=100)){return cue.line;}if(!cue.track||!cue.track.textTrackList||!cue.track.textTrackList.mediaElement){return-1;}var track=cue.track,trackList=track.textTrackList,count=0;for(var i=0;i<trackList.length&&trackList[i]!==track;i++){if(trackList[i].mode==="showing"){count++;}}return++count*-1;}function StyleBox(){}// Apply styles to a div. If there is no div passed then it defaults to the
// div on 'this'.
StyleBox.prototype.applyStyles=function(styles,div){div=div||this.div;for(var prop in styles){if(styles.hasOwnProperty(prop)){div.style[prop]=styles[prop];}}};StyleBox.prototype.formatStyle=function(val,unit){return val===0?0:val+unit;};// Constructs the computed display state of the cue (a div). Places the div
// into the overlay which should be a block level element (usually a div).
function CueStyleBox(window,cue,styleOptions){StyleBox.call(this);this.cue=cue;// Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will
// have inline positioning and will function as the cue background box.
this.cueDiv=parseContent(window,cue.text);var styles={color:"rgba(255, 255, 255, 1)",backgroundColor:"rgba(0, 0, 0, 0.8)",position:"relative",left:0,right:0,top:0,bottom:0,display:"inline",writingMode:cue.vertical===""?"horizontal-tb":cue.vertical==="lr"?"vertical-lr":"vertical-rl",unicodeBidi:"plaintext"};this.applyStyles(styles,this.cueDiv);// Create an absolutely positioned div that will be used to position the cue
// div. Note, all WebVTT cue-setting alignments are equivalent to the CSS
// mirrors of them except middle instead of center on Safari.
this.div=window.document.createElement("div");styles={direction:determineBidi(this.cueDiv),writingMode:cue.vertical===""?"horizontal-tb":cue.vertical==="lr"?"vertical-lr":"vertical-rl",unicodeBidi:"plaintext",textAlign:cue.align==="middle"?"center":cue.align,font:styleOptions.font,whiteSpace:"pre-line",position:"absolute"};this.applyStyles(styles);this.div.appendChild(this.cueDiv);// Calculate the distance from the reference edge of the viewport to the text
// position of the cue box. The reference edge will be resolved later when
// the box orientation styles are applied.
var textPos=0;switch(cue.positionAlign){case"start":case"line-left":textPos=cue.position;break;case"center":textPos=cue.position-cue.size/2;break;case"end":case"line-right":textPos=cue.position-cue.size;break;}// Horizontal box orientation; textPos is the distance from the left edge of the
// area to the left edge of the box and cue.size is the distance extending to
// the right from there.
if(cue.vertical===""){this.applyStyles({left:this.formatStyle(textPos,"%"),width:this.formatStyle(cue.size,"%")});// Vertical box orientation; textPos is the distance from the top edge of the
// area to the top edge of the box and cue.size is the height extending
// downwards from there.
}else{this.applyStyles({top:this.formatStyle(textPos,"%"),height:this.formatStyle(cue.size,"%")});}this.move=function(box){this.applyStyles({top:this.formatStyle(box.top,"px"),bottom:this.formatStyle(box.bottom,"px"),left:this.formatStyle(box.left,"px"),right:this.formatStyle(box.right,"px"),height:this.formatStyle(box.height,"px"),width:this.formatStyle(box.width,"px")});};}CueStyleBox.prototype=_objCreate(StyleBox.prototype);CueStyleBox.prototype.constructor=CueStyleBox;// Represents the co-ordinates of an Element in a way that we can easily
// compute things with such as if it overlaps or intersects with another Element.
// Can initialize it with either a StyleBox or another BoxPosition.
function BoxPosition(obj){// Either a BoxPosition was passed in and we need to copy it, or a StyleBox
// was passed in and we need to copy the results of 'getBoundingClientRect'
// as the object returned is readonly. All co-ordinate values are in reference
// to the viewport origin (top left).
var lh,height,width,top;if(obj.div){height=obj.div.offsetHeight;width=obj.div.offsetWidth;top=obj.div.offsetTop;var rects=(rects=obj.div.childNodes)&&(rects=rects[0])&&rects.getClientRects&&rects.getClientRects();obj=obj.div.getBoundingClientRect();// In certain cases the outter div will be slightly larger then the sum of
// the inner div's lines. This could be due to bold text, etc, on some platforms.
// In this case we should get the average line height and use that. This will
// result in the desired behaviour.
lh=rects?Math.max(rects[0]&&rects[0].height||0,obj.height/rects.length):0;}this.left=obj.left;this.right=obj.right;this.top=obj.top||top;this.height=obj.height||height;this.bottom=obj.bottom||top+(obj.height||height);this.width=obj.width||width;this.lineHeight=lh!==undefined?lh:obj.lineHeight;}// Move the box along a particular axis. Optionally pass in an amount to move
// the box. If no amount is passed then the default is the line height of the
// box.
BoxPosition.prototype.move=function(axis,toMove){toMove=toMove!==undefined?toMove:this.lineHeight;switch(axis){case"+x":this.left+=toMove;this.right+=toMove;break;case"-x":this.left-=toMove;this.right-=toMove;break;case"+y":this.top+=toMove;this.bottom+=toMove;break;case"-y":this.top-=toMove;this.bottom-=toMove;break;}};// Check if this box overlaps another box, b2.
BoxPosition.prototype.overlaps=function(b2){return this.left<b2.right&&this.right>b2.left&&this.top<b2.bottom&&this.bottom>b2.top;};// Check if this box overlaps any other boxes in boxes.
BoxPosition.prototype.overlapsAny=function(boxes){for(var i=0;i<boxes.length;i++){if(this.overlaps(boxes[i])){return true;}}return false;};// Check if this box is within another box.
BoxPosition.prototype.within=function(container){return this.top>=container.top&&this.bottom<=container.bottom&&this.left>=container.left&&this.right<=container.right;};// Check if this box is entirely within the container or it is overlapping
// on the edge opposite of the axis direction passed. For example, if "+x" is
// passed and the box is overlapping on the left edge of the container, then
// return true.
BoxPosition.prototype.overlapsOppositeAxis=function(container,axis){switch(axis){case"+x":return this.left<container.left;case"-x":return this.right>container.right;case"+y":return this.top<container.top;case"-y":return this.bottom>container.bottom;}};// Find the percentage of the area that this box is overlapping with another
// box.
BoxPosition.prototype.intersectPercentage=function(b2){var x=Math.max(0,Math.min(this.right,b2.right)-Math.max(this.left,b2.left)),y=Math.max(0,Math.min(this.bottom,b2.bottom)-Math.max(this.top,b2.top)),intersectArea=x*y;return intersectArea/(this.height*this.width);};// Convert the positions from this box to CSS compatible positions using
// the reference container's positions. This has to be done because this
// box's positions are in reference to the viewport origin, whereas, CSS
// values are in referecne to their respective edges.
BoxPosition.prototype.toCSSCompatValues=function(reference){return{top:this.top-reference.top,bottom:reference.bottom-this.bottom,left:this.left-reference.left,right:reference.right-this.right,height:this.height,width:this.width};};// Get an object that represents the box's position without anything extra.
// Can pass a StyleBox, HTMLElement, or another BoxPositon.
BoxPosition.getSimpleBoxPosition=function(obj){var height=obj.div?obj.div.offsetHeight:obj.tagName?obj.offsetHeight:0;var width=obj.div?obj.div.offsetWidth:obj.tagName?obj.offsetWidth:0;var top=obj.div?obj.div.offsetTop:obj.tagName?obj.offsetTop:0;obj=obj.div?obj.div.getBoundingClientRect():obj.tagName?obj.getBoundingClientRect():obj;var ret={left:obj.left,right:obj.right,top:obj.top||top,height:obj.height||height,bottom:obj.bottom||top+(obj.height||height),width:obj.width||width};return ret;};// Move a StyleBox to its specified, or next best, position. The containerBox
// is the box that contains the StyleBox, such as a div. boxPositions are
// a list of other boxes that the styleBox can't overlap with.
function moveBoxToLinePosition(window,styleBox,containerBox,boxPositions){// Find the best position for a cue box, b, on the video. The axis parameter
// is a list of axis, the order of which, it will move the box along. For example:
// Passing ["+x", "-x"] will move the box first along the x axis in the positive
// direction. If it doesn't find a good position for it there it will then move
// it along the x axis in the negative direction.
function findBestPosition(b,axis){var bestPosition,specifiedPosition=new BoxPosition(b),percentage=1;// Highest possible so the first thing we get is better.
for(var i=0;i<axis.length;i++){while(b.overlapsOppositeAxis(containerBox,axis[i])||b.within(containerBox)&&b.overlapsAny(boxPositions)){b.move(axis[i]);}// We found a spot where we aren't overlapping anything. This is our
// best position.
if(b.within(containerBox)){return b;}var p=b.intersectPercentage(containerBox);// If we're outside the container box less then we were on our last try
// then remember this position as the best position.
if(percentage>p){bestPosition=new BoxPosition(b);percentage=p;}// Reset the box position to the specified position.
b=new BoxPosition(specifiedPosition);}return bestPosition||specifiedPosition;}var boxPosition=new BoxPosition(styleBox),cue=styleBox.cue,linePos=computeLinePos(cue),axis=[];// If we have a line number to align the cue to.
if(cue.snapToLines){var size;switch(cue.vertical){case"":axis=["+y","-y"];size="height";break;case"rl":axis=["+x","-x"];size="width";break;case"lr":axis=["-x","+x"];size="width";break;}var step=boxPosition.lineHeight,position=step*Math.round(linePos),maxPosition=containerBox[size]+step,initialAxis=axis[0];// If the specified intial position is greater then the max position then
// clamp the box to the amount of steps it would take for the box to
// reach the max position.
if(Math.abs(position)>maxPosition){position=position<0?-1:1;position*=Math.ceil(maxPosition/step)*step;}// If computed line position returns negative then line numbers are
// relative to the bottom of the video instead of the top. Therefore, we
// need to increase our initial position by the length or width of the
// video, depending on the writing direction, and reverse our axis directions.
if(linePos<0){position+=cue.vertical===""?containerBox.height:containerBox.width;axis=axis.reverse();}// Move the box to the specified position. This may not be its best
// position.
boxPosition.move(initialAxis,position);}else{// If we have a percentage line value for the cue.
var calculatedPercentage=boxPosition.lineHeight/containerBox.height*100;switch(cue.lineAlign){case"center":linePos-=calculatedPercentage/2;break;case"end":linePos-=calculatedPercentage;break;}// Apply initial line position to the cue box.
switch(cue.vertical){case"":styleBox.applyStyles({top:styleBox.formatStyle(linePos,"%")});break;case"rl":styleBox.applyStyles({left:styleBox.formatStyle(linePos,"%")});break;case"lr":styleBox.applyStyles({right:styleBox.formatStyle(linePos,"%")});break;}axis=["+y","-x","+x","-y"];// Get the box position again after we've applied the specified positioning
// to it.
boxPosition=new BoxPosition(styleBox);}var bestPosition=findBestPosition(boxPosition,axis);styleBox.move(bestPosition.toCSSCompatValues(containerBox));}function WebVTT$1(){// Nothing
}// Helper to allow strings to be decoded instead of the default binary utf8 data.
WebVTT$1.StringDecoder=function(){return{decode:function decode(data){if(!data){return"";}if(typeof data!=="string"){throw new Error("Error - expected string data.");}return decodeURIComponent(encodeURIComponent(data));}};};WebVTT$1.convertCueToDOMTree=function(window,cuetext){if(!window||!cuetext){return null;}return parseContent(window,cuetext);};var FONT_SIZE_PERCENT=0.05;var FONT_STYLE="sans-serif";var CUE_BACKGROUND_PADDING="1.5%";// Runs the processing model over the cues and regions passed to it.
// @param overlay A block level element (usually a div) that the computed cues
//                and regions will be placed into.
WebVTT$1.processCues=function(window,cues,overlay){if(!window||!cues||!overlay){return null;}// Remove all previous children.
while(overlay.firstChild){overlay.removeChild(overlay.firstChild);}var paddedOverlay=window.document.createElement("div");paddedOverlay.style.position="absolute";paddedOverlay.style.left="0";paddedOverlay.style.right="0";paddedOverlay.style.top="0";paddedOverlay.style.bottom="0";paddedOverlay.style.margin=CUE_BACKGROUND_PADDING;overlay.appendChild(paddedOverlay);// Determine if we need to compute the display states of the cues. This could
// be the case if a cue's state has been changed since the last computation or
// if it has not been computed yet.
function shouldCompute(cues){for(var i=0;i<cues.length;i++){if(cues[i].hasBeenReset||!cues[i].displayState){return true;}}return false;}// We don't need to recompute the cues' display states. Just reuse them.
if(!shouldCompute(cues)){for(var i=0;i<cues.length;i++){paddedOverlay.appendChild(cues[i].displayState);}return;}var boxPositions=[],containerBox=BoxPosition.getSimpleBoxPosition(paddedOverlay),fontSize=Math.round(containerBox.height*FONT_SIZE_PERCENT*100)/100;var styleOptions={font:fontSize+"px "+FONT_STYLE};(function(){var styleBox,cue;for(var i=0;i<cues.length;i++){cue=cues[i];// Compute the intial position and styles of the cue div.
styleBox=new CueStyleBox(window,cue,styleOptions);paddedOverlay.appendChild(styleBox.div);// Move the cue div to it's correct line position.
moveBoxToLinePosition(window,styleBox,containerBox,boxPositions);// Remember the computed div so that we don't have to recompute it later
// if we don't have too.
cue.displayState=styleBox.div;boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));}})();};WebVTT$1.Parser=function(window,vttjs,decoder){if(!decoder){decoder=vttjs;vttjs={};}if(!vttjs){vttjs={};}this.window=window;this.vttjs=vttjs;this.state="INITIAL";this.buffer="";this.decoder=decoder||new TextDecoder("utf8");this.regionList=[];};WebVTT$1.Parser.prototype={// If the error is a ParsingError then report it to the consumer if
// possible. If it's not a ParsingError then throw it like normal.
reportOrThrowError:function reportOrThrowError(e){if(e instanceof ParsingError){this.onparsingerror&&this.onparsingerror(e);}else{throw e;}},parse:function parse(data){var self=this;// If there is no data then we won't decode it, but will just try to parse
// whatever is in buffer already. This may occur in circumstances, for
// example when flush() is called.
if(data){// Try to decode the data that we received.
self.buffer+=self.decoder.decode(data,{stream:true});}function collectNextLine(){var buffer=self.buffer;var pos=0;while(pos<buffer.length&&buffer[pos]!=='\r'&&buffer[pos]!=='\n'){++pos;}var line=buffer.substr(0,pos);// Advance the buffer early in case we fail below.
if(buffer[pos]==='\r'){++pos;}if(buffer[pos]==='\n'){++pos;}self.buffer=buffer.substr(pos);return line;}// 3.4 WebVTT region and WebVTT region settings syntax
function parseRegion(input){var settings=new Settings();parseOptions(input,function(k,v){switch(k){case"id":settings.set(k,v);break;case"width":settings.percent(k,v);break;case"lines":settings.integer(k,v);break;case"regionanchor":case"viewportanchor":var xy=v.split(',');if(xy.length!==2){break;}// We have to make sure both x and y parse, so use a temporary
// settings object here.
var anchor=new Settings();anchor.percent("x",xy[0]);anchor.percent("y",xy[1]);if(!anchor.has("x")||!anchor.has("y")){break;}settings.set(k+"X",anchor.get("x"));settings.set(k+"Y",anchor.get("y"));break;case"scroll":settings.alt(k,v,["up"]);break;}},/=/,/\s/);// Create the region, using default values for any values that were not
// specified.
if(settings.has("id")){var region=new(self.vttjs.VTTRegion||self.window.VTTRegion)();region.width=settings.get("width",100);region.lines=settings.get("lines",3);region.regionAnchorX=settings.get("regionanchorX",0);region.regionAnchorY=settings.get("regionanchorY",100);region.viewportAnchorX=settings.get("viewportanchorX",0);region.viewportAnchorY=settings.get("viewportanchorY",100);region.scroll=settings.get("scroll","");// Register the region.
self.onregion&&self.onregion(region);// Remember the VTTRegion for later in case we parse any VTTCues that
// reference it.
self.regionList.push({id:settings.get("id"),region:region});}}// draft-pantos-http-live-streaming-20
// https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5
// 3.5 WebVTT
function parseTimestampMap(input){var settings=new Settings();parseOptions(input,function(k,v){switch(k){case"MPEGT":settings.integer(k+'S',v);break;case"LOCA":settings.set(k+'L',parseTimeStamp(v));break;}},/[^\d]:/,/,/);self.ontimestampmap&&self.ontimestampmap({"MPEGTS":settings.get("MPEGTS"),"LOCAL":settings.get("LOCAL")});}// 3.2 WebVTT metadata header syntax
function parseHeader(input){if(input.match(/X-TIMESTAMP-MAP/)){// This line contains HLS X-TIMESTAMP-MAP metadata
parseOptions(input,function(k,v){switch(k){case"X-TIMESTAMP-MAP":parseTimestampMap(v);break;}},/=/);}else{parseOptions(input,function(k,v){switch(k){case"Region":// 3.3 WebVTT region metadata header syntax
parseRegion(v);break;}},/:/);}}// 5.1 WebVTT file parsing.
try{var line;if(self.state==="INITIAL"){// We can't start parsing until we have the first line.
if(!/\r\n|\n/.test(self.buffer)){return this;}line=collectNextLine();var m=line.match(/^WEBVTT([ \t].*)?$/);if(!m||!m[0]){throw new ParsingError(ParsingError.Errors.BadSignature);}self.state="HEADER";}var alreadyCollectedLine=false;while(self.buffer){// We can't parse a line until we have the full line.
if(!/\r\n|\n/.test(self.buffer)){return this;}if(!alreadyCollectedLine){line=collectNextLine();}else{alreadyCollectedLine=false;}switch(self.state){case"HEADER":// 13-18 - Allow a header (metadata) under the WEBVTT line.
if(/:/.test(line)){parseHeader(line);}else if(!line){// An empty line terminates the header and starts the body (cues).
self.state="ID";}continue;case"NOTE":// Ignore NOTE blocks.
if(!line){self.state="ID";}continue;case"ID":// Check for the start of NOTE blocks.
if(/^NOTE($|[ \t])/.test(line)){self.state="NOTE";break;}// 19-29 - Allow any number of line terminators, then initialize new cue values.
if(!line){continue;}self.cue=new(self.vttjs.VTTCue||self.window.VTTCue)(0,0,"");// Safari still uses the old middle value and won't accept center
try{self.cue.align="center";}catch(e){self.cue.align="middle";}self.state="CUE";// 30-39 - Check if self line contains an optional identifier or timing data.
if(line.indexOf("-->")===-1){self.cue.id=line;continue;}// Process line as start of a cue.
/*falls through*/case"CUE":// 40 - Collect cue timings and settings.
try{parseCue(line,self.cue,self.regionList);}catch(e){self.reportOrThrowError(e);// In case of an error ignore rest of the cue.
self.cue=null;self.state="BADCUE";continue;}self.state="CUETEXT";continue;case"CUETEXT":var hasSubstring=line.indexOf("-->")!==-1;// 34 - If we have an empty line then report the cue.
// 35 - If we have the special substring '-->' then report the cue,
// but do not collect the line as we need to process the current
// one as a new cue.
if(!line||hasSubstring&&(alreadyCollectedLine=true)){// We are done parsing self cue.
self.oncue&&self.oncue(self.cue);self.cue=null;self.state="ID";continue;}if(self.cue.text){self.cue.text+="\n";}self.cue.text+=line.replace(/\u2028/g,'\n').replace(/u2029/g,'\n');continue;case"BADCUE":// BADCUE
// 54-62 - Collect and discard the remaining cue.
if(!line){self.state="ID";}continue;}}}catch(e){self.reportOrThrowError(e);// If we are currently parsing a cue, report what we have.
if(self.state==="CUETEXT"&&self.cue&&self.oncue){self.oncue(self.cue);}self.cue=null;// Enter BADWEBVTT state if header was not parsed correctly otherwise
// another exception occurred so enter BADCUE state.
self.state=self.state==="INITIAL"?"BADWEBVTT":"BADCUE";}return this;},flush:function flush(){var self=this;try{// Finish decoding the stream.
self.buffer+=self.decoder.decode();// Synthesize the end of the current cue or region.
if(self.cue||self.state==="HEADER"){self.buffer+="\n\n";self.parse();}// If we've flushed, parsed, and we're still on the INITIAL state then
// that means we don't have enough of the stream to parse the first
// line.
if(self.state==="INITIAL"){throw new ParsingError(ParsingError.Errors.BadSignature);}}catch(e){self.reportOrThrowError(e);}self.onflush&&self.onflush();return this;}};var vtt$1=WebVTT$1;/**
       * Copyright 2013 vtt.js Contributors
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */var autoKeyword="auto";var directionSetting={"":1,"lr":1,"rl":1};var alignSetting={"start":1,"center":1,"end":1,"left":1,"right":1,"auto":1,"line-left":1,"line-right":1};function findDirectionSetting(value){if(typeof value!=="string"){return false;}var dir=directionSetting[value.toLowerCase()];return dir?value.toLowerCase():false;}function findAlignSetting(value){if(typeof value!=="string"){return false;}var align=alignSetting[value.toLowerCase()];return align?value.toLowerCase():false;}function VTTCue(startTime,endTime,text){/**
         * Shim implementation specific properties. These properties are not in
         * the spec.
         */ // Lets us know when the VTTCue's data has changed in such a way that we need
// to recompute its display state. This lets us compute its display state
// lazily.
this.hasBeenReset=false;/**
         * VTTCue and TextTrackCue properties
         * http://dev.w3.org/html5/webvtt/#vttcue-interface
         */var _id="";var _pauseOnExit=false;var _startTime=startTime;var _endTime=endTime;var _text=text;var _region=null;var _vertical="";var _snapToLines=true;var _line="auto";var _lineAlign="start";var _position="auto";var _positionAlign="auto";var _size=100;var _align="center";Object.defineProperties(this,{"id":{enumerable:true,get:function get(){return _id;},set:function set(value){_id=""+value;}},"pauseOnExit":{enumerable:true,get:function get(){return _pauseOnExit;},set:function set(value){_pauseOnExit=!!value;}},"startTime":{enumerable:true,get:function get(){return _startTime;},set:function set(value){if(typeof value!=="number"){throw new TypeError("Start time must be set to a number.");}_startTime=value;this.hasBeenReset=true;}},"endTime":{enumerable:true,get:function get(){return _endTime;},set:function set(value){if(typeof value!=="number"){throw new TypeError("End time must be set to a number.");}_endTime=value;this.hasBeenReset=true;}},"text":{enumerable:true,get:function get(){return _text;},set:function set(value){_text=""+value;this.hasBeenReset=true;}},"region":{enumerable:true,get:function get(){return _region;},set:function set(value){_region=value;this.hasBeenReset=true;}},"vertical":{enumerable:true,get:function get(){return _vertical;},set:function set(value){var setting=findDirectionSetting(value);// Have to check for false because the setting an be an empty string.
if(setting===false){throw new SyntaxError("Vertical: an invalid or illegal direction string was specified.");}_vertical=setting;this.hasBeenReset=true;}},"snapToLines":{enumerable:true,get:function get(){return _snapToLines;},set:function set(value){_snapToLines=!!value;this.hasBeenReset=true;}},"line":{enumerable:true,get:function get(){return _line;},set:function set(value){if(typeof value!=="number"&&value!==autoKeyword){throw new SyntaxError("Line: an invalid number or illegal string was specified.");}_line=value;this.hasBeenReset=true;}},"lineAlign":{enumerable:true,get:function get(){return _lineAlign;},set:function set(value){var setting=findAlignSetting(value);if(!setting){console.warn("lineAlign: an invalid or illegal string was specified.");}else{_lineAlign=setting;this.hasBeenReset=true;}}},"position":{enumerable:true,get:function get(){return _position;},set:function set(value){if(value<0||value>100){throw new Error("Position must be between 0 and 100.");}_position=value;this.hasBeenReset=true;}},"positionAlign":{enumerable:true,get:function get(){return _positionAlign;},set:function set(value){var setting=findAlignSetting(value);if(!setting){console.warn("positionAlign: an invalid or illegal string was specified.");}else{_positionAlign=setting;this.hasBeenReset=true;}}},"size":{enumerable:true,get:function get(){return _size;},set:function set(value){if(value<0||value>100){throw new Error("Size must be between 0 and 100.");}_size=value;this.hasBeenReset=true;}},"align":{enumerable:true,get:function get(){return _align;},set:function set(value){var setting=findAlignSetting(value);if(!setting){throw new SyntaxError("align: an invalid or illegal alignment string was specified.");}_align=setting;this.hasBeenReset=true;}}});/**
         * Other <track> spec defined properties
         */ // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state
this.displayState=undefined;}/**
       * VTTCue methods
       */VTTCue.prototype.getCueAsHTML=function(){// Assume WebVTT.convertCueToDOMTree is on the global.
return WebVTT.convertCueToDOMTree(window,this.text);};var vttcue=VTTCue;/**
       * Copyright 2013 vtt.js Contributors
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */var scrollSetting={"":true,"up":true};function findScrollSetting(value){if(typeof value!=="string"){return false;}var scroll=scrollSetting[value.toLowerCase()];return scroll?value.toLowerCase():false;}function isValidPercentValue(value){return typeof value==="number"&&value>=0&&value<=100;}// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface
function VTTRegion(){var _width=100;var _lines=3;var _regionAnchorX=0;var _regionAnchorY=100;var _viewportAnchorX=0;var _viewportAnchorY=100;var _scroll="";Object.defineProperties(this,{"width":{enumerable:true,get:function get(){return _width;},set:function set(value){if(!isValidPercentValue(value)){throw new Error("Width must be between 0 and 100.");}_width=value;}},"lines":{enumerable:true,get:function get(){return _lines;},set:function set(value){if(typeof value!=="number"){throw new TypeError("Lines must be set to a number.");}_lines=value;}},"regionAnchorY":{enumerable:true,get:function get(){return _regionAnchorY;},set:function set(value){if(!isValidPercentValue(value)){throw new Error("RegionAnchorX must be between 0 and 100.");}_regionAnchorY=value;}},"regionAnchorX":{enumerable:true,get:function get(){return _regionAnchorX;},set:function set(value){if(!isValidPercentValue(value)){throw new Error("RegionAnchorY must be between 0 and 100.");}_regionAnchorX=value;}},"viewportAnchorY":{enumerable:true,get:function get(){return _viewportAnchorY;},set:function set(value){if(!isValidPercentValue(value)){throw new Error("ViewportAnchorY must be between 0 and 100.");}_viewportAnchorY=value;}},"viewportAnchorX":{enumerable:true,get:function get(){return _viewportAnchorX;},set:function set(value){if(!isValidPercentValue(value)){throw new Error("ViewportAnchorX must be between 0 and 100.");}_viewportAnchorX=value;}},"scroll":{enumerable:true,get:function get(){return _scroll;},set:function set(value){var setting=findScrollSetting(value);// Have to check for false as an empty string is a legal value.
if(setting===false){console.warn("Scroll: an invalid or illegal string was specified.");}else{_scroll=setting;}}}});}var vttregion=VTTRegion;/**
       * Copyright 2013 vtt.js Contributors
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ // Default exports for Node. Export the extended versions of VTTCue and
// VTTRegion in Node since we likely want the capability to convert back and
// forth between JSON. If we don't then it's not that big of a deal since we're
// off browser.
var window$1=window_1;var vttjs=browserIndex.exports={WebVTT:vtt$1,VTTCue:vttcue,VTTRegion:vttregion};window$1.vttjs=vttjs;window$1.WebVTT=vttjs.WebVTT;var cueShim=vttjs.VTTCue;var regionShim=vttjs.VTTRegion;var nativeVTTCue=window$1.VTTCue;var nativeVTTRegion=window$1.VTTRegion;vttjs.shim=function(){window$1.VTTCue=cueShim;window$1.VTTRegion=regionShim;};vttjs.restore=function(){window$1.VTTCue=nativeVTTCue;window$1.VTTRegion=nativeVTTRegion;};if(!window$1.VTTCue){vttjs.shim();}var vtt=browserIndex.exports;function _extends$2(){_extends$2=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends$2.apply(this,arguments);}var urlToolkit={exports:{}};(function(module,exports){// see https://tools.ietf.org/html/rfc1808
(function(root){var URL_REGEX=/^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/;var FIRST_SEGMENT_REGEX=/^(?=([^\/?#]*))\1([^]*)$/;var SLASH_DOT_REGEX=/(?:\/|^)\.(?=\/)/g;var SLASH_DOT_DOT_REGEX=/(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g;var URLToolkit={// If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //
// E.g
// With opts.alwaysNormalize = false (default, spec compliant)
// http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g
// With opts.alwaysNormalize = true (not spec compliant)
// http://a.com/b/cd + /e/f/../g => http://a.com/e/g
buildAbsoluteURL:function buildAbsoluteURL(baseURL,relativeURL,opts){opts=opts||{};// remove any remaining space and CRLF
baseURL=baseURL.trim();relativeURL=relativeURL.trim();if(!relativeURL){// 2a) If the embedded URL is entirely empty, it inherits the
// entire base URL (i.e., is set equal to the base URL)
// and we are done.
if(!opts.alwaysNormalize){return baseURL;}var basePartsForNormalise=URLToolkit.parseURL(baseURL);if(!basePartsForNormalise){throw new Error('Error trying to parse base URL.');}basePartsForNormalise.path=URLToolkit.normalizePath(basePartsForNormalise.path);return URLToolkit.buildURLFromParts(basePartsForNormalise);}var relativeParts=URLToolkit.parseURL(relativeURL);if(!relativeParts){throw new Error('Error trying to parse relative URL.');}if(relativeParts.scheme){// 2b) If the embedded URL starts with a scheme name, it is
// interpreted as an absolute URL and we are done.
if(!opts.alwaysNormalize){return relativeURL;}relativeParts.path=URLToolkit.normalizePath(relativeParts.path);return URLToolkit.buildURLFromParts(relativeParts);}var baseParts=URLToolkit.parseURL(baseURL);if(!baseParts){throw new Error('Error trying to parse base URL.');}if(!baseParts.netLoc&&baseParts.path&&baseParts.path[0]!=='/'){// If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc
// This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'
var pathParts=FIRST_SEGMENT_REGEX.exec(baseParts.path);baseParts.netLoc=pathParts[1];baseParts.path=pathParts[2];}if(baseParts.netLoc&&!baseParts.path){baseParts.path='/';}var builtParts={// 2c) Otherwise, the embedded URL inherits the scheme of
// the base URL.
scheme:baseParts.scheme,netLoc:relativeParts.netLoc,path:null,params:relativeParts.params,query:relativeParts.query,fragment:relativeParts.fragment};if(!relativeParts.netLoc){// 3) If the embedded URL's <net_loc> is non-empty, we skip to
// Step 7.  Otherwise, the embedded URL inherits the <net_loc>
// (if any) of the base URL.
builtParts.netLoc=baseParts.netLoc;// 4) If the embedded URL path is preceded by a slash "/", the
// path is not relative and we skip to Step 7.
if(relativeParts.path[0]!=='/'){if(!relativeParts.path){// 5) If the embedded URL path is empty (and not preceded by a
// slash), then the embedded URL inherits the base URL path
builtParts.path=baseParts.path;// 5a) if the embedded URL's <params> is non-empty, we skip to
// step 7; otherwise, it inherits the <params> of the base
// URL (if any) and
if(!relativeParts.params){builtParts.params=baseParts.params;// 5b) if the embedded URL's <query> is non-empty, we skip to
// step 7; otherwise, it inherits the <query> of the base
// URL (if any) and we skip to step 7.
if(!relativeParts.query){builtParts.query=baseParts.query;}}}else{// 6) The last segment of the base URL's path (anything
// following the rightmost slash "/", or the entire path if no
// slash is present) is removed and the embedded URL's path is
// appended in its place.
var baseURLPath=baseParts.path;var newPath=baseURLPath.substring(0,baseURLPath.lastIndexOf('/')+1)+relativeParts.path;builtParts.path=URLToolkit.normalizePath(newPath);}}}if(builtParts.path===null){builtParts.path=opts.alwaysNormalize?URLToolkit.normalizePath(relativeParts.path):relativeParts.path;}return URLToolkit.buildURLFromParts(builtParts);},parseURL:function parseURL(url){var parts=URL_REGEX.exec(url);if(!parts){return null;}return{scheme:parts[1]||'',netLoc:parts[2]||'',path:parts[3]||'',params:parts[4]||'',query:parts[5]||'',fragment:parts[6]||''};},normalizePath:function normalizePath(path){// The following operations are
// then applied, in order, to the new path:
// 6a) All occurrences of "./", where "." is a complete path
// segment, are removed.
// 6b) If the path ends with "." as a complete path segment,
// that "." is removed.
path=path.split('').reverse().join('').replace(SLASH_DOT_REGEX,'');// 6c) All occurrences of "<segment>/../", where <segment> is a
// complete path segment not equal to "..", are removed.
// Removal of these path segments is performed iteratively,
// removing the leftmost matching pattern on each iteration,
// until no matching pattern remains.
// 6d) If the path ends with "<segment>/..", where <segment> is a
// complete path segment not equal to "..", that
// "<segment>/.." is removed.
while(path.length!==(path=path.replace(SLASH_DOT_DOT_REGEX,'')).length){}return path.split('').reverse().join('');},buildURLFromParts:function buildURLFromParts(parts){return parts.scheme+parts.netLoc+parts.path+parts.params+parts.query+parts.fragment;}};module.exports=URLToolkit;})();})(urlToolkit);var URLToolkit=urlToolkit.exports;var DEFAULT_LOCATION='http://example.com';var resolveUrl$1=function resolveUrl(baseUrl,relativeUrl){// return early if we don't need to resolve
if(/^[a-z]+:/i.test(relativeUrl)){return relativeUrl;}// if baseUrl is a data URI, ignore it and resolve everything relative to window.location
if(/^data:/.test(baseUrl)){baseUrl=window_1.location&&window_1.location.href||'';}// IE11 supports URL but not the URL constructor
// feature detect the behavior we want
var nativeURL=typeof window_1.URL==='function';var protocolLess=/^\/\//.test(baseUrl);// remove location if window.location isn't available (i.e. we're in node)
// and if baseUrl isn't an absolute url
var removeLocation=!window_1.location&&!/\/\//i.test(baseUrl);// if the base URL is relative then combine with the current location
if(nativeURL){baseUrl=new window_1.URL(baseUrl,window_1.location||DEFAULT_LOCATION);}else if(!/\/\//i.test(baseUrl)){baseUrl=URLToolkit.buildAbsoluteURL(window_1.location&&window_1.location.href||'',baseUrl);}if(nativeURL){var newUrl=new URL(relativeUrl,baseUrl);// if we're a protocol-less url, remove the protocol
// and if we're location-less, remove the location
// otherwise, return the url unmodified
if(removeLocation){return newUrl.href.slice(DEFAULT_LOCATION.length);}else if(protocolLess){return newUrl.href.slice(newUrl.protocol.length);}return newUrl.href;}return URLToolkit.buildAbsoluteURL(baseUrl,relativeUrl);};/**
       * @file stream.js
       */ /**
       * A lightweight readable stream implemention that handles event dispatching.
       *
       * @class Stream
       */var Stream=/*#__PURE__*/function(){function Stream(){this.listeners={};}/**
         * Add a listener for a specified event type.
         *
         * @param {string} type the event name
         * @param {Function} listener the callback to be invoked when an event of
         * the specified type occurs
         */var _proto=Stream.prototype;_proto.on=function on(type,listener){if(!this.listeners[type]){this.listeners[type]=[];}this.listeners[type].push(listener);}/**
         * Remove a listener for a specified event type.
         *
         * @param {string} type the event name
         * @param {Function} listener  a function previously registered for this
         * type of event through `on`
         * @return {boolean} if we could turn it off or not
         */;_proto.off=function off(type,listener){if(!this.listeners[type]){return false;}var index=this.listeners[type].indexOf(listener);// TODO: which is better?
// In Video.js we slice listener functions
// on trigger so that it does not mess up the order
// while we loop through.
//
// Here we slice on off so that the loop in trigger
// can continue using it's old reference to loop without
// messing up the order.
this.listeners[type]=this.listeners[type].slice(0);this.listeners[type].splice(index,1);return index>-1;}/**
         * Trigger an event of the specified type on this stream. Any additional
         * arguments to this function are passed as parameters to event listeners.
         *
         * @param {string} type the event name
         */;_proto.trigger=function trigger(type){var callbacks=this.listeners[type];if(!callbacks){return;}// Slicing the arguments on every invocation of this method
// can add a significant amount of overhead. Avoid the
// intermediate object creation for the common case of a
// single callback argument
if(arguments.length===2){var length=callbacks.length;for(var i=0;i<length;++i){callbacks[i].call(this,arguments[1]);}}else{var args=Array.prototype.slice.call(arguments,1);var _length=callbacks.length;for(var _i=0;_i<_length;++_i){callbacks[_i].apply(this,args);}}}/**
         * Destroys the stream and cleans up.
         */;_proto.dispose=function dispose(){this.listeners={};}/**
         * Forwards all `data` events on this stream to the destination stream. The
         * destination stream should provide a method `push` to receive the data
         * events as they arrive.
         *
         * @param {Stream} destination the stream that will receive all `data` events
         * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options
         */;_proto.pipe=function pipe(destination){this.on('data',function(data){destination.push(data);});};return Stream;}();function _extends$1(){_extends$1=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends$1.apply(this,arguments);}var atob$1=function atob(s){return window_1.atob?window_1.atob(s):Buffer.from(s,'base64').toString('binary');};function decodeB64ToUint8Array$1(b64Text){var decodedString=atob$1(b64Text);var array=new Uint8Array(decodedString.length);for(var i=0;i<decodedString.length;i++){array[i]=decodedString.charCodeAt(i);}return array;}/*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */ /**
       * @file m3u8/line-stream.js
       */ /**
       * A stream that buffers string input and generates a `data` event for each
       * line.
       *
       * @class LineStream
       * @extends Stream
       */var LineStream=/*#__PURE__*/function(_Stream){_inherits(LineStream,_Stream);var _super10=_createSuper(LineStream);function LineStream(){var _this33;_classCallCheck(this,LineStream);_this33=_super10.call(this);_this33.buffer='';return _this33;}/**
         * Add new data to be parsed.
         *
         * @param {string} data the text to process
         */_createClass(LineStream,[{key:"push",value:function push(data){var nextNewline;this.buffer+=data;nextNewline=this.buffer.indexOf('\n');for(;nextNewline>-1;nextNewline=this.buffer.indexOf('\n')){this.trigger('data',this.buffer.substring(0,nextNewline));this.buffer=this.buffer.substring(nextNewline+1);}}}]);return LineStream;}(Stream);var TAB=String.fromCharCode(0x09);var parseByterange=function parseByterange(byterangeString){// optionally match and capture 0+ digits before `@`
// optionally match and capture 0+ digits after `@`
var match=/([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString||'');var result={};if(match[1]){result.length=parseInt(match[1],10);}if(match[2]){result.offset=parseInt(match[2],10);}return result;};/**
       * "forgiving" attribute list psuedo-grammar:
       * attributes -> keyvalue (',' keyvalue)*
       * keyvalue   -> key '=' value
       * key        -> [^=]*
       * value      -> '"' [^"]* '"' | [^,]*
       */var attributeSeparator=function attributeSeparator(){var key='[^=]*';var value='"[^"]*"|[^,]*';var keyvalue='(?:'+key+')=(?:'+value+')';return new RegExp('(?:^|,)('+keyvalue+')');};/**
       * Parse attributes from a line given the separator
       *
       * @param {string} attributes the attribute line to parse
       */var parseAttributes$1=function parseAttributes$1(attributes){var result={};if(!attributes){return result;}// split the string using attributes as the separator
var attrs=attributes.split(attributeSeparator());var i=attrs.length;var attr;while(i--){// filter out unmatched portions of the string
if(attrs[i]===''){continue;}// split the key and value
attr=/([^=]*)=(.*)/.exec(attrs[i]).slice(1);// trim whitespace and remove optional quotes around the value
attr[0]=attr[0].replace(/^\s+|\s+$/g,'');attr[1]=attr[1].replace(/^\s+|\s+$/g,'');attr[1]=attr[1].replace(/^['"](.*)['"]$/g,'$1');result[attr[0]]=attr[1];}return result;};/**
       * A line-level M3U8 parser event stream. It expects to receive input one
       * line at a time and performs a context-free parse of its contents. A stream
       * interpretation of a manifest can be useful if the manifest is expected to
       * be too large to fit comfortably into memory or the entirety of the input
       * is not immediately available. Otherwise, it's probably much easier to work
       * with a regular `Parser` object.
       *
       * Produces `data` events with an object that captures the parser's
       * interpretation of the input. That object has a property `tag` that is one
       * of `uri`, `comment`, or `tag`. URIs only have a single additional
       * property, `line`, which captures the entirety of the input without
       * interpretation. Comments similarly have a single additional property
       * `text` which is the input without the leading `#`.
       *
       * Tags always have a property `tagType` which is the lower-cased version of
       * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,
       * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized
       * tags are given the tag type `unknown` and a single additional property
       * `data` with the remainder of the input.
       *
       * @class ParseStream
       * @extends Stream
       */var ParseStream=/*#__PURE__*/function(_Stream2){_inherits(ParseStream,_Stream2);var _super11=_createSuper(ParseStream);function ParseStream(){var _this34;_classCallCheck(this,ParseStream);_this34=_super11.call(this);_this34.customParsers=[];_this34.tagMappers=[];return _this34;}/**
         * Parses an additional line of input.
         *
         * @param {string} line a single line of an M3U8 file to parse
         */_createClass(ParseStream,[{key:"push",value:function push(line){var _this35=this;var match;var event;// strip whitespace
line=line.trim();if(line.length===0){// ignore empty lines
return;}// URIs
if(line[0]!=='#'){this.trigger('data',{type:'uri',uri:line});return;}// map tags
var newLines=this.tagMappers.reduce(function(acc,mapper){var mappedLine=mapper(line);// skip if unchanged
if(mappedLine===line){return acc;}return acc.concat([mappedLine]);},[line]);newLines.forEach(function(newLine){for(var _i71=0;_i71<_this35.customParsers.length;_i71++){if(_this35.customParsers[_i71].call(_this35,newLine)){return;}}// Comments
if(newLine.indexOf('#EXT')!==0){_this35.trigger('data',{type:'comment',text:newLine.slice(1)});return;}// strip off any carriage returns here so the regex matching
// doesn't have to account for them.
newLine=newLine.replace('\r','');// Tags
match=/^#EXTM3U/.exec(newLine);if(match){_this35.trigger('data',{type:'tag',tagType:'m3u'});return;}match=/^#EXTINF:([0-9\.]*)?,?(.*)?$/.exec(newLine);if(match){event={type:'tag',tagType:'inf'};if(match[1]){event.duration=parseFloat(match[1]);}if(match[2]){event.title=match[2];}_this35.trigger('data',event);return;}match=/^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);if(match){event={type:'tag',tagType:'targetduration'};if(match[1]){event.duration=parseInt(match[1],10);}_this35.trigger('data',event);return;}match=/^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);if(match){event={type:'tag',tagType:'version'};if(match[1]){event.version=parseInt(match[1],10);}_this35.trigger('data',event);return;}match=/^#EXT-X-MEDIA-SEQUENCE:(\-?[0-9.]*)?/.exec(newLine);if(match){event={type:'tag',tagType:'media-sequence'};if(match[1]){event.number=parseInt(match[1],10);}_this35.trigger('data',event);return;}match=/^#EXT-X-DISCONTINUITY-SEQUENCE:(\-?[0-9.]*)?/.exec(newLine);if(match){event={type:'tag',tagType:'discontinuity-sequence'};if(match[1]){event.number=parseInt(match[1],10);}_this35.trigger('data',event);return;}match=/^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);if(match){event={type:'tag',tagType:'playlist-type'};if(match[1]){event.playlistType=match[1];}_this35.trigger('data',event);return;}match=/^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);if(match){event=_extends$1(parseByterange(match[1]),{type:'tag',tagType:'byterange'});_this35.trigger('data',event);return;}match=/^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);if(match){event={type:'tag',tagType:'allow-cache'};if(match[1]){event.allowed=!/NO/.test(match[1]);}_this35.trigger('data',event);return;}match=/^#EXT-X-MAP:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'map'};if(match[1]){var _attributes=parseAttributes$1(match[1]);if(_attributes.URI){event.uri=_attributes.URI;}if(_attributes.BYTERANGE){event.byterange=parseByterange(_attributes.BYTERANGE);}}_this35.trigger('data',event);return;}match=/^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'stream-inf'};if(match[1]){event.attributes=parseAttributes$1(match[1]);if(event.attributes.RESOLUTION){var _split=event.attributes.RESOLUTION.split('x');var resolution={};if(_split[0]){resolution.width=parseInt(_split[0],10);}if(_split[1]){resolution.height=parseInt(_split[1],10);}event.attributes.RESOLUTION=resolution;}if(event.attributes.BANDWIDTH){event.attributes.BANDWIDTH=parseInt(event.attributes.BANDWIDTH,10);}if(event.attributes['FRAME-RATE']){event.attributes['FRAME-RATE']=parseFloat(event.attributes['FRAME-RATE']);}if(event.attributes['PROGRAM-ID']){event.attributes['PROGRAM-ID']=parseInt(event.attributes['PROGRAM-ID'],10);}}_this35.trigger('data',event);return;}match=/^#EXT-X-MEDIA:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'media'};if(match[1]){event.attributes=parseAttributes$1(match[1]);}_this35.trigger('data',event);return;}match=/^#EXT-X-ENDLIST/.exec(newLine);if(match){_this35.trigger('data',{type:'tag',tagType:'endlist'});return;}match=/^#EXT-X-DISCONTINUITY/.exec(newLine);if(match){_this35.trigger('data',{type:'tag',tagType:'discontinuity'});return;}match=/^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'program-date-time'};if(match[1]){event.dateTimeString=match[1];event.dateTimeObject=new Date(match[1]);}_this35.trigger('data',event);return;}match=/^#EXT-X-KEY:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'key'};if(match[1]){event.attributes=parseAttributes$1(match[1]);// parse the IV string into a Uint32Array
if(event.attributes.IV){if(event.attributes.IV.substring(0,2).toLowerCase()==='0x'){event.attributes.IV=event.attributes.IV.substring(2);}event.attributes.IV=event.attributes.IV.match(/.{8}/g);event.attributes.IV[0]=parseInt(event.attributes.IV[0],16);event.attributes.IV[1]=parseInt(event.attributes.IV[1],16);event.attributes.IV[2]=parseInt(event.attributes.IV[2],16);event.attributes.IV[3]=parseInt(event.attributes.IV[3],16);event.attributes.IV=new Uint32Array(event.attributes.IV);}}_this35.trigger('data',event);return;}match=/^#EXT-X-START:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'start'};if(match[1]){event.attributes=parseAttributes$1(match[1]);event.attributes['TIME-OFFSET']=parseFloat(event.attributes['TIME-OFFSET']);event.attributes.PRECISE=/YES/.test(event.attributes.PRECISE);}_this35.trigger('data',event);return;}match=/^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);if(match){event={type:'tag',tagType:'cue-out-cont'};if(match[1]){event.data=match[1];}else{event.data='';}_this35.trigger('data',event);return;}match=/^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);if(match){event={type:'tag',tagType:'cue-out'};if(match[1]){event.data=match[1];}else{event.data='';}_this35.trigger('data',event);return;}match=/^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);if(match){event={type:'tag',tagType:'cue-in'};if(match[1]){event.data=match[1];}else{event.data='';}_this35.trigger('data',event);return;}match=/^#EXT-X-SKIP:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'skip'};event.attributes=parseAttributes$1(match[1]);if(event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')){event.attributes['SKIPPED-SEGMENTS']=parseInt(event.attributes['SKIPPED-SEGMENTS'],10);}if(event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')){event.attributes['RECENTLY-REMOVED-DATERANGES']=event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);}_this35.trigger('data',event);return;}match=/^#EXT-X-PART:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'part'};event.attributes=parseAttributes$1(match[1]);['DURATION'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseFloat(event.attributes[key]);}});['INDEPENDENT','GAP'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=/YES/.test(event.attributes[key]);}});if(event.attributes.hasOwnProperty('BYTERANGE')){event.attributes.byterange=parseByterange(event.attributes.BYTERANGE);}_this35.trigger('data',event);return;}match=/^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'server-control'};event.attributes=parseAttributes$1(match[1]);['CAN-SKIP-UNTIL','PART-HOLD-BACK','HOLD-BACK'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseFloat(event.attributes[key]);}});['CAN-SKIP-DATERANGES','CAN-BLOCK-RELOAD'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=/YES/.test(event.attributes[key]);}});_this35.trigger('data',event);return;}match=/^#EXT-X-PART-INF:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'part-inf'};event.attributes=parseAttributes$1(match[1]);['PART-TARGET'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseFloat(event.attributes[key]);}});_this35.trigger('data',event);return;}match=/^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'preload-hint'};event.attributes=parseAttributes$1(match[1]);['BYTERANGE-START','BYTERANGE-LENGTH'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseInt(event.attributes[key],10);var subkey=key==='BYTERANGE-LENGTH'?'length':'offset';event.attributes.byterange=event.attributes.byterange||{};event.attributes.byterange[subkey]=event.attributes[key];// only keep the parsed byterange object.
delete event.attributes[key];}});_this35.trigger('data',event);return;}match=/^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'rendition-report'};event.attributes=parseAttributes$1(match[1]);['LAST-MSN','LAST-PART'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseInt(event.attributes[key],10);}});_this35.trigger('data',event);return;}match=/^#EXT-X-DATERANGE:(.*)$/.exec(newLine);if(match&&match[1]){event={type:'tag',tagType:'daterange'};event.attributes=parseAttributes$1(match[1]);['ID','CLASS'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=String(event.attributes[key]);}});['START-DATE','END-DATE'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=new Date(event.attributes[key]);}});['DURATION','PLANNED-DURATION'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=parseFloat(event.attributes[key]);}});['END-ON-NEXT'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=/YES/i.test(event.attributes[key]);}});['SCTE35-CMD',' SCTE35-OUT','SCTE35-IN'].forEach(function(key){if(event.attributes.hasOwnProperty(key)){event.attributes[key]=event.attributes[key].toString(16);}});var clientAttributePattern=/^X-([A-Z]+-)+[A-Z]+$/;for(var key in event.attributes){if(!clientAttributePattern.test(key)){continue;}var isHexaDecimal=/[0-9A-Fa-f]{6}/g.test(event.attributes[key]);var isDecimalFloating=/^\d+(\.\d+)?$/.test(event.attributes[key]);event.attributes[key]=isHexaDecimal?event.attributes[key].toString(16):isDecimalFloating?parseFloat(event.attributes[key]):String(event.attributes[key]);}_this35.trigger('data',event);return;}match=/^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);if(match){_this35.trigger('data',{type:'tag',tagType:'independent-segments'});return;}match=/^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);if(match){event={type:'tag',tagType:'content-steering'};event.attributes=parseAttributes$1(match[1]);_this35.trigger('data',event);return;}// unknown tag type
_this35.trigger('data',{type:'tag',data:newLine.slice(4)});});}/**
         * Add a parser for custom headers
         *
         * @param {Object}   options              a map of options for the added parser
         * @param {RegExp}   options.expression   a regular expression to match the custom header
         * @param {string}   options.customType   the custom type to register to the output
         * @param {Function} [options.dataParser] function to parse the line into an object
         * @param {boolean}  [options.segment]    should tag data be attached to the segment object
         */},{key:"addParser",value:function addParser(_ref132){var _this36=this;var expression=_ref132.expression,customType=_ref132.customType,dataParser=_ref132.dataParser,segment=_ref132.segment;if(typeof dataParser!=='function'){dataParser=function dataParser(line){return line;};}this.customParsers.push(function(line){var match=expression.exec(line);if(match){_this36.trigger('data',{type:'custom',data:dataParser(line),customType:customType,segment:segment});return true;}});}/**
         * Add a custom header mapper
         *
         * @param {Object}   options
         * @param {RegExp}   options.expression   a regular expression to match the custom header
         * @param {Function} options.map          function to translate tag into a different tag
         */},{key:"addTagMapper",value:function addTagMapper(_ref133){var expression=_ref133.expression,map=_ref133.map;var mapFn=function mapFn(line){if(expression.test(line)){return map(line);}return line;};this.tagMappers.push(mapFn);}}]);return ParseStream;}(Stream);var camelCase=function camelCase(str){return str.toLowerCase().replace(/-(\w)/g,function(a){return a[1].toUpperCase();});};var camelCaseKeys=function camelCaseKeys(attributes){var result={};Object.keys(attributes).forEach(function(key){result[camelCase(key)]=attributes[key];});return result;};// set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration
// we need this helper because defaults are based upon targetDuration and
// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before
// target durations are set.
var setHoldBack=function setHoldBack(manifest){var serverControl=manifest.serverControl,targetDuration=manifest.targetDuration,partTargetDuration=manifest.partTargetDuration;if(!serverControl){return;}var tag='#EXT-X-SERVER-CONTROL';var hb='holdBack';var phb='partHoldBack';var minTargetDuration=targetDuration&&targetDuration*3;var minPartDuration=partTargetDuration&&partTargetDuration*2;if(targetDuration&&!serverControl.hasOwnProperty(hb)){serverControl[hb]=minTargetDuration;this.trigger('info',{message:"".concat(tag," defaulting HOLD-BACK to targetDuration * 3 (").concat(minTargetDuration,").")});}if(minTargetDuration&&serverControl[hb]<minTargetDuration){this.trigger('warn',{message:"".concat(tag," clamping HOLD-BACK (").concat(serverControl[hb],") to targetDuration * 3 (").concat(minTargetDuration,")")});serverControl[hb]=minTargetDuration;}// default no part hold back to part target duration * 3
if(partTargetDuration&&!serverControl.hasOwnProperty(phb)){serverControl[phb]=partTargetDuration*3;this.trigger('info',{message:"".concat(tag," defaulting PART-HOLD-BACK to partTargetDuration * 3 (").concat(serverControl[phb],").")});}// if part hold back is too small default it to part target duration * 2
if(partTargetDuration&&serverControl[phb]<minPartDuration){this.trigger('warn',{message:"".concat(tag," clamping PART-HOLD-BACK (").concat(serverControl[phb],") to partTargetDuration * 2 (").concat(minPartDuration,").")});serverControl[phb]=minPartDuration;}};/**
       * A parser for M3U8 files. The current interpretation of the input is
       * exposed as a property `manifest` on parser objects. It's just two lines to
       * create and parse a manifest once you have the contents available as a string:
       *
       * ```js
       * var parser = new m3u8.Parser();
       * parser.push(xhr.responseText);
       * ```
       *
       * New input can later be applied to update the manifest object by calling
       * `push` again.
       *
       * The parser attempts to create a usable manifest object even if the
       * underlying input is somewhat nonsensical. It emits `info` and `warning`
       * events during the parse if it encounters input that seems invalid or
       * requires some property of the manifest object to be defaulted.
       *
       * @class Parser
       * @extends Stream
       */var Parser=/*#__PURE__*/function(_Stream3){_inherits(Parser,_Stream3);var _super12=_createSuper(Parser);function Parser(){var _this37;_classCallCheck(this,Parser);_this37=_super12.call(this);_this37.lineStream=new LineStream();_this37.parseStream=new ParseStream();_this37.lineStream.pipe(_this37.parseStream);_this37.lastProgramDateTime=null;/* eslint-disable consistent-this */var self=_assertThisInitialized2(_this37);/* eslint-enable consistent-this */var uris=[];var currentUri={};// if specified, the active EXT-X-MAP definition
var currentMap;// if specified, the active decryption key
var _key18;var hasParts=false;var noop=function noop(){};var defaultMediaGroups={'AUDIO':{},'VIDEO':{},'CLOSED-CAPTIONS':{},'SUBTITLES':{}};// This is the Widevine UUID from DASH IF IOP. The same exact string is
// used in MPDs with Widevine encrypted streams.
var widevineUuid='urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';// group segments into numbered timelines delineated by discontinuities
var currentTimeline=0;// the manifest is empty until the parse stream begins delivering data
_this37.manifest={allowCache:true,discontinuityStarts:[],dateRanges:[],segments:[]};// keep track of the last seen segment's byte range end, as segments are not required
// to provide the offset, in which case it defaults to the next byte after the
// previous segment
var lastByterangeEnd=0;// keep track of the last seen part's byte range end.
var lastPartByterangeEnd=0;var dateRangeTags={};_this37.on('end',function(){// only add preloadSegment if we don't yet have a uri for it.
// and we actually have parts/preloadHints
if(currentUri.uri||!currentUri.parts&&!currentUri.preloadHints){return;}if(!currentUri.map&&currentMap){currentUri.map=currentMap;}if(!currentUri.key&&_key18){currentUri.key=_key18;}if(!currentUri.timeline&&typeof currentTimeline==='number'){currentUri.timeline=currentTimeline;}_this37.manifest.preloadSegment=currentUri;});// update the manifest with the m3u8 entry from the parse stream
_this37.parseStream.on('data',function(entry){var mediaGroup;var rendition;({tag:function tag(){// switch based on the tag type
(({version:function version(){if(entry.version){this.manifest.version=entry.version;}},'allow-cache':function allowCache(){this.manifest.allowCache=entry.allowed;if(!('allowed'in entry)){this.trigger('info',{message:'defaulting allowCache to YES'});this.manifest.allowCache=true;}},byterange:function byterange(){var byterange={};if('length'in entry){currentUri.byterange=byterange;byterange.length=entry.length;if(!('offset'in entry)){/*
                         * From the latest spec (as of this writing):
                         * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2
                         *
                         * Same text since EXT-X-BYTERANGE's introduction in draft 7:
                         * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)
                         *
                         * "If o [offset] is not present, the sub-range begins at the next byte
                         * following the sub-range of the previous media segment."
                         */entry.offset=lastByterangeEnd;}}if('offset'in entry){currentUri.byterange=byterange;byterange.offset=entry.offset;}lastByterangeEnd=byterange.offset+byterange.length;},endlist:function endlist(){this.manifest.endList=true;},inf:function inf(){if(!('mediaSequence'in this.manifest)){this.manifest.mediaSequence=0;this.trigger('info',{message:'defaulting media sequence to zero'});}if(!('discontinuitySequence'in this.manifest)){this.manifest.discontinuitySequence=0;this.trigger('info',{message:'defaulting discontinuity sequence to zero'});}if(entry.title){currentUri.title=entry.title;}if(entry.duration>0){currentUri.duration=entry.duration;}if(entry.duration===0){currentUri.duration=0.01;this.trigger('info',{message:'updating zero segment duration to a small value'});}this.manifest.segments=uris;},key:function key(){if(!entry.attributes){this.trigger('warn',{message:'ignoring key declaration without attribute list'});return;}// clear the active encryption key
if(entry.attributes.METHOD==='NONE'){_key18=null;return;}if(!entry.attributes.URI){this.trigger('warn',{message:'ignoring key declaration without URI'});return;}if(entry.attributes.KEYFORMAT==='com.apple.streamingkeydelivery'){this.manifest.contentProtection=this.manifest.contentProtection||{};// TODO: add full support for this.
this.manifest.contentProtection['com.apple.fps.1_0']={attributes:entry.attributes};return;}if(entry.attributes.KEYFORMAT==='com.microsoft.playready'){this.manifest.contentProtection=this.manifest.contentProtection||{};// TODO: add full support for this.
this.manifest.contentProtection['com.microsoft.playready']={uri:entry.attributes.URI};return;}// check if the content is encrypted for Widevine
// Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf
if(entry.attributes.KEYFORMAT===widevineUuid){var VALID_METHODS=['SAMPLE-AES','SAMPLE-AES-CTR','SAMPLE-AES-CENC'];if(VALID_METHODS.indexOf(entry.attributes.METHOD)===-1){this.trigger('warn',{message:'invalid key method provided for Widevine'});return;}if(entry.attributes.METHOD==='SAMPLE-AES-CENC'){this.trigger('warn',{message:'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'});}if(entry.attributes.URI.substring(0,23)!=='data:text/plain;base64,'){this.trigger('warn',{message:'invalid key URI provided for Widevine'});return;}if(!(entry.attributes.KEYID&&entry.attributes.KEYID.substring(0,2)==='0x')){this.trigger('warn',{message:'invalid key ID provided for Widevine'});return;}// if Widevine key attributes are valid, store them as `contentProtection`
// on the manifest to emulate Widevine tag structure in a DASH mpd
this.manifest.contentProtection=this.manifest.contentProtection||{};this.manifest.contentProtection['com.widevine.alpha']={attributes:{schemeIdUri:entry.attributes.KEYFORMAT,// remove '0x' from the key id string
keyId:entry.attributes.KEYID.substring(2)},// decode the base64-encoded PSSH box
pssh:decodeB64ToUint8Array$1(entry.attributes.URI.split(',')[1])};return;}if(!entry.attributes.METHOD){this.trigger('warn',{message:'defaulting key method to AES-128'});}// setup an encryption key for upcoming segments
_key18={method:entry.attributes.METHOD||'AES-128',uri:entry.attributes.URI};if(typeof entry.attributes.IV!=='undefined'){_key18.iv=entry.attributes.IV;}},'media-sequence':function mediaSequence(){if(!isFinite(entry.number)){this.trigger('warn',{message:'ignoring invalid media sequence: '+entry.number});return;}this.manifest.mediaSequence=entry.number;},'discontinuity-sequence':function discontinuitySequence(){if(!isFinite(entry.number)){this.trigger('warn',{message:'ignoring invalid discontinuity sequence: '+entry.number});return;}this.manifest.discontinuitySequence=entry.number;currentTimeline=entry.number;},'playlist-type':function playlistType(){if(!/VOD|EVENT/.test(entry.playlistType)){this.trigger('warn',{message:'ignoring unknown playlist type: '+entry.playlist});return;}this.manifest.playlistType=entry.playlistType;},map:function map(){currentMap={};if(entry.uri){currentMap.uri=entry.uri;}if(entry.byterange){currentMap.byterange=entry.byterange;}if(_key18){currentMap.key=_key18;}},'stream-inf':function streamInf(){this.manifest.playlists=uris;this.manifest.mediaGroups=this.manifest.mediaGroups||defaultMediaGroups;if(!entry.attributes){this.trigger('warn',{message:'ignoring empty stream-inf attributes'});return;}if(!currentUri.attributes){currentUri.attributes={};}_extends$1(currentUri.attributes,entry.attributes);},media:function media(){this.manifest.mediaGroups=this.manifest.mediaGroups||defaultMediaGroups;if(!(entry.attributes&&entry.attributes.TYPE&&entry.attributes['GROUP-ID']&&entry.attributes.NAME)){this.trigger('warn',{message:'ignoring incomplete or missing media group'});return;}// find the media group, creating defaults as necessary
var mediaGroupType=this.manifest.mediaGroups[entry.attributes.TYPE];mediaGroupType[entry.attributes['GROUP-ID']]=mediaGroupType[entry.attributes['GROUP-ID']]||{};mediaGroup=mediaGroupType[entry.attributes['GROUP-ID']];// collect the rendition metadata
rendition={default:/yes/i.test(entry.attributes.DEFAULT)};if(rendition.default){rendition.autoselect=true;}else{rendition.autoselect=/yes/i.test(entry.attributes.AUTOSELECT);}if(entry.attributes.LANGUAGE){rendition.language=entry.attributes.LANGUAGE;}if(entry.attributes.URI){rendition.uri=entry.attributes.URI;}if(entry.attributes['INSTREAM-ID']){rendition.instreamId=entry.attributes['INSTREAM-ID'];}if(entry.attributes.CHARACTERISTICS){rendition.characteristics=entry.attributes.CHARACTERISTICS;}if(entry.attributes.FORCED){rendition.forced=/yes/i.test(entry.attributes.FORCED);}// insert the new rendition
mediaGroup[entry.attributes.NAME]=rendition;},discontinuity:function discontinuity(){currentTimeline+=1;currentUri.discontinuity=true;this.manifest.discontinuityStarts.push(uris.length);},'program-date-time':function programDateTime(){if(typeof this.manifest.dateTimeString==='undefined'){// PROGRAM-DATE-TIME is a media-segment tag, but for backwards
// compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag
// to the manifest object
// TODO: Consider removing this in future major version
this.manifest.dateTimeString=entry.dateTimeString;this.manifest.dateTimeObject=entry.dateTimeObject;}currentUri.dateTimeString=entry.dateTimeString;currentUri.dateTimeObject=entry.dateTimeObject;var lastProgramDateTime=this.lastProgramDateTime;this.lastProgramDateTime=new Date(entry.dateTimeString).getTime();// We should extrapolate Program Date Time backward only during first program date time occurrence.
// Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.
if(lastProgramDateTime===null){// Extrapolate Program Date Time backward
// Since it is first program date time occurrence we're assuming that
// all this.manifest.segments have no program date time info
this.manifest.segments.reduceRight(function(programDateTime,segment){segment.programDateTime=programDateTime-segment.duration*1000;return segment.programDateTime;},this.lastProgramDateTime);}},targetduration:function targetduration(){if(!isFinite(entry.duration)||entry.duration<0){this.trigger('warn',{message:'ignoring invalid target duration: '+entry.duration});return;}this.manifest.targetDuration=entry.duration;setHoldBack.call(this,this.manifest);},start:function start(){if(!entry.attributes||isNaN(entry.attributes['TIME-OFFSET'])){this.trigger('warn',{message:'ignoring start declaration without appropriate attribute list'});return;}this.manifest.start={timeOffset:entry.attributes['TIME-OFFSET'],precise:entry.attributes.PRECISE};},'cue-out':function cueOut(){currentUri.cueOut=entry.data;},'cue-out-cont':function cueOutCont(){currentUri.cueOutCont=entry.data;},'cue-in':function cueIn(){currentUri.cueIn=entry.data;},'skip':function skip(){this.manifest.skip=camelCaseKeys(entry.attributes);this.warnOnMissingAttributes_('#EXT-X-SKIP',entry.attributes,['SKIPPED-SEGMENTS']);},'part':function part(){var _this38=this;hasParts=true;// parts are always specifed before a segment
var segmentIndex=this.manifest.segments.length;var part=camelCaseKeys(entry.attributes);currentUri.parts=currentUri.parts||[];currentUri.parts.push(part);if(part.byterange){if(!part.byterange.hasOwnProperty('offset')){part.byterange.offset=lastPartByterangeEnd;}lastPartByterangeEnd=part.byterange.offset+part.byterange.length;}var partIndex=currentUri.parts.length-1;this.warnOnMissingAttributes_("#EXT-X-PART #".concat(partIndex," for segment #").concat(segmentIndex),entry.attributes,['URI','DURATION']);if(this.manifest.renditionReports){this.manifest.renditionReports.forEach(function(r,i){if(!r.hasOwnProperty('lastPart')){_this38.trigger('warn',{message:"#EXT-X-RENDITION-REPORT #".concat(i," lacks required attribute(s): LAST-PART")});}});}},'server-control':function serverControl(){var attrs=this.manifest.serverControl=camelCaseKeys(entry.attributes);if(!attrs.hasOwnProperty('canBlockReload')){attrs.canBlockReload=false;this.trigger('info',{message:'#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'});}setHoldBack.call(this,this.manifest);if(attrs.canSkipDateranges&&!attrs.hasOwnProperty('canSkipUntil')){this.trigger('warn',{message:'#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'});}},'preload-hint':function preloadHint(){// parts are always specifed before a segment
var segmentIndex=this.manifest.segments.length;var hint=camelCaseKeys(entry.attributes);var isPart=hint.type&&hint.type==='PART';currentUri.preloadHints=currentUri.preloadHints||[];currentUri.preloadHints.push(hint);if(hint.byterange){if(!hint.byterange.hasOwnProperty('offset')){// use last part byterange end or zero if not a part.
hint.byterange.offset=isPart?lastPartByterangeEnd:0;if(isPart){lastPartByterangeEnd=hint.byterange.offset+hint.byterange.length;}}}var index=currentUri.preloadHints.length-1;this.warnOnMissingAttributes_("#EXT-X-PRELOAD-HINT #".concat(index," for segment #").concat(segmentIndex),entry.attributes,['TYPE','URI']);if(!hint.type){return;}// search through all preload hints except for the current one for
// a duplicate type.
for(var _i72=0;_i72<currentUri.preloadHints.length-1;_i72++){var otherHint=currentUri.preloadHints[_i72];if(!otherHint.type){continue;}if(otherHint.type===hint.type){this.trigger('warn',{message:"#EXT-X-PRELOAD-HINT #".concat(index," for segment #").concat(segmentIndex," has the same TYPE ").concat(hint.type," as preload hint #").concat(_i72)});}}},'rendition-report':function renditionReport(){var report=camelCaseKeys(entry.attributes);this.manifest.renditionReports=this.manifest.renditionReports||[];this.manifest.renditionReports.push(report);var index=this.manifest.renditionReports.length-1;var required=['LAST-MSN','URI'];if(hasParts){required.push('LAST-PART');}this.warnOnMissingAttributes_("#EXT-X-RENDITION-REPORT #".concat(index),entry.attributes,required);},'part-inf':function partInf(){this.manifest.partInf=camelCaseKeys(entry.attributes);this.warnOnMissingAttributes_('#EXT-X-PART-INF',entry.attributes,['PART-TARGET']);if(this.manifest.partInf.partTarget){this.manifest.partTargetDuration=this.manifest.partInf.partTarget;}setHoldBack.call(this,this.manifest);},'daterange':function daterange(){this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));var index=this.manifest.dateRanges.length-1;this.warnOnMissingAttributes_("#EXT-X-DATERANGE #".concat(index),entry.attributes,['ID','START-DATE']);var dateRange=this.manifest.dateRanges[index];if(dateRange.endDate&&dateRange.startDate&&new Date(dateRange.endDate)<new Date(dateRange.startDate)){this.trigger('warn',{message:'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'});}if(dateRange.duration&&dateRange.duration<0){this.trigger('warn',{message:'EXT-X-DATERANGE DURATION must not be negative'});}if(dateRange.plannedDuration&&dateRange.plannedDuration<0){this.trigger('warn',{message:'EXT-X-DATERANGE PLANNED-DURATION must not be negative'});}var endOnNextYes=!!dateRange.endOnNext;if(endOnNextYes&&!dateRange.class){this.trigger('warn',{message:'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'});}if(endOnNextYes&&(dateRange.duration||dateRange.endDate)){this.trigger('warn',{message:'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'});}if(dateRange.duration&&dateRange.endDate){var startDate=dateRange.startDate;var newDateInSeconds=startDate.getTime()+dateRange.duration*1000;this.manifest.dateRanges[index].endDate=new Date(newDateInSeconds);}if(!dateRangeTags[dateRange.id]){dateRangeTags[dateRange.id]=dateRange;}else{for(var attribute in dateRangeTags[dateRange.id]){if(!!dateRange[attribute]&&JSON.stringify(dateRangeTags[dateRange.id][attribute])!==JSON.stringify(dateRange[attribute])){this.trigger('warn',{message:'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'});break;}}// if tags with the same ID do not have conflicting attributes, merge them
var dateRangeWithSameId=this.manifest.dateRanges.findIndex(function(dateRangeToFind){return dateRangeToFind.id===dateRange.id;});this.manifest.dateRanges[dateRangeWithSameId]=_extends$1(this.manifest.dateRanges[dateRangeWithSameId],dateRange);dateRangeTags[dateRange.id]=_extends$1(dateRangeTags[dateRange.id],dateRange);// after merging, delete the duplicate dateRange that was added last
this.manifest.dateRanges.pop();}},'independent-segments':function independentSegments(){this.manifest.independentSegments=true;},'content-steering':function contentSteering(){this.manifest.contentSteering=camelCaseKeys(entry.attributes);this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING',entry.attributes,['SERVER-URI']);}})[entry.tagType]||noop).call(self);},uri:function uri(){currentUri.uri=entry.uri;uris.push(currentUri);// if no explicit duration was declared, use the target duration
if(this.manifest.targetDuration&&!('duration'in currentUri)){this.trigger('warn',{message:'defaulting segment duration to the target duration'});currentUri.duration=this.manifest.targetDuration;}// annotate with encryption information, if necessary
if(_key18){currentUri.key=_key18;}currentUri.timeline=currentTimeline;// annotate with initialization segment information, if necessary
if(currentMap){currentUri.map=currentMap;}// reset the last byterange end as it needs to be 0 between parts
lastPartByterangeEnd=0;// Once we have at least one program date time we can always extrapolate it forward
if(this.lastProgramDateTime!==null){currentUri.programDateTime=this.lastProgramDateTime;this.lastProgramDateTime+=currentUri.duration*1000;}// prepare for the next URI
currentUri={};},comment:function comment(){// comments are not important for playback
},custom:function custom(){// if this is segment-level data attach the output to the segment
if(entry.segment){currentUri.custom=currentUri.custom||{};currentUri.custom[entry.customType]=entry.data;// if this is manifest-level data attach to the top level manifest object
}else{this.manifest.custom=this.manifest.custom||{};this.manifest.custom[entry.customType]=entry.data;}}})[entry.type].call(self);});return _this37;}_createClass(Parser,[{key:"warnOnMissingAttributes_",value:function warnOnMissingAttributes_(identifier,attributes,required){var missing=[];required.forEach(function(key){if(!attributes.hasOwnProperty(key)){missing.push(key);}});if(missing.length){this.trigger('warn',{message:"".concat(identifier," lacks required attribute(s): ").concat(missing.join(', '))});}}/**
         * Parse the input string and update the manifest object.
         *
         * @param {string} chunk a potentially incomplete portion of the manifest
         */},{key:"push",value:function push(chunk){this.lineStream.push(chunk);}/**
         * Flush any remaining input. This can be handy if the last line of an M3U8
         * manifest did not contain a trailing newline but the file has been
         * completely received.
         */},{key:"end",value:function end(){// flush any buffered input
this.lineStream.push('\n');if(this.manifest.dateRanges.length&&this.lastProgramDateTime===null){this.trigger('warn',{message:'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'});}this.lastProgramDateTime=null;this.trigger('end');}/**
         * Add an additional parser for non-standard tags
         *
         * @param {Object}   options              a map of options for the added parser
         * @param {RegExp}   options.expression   a regular expression to match the custom header
         * @param {string}   options.customType   the custom type to register to the output
         * @param {Function} [options.dataParser] function to parse the line into an object
         * @param {boolean}  [options.segment]    should tag data be attached to the segment object
         */},{key:"addParser",value:function addParser(options){this.parseStream.addParser(options);}/**
         * Add a custom header mapper
         *
         * @param {Object}   options
         * @param {RegExp}   options.expression   a regular expression to match the custom header
         * @param {Function} options.map          function to translate tag into a different tag
         */},{key:"addTagMapper",value:function addTagMapper(options){this.parseStream.addTagMapper(options);}}]);return Parser;}(Stream);var regexs={// to determine mime types
mp4:/^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,webm:/^(vp0?[89]|av0?1|opus|vorbis)/,ogg:/^(vp0?[89]|theora|flac|opus|vorbis)/,// to determine if a codec is audio or video
video:/^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,audio:/^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,text:/^(stpp.ttml.im1t)/,// mux.js support regex
muxerVideo:/^(avc0?1)/,muxerAudio:/^(mp4a)/,// match nothing as muxer does not support text right now.
// there cannot never be a character before the start of a string
// so this matches nothing.
muxerText:/a^/};var mediaTypes=['video','audio','text'];var upperMediaTypes=['Video','Audio','Text'];/**
       * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard
       * `avc1.<hhhhhh>`
       *
       * @param {string} codec
       *        Codec string to translate
       * @return {string}
       *         The translated codec string
       */var translateLegacyCodec=function translateLegacyCodec(codec){if(!codec){return codec;}return codec.replace(/avc1\.(\d+)\.(\d+)/i,function(orig,profile,avcLevel){var profileHex=('00'+Number(profile).toString(16)).slice(-2);var avcLevelHex=('00'+Number(avcLevel).toString(16)).slice(-2);return'avc1.'+profileHex+'00'+avcLevelHex;});};/**
       * @typedef {Object} ParsedCodecInfo
       * @property {number} codecCount
       *           Number of codecs parsed
       * @property {string} [videoCodec]
       *           Parsed video codec (if found)
       * @property {string} [videoObjectTypeIndicator]
       *           Video object type indicator (if found)
       * @property {string|null} audioProfile
       *           Audio profile
       */ /**
       * Parses a codec string to retrieve the number of codecs specified, the video codec and
       * object type indicator, and the audio profile.
       *
       * @param {string} [codecString]
       *        The codec string to parse
       * @return {ParsedCodecInfo}
       *         Parsed codec info
       */var parseCodecs=function parseCodecs(codecString){if(codecString===void 0){codecString='';}var codecs=codecString.split(',');var result=[];codecs.forEach(function(codec){codec=codec.trim();var codecType;mediaTypes.forEach(function(name){var match=regexs[name].exec(codec.toLowerCase());if(!match||match.length<=1){return;}codecType=name;// maintain codec case
var type=codec.substring(0,match[1].length);var details=codec.replace(type,'');result.push({type:type,details:details,mediaType:name});});if(!codecType){result.push({type:codec,details:'',mediaType:'unknown'});}});return result;};/**
       * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is
       * a default alternate audio playlist for the provided audio group.
       *
       * @param {Object} master
       *        The master playlist
       * @param {string} audioGroupId
       *        ID of the audio group for which to find the default codec info
       * @return {ParsedCodecInfo}
       *         Parsed codec info
       */var codecsFromDefault=function codecsFromDefault(master,audioGroupId){if(!master.mediaGroups.AUDIO||!audioGroupId){return null;}var audioGroup=master.mediaGroups.AUDIO[audioGroupId];if(!audioGroup){return null;}for(var name in audioGroup){var audioType=audioGroup[name];if(audioType.default&&audioType.playlists){// codec should be the same for all playlists within the audio type
return parseCodecs(audioType.playlists[0].attributes.CODECS);}}return null;};var isAudioCodec=function isAudioCodec(codec){if(codec===void 0){codec='';}return regexs.audio.test(codec.trim().toLowerCase());};var isTextCodec=function isTextCodec(codec){if(codec===void 0){codec='';}return regexs.text.test(codec.trim().toLowerCase());};var getMimeForCodec=function getMimeForCodec(codecString){if(!codecString||typeof codecString!=='string'){return;}var codecs=codecString.toLowerCase().split(',').map(function(c){return translateLegacyCodec(c.trim());});// default to video type
var type='video';// only change to audio type if the only codec we have is
// audio
if(codecs.length===1&&isAudioCodec(codecs[0])){type='audio';}else if(codecs.length===1&&isTextCodec(codecs[0])){// text uses application/<container> for now
type='application';}// default the container to mp4
var container='mp4';// every codec must be able to go into the container
// for that container to be the correct one
if(codecs.every(function(c){return regexs.mp4.test(c);})){container='mp4';}else if(codecs.every(function(c){return regexs.webm.test(c);})){container='webm';}else if(codecs.every(function(c){return regexs.ogg.test(c);})){container='ogg';}return type+"/"+container+";codecs=\""+codecString+"\"";};/**
       * Tests whether the codec is supported by MediaSource. Optionally also tests ManagedMediaSource.
       *
       * @param {string} codecString
       *        Codec to test
       * @param {boolean} [withMMS]
       *        Whether to check if ManagedMediaSource supports it
       * @return {boolean}
       *          Codec is supported
       */var browserSupportsCodec=function browserSupportsCodec(codecString,withMMS){if(codecString===void 0){codecString='';}if(withMMS===void 0){withMMS=false;}return window_1.MediaSource&&window_1.MediaSource.isTypeSupported&&window_1.MediaSource.isTypeSupported(getMimeForCodec(codecString))||withMMS&&window_1.ManagedMediaSource&&window_1.ManagedMediaSource.isTypeSupported&&window_1.ManagedMediaSource.isTypeSupported(getMimeForCodec(codecString))||false;};var muxerSupportsCodec=function muxerSupportsCodec(codecString){if(codecString===void 0){codecString='';}return codecString.toLowerCase().split(',').every(function(codec){codec=codec.trim();// any match is supported.
for(var i=0;i<upperMediaTypes.length;i++){var type=upperMediaTypes[i];if(regexs["muxer"+type].test(codec)){return true;}}return false;});};var DEFAULT_AUDIO_CODEC='mp4a.40.2';var DEFAULT_VIDEO_CODEC='avc1.4d400d';var MPEGURL_REGEX=/^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;var DASH_REGEX=/^application\/dash\+xml/i;/**
       * Returns a string that describes the type of source based on a video source object's
       * media type.
       *
       * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}
       *
       * @param {string} type
       *        Video source object media type
       * @return {('hls'|'dash'|'vhs-json'|null)}
       *         VHS source type string
       */var simpleTypeFromSourceType=function simpleTypeFromSourceType(type){if(MPEGURL_REGEX.test(type)){return'hls';}if(DASH_REGEX.test(type)){return'dash';}// Denotes the special case of a manifest object passed to http-streaming instead of a
// source URL.
//
// See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.
//
// In this case, vnd stands for vendor, video.js for the organization, VHS for this
// project, and the +json suffix identifies the structure of the media type.
if(type==='application/vnd.videojs.vhs+json'){return'vhs-json';}return null;};// we used to do this with log2 but BigInt does not support builtin math
// Math.ceil(log2(x));
var countBits=function countBits(x){return x.toString(2).length;};// count the number of whole bytes it would take to represent a number
var countBytes=function countBytes(x){return Math.ceil(countBits(x)/8);};var isArrayBufferView=function isArrayBufferView(obj){if(ArrayBuffer.isView==='function'){return ArrayBuffer.isView(obj);}return obj&&obj.buffer instanceof ArrayBuffer;};var isTypedArray=function isTypedArray(obj){return isArrayBufferView(obj);};var toUint8=function toUint8(bytes){if(bytes instanceof Uint8Array){return bytes;}if(!Array.isArray(bytes)&&!isTypedArray(bytes)&&!(bytes instanceof ArrayBuffer)){// any non-number or NaN leads to empty uint8array
// eslint-disable-next-line
if(typeof bytes!=='number'||typeof bytes==='number'&&bytes!==bytes){bytes=0;}else{bytes=[bytes];}}return new Uint8Array(bytes&&bytes.buffer||bytes,bytes&&bytes.byteOffset||0,bytes&&bytes.byteLength||0);};var BigInt=window_1.BigInt||Number;var BYTE_TABLE=[BigInt('0x1'),BigInt('0x100'),BigInt('0x10000'),BigInt('0x1000000'),BigInt('0x100000000'),BigInt('0x10000000000'),BigInt('0x1000000000000'),BigInt('0x100000000000000'),BigInt('0x10000000000000000')];(function(){var a=new Uint16Array([0xFFCC]);var b=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);if(b[0]===0xFF){return'big';}if(b[0]===0xCC){return'little';}return'unknown';})();var bytesToNumber=function bytesToNumber(bytes,_temp){var _ref=_temp===void 0?{}:_temp,_ref$signed=_ref.signed,signed=_ref$signed===void 0?false:_ref$signed,_ref$le=_ref.le,le=_ref$le===void 0?false:_ref$le;bytes=toUint8(bytes);var fn=le?'reduce':'reduceRight';var obj=bytes[fn]?bytes[fn]:Array.prototype[fn];var number=obj.call(bytes,function(total,byte,i){var exponent=le?i:Math.abs(i+1-bytes.length);return total+BigInt(byte)*BYTE_TABLE[exponent];},BigInt(0));if(signed){var max=BYTE_TABLE[bytes.length]/BigInt(2)-BigInt(1);number=BigInt(number);if(number>max){number-=max;number-=max;number-=BigInt(2);}}return Number(number);};var numberToBytes=function numberToBytes(number,_temp2){var _ref2=_temp2===void 0?{}:_temp2,_ref2$le=_ref2.le,le=_ref2$le===void 0?false:_ref2$le;// eslint-disable-next-line
if(typeof number!=='bigint'&&typeof number!=='number'||typeof number==='number'&&number!==number){number=0;}number=BigInt(number);var byteCount=countBytes(number);var bytes=new Uint8Array(new ArrayBuffer(byteCount));for(var i=0;i<byteCount;i++){var byteIndex=le?i:Math.abs(i+1-bytes.length);bytes[byteIndex]=Number(number/BYTE_TABLE[i]&BigInt(0xFF));if(number<0){bytes[byteIndex]=Math.abs(~bytes[byteIndex]);bytes[byteIndex]-=i===0?1:2;}}return bytes;};var stringToBytes=function stringToBytes(string,stringIsBytes){if(typeof string!=='string'&&string&&typeof string.toString==='function'){string=string.toString();}if(typeof string!=='string'){return new Uint8Array();}// If the string already is bytes, we don't have to do this
// otherwise we do this so that we split multi length characters
// into individual bytes
if(!stringIsBytes){string=unescape(encodeURIComponent(string));}var view=new Uint8Array(string.length);for(var i=0;i<string.length;i++){view[i]=string.charCodeAt(i);}return view;};var concatTypedArrays=function concatTypedArrays(){for(var _len=arguments.length,buffers=new Array(_len),_key=0;_key<_len;_key++){buffers[_key]=arguments[_key];}buffers=buffers.filter(function(b){return b&&(b.byteLength||b.length)&&typeof b!=='string';});if(buffers.length<=1){// for 0 length we will return empty uint8
// for 1 length we return the first uint8
return toUint8(buffers[0]);}var totalLen=buffers.reduce(function(total,buf,i){return total+(buf.byteLength||buf.length);},0);var tempBuffer=new Uint8Array(totalLen);var offset=0;buffers.forEach(function(buf){buf=toUint8(buf);tempBuffer.set(buf,offset);offset+=buf.byteLength;});return tempBuffer;};/**
       * Check if the bytes "b" are contained within bytes "a".
       *
       * @param {Uint8Array|Array} a
       *        Bytes to check in
       *
       * @param {Uint8Array|Array} b
       *        Bytes to check for
       *
       * @param {Object} options
       *        options
       *
       * @param {Array|Uint8Array} [offset=0]
       *        offset to use when looking at bytes in a
       *
       * @param {Array|Uint8Array} [mask=[]]
       *        mask to use on bytes before comparison.
       *
       * @return {boolean}
       *         If all bytes in b are inside of a, taking into account
       *         bit masks.
       */var bytesMatch=function bytesMatch(a,b,_temp3){var _ref3=_temp3===void 0?{}:_temp3,_ref3$offset=_ref3.offset,offset=_ref3$offset===void 0?0:_ref3$offset,_ref3$mask=_ref3.mask,mask=_ref3$mask===void 0?[]:_ref3$mask;a=toUint8(a);b=toUint8(b);// ie 11 does not support uint8 every
var fn=b.every?b.every:Array.prototype.every;return b.length&&a.length-offset>=b.length&&// ie 11 doesn't support every on uin8
fn.call(b,function(bByte,i){var aByte=mask[i]?mask[i]&a[offset+i]:a[offset+i];return bByte===aByte;});};/**
       * Loops through all supported media groups in master and calls the provided
       * callback for each group
       *
       * @param {Object} master
       *        The parsed master manifest object
       * @param {string[]} groups
       *        The media groups to call the callback for
       * @param {Function} callback
       *        Callback to call for each media group
       */var forEachMediaGroup$1=function forEachMediaGroup(master,groups,callback){groups.forEach(function(mediaType){for(var groupKey in master.mediaGroups[mediaType]){for(var labelKey in master.mediaGroups[mediaType][groupKey]){var mediaProperties=master.mediaGroups[mediaType][groupKey][labelKey];callback(mediaProperties,mediaType,groupKey,labelKey);}}});};var atob=function atob(s){return window_1.atob?window_1.atob(s):Buffer.from(s,'base64').toString('binary');};function decodeB64ToUint8Array(b64Text){var decodedString=atob(b64Text);var array=new Uint8Array(decodedString.length);for(var i=0;i<decodedString.length;i++){array[i]=decodedString.charCodeAt(i);}return array;}var dom$1={};var conventions$2={};/**
       * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.
       *
       * Works with anything that has a `length` property and index access properties, including NodeList.
       *
       * @template {unknown} T
       * @param {Array<T> | ({length:number, [number]: T})} list
       * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate
       * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,
       * 				allows injecting a custom implementation in tests
       * @returns {T | undefined}
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
       * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find
       */function find$1(list,predicate,ac){if(ac===undefined){ac=Array.prototype;}if(list&&typeof ac.find==='function'){return ac.find.call(list,predicate);}for(var i=0;i<list.length;i++){if(Object.prototype.hasOwnProperty.call(list,i)){var item=list[i];if(predicate.call(undefined,item,i,list)){return item;}}}}/**
       * "Shallow freezes" an object to render it immutable.
       * Uses `Object.freeze` if available,
       * otherwise the immutability is only in the type.
       *
       * Is used to create "enum like" objects.
       *
       * @template T
       * @param {T} object the object to freeze
       * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,
       * 				allows to inject custom object constructor for tests
       * @returns {Readonly<T>}
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze
       */function freeze(object,oc){if(oc===undefined){oc=Object;}return oc&&typeof oc.freeze==='function'?oc.freeze(object):object;}/**
       * Since we can not rely on `Object.assign` we provide a simplified version
       * that is sufficient for our needs.
       *
       * @param {Object} target
       * @param {Object | null | undefined} source
       *
       * @returns {Object} target
       * @throws TypeError if target is not an object
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
       * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign
       */function assign(target,source){if(target===null||_typeof(target)!=='object'){throw new TypeError('target is not an object');}for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}return target;}/**
       * All mime types that are allowed as input to `DOMParser.parseFromString`
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN
       * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec
       * @see DOMParser.prototype.parseFromString
       */var MIME_TYPE=freeze({/**
      	 * `text/html`, the only mime type that triggers treating an XML document as HTML.
      	 *
      	 * @see DOMParser.SupportedType.isHTML
      	 * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
      	 * @see https://en.wikipedia.org/wiki/HTML Wikipedia
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
      	 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec
      	 */HTML:'text/html',/**
      	 * Helper method to check a mime type if it indicates an HTML document
      	 *
      	 * @param {string} [value]
      	 * @returns {boolean}
      	 *
      	 * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
      	 * @see https://en.wikipedia.org/wiki/HTML Wikipedia
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
      	 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring 	 */isHTML:function isHTML(value){return value===MIME_TYPE.HTML;},/**
      	 * `application/xml`, the standard mime type for XML documents.
      	 *
      	 * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration
      	 * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303
      	 * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
      	 */XML_APPLICATION:'application/xml',/**
      	 * `text/html`, an alias for `application/xml`.
      	 *
      	 * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303
      	 * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration
      	 * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
      	 */XML_TEXT:'text/xml',/**
      	 * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,
      	 * but is parsed as an XML document.
      	 *
      	 * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration
      	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec
      	 * @see https://en.wikipedia.org/wiki/XHTML Wikipedia
      	 */XML_XHTML_APPLICATION:'application/xhtml+xml',/**
      	 * `image/svg+xml`,
      	 *
      	 * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration
      	 * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1
      	 * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia
      	 */XML_SVG_IMAGE:'image/svg+xml'});/**
       * Namespaces that are used in this code base.
       *
       * @see http://www.w3.org/TR/REC-xml-names
       */var NAMESPACE$3=freeze({/**
      	 * The XHTML namespace.
      	 *
      	 * @see http://www.w3.org/1999/xhtml
      	 */HTML:'http://www.w3.org/1999/xhtml',/**
      	 * Checks if `uri` equals `NAMESPACE.HTML`.
      	 *
      	 * @param {string} [uri]
      	 *
      	 * @see NAMESPACE.HTML
      	 */isHTML:function isHTML(uri){return uri===NAMESPACE$3.HTML;},/**
      	 * The SVG namespace.
      	 *
      	 * @see http://www.w3.org/2000/svg
      	 */SVG:'http://www.w3.org/2000/svg',/**
      	 * The `xml:` namespace.
      	 *
      	 * @see http://www.w3.org/XML/1998/namespace
      	 */XML:'http://www.w3.org/XML/1998/namespace',/**
      	 * The `xmlns:` namespace
      	 *
      	 * @see https://www.w3.org/2000/xmlns/
      	 */XMLNS:'http://www.w3.org/2000/xmlns/'});conventions$2.assign=assign;conventions$2.find=find$1;conventions$2.freeze=freeze;conventions$2.MIME_TYPE=MIME_TYPE;conventions$2.NAMESPACE=NAMESPACE$3;var conventions$1=conventions$2;var find=conventions$1.find;var NAMESPACE$2=conventions$1.NAMESPACE;/**
       * A prerequisite for `[].filter`, to drop elements that are empty
       * @param {string} input
       * @returns {boolean}
       */function notEmptyString(input){return input!=='';}/**
       * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace
       * @see https://infra.spec.whatwg.org/#ascii-whitespace
       *
       * @param {string} input
       * @returns {string[]} (can be empty)
       */function splitOnASCIIWhitespace(input){// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE
return input?input.split(/[\t\n\f\r ]+/).filter(notEmptyString):[];}/**
       * Adds element as a key to current if it is not already present.
       *
       * @param {Record<string, boolean | undefined>} current
       * @param {string} element
       * @returns {Record<string, boolean | undefined>}
       */function orderedSetReducer(current,element){if(!current.hasOwnProperty(element)){current[element]=true;}return current;}/**
       * @see https://infra.spec.whatwg.org/#ordered-set
       * @param {string} input
       * @returns {string[]}
       */function toOrderedSet(input){if(!input)return[];var list=splitOnASCIIWhitespace(input);return Object.keys(list.reduce(orderedSetReducer,{}));}/**
       * Uses `list.indexOf` to implement something like `Array.prototype.includes`,
       * which we can not rely on being available.
       *
       * @param {any[]} list
       * @returns {function(any): boolean}
       */function arrayIncludes(list){return function(element){return list&&list.indexOf(element)!==-1;};}function copy(src,dest){for(var p in src){if(Object.prototype.hasOwnProperty.call(src,p)){dest[p]=src[p];}}}/**
      ^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
      ^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
       */function _extends(Class,Super){var pt=Class.prototype;if(!(pt instanceof Super)){function _t6(){}_t6.prototype=Super.prototype;_t6=new _t6();copy(pt,_t6);Class.prototype=pt=_t6;}if(pt.constructor!=Class){if(typeof Class!='function'){console.error("unknown Class:"+Class);}pt.constructor=Class;}}// Node Types
var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;// ExceptionCode
var ExceptionCode={};var ExceptionMessage={};ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]="Index size error",1);ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]="DOMString size error",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]="Hierarchy request error",3);ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]="Wrong document",4);ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]="Invalid character",5);ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]="No data allowed",6);ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]="No modification allowed",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]="Not found",8);ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]="Not supported",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]="Attribute in use",10);//level2
ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]="Invalid state",11);ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]="Syntax error",12);ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]="Invalid modification",13);ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]="Invalid namespace",14);ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]="Invalid access",15);/**
       * DOM Level 2
       * Object DOMException
       * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
       * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
       */function DOMException(code,message){if(message instanceof Error){var error=message;}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException);}error.code=code;if(message)this.message=this.message+": "+message;return error;}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);/**
       * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
       * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
       * The items in the NodeList are accessible via an integral index, starting from 0.
       */function NodeList(){}NodeList.prototype={/**
      	 * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
      	 * @standard level1
      	 */length:0,/**
      	 * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
      	 * @standard level1
      	 * @param index  unsigned long
      	 *   Index into the collection.
      	 * @return Node
      	 * 	The node at the indexth position in the NodeList, or null if that is not a valid index.
      	 */item:function item(index){return index>=0&&index<this.length?this[index]:null;},toString:function toString(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter);}return buf.join('');},/**
      	 * @private
      	 * @param {function (Node):boolean} predicate
      	 * @returns {Node[]}
      	 */filter:function filter(predicate){return Array.prototype.filter.call(this,predicate);},/**
      	 * @private
      	 * @param {Node} item
      	 * @returns {number}
      	 */indexOf:function indexOf(item){return Array.prototype.indexOf.call(this,item);}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this);}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!==inc){var ls=list._refresh(list._node);__set__(list,'length',ls.length);if(!list.$$length||ls.length<list.$$length){for(var i=ls.length;(i in list);i++){if(Object.prototype.hasOwnProperty.call(list,i)){delete list[i];}}}copy(ls,list);list._inc=inc;}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]||null;};_extends(LiveNodeList,NodeList);/**
       * Objects implementing the NamedNodeMap interface are used
       * to represent collections of nodes that can be accessed by name.
       * Note that NamedNodeMap does not inherit from NodeList;
       * NamedNodeMaps are not maintained in any particular order.
       * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,
       * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,
       * and does not imply that the DOM specifies an order to these Nodes.
       * NamedNodeMap objects in the DOM are live.
       * used for attributes or DocumentType entities
       */function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i;}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr;}else{list[list.length++]=newAttr;}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr);}}}function _removeNamedNode(el,list,attr){//console.log('remove attr:'+attr)
var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i];}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null;}}}else{throw new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr));}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function getNamedItem(key){//		if(key.indexOf(':')>0 || key == 'xmlns'){
//			return null;
//		}
//console.log()
var i=this.length;while(i--){var attr=this[i];//console.log(attr.nodeName,key)
if(attr.nodeName==key){return attr;}}},setNamedItem:function setNamedItem(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR);}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr;},/* returns Node */setNamedItemNS:function setNamedItemNS(attr){// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR);}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr;},/* returns Node */removeNamedItem:function removeNamedItem(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr;},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
//for level2
removeNamedItemNS:function removeNamedItemNS(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr;},getNamedItemNS:function getNamedItemNS(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node;}}return null;}};/**
       * The DOMImplementation interface represents an object providing methods
       * which are not dependent on any particular document.
       * Such an object is returned by the `Document.implementation` property.
       *
       * __The individual methods describe the differences compared to the specs.__
       *
       * @constructor
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN
       * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)
       * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core
       * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core
       * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard
       */function DOMImplementation$1(){}DOMImplementation$1.prototype={/**
      	 * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.
      	 * The different implementations fairly diverged in what kind of features were reported.
      	 * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.
      	 *
      	 * @deprecated It is deprecated and modern browsers return true in all cases.
      	 *
      	 * @param {string} feature
      	 * @param {string} [version]
      	 * @returns {boolean} always true
      	 *
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN
      	 * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core
      	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard
      	 */hasFeature:function hasFeature(feature,version){return true;},/**
      	 * Creates an XML Document object of the specified type with its document element.
      	 *
      	 * __It behaves slightly different from the description in the living standard__:
      	 * - There is no interface/class `XMLDocument`, it returns a `Document` instance.
      	 * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.
      	 * - this implementation is not validating names or qualified names
      	 *   (when parsing XML strings, the SAX parser takes care of that)
      	 *
      	 * @param {string|null} namespaceURI
      	 * @param {string} qualifiedName
      	 * @param {DocumentType=null} doctype
      	 * @returns {Document}
      	 *
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN
      	 * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)
      	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core
      	 *
      	 * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
      	 * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
      	 * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
      	 */createDocument:function createDocument(namespaceURI,qualifiedName,doctype){var doc=new Document();doc.implementation=this;doc.childNodes=new NodeList();doc.doctype=doctype||null;if(doctype){doc.appendChild(doctype);}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root);}return doc;},/**
      	 * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.
      	 *
      	 * __This behavior is slightly different from the in the specs__:
      	 * - this implementation is not validating names or qualified names
      	 *   (when parsing XML strings, the SAX parser takes care of that)
      	 *
      	 * @param {string} qualifiedName
      	 * @param {string} [publicId]
      	 * @param {string} [systemId]
      	 * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation
      	 * 				  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`
      	 *
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN
      	 * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core
      	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard
      	 *
      	 * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
      	 * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
      	 * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
      	 */createDocumentType:function createDocumentType(qualifiedName,publicId,systemId){var node=new DocumentType();node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId||'';node.systemId=systemId||'';return node;}};/**
       * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
       */function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,// Modified in DOM Level 2:
insertBefore:function insertBefore(newChild,refChild){//raises
return _insertBefore(this,newChild,refChild);},replaceChild:function replaceChild(newChild,oldChild){//raises
_insertBefore(this,newChild,oldChild,assertPreReplacementValidityInDocument);if(oldChild){this.removeChild(oldChild);}},removeChild:function removeChild(oldChild){return _removeChild(this,oldChild);},appendChild:function appendChild(newChild){return this.insertBefore(newChild,null);},hasChildNodes:function hasChildNodes(){return this.firstChild!=null;},cloneNode:function cloneNode(deep){return _cloneNode(this.ownerDocument||this,this,deep);},// Modified in DOM Level 2:
normalize:function normalize(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data);}else{child.normalize();child=next;}}},// Introduced in DOM Level 2:
isSupported:function isSupported(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version);},// Introduced in DOM Level 2:
hasAttributes:function hasAttributes(){return this.attributes.length>0;},/**
      	 * Look up the prefix associated to the given namespace URI, starting from this node.
      	 * **The default namespace declarations are ignored by this method.**
      	 * See Namespace Prefix Lookup for details on the algorithm used by this method.
      	 *
      	 * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._
      	 *
      	 * @param {string | null} namespaceURI
      	 * @returns {string | null}
      	 * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
      	 * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo
      	 * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix
      	 * @see https://github.com/xmldom/xmldom/issues/322
      	 */lookupPrefix:function lookupPrefix(namespaceURI){var el=this;while(el){var map=el._nsMap;//console.dir(map)
if(map){for(var n in map){if(Object.prototype.hasOwnProperty.call(map,n)&&map[n]===namespaceURI){return n;}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode;}return null;},// Introduced in DOM Level 3:
lookupNamespaceURI:function lookupNamespaceURI(prefix){var el=this;while(el){var map=el._nsMap;//console.dir(map)
if(map){if(Object.prototype.hasOwnProperty.call(map,prefix)){return map[prefix];}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode;}return null;},// Introduced in DOM Level 3:
isDefaultNamespace:function isDefaultNamespace(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null;}};function _xmlEncoder(c){return c=='<'&&'&lt;'||c=='>'&&'&gt;'||c=='&'&&'&amp;'||c=='"'&&'&quot;'||'&#'+c.charCodeAt()+';';}copy(NodeType,Node);copy(NodeType,Node.prototype);/**
       * @param callback return true for continue,false for break
       * @return boolean true: break visit;
       */function _visitNode(node,callback){if(callback(node)){return true;}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true;}}while(node=node.nextSibling);}}function Document(){this.ownerDocument=this;}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns===NAMESPACE$2.XMLNS){//update namespace
el._nsMap[newAttr.prefix?newAttr.localName:'']=newAttr.value;}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns===NAMESPACE$2.XMLNS){//update namespace
delete el._nsMap[newAttr.prefix?newAttr.localName:''];}}/**
       * Updates `el.childNodes`, updating the indexed items and it's `length`.
       * Passing `newChild` means it will be appended.
       * Otherwise it's assumed that an item has been removed,
       * and `el.firstNode` and it's `.nextSibling` are used
       * to walk the current list of child nodes.
       *
       * @param {Document} doc
       * @param {Node} el
       * @param {Node} [newChild]
       * @private
       */function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;//update childNodes
var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild;}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling;}cs.length=i;delete cs[cs.length];}}}/**
       * Removes the connections between `parentNode` and `child`
       * and any existing `child.previousSibling` or `child.nextSibling`.
       *
       * @see https://github.com/xmldom/xmldom/issues/135
       * @see https://github.com/xmldom/xmldom/issues/145
       *
       * @param {Node} parentNode
       * @param {Node} child
       * @returns {Node} the child that was removed.
       * @private
       */function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next;}else{parentNode.firstChild=next;}if(next){next.previousSibling=previous;}else{parentNode.lastChild=previous;}child.parentNode=null;child.previousSibling=null;child.nextSibling=null;_onUpdateChild(parentNode.ownerDocument,parentNode);return child;}/**
       * Returns `true` if `node` can be a parent for insertion.
       * @param {Node} node
       * @returns {boolean}
       */function hasValidParentNodeType(node){return node&&(node.nodeType===Node.DOCUMENT_NODE||node.nodeType===Node.DOCUMENT_FRAGMENT_NODE||node.nodeType===Node.ELEMENT_NODE);}/**
       * Returns `true` if `node` can be inserted according to it's `nodeType`.
       * @param {Node} node
       * @returns {boolean}
       */function hasInsertableNodeType(node){return node&&(isElementNode(node)||isTextNode$1(node)||isDocTypeNode(node)||node.nodeType===Node.DOCUMENT_FRAGMENT_NODE||node.nodeType===Node.COMMENT_NODE||node.nodeType===Node.PROCESSING_INSTRUCTION_NODE);}/**
       * Returns true if `node` is a DOCTYPE node
       * @param {Node} node
       * @returns {boolean}
       */function isDocTypeNode(node){return node&&node.nodeType===Node.DOCUMENT_TYPE_NODE;}/**
       * Returns true if the node is an element
       * @param {Node} node
       * @returns {boolean}
       */function isElementNode(node){return node&&node.nodeType===Node.ELEMENT_NODE;}/**
       * Returns true if `node` is a text node
       * @param {Node} node
       * @returns {boolean}
       */function isTextNode$1(node){return node&&node.nodeType===Node.TEXT_NODE;}/**
       * Check if en element node can be inserted before `child`, or at the end if child is falsy,
       * according to the presence and position of a doctype node on the same level.
       *
       * @param {Document} doc The document node
       * @param {Node} child the node that would become the nextSibling if the element would be inserted
       * @returns {boolean} `true` if an element can be inserted before child
       * @private
       * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       */function isElementInsertionPossible(doc,child){var parentChildNodes=doc.childNodes||[];if(find(parentChildNodes,isElementNode)||isDocTypeNode(child)){return false;}var docTypeNode=find(parentChildNodes,isDocTypeNode);return!(child&&docTypeNode&&parentChildNodes.indexOf(docTypeNode)>parentChildNodes.indexOf(child));}/**
       * Check if en element node can be inserted before `child`, or at the end if child is falsy,
       * according to the presence and position of a doctype node on the same level.
       *
       * @param {Node} doc The document node
       * @param {Node} child the node that would become the nextSibling if the element would be inserted
       * @returns {boolean} `true` if an element can be inserted before child
       * @private
       * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       */function isElementReplacementPossible(doc,child){var parentChildNodes=doc.childNodes||[];function hasElementChildThatIsNotChild(node){return isElementNode(node)&&node!==child;}if(find(parentChildNodes,hasElementChildThatIsNotChild)){return false;}var docTypeNode=find(parentChildNodes,isDocTypeNode);return!(child&&docTypeNode&&parentChildNodes.indexOf(docTypeNode)>parentChildNodes.indexOf(child));}/**
       * @private
       * Steps 1-5 of the checks before inserting and before replacing a child are the same.
       *
       * @param {Node} parent the parent node to insert `node` into
       * @param {Node} node the node to insert
       * @param {Node=} child the node that should become the `nextSibling` of `node`
       * @returns {Node}
       * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
       * @throws DOMException if `child` is provided but is not a child of `parent`.
       * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       * @see https://dom.spec.whatwg.org/#concept-node-replace
       */function assertPreInsertionValidity1to5(parent,node,child){// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a "HierarchyRequestError" DOMException.
if(!hasValidParentNodeType(parent)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Unexpected parent node type '+parent.nodeType);}// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a "HierarchyRequestError" DOMException.
// not implemented!
// 3. If `child` is non-null and its parent is not `parent`, then throw a "NotFoundError" DOMException.
if(child&&child.parentNode!==parent){throw new DOMException(NOT_FOUND_ERR,'child not in parent');}if(// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a "HierarchyRequestError" DOMException.
!hasInsertableNodeType(node)||// 5. If either `node` is a Text node and `parent` is a document,
// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0
// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)
// or `node` is a doctype and `parent` is not a document, then throw a "HierarchyRequestError" DOMException.
isDocTypeNode(node)&&parent.nodeType!==Node.DOCUMENT_NODE){throw new DOMException(HIERARCHY_REQUEST_ERR,'Unexpected node type '+node.nodeType+' for parent node type '+parent.nodeType);}}/**
       * @private
       * Step 6 of the checks before inserting and before replacing a child are different.
       *
       * @param {Document} parent the parent node to insert `node` into
       * @param {Node} node the node to insert
       * @param {Node | undefined} child the node that should become the `nextSibling` of `node`
       * @returns {Node}
       * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
       * @throws DOMException if `child` is provided but is not a child of `parent`.
       * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       * @see https://dom.spec.whatwg.org/#concept-node-replace
       */function assertPreInsertionValidityInDocument(parent,node,child){var parentChildNodes=parent.childNodes||[];var nodeChildNodes=node.childNodes||[];// DocumentFragment
if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE){var nodeChildElements=nodeChildNodes.filter(isElementNode);// If node has more than one element child or has a Text node child.
if(nodeChildElements.length>1||find(nodeChildNodes,isTextNode$1)){throw new DOMException(HIERARCHY_REQUEST_ERR,'More than one element or text in fragment');}// Otherwise, if `node` has one element child and either `parent` has an element child,
// `child` is a doctype, or `child` is non-null and a doctype is following `child`.
if(nodeChildElements.length===1&&!isElementInsertionPossible(parent,child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Element in fragment can not be inserted before doctype');}}// Element
if(isElementNode(node)){// `parent` has an element child, `child` is a doctype,
// or `child` is non-null and a doctype is following `child`.
if(!isElementInsertionPossible(parent,child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Only one element can be added and only after doctype');}}// DocumentType
if(isDocTypeNode(node)){// `parent` has a doctype child,
if(find(parentChildNodes,isDocTypeNode)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Only one doctype is allowed');}var parentElementChild=find(parentChildNodes,isElementNode);// `child` is non-null and an element is preceding `child`,
if(child&&parentChildNodes.indexOf(parentElementChild)<parentChildNodes.indexOf(child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Doctype can only be inserted before an element');}// or `child` is null and `parent` has an element child.
if(!child&&parentElementChild){throw new DOMException(HIERARCHY_REQUEST_ERR,'Doctype can not be appended since element is present');}}}/**
       * @private
       * Step 6 of the checks before inserting and before replacing a child are different.
       *
       * @param {Document} parent the parent node to insert `node` into
       * @param {Node} node the node to insert
       * @param {Node | undefined} child the node that should become the `nextSibling` of `node`
       * @returns {Node}
       * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
       * @throws DOMException if `child` is provided but is not a child of `parent`.
       * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       * @see https://dom.spec.whatwg.org/#concept-node-replace
       */function assertPreReplacementValidityInDocument(parent,node,child){var parentChildNodes=parent.childNodes||[];var nodeChildNodes=node.childNodes||[];// DocumentFragment
if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE){var nodeChildElements=nodeChildNodes.filter(isElementNode);// If `node` has more than one element child or has a Text node child.
if(nodeChildElements.length>1||find(nodeChildNodes,isTextNode$1)){throw new DOMException(HIERARCHY_REQUEST_ERR,'More than one element or text in fragment');}// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.
if(nodeChildElements.length===1&&!isElementReplacementPossible(parent,child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Element in fragment can not be inserted before doctype');}}// Element
if(isElementNode(node)){// `parent` has an element child that is not `child` or a doctype is following `child`.
if(!isElementReplacementPossible(parent,child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Only one element can be added and only after doctype');}}// DocumentType
if(isDocTypeNode(node)){function hasDoctypeChildThatIsNotChild(node){return isDocTypeNode(node)&&node!==child;}// `parent` has a doctype child that is not `child`,
if(find(parentChildNodes,hasDoctypeChildThatIsNotChild)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Only one doctype is allowed');}var parentElementChild=find(parentChildNodes,isElementNode);// or an element is preceding `child`.
if(child&&parentChildNodes.indexOf(parentElementChild)<parentChildNodes.indexOf(child)){throw new DOMException(HIERARCHY_REQUEST_ERR,'Doctype can only be inserted before an element');}}}/**
       * @private
       * @param {Node} parent the parent node to insert `node` into
       * @param {Node} node the node to insert
       * @param {Node=} child the node that should become the `nextSibling` of `node`
       * @returns {Node}
       * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
       * @throws DOMException if `child` is provided but is not a child of `parent`.
       * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
       */function _insertBefore(parent,node,child,_inDocumentAssertion){// To ensure pre-insertion validity of a node into a parent before a child, run these steps:
assertPreInsertionValidity1to5(parent,node,child);// If parent is a document, and any of the statements below, switched on the interface node implements,
// are true, then throw a "HierarchyRequestError" DOMException.
if(parent.nodeType===Node.DOCUMENT_NODE){(_inDocumentAssertion||assertPreInsertionValidityInDocument)(parent,node,child);}var cp=node.parentNode;if(cp){cp.removeChild(node);//remove and update
}if(node.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=node.firstChild;if(newFirst==null){return node;}var newLast=node.lastChild;}else{newFirst=newLast=node;}var pre=child?child.previousSibling:parent.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=child;if(pre){pre.nextSibling=newFirst;}else{parent.firstChild=newFirst;}if(child==null){parent.lastChild=newLast;}else{child.previousSibling=newLast;}do{newFirst.parentNode=parent;}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parent.ownerDocument||parent,parent);//console.log(parent.lastChild.nextSibling == null)
if(node.nodeType==DOCUMENT_FRAGMENT_NODE){node.firstChild=node.lastChild=null;}return node;}/**
       * Appends `newChild` to `parentNode`.
       * If `newChild` is already connected to a `parentNode` it is first removed from it.
       *
       * @see https://github.com/xmldom/xmldom/issues/135
       * @see https://github.com/xmldom/xmldom/issues/145
       * @param {Node} parentNode
       * @param {Node} newChild
       * @returns {Node}
       * @private
       */function _appendSingleChild(parentNode,newChild){if(newChild.parentNode){newChild.parentNode.removeChild(newChild);}newChild.parentNode=parentNode;newChild.previousSibling=parentNode.lastChild;newChild.nextSibling=null;if(newChild.previousSibling){newChild.previousSibling.nextSibling=newChild;}else{parentNode.firstChild=newChild;}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild;}Document.prototype={//implementation : null,
nodeName:'#document',nodeType:DOCUMENT_NODE,/**
      	 * The DocumentType node of the document.
      	 *
      	 * @readonly
      	 * @type DocumentType
      	 */doctype:null,documentElement:null,_inc:1,insertBefore:function insertBefore(newChild,refChild){//raises
if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next;}return newChild;}_insertBefore(this,newChild,refChild);newChild.ownerDocument=this;if(this.documentElement===null&&newChild.nodeType===ELEMENT_NODE){this.documentElement=newChild;}return newChild;},removeChild:function removeChild(oldChild){if(this.documentElement==oldChild){this.documentElement=null;}return _removeChild(this,oldChild);},replaceChild:function replaceChild(newChild,oldChild){//raises
_insertBefore(this,newChild,oldChild,assertPreReplacementValidityInDocument);newChild.ownerDocument=this;if(oldChild){this.removeChild(oldChild);}if(isElementNode(newChild)){this.documentElement=newChild;}},// Introduced in DOM Level 2:
importNode:function importNode(importedNode,deep){return _importNode(this,importedNode,deep);},// Introduced in DOM Level 2:
getElementById:function getElementById(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute('id')==id){rtv=node;return true;}}});return rtv;},/**
      	 * The `getElementsByClassName` method of `Document` interface returns an array-like object
      	 * of all child elements which have **all** of the given class name(s).
      	 *
      	 * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.
      	 *
      	 *
      	 * Warning: This is a live LiveNodeList.
      	 * Changes in the DOM will reflect in the array as the changes occur.
      	 * If an element selected by this array no longer qualifies for the selector,
      	 * it will automatically be removed. Be aware of this for iteration purposes.
      	 *
      	 * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace
      	 *
      	 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName
      	 * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname
      	 */getElementsByClassName:function getElementsByClassName(classNames){var classNamesSet=toOrderedSet(classNames);return new LiveNodeList(this,function(base){var ls=[];if(classNamesSet.length>0){_visitNode(base.documentElement,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE){var nodeClassNames=node.getAttribute('class');// can be null if the attribute does not exist
if(nodeClassNames){// before splitting and iterating just compare them for the most common case
var matches=classNames===nodeClassNames;if(!matches){var nodeClassNamesSet=toOrderedSet(nodeClassNames);matches=classNamesSet.every(arrayIncludes(nodeClassNamesSet));}if(matches){ls.push(node);}}}});}return ls;});},//document factory method:
createElement:function createElement(tagName){var node=new Element();node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.localName=tagName;node.childNodes=new NodeList();var attrs=node.attributes=new NamedNodeMap();attrs._ownerElement=node;return node;},createDocumentFragment:function createDocumentFragment(){var node=new DocumentFragment();node.ownerDocument=this;node.childNodes=new NodeList();return node;},createTextNode:function createTextNode(data){var node=new Text();node.ownerDocument=this;node.appendData(data);return node;},createComment:function createComment(data){var node=new Comment();node.ownerDocument=this;node.appendData(data);return node;},createCDATASection:function createCDATASection(data){var node=new CDATASection();node.ownerDocument=this;node.appendData(data);return node;},createProcessingInstruction:function createProcessingInstruction(target,data){var node=new ProcessingInstruction();node.ownerDocument=this;node.tagName=node.nodeName=node.target=target;node.nodeValue=node.data=data;return node;},createAttribute:function createAttribute(name){var node=new Attr();node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node;},createEntityReference:function createEntityReference(name){var node=new EntityReference();node.ownerDocument=this;node.nodeName=name;return node;},// Introduced in DOM Level 2:
createElementNS:function createElementNS(namespaceURI,qualifiedName){var node=new Element();var pl=qualifiedName.split(':');var attrs=node.attributes=new NamedNodeMap();node.childNodes=new NodeList();node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1];}else{//el.prefix = null;
node.localName=qualifiedName;}attrs._ownerElement=node;return node;},// Introduced in DOM Level 2:
createAttributeNS:function createAttributeNS(namespaceURI,qualifiedName){var node=new Attr();var pl=qualifiedName.split(':');node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1];}else{//el.prefix = null;
node.localName=qualifiedName;}return node;}};_extends(Document,Node);function Element(){this._nsMap={};}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function hasAttribute(name){return this.getAttributeNode(name)!=null;},getAttribute:function getAttribute(name){var attr=this.getAttributeNode(name);return attr&&attr.value||'';},getAttributeNode:function getAttributeNode(name){return this.attributes.getNamedItem(name);},setAttribute:function setAttribute(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=""+value;this.setAttributeNode(attr);},removeAttribute:function removeAttribute(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr);},//four real opeartion method
appendChild:function appendChild(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null);}else{return _appendSingleChild(this,newChild);}},setAttributeNode:function setAttributeNode(newAttr){return this.attributes.setNamedItem(newAttr);},setAttributeNodeNS:function setAttributeNodeNS(newAttr){return this.attributes.setNamedItemNS(newAttr);},removeAttributeNode:function removeAttributeNode(oldAttr){//console.log(this == oldAttr.ownerElement)
return this.attributes.removeNamedItem(oldAttr.nodeName);},//get real attribute name,and remove it by removeAttributeNode
removeAttributeNS:function removeAttributeNS(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old);},hasAttributeNS:function hasAttributeNS(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null;},getAttributeNS:function getAttributeNS(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||'';},setAttributeNS:function setAttributeNS(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=""+value;this.setAttributeNode(attr);},getAttributeNodeNS:function getAttributeNodeNS(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName);},getElementsByTagName:function getElementsByTagName(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName==='*'||node.tagName==tagName)){ls.push(node);}});return ls;});},getElementsByTagNameNS:function getElementsByTagNameNS(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI==='*'||node.namespaceURI===namespaceURI)&&(localName==='*'||node.localName==localName)){ls.push(node);}});return ls;});}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:'',substringData:function substringData(offset,count){return this.data.substring(offset,offset+count);},appendData:function appendData(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length;},insertData:function insertData(offset,text){this.replaceData(offset,0,text);},appendChild:function appendChild(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);},deleteData:function deleteData(offset,count){this.replaceData(offset,count,"");},replaceData:function replaceData(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length;}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:"#text",nodeType:TEXT_NODE,splitText:function splitText(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling);}return newNode;}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:"#comment",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:"#cdata-section",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName="#document-fragment";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter);};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9&&this.documentElement||this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){//console.log(prefix)
var prefix=refNode.lookupPrefix(uri);if(prefix==null){//isHTML = true;
var visibleNamespaces=[{namespace:uri,prefix:null}//{namespace:uri,prefix:''}
];}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);//console.log('###',this.nodeType,uri,prefix,buf.join(''))
return buf.join('');}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||'';var uri=node.namespaceURI;// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,
// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :
// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.
// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)
// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :
// > [...] Furthermore, the attribute value [...] must not be an empty string.
// so serializing empty namespace value like xmlns:ds="" would produce an invalid XML document.
if(!uri){return false;}if(prefix==="xml"&&uri===NAMESPACE$2.XML||uri===NAMESPACE$2.XMLNS){return false;}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];// get namespace prefix
if(ns.prefix===prefix){return ns.namespace!==uri;}}return true;}/**
       * Well-formed constraint: No < in Attribute Values
       * > The replacement text of any entity referred to directly or indirectly
       * > in an attribute value must not contain a <.
       * @see https://www.w3.org/TR/xml11/#CleanAttrVals
       * @see https://www.w3.org/TR/xml11/#NT-AttValue
       *
       * Literal whitespace other than space that appear in attribute values
       * are serialized as their entity references, so they will be preserved.
       * (In contrast to whitespace literals in the input which are normalized to spaces)
       * @see https://www.w3.org/TR/xml11/#AVNormalize
       * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes
       */function addSerializedAttribute(buf,qualifiedName,value){buf.push(' ',qualifiedName,'="',value.replace(/[<>&"\t\n\r]/g,_xmlEncoder),'"');}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(!visibleNamespaces){visibleNamespaces=[];}if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node=='string'){buf.push(node);return;}}else{return;}//buf.sort.apply(attrs, attributeSorter);
}switch(node.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=NAMESPACE$2.isHTML(node.namespaceURI)||isHTML;var prefixedNodeName=nodeName;if(!isHTML&&!node.prefix&&node.namespaceURI){var defaultNS;// lookup current default ns from `xmlns` attribute
for(var ai=0;ai<attrs.length;ai++){if(attrs.item(ai).name==='xmlns'){defaultNS=attrs.item(ai).value;break;}}if(!defaultNS){// lookup current default ns in visibleNamespaces
for(var nsi=visibleNamespaces.length-1;nsi>=0;nsi--){var namespace=visibleNamespaces[nsi];if(namespace.prefix===''&&namespace.namespace===node.namespaceURI){defaultNS=namespace.namespace;break;}}}if(defaultNS!==node.namespaceURI){for(var nsi=visibleNamespaces.length-1;nsi>=0;nsi--){var namespace=visibleNamespaces[nsi];if(namespace.namespace===node.namespaceURI){if(namespace.prefix){prefixedNodeName=namespace.prefix+':'+nodeName;}break;}}}}buf.push('<',prefixedNodeName);for(var i=0;i<len;i++){// add namespaces for attributes
var attr=attrs.item(i);if(attr.prefix=='xmlns'){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value});}else if(attr.nodeName=='xmlns'){visibleNamespaces.push({prefix:'',namespace:attr.value});}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||'';var uri=attr.namespaceURI;addSerializedAttribute(buf,prefix?'xmlns:'+prefix:"xmlns",uri);visibleNamespaces.push({prefix:prefix,namespace:uri});}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);}// add namespace for current node
if(nodeName===prefixedNodeName&&needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||'';var uri=node.namespaceURI;addSerializedAttribute(buf,prefix?'xmlns:'+prefix:"xmlns",uri);visibleNamespaces.push({prefix:prefix,namespace:uri});}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push('>');//if is cdata child node
if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data);}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces.slice());}child=child.nextSibling;}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces.slice());child=child.nextSibling;}}buf.push('</',prefixedNodeName,'>');}else{buf.push('/>');}// remove added visible namespaces
//visibleNamespaces.length = startVisibleNamespaces;
return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces.slice());child=child.nextSibling;}return;case ATTRIBUTE_NODE:return addSerializedAttribute(buf,node.name,node.value);case TEXT_NODE:/**
      		 * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,
      		 * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.
      		 * If they are needed elsewhere, they must be escaped using either numeric character references or the strings
      		 * `&amp;` and `&lt;` respectively.
      		 * The right angle bracket (>) may be represented using the string " &gt; ", and must, for compatibility,
      		 * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,
      		 * when that string is not marking the end of a CDATA section.
      		 *
      		 * In the content of elements, character data is any string of characters
      		 * which does not contain the start-delimiter of any markup
      		 * and does not include the CDATA-section-close delimiter, `]]>`.
      		 *
      		 * @see https://www.w3.org/TR/xml/#NT-CharData
      		 * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node
      		 */return buf.push(node.data.replace(/[<&>]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push('<![CDATA[',node.data,']]>');case COMMENT_NODE:return buf.push("<!--",node.data,"-->");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push('<!DOCTYPE ',node.name);if(pubid){buf.push(' PUBLIC ',pubid);if(sysid&&sysid!='.'){buf.push(' ',sysid);}buf.push('>');}else if(sysid&&sysid!='.'){buf.push(' SYSTEM ',sysid,'>');}else{var sub=node.internalSubset;if(sub){buf.push(" [",sub,"]");}buf.push(">");}return;case PROCESSING_INSTRUCTION_NODE:return buf.push("<?",node.target," ",node.data,"?>");case ENTITY_REFERENCE_NODE:return buf.push('&',node.nodeName,';');//case ENTITY_NODE:
//case NOTATION_NODE:
default:buf.push('??',node.nodeName);}}function _importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;//var attrs = node2.attributes;
//var len = attrs.length;
//for(var i=0;i<len;i++){
//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
//}
case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break;//case ENTITY_REFERENCE_NODE:
//case PROCESSING_INSTRUCTION_NODE:
////case TEXT_NODE:
//case CDATA_SECTION_NODE:
//case COMMENT_NODE:
//	deep = false;
//	break;
//case DOCUMENT_NODE:
//case DOCUMENT_TYPE_NODE:
//cannot be imported.
//case ENTITY_NODE:
//case NOTATION_NODE：
//can not hit in level3
//default:throw e;
}if(!node2){node2=node.cloneNode(false);//false
}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(_importNode(doc,child,deep));child=child.nextSibling;}}return node2;}//
//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
//					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
function _cloneNode(doc,node,deep){var node2=new node.constructor();for(var n in node){if(Object.prototype.hasOwnProperty.call(node,n)){var v=node[n];if(_typeof(v)!="object"){if(v!=node2[n]){node2[n]=v;}}}}if(node.childNodes){node2.childNodes=new NodeList();}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap();var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(_cloneNode(doc,attrs.item(i),true));}break;case ATTRIBUTE_NODE:deep=true;}if(deep){var child=node.firstChild;while(child){node2.appendChild(_cloneNode(doc,child,deep));child=child.nextSibling;}}return node2;}function __set__(object,key,value){object[key]=value;}//do dynamic
try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,'length',{get:function get(){_updateLiveList(this);return this.$$length;}});Object.defineProperty(Node.prototype,'textContent',{get:function get(){return getTextContent(this);},set:function set(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild);}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data));}break;default:this.data=data;this.value=data;this.nodeValue=data;}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node));}node=node.nextSibling;}return buf.join('');default:return node.nodeValue;}}__set__=function __set__(object,key,value){//console.log(value)
object['$$'+key]=value;};}}catch(e){//ie8
}//if(typeof require == 'function'){
dom$1.DocumentType=DocumentType;dom$1.DOMException=DOMException;dom$1.DOMImplementation=DOMImplementation$1;dom$1.Element=Element;dom$1.Node=Node;dom$1.NodeList=NodeList;dom$1.XMLSerializer=XMLSerializer;var domParser={};var entities$1={};(function(exports){var freeze=conventions$2.freeze;/**
       * The entities that are predefined in every XML document.
       *
       * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1
       * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0
       * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia
       */exports.XML_ENTITIES=freeze({amp:'&',apos:"'",gt:'>',lt:'<',quot:'"'});/**
       * A map of all entities that are detected in an HTML document.
       * They contain all entries from `XML_ENTITIES`.
       *
       * @see XML_ENTITIES
       * @see DOMParser.parseFromString
       * @see DOMImplementation.prototype.createHTMLDocument
       * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec
       * @see https://html.spec.whatwg.org/entities.json JSON
       * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names
       * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML
       * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)
       * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)
       */exports.HTML_ENTITIES=freeze({Aacute:"\xC1",aacute:"\xE1",Abreve:"\u0102",abreve:"\u0103",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",Acirc:"\xC2",acirc:"\xE2",acute:"\xB4",Acy:"\u0410",acy:"\u0430",AElig:"\xC6",aelig:"\xE6",af:"\u2061",Afr:"\uD835\uDD04",afr:"\uD835\uDD1E",Agrave:"\xC0",agrave:"\xE0",alefsym:"\u2135",aleph:"\u2135",Alpha:"\u0391",alpha:"\u03B1",Amacr:"\u0100",amacr:"\u0101",amalg:"\u2A3F",AMP:"&",amp:"&",And:"\u2A53",and:"\u2227",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",Aogon:"\u0104",aogon:"\u0105",Aopf:"\uD835\uDD38",aopf:"\uD835\uDD52",ap:"\u2248",apacir:"\u2A6F",apE:"\u2A70",ape:"\u224A",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",Aring:"\xC5",aring:"\xE5",Ascr:"\uD835\uDC9C",ascr:"\uD835\uDCB6",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",Atilde:"\xC3",atilde:"\xE3",Auml:"\xC4",auml:"\xE4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",Barwed:"\u2306",barwed:"\u2305",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",Bcy:"\u0411",bcy:"\u0431",bdquo:"\u201E",becaus:"\u2235",Because:"\u2235",because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",Beta:"\u0392",beta:"\u03B2",beth:"\u2136",between:"\u226C",Bfr:"\uD835\uDD05",bfr:"\uD835\uDD1F",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bNot:"\u2AED",bnot:"\u2310",Bopf:"\uD835\uDD39",bopf:"\uD835\uDD53",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxDL:"\u2557",boxDl:"\u2556",boxdL:"\u2555",boxdl:"\u2510",boxDR:"\u2554",boxDr:"\u2553",boxdR:"\u2552",boxdr:"\u250C",boxH:"\u2550",boxh:"\u2500",boxHD:"\u2566",boxHd:"\u2564",boxhD:"\u2565",boxhd:"\u252C",boxHU:"\u2569",boxHu:"\u2567",boxhU:"\u2568",boxhu:"\u2534",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxUL:"\u255D",boxUl:"\u255C",boxuL:"\u255B",boxul:"\u2518",boxUR:"\u255A",boxUr:"\u2559",boxuR:"\u2558",boxur:"\u2514",boxV:"\u2551",boxv:"\u2502",boxVH:"\u256C",boxVh:"\u256B",boxvH:"\u256A",boxvh:"\u253C",boxVL:"\u2563",boxVl:"\u2562",boxvL:"\u2561",boxvl:"\u2524",boxVR:"\u2560",boxVr:"\u255F",boxvR:"\u255E",boxvr:"\u251C",bprime:"\u2035",Breve:"\u02D8",breve:"\u02D8",brvbar:"\xA6",Bscr:"\u212C",bscr:"\uD835\uDCB7",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpE:"\u2AAE",bumpe:"\u224F",Bumpeq:"\u224E",bumpeq:"\u224F",Cacute:"\u0106",cacute:"\u0107",Cap:"\u22D2",cap:"\u2229",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",Ccaron:"\u010C",ccaron:"\u010D",Ccedil:"\xC7",ccedil:"\xE7",Ccirc:"\u0108",ccirc:"\u0109",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",Cdot:"\u010A",cdot:"\u010B",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",CenterDot:"\xB7",centerdot:"\xB7",Cfr:"\u212D",cfr:"\uD835\uDD20",CHcy:"\u0427",chcy:"\u0447",check:"\u2713",checkmark:"\u2713",Chi:"\u03A7",chi:"\u03C7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cirE:"\u29C3",cire:"\u2257",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",Colon:"\u2237",colon:":",Colone:"\u2A74",colone:"\u2254",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",Conint:"\u222F",conint:"\u222E",ContourIntegral:"\u222E",Copf:"\u2102",copf:"\uD835\uDD54",coprod:"\u2210",Coproduct:"\u2210",COPY:"\xA9",copy:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",Cross:"\u2A2F",cross:"\u2717",Cscr:"\uD835\uDC9E",cscr:"\uD835\uDCB8",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",Cup:"\u22D3",cup:"\u222A",cupbrcap:"\u2A48",CupCap:"\u224D",cupcap:"\u2A46",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",Dagger:"\u2021",dagger:"\u2020",daleth:"\u2138",Darr:"\u21A1",dArr:"\u21D3",darr:"\u2193",dash:"\u2010",Dashv:"\u2AE4",dashv:"\u22A3",dbkarow:"\u290F",dblac:"\u02DD",Dcaron:"\u010E",dcaron:"\u010F",Dcy:"\u0414",dcy:"\u0434",DD:"\u2145",dd:"\u2146",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",Delta:"\u0394",delta:"\u03B4",demptyv:"\u29B1",dfisht:"\u297F",Dfr:"\uD835\uDD07",dfr:"\uD835\uDD21",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",Diamond:"\u22C4",diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",DJcy:"\u0402",djcy:"\u0452",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",Dopf:"\uD835\uDD3B",dopf:"\uD835\uDD55",Dot:"\xA8",dot:"\u02D9",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",DownArrow:"\u2193",Downarrow:"\u21D3",downarrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",Dscr:"\uD835\uDC9F",dscr:"\uD835\uDCB9",DScy:"\u0405",dscy:"\u0455",dsol:"\u29F6",Dstrok:"\u0110",dstrok:"\u0111",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",DZcy:"\u040F",dzcy:"\u045F",dzigrarr:"\u27FF",Eacute:"\xC9",eacute:"\xE9",easter:"\u2A6E",Ecaron:"\u011A",ecaron:"\u011B",ecir:"\u2256",Ecirc:"\xCA",ecirc:"\xEA",ecolon:"\u2255",Ecy:"\u042D",ecy:"\u044D",eDDot:"\u2A77",Edot:"\u0116",eDot:"\u2251",edot:"\u0117",ee:"\u2147",efDot:"\u2252",Efr:"\uD835\uDD08",efr:"\uD835\uDD22",eg:"\u2A9A",Egrave:"\xC8",egrave:"\xE8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",Emacr:"\u0112",emacr:"\u0113",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",ENG:"\u014A",eng:"\u014B",ensp:"\u2002",Eogon:"\u0118",eogon:"\u0119",Eopf:"\uD835\uDD3C",eopf:"\uD835\uDD56",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",Epsilon:"\u0395",epsilon:"\u03B5",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",Escr:"\u2130",escr:"\u212F",esdot:"\u2250",Esim:"\u2A73",esim:"\u2242",Eta:"\u0397",eta:"\u03B7",ETH:"\xD0",eth:"\xF0",Euml:"\xCB",euml:"\xEB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",ExponentialE:"\u2147",exponentiale:"\u2147",fallingdotseq:"\u2252",Fcy:"\u0424",fcy:"\u0444",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",Ffr:"\uD835\uDD09",ffr:"\uD835\uDD23",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",Fopf:"\uD835\uDD3D",fopf:"\uD835\uDD57",ForAll:"\u2200",forall:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",Fscr:"\u2131",fscr:"\uD835\uDCBB",gacute:"\u01F5",Gamma:"\u0393",gamma:"\u03B3",Gammad:"\u03DC",gammad:"\u03DD",gap:"\u2A86",Gbreve:"\u011E",gbreve:"\u011F",Gcedil:"\u0122",Gcirc:"\u011C",gcirc:"\u011D",Gcy:"\u0413",gcy:"\u0433",Gdot:"\u0120",gdot:"\u0121",gE:"\u2267",ge:"\u2265",gEl:"\u2A8C",gel:"\u22DB",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",Gfr:"\uD835\uDD0A",gfr:"\uD835\uDD24",Gg:"\u22D9",gg:"\u226B",ggg:"\u22D9",gimel:"\u2137",GJcy:"\u0403",gjcy:"\u0453",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gnE:"\u2269",gne:"\u2A88",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",Gopf:"\uD835\uDD3E",gopf:"\uD835\uDD58",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",Gscr:"\uD835\uDCA2",gscr:"\u210A",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",Gt:"\u226B",GT:">",gt:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",HARDcy:"\u042A",hardcy:"\u044A",hArr:"\u21D4",harr:"\u2194",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",Hcirc:"\u0124",hcirc:"\u0125",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",Hfr:"\u210C",hfr:"\uD835\uDD25",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",Hopf:"\u210D",hopf:"\uD835\uDD59",horbar:"\u2015",HorizontalLine:"\u2500",Hscr:"\u210B",hscr:"\uD835\uDCBD",hslash:"\u210F",Hstrok:"\u0126",hstrok:"\u0127",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",Iacute:"\xCD",iacute:"\xED",ic:"\u2063",Icirc:"\xCE",icirc:"\xEE",Icy:"\u0418",icy:"\u0438",Idot:"\u0130",IEcy:"\u0415",iecy:"\u0435",iexcl:"\xA1",iff:"\u21D4",Ifr:"\u2111",ifr:"\uD835\uDD26",Igrave:"\xCC",igrave:"\xEC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",IJlig:"\u0132",ijlig:"\u0133",Im:"\u2111",Imacr:"\u012A",imacr:"\u012B",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",Int:"\u222C",int:"\u222B",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",IOcy:"\u0401",iocy:"\u0451",Iogon:"\u012E",iogon:"\u012F",Iopf:"\uD835\uDD40",iopf:"\uD835\uDD5A",Iota:"\u0399",iota:"\u03B9",iprod:"\u2A3C",iquest:"\xBF",Iscr:"\u2110",iscr:"\uD835\uDCBE",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",Itilde:"\u0128",itilde:"\u0129",Iukcy:"\u0406",iukcy:"\u0456",Iuml:"\xCF",iuml:"\xEF",Jcirc:"\u0134",jcirc:"\u0135",Jcy:"\u0419",jcy:"\u0439",Jfr:"\uD835\uDD0D",jfr:"\uD835\uDD27",jmath:"\u0237",Jopf:"\uD835\uDD41",jopf:"\uD835\uDD5B",Jscr:"\uD835\uDCA5",jscr:"\uD835\uDCBF",Jsercy:"\u0408",jsercy:"\u0458",Jukcy:"\u0404",jukcy:"\u0454",Kappa:"\u039A",kappa:"\u03BA",kappav:"\u03F0",Kcedil:"\u0136",kcedil:"\u0137",Kcy:"\u041A",kcy:"\u043A",Kfr:"\uD835\uDD0E",kfr:"\uD835\uDD28",kgreen:"\u0138",KHcy:"\u0425",khcy:"\u0445",KJcy:"\u040C",kjcy:"\u045C",Kopf:"\uD835\uDD42",kopf:"\uD835\uDD5C",Kscr:"\uD835\uDCA6",kscr:"\uD835\uDCC0",lAarr:"\u21DA",Lacute:"\u0139",lacute:"\u013A",laemptyv:"\u29B4",lagran:"\u2112",Lambda:"\u039B",lambda:"\u03BB",Lang:"\u27EA",lang:"\u27E8",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",Larr:"\u219E",lArr:"\u21D0",larr:"\u2190",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",lAtail:"\u291B",latail:"\u2919",late:"\u2AAD",lates:"\u2AAD\uFE00",lBarr:"\u290E",lbarr:"\u290C",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",Lcaron:"\u013D",lcaron:"\u013E",Lcedil:"\u013B",lcedil:"\u013C",lceil:"\u2308",lcub:"{",Lcy:"\u041B",lcy:"\u043B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",lE:"\u2266",le:"\u2264",LeftAngleBracket:"\u27E8",LeftArrow:"\u2190",Leftarrow:"\u21D0",leftarrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",LeftRightArrow:"\u2194",Leftrightarrow:"\u21D4",leftrightarrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",lEg:"\u2A8B",leg:"\u22DA",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",Lfr:"\uD835\uDD0F",lfr:"\uD835\uDD29",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",LJcy:"\u0409",ljcy:"\u0459",Ll:"\u22D8",ll:"\u226A",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",Lmidot:"\u013F",lmidot:"\u0140",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lnE:"\u2268",lne:"\u2A87",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",LongLeftArrow:"\u27F5",Longleftarrow:"\u27F8",longleftarrow:"\u27F5",LongLeftRightArrow:"\u27F7",Longleftrightarrow:"\u27FA",longleftrightarrow:"\u27F7",longmapsto:"\u27FC",LongRightArrow:"\u27F6",Longrightarrow:"\u27F9",longrightarrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",Lopf:"\uD835\uDD43",lopf:"\uD835\uDD5D",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",Lscr:"\u2112",lscr:"\uD835\uDCC1",Lsh:"\u21B0",lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",Lstrok:"\u0141",lstrok:"\u0142",Lt:"\u226A",LT:"<",lt:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",Map:"\u2905",map:"\u21A6",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",Mcy:"\u041C",mcy:"\u043C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",Mfr:"\uD835\uDD10",mfr:"\uD835\uDD2A",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",Mopf:"\uD835\uDD44",mopf:"\uD835\uDD5E",mp:"\u2213",Mscr:"\u2133",mscr:"\uD835\uDCC2",mstpos:"\u223E",Mu:"\u039C",mu:"\u03BC",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",Nacute:"\u0143",nacute:"\u0144",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",Ncaron:"\u0147",ncaron:"\u0148",Ncedil:"\u0145",ncedil:"\u0146",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",Ncy:"\u041D",ncy:"\u043D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",neArr:"\u21D7",nearr:"\u2197",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:"\n",nexist:"\u2204",nexists:"\u2204",Nfr:"\uD835\uDD11",nfr:"\uD835\uDD2B",ngE:"\u2267\u0338",nge:"\u2271",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",nGt:"\u226B\u20D2",ngt:"\u226F",ngtr:"\u226F",nGtv:"\u226B\u0338",nhArr:"\u21CE",nharr:"\u21AE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",NJcy:"\u040A",njcy:"\u045A",nlArr:"\u21CD",nlarr:"\u219A",nldr:"\u2025",nlE:"\u2266\u0338",nle:"\u2270",nLeftarrow:"\u21CD",nleftarrow:"\u219A",nLeftrightarrow:"\u21CE",nleftrightarrow:"\u21AE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nLt:"\u226A\u20D2",nlt:"\u226E",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",Nopf:"\u2115",nopf:"\uD835\uDD5F",Not:"\u2AEC",not:"\xAC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrArr:"\u21CF",nrarr:"\u219B",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nRightarrow:"\u21CF",nrightarrow:"\u219B",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",Nscr:"\uD835\uDCA9",nscr:"\uD835\uDCC3",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsubE:"\u2AC5\u0338",nsube:"\u2288",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupE:"\u2AC6\u0338",nsupe:"\u2289",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",Ntilde:"\xD1",ntilde:"\xF1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",Nu:"\u039D",nu:"\u03BD",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nVDash:"\u22AF",nVdash:"\u22AE",nvDash:"\u22AD",nvdash:"\u22AC",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwArr:"\u21D6",nwarr:"\u2196",nwarrow:"\u2196",nwnear:"\u2927",Oacute:"\xD3",oacute:"\xF3",oast:"\u229B",ocir:"\u229A",Ocirc:"\xD4",ocirc:"\xF4",Ocy:"\u041E",ocy:"\u043E",odash:"\u229D",Odblac:"\u0150",odblac:"\u0151",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",OElig:"\u0152",oelig:"\u0153",ofcir:"\u29BF",Ofr:"\uD835\uDD12",ofr:"\uD835\uDD2C",ogon:"\u02DB",Ograve:"\xD2",ograve:"\xF2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",Omacr:"\u014C",omacr:"\u014D",Omega:"\u03A9",omega:"\u03C9",Omicron:"\u039F",omicron:"\u03BF",omid:"\u29B6",ominus:"\u2296",Oopf:"\uD835\uDD46",oopf:"\uD835\uDD60",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",Or:"\u2A54",or:"\u2228",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",Oscr:"\uD835\uDCAA",oscr:"\u2134",Oslash:"\xD8",oslash:"\xF8",osol:"\u2298",Otilde:"\xD5",otilde:"\xF5",Otimes:"\u2A37",otimes:"\u2297",otimesas:"\u2A36",Ouml:"\xD6",ouml:"\xF6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",Pcy:"\u041F",pcy:"\u043F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",Pfr:"\uD835\uDD13",pfr:"\uD835\uDD2D",Phi:"\u03A6",phi:"\u03C6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",Pi:"\u03A0",pi:"\u03C0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",Popf:"\u2119",popf:"\uD835\uDD61",pound:"\xA3",Pr:"\u2ABB",pr:"\u227A",prap:"\u2AB7",prcue:"\u227C",prE:"\u2AB3",pre:"\u2AAF",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",Prime:"\u2033",prime:"\u2032",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",Pscr:"\uD835\uDCAB",pscr:"\uD835\uDCC5",Psi:"\u03A8",psi:"\u03C8",puncsp:"\u2008",Qfr:"\uD835\uDD14",qfr:"\uD835\uDD2E",qint:"\u2A0C",Qopf:"\u211A",qopf:"\uD835\uDD62",qprime:"\u2057",Qscr:"\uD835\uDCAC",qscr:"\uD835\uDCC6",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",QUOT:"\"",quot:"\"",rAarr:"\u21DB",race:"\u223D\u0331",Racute:"\u0154",racute:"\u0155",radic:"\u221A",raemptyv:"\u29B3",Rang:"\u27EB",rang:"\u27E9",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",Rarr:"\u21A0",rArr:"\u21D2",rarr:"\u2192",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",Rarrtl:"\u2916",rarrtl:"\u21A3",rarrw:"\u219D",rAtail:"\u291C",ratail:"\u291A",ratio:"\u2236",rationals:"\u211A",RBarr:"\u2910",rBarr:"\u290F",rbarr:"\u290D",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",Rcaron:"\u0158",rcaron:"\u0159",Rcedil:"\u0156",rcedil:"\u0157",rceil:"\u2309",rcub:"}",Rcy:"\u0420",rcy:"\u0440",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",REG:"\xAE",reg:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",Rfr:"\u211C",rfr:"\uD835\uDD2F",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",Rho:"\u03A1",rho:"\u03C1",rhov:"\u03F1",RightAngleBracket:"\u27E9",RightArrow:"\u2192",Rightarrow:"\u21D2",rightarrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",Ropf:"\u211D",ropf:"\uD835\uDD63",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",Rscr:"\u211B",rscr:"\uD835\uDCC7",Rsh:"\u21B1",rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",Sacute:"\u015A",sacute:"\u015B",sbquo:"\u201A",Sc:"\u2ABC",sc:"\u227B",scap:"\u2AB8",Scaron:"\u0160",scaron:"\u0161",sccue:"\u227D",scE:"\u2AB4",sce:"\u2AB0",Scedil:"\u015E",scedil:"\u015F",Scirc:"\u015C",scirc:"\u015D",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",Scy:"\u0421",scy:"\u0441",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",seArr:"\u21D8",searr:"\u2198",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",Sfr:"\uD835\uDD16",sfr:"\uD835\uDD30",sfrown:"\u2322",sharp:"\u266F",SHCHcy:"\u0429",shchcy:"\u0449",SHcy:"\u0428",shcy:"\u0448",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",Sigma:"\u03A3",sigma:"\u03C3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",SOFTcy:"\u042C",softcy:"\u044C",sol:"/",solb:"\u29C4",solbar:"\u233F",Sopf:"\uD835\uDD4A",sopf:"\uD835\uDD64",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",Square:"\u25A1",square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",Sscr:"\uD835\uDCAE",sscr:"\uD835\uDCC8",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",Star:"\u22C6",star:"\u2606",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",Sub:"\u22D0",sub:"\u2282",subdot:"\u2ABD",subE:"\u2AC5",sube:"\u2286",subedot:"\u2AC3",submult:"\u2AC1",subnE:"\u2ACB",subne:"\u228A",subplus:"\u2ABF",subrarr:"\u2979",Subset:"\u22D0",subset:"\u2282",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",Sum:"\u2211",sum:"\u2211",sung:"\u266A",Sup:"\u22D1",sup:"\u2283",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supE:"\u2AC6",supe:"\u2287",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supnE:"\u2ACC",supne:"\u228B",supplus:"\u2AC0",Supset:"\u22D1",supset:"\u2283",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swArr:"\u21D9",swarr:"\u2199",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"\t",target:"\u2316",Tau:"\u03A4",tau:"\u03C4",tbrk:"\u23B4",Tcaron:"\u0164",tcaron:"\u0165",Tcedil:"\u0162",tcedil:"\u0163",Tcy:"\u0422",tcy:"\u0442",tdot:"\u20DB",telrec:"\u2315",Tfr:"\uD835\uDD17",tfr:"\uD835\uDD31",there4:"\u2234",Therefore:"\u2234",therefore:"\u2234",Theta:"\u0398",theta:"\u03B8",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",THORN:"\xDE",thorn:"\xFE",Tilde:"\u223C",tilde:"\u02DC",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",Topf:"\uD835\uDD4B",topf:"\uD835\uDD65",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",TRADE:"\u2122",trade:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",Tscr:"\uD835\uDCAF",tscr:"\uD835\uDCC9",TScy:"\u0426",tscy:"\u0446",TSHcy:"\u040B",tshcy:"\u045B",Tstrok:"\u0166",tstrok:"\u0167",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",Uacute:"\xDA",uacute:"\xFA",Uarr:"\u219F",uArr:"\u21D1",uarr:"\u2191",Uarrocir:"\u2949",Ubrcy:"\u040E",ubrcy:"\u045E",Ubreve:"\u016C",ubreve:"\u016D",Ucirc:"\xDB",ucirc:"\xFB",Ucy:"\u0423",ucy:"\u0443",udarr:"\u21C5",Udblac:"\u0170",udblac:"\u0171",udhar:"\u296E",ufisht:"\u297E",Ufr:"\uD835\uDD18",ufr:"\uD835\uDD32",Ugrave:"\xD9",ugrave:"\xF9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",Umacr:"\u016A",umacr:"\u016B",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",Uogon:"\u0172",uogon:"\u0173",Uopf:"\uD835\uDD4C",uopf:"\uD835\uDD66",UpArrow:"\u2191",Uparrow:"\u21D1",uparrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",UpDownArrow:"\u2195",Updownarrow:"\u21D5",updownarrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",Upsi:"\u03D2",upsi:"\u03C5",upsih:"\u03D2",Upsilon:"\u03A5",upsilon:"\u03C5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",Uring:"\u016E",uring:"\u016F",urtri:"\u25F9",Uscr:"\uD835\uDCB0",uscr:"\uD835\uDCCA",utdot:"\u22F0",Utilde:"\u0168",utilde:"\u0169",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",Uuml:"\xDC",uuml:"\xFC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",vArr:"\u21D5",varr:"\u2195",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",Vbar:"\u2AEB",vBar:"\u2AE8",vBarv:"\u2AE9",Vcy:"\u0412",vcy:"\u0432",VDash:"\u22AB",Vdash:"\u22A9",vDash:"\u22A8",vdash:"\u22A2",Vdashl:"\u2AE6",Vee:"\u22C1",vee:"\u2228",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",Verbar:"\u2016",verbar:"|",Vert:"\u2016",vert:"|",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",Vfr:"\uD835\uDD19",vfr:"\uD835\uDD33",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",Vopf:"\uD835\uDD4D",vopf:"\uD835\uDD67",vprop:"\u221D",vrtri:"\u22B3",Vscr:"\uD835\uDCB1",vscr:"\uD835\uDCCB",vsubnE:"\u2ACB\uFE00",vsubne:"\u228A\uFE00",vsupnE:"\u2ACC\uFE00",vsupne:"\u228B\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",Wcirc:"\u0174",wcirc:"\u0175",wedbar:"\u2A5F",Wedge:"\u22C0",wedge:"\u2227",wedgeq:"\u2259",weierp:"\u2118",Wfr:"\uD835\uDD1A",wfr:"\uD835\uDD34",Wopf:"\uD835\uDD4E",wopf:"\uD835\uDD68",wp:"\u2118",wr:"\u2240",wreath:"\u2240",Wscr:"\uD835\uDCB2",wscr:"\uD835\uDCCC",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",Xfr:"\uD835\uDD1B",xfr:"\uD835\uDD35",xhArr:"\u27FA",xharr:"\u27F7",Xi:"\u039E",xi:"\u03BE",xlArr:"\u27F8",xlarr:"\u27F5",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",Xopf:"\uD835\uDD4F",xopf:"\uD835\uDD69",xoplus:"\u2A01",xotime:"\u2A02",xrArr:"\u27F9",xrarr:"\u27F6",Xscr:"\uD835\uDCB3",xscr:"\uD835\uDCCD",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",Yacute:"\xDD",yacute:"\xFD",YAcy:"\u042F",yacy:"\u044F",Ycirc:"\u0176",ycirc:"\u0177",Ycy:"\u042B",ycy:"\u044B",yen:"\xA5",Yfr:"\uD835\uDD1C",yfr:"\uD835\uDD36",YIcy:"\u0407",yicy:"\u0457",Yopf:"\uD835\uDD50",yopf:"\uD835\uDD6A",Yscr:"\uD835\uDCB4",yscr:"\uD835\uDCCE",YUcy:"\u042E",yucy:"\u044E",Yuml:"\u0178",yuml:"\xFF",Zacute:"\u0179",zacute:"\u017A",Zcaron:"\u017D",zcaron:"\u017E",Zcy:"\u0417",zcy:"\u0437",Zdot:"\u017B",zdot:"\u017C",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",Zeta:"\u0396",zeta:"\u03B6",Zfr:"\u2128",zfr:"\uD835\uDD37",ZHcy:"\u0416",zhcy:"\u0436",zigrarr:"\u21DD",Zopf:"\u2124",zopf:"\uD835\uDD6B",Zscr:"\uD835\uDCB5",zscr:"\uD835\uDCCF",zwj:"\u200D",zwnj:"\u200C"});/**
       * @deprecated use `HTML_ENTITIES` instead
       * @see HTML_ENTITIES
       */exports.entityMap=exports.HTML_ENTITIES;})(entities$1);var sax$1={};var NAMESPACE$1=conventions$2.NAMESPACE;//[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
//[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
//[5]   	Name	   ::=   	NameStartChar (NameChar)*
var nameStartChar=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;//\u10000-\uEFFFF
var nameChar=new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");var tagNamePattern=new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');//var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')
//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
var S_TAG=0;//tag name offerring
var S_ATTR=1;//attr name offerring
var S_ATTR_SPACE=2;//attr name end and space offer
var S_EQ=3;//=space?
var S_ATTR_NOQUOT_VALUE=4;//attr value(no quot value only)
var S_ATTR_END=5;//attr value end and no space(quot end)
var S_TAG_SPACE=6;//(attr value end || tag end ) && (space offer)
var S_TAG_CLOSE=7;//closed el<el />
/**
       * Creates an error that will not be caught by XMLReader aka the SAX parser.
       *
       * @param {string} message
       * @param {any?} locator Optional, can provide details about the location in the source
       * @constructor
       */function ParseError$1(message,locator){this.message=message;this.locator=locator;if(Error.captureStackTrace)Error.captureStackTrace(this,ParseError$1);}ParseError$1.prototype=new Error();ParseError$1.prototype.name=ParseError$1.name;function XMLReader$1(){}XMLReader$1.prototype={parse:function parse(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse$1(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument();}};function parse$1(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){// String.prototype.fromCharCode does not supports
// > 2 bytes unicode chars directly
if(code>0xffff){code-=0x10000;var surrogate1=0xd800+(code>>10),surrogate2=0xdc00+(code&0x3ff);return String.fromCharCode(surrogate1,surrogate2);}else{return String.fromCharCode(code);}}function entityReplacer(a){var k=a.slice(1,-1);if(Object.hasOwnProperty.call(entityMap,k)){return entityMap[k];}else if(k.charAt(0)==='#'){return fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')));}else{errorHandler.error('entity not found:'+a);return a;}}function appendText(end){//has some bugs
if(end>start){var xt=source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end;}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++;//console.log('line++:',locator,startPos,endPos)
}locator.columnNumber=p-lineStart+1;}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\r\n?|\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf('<',start);if(tagStart<0){if(!source.substr(start).match(/^\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text;}return;}if(tagStart>start){appendText(tagStart);}switch(source.charAt(tagStart+1)){case'/':var end=source.indexOf('>',tagStart+3);var tagName=source.substring(tagStart+2,end).replace(/[ \t\n\r]+$/g,'');var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\s<].*/,'');errorHandler.error("end tag name: "+tagName+' is not complete:'+config.tagName);end=tagStart+1+tagName.length;}else if(tagName.match(/\s</)){tagName=tagName.replace(/[\s<].*/,'');errorHandler.error("end tag name: "+tagName+' maybe not complete');end=tagStart+1+tagName.length;}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){if(Object.prototype.hasOwnProperty.call(localNSMap,prefix)){domBuilder.endPrefixMapping(prefix);}}}if(!endMatch){errorHandler.fatalError("end tag name: "+tagName+' is not match the current start tagName:'+config.tagName);// No known test case
}}else{parseStack.push(config);}end++;break;// end elment
case'?':// <?...?>
locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case'!':// <!doctype,<![CDATA,<!--
locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes();var currentNSMap=parseStack[parseStack.length-1].currentNSMap;//elStartEnd
var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning('unclosed xml attribute');}}if(locator&&len){var locator2=copyLocator(locator,{});//try{//attribute position fixed
for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{});}domBuilder.locator=locator2;if(appendElement$1(el,domBuilder,currentNSMap)){parseStack.push(el);}domBuilder.locator=locator;}else{if(appendElement$1(el,domBuilder,currentNSMap)){parseStack.push(el);}}if(NAMESPACE$1.isHTML(el.uri)&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder);}else{end++;}}}catch(e){if(e instanceof ParseError$1){throw e;}errorHandler.error('element parse error: '+e);end=-1;}if(end>start){start=end;}else{//TODO: 这里有可能sax回退，有位置错误风险
appendText(Math.max(tagStart,start)+1);}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t;}/**
       * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
       * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
       */function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){/**
      	 * @param {string} qname
      	 * @param {string} value
      	 * @param {number} startIndex
      	 */function addAttribute(qname,value,startIndex){if(el.attributeNames.hasOwnProperty(qname)){errorHandler.fatalError('Attribute '+qname+' redefined');}el.addValue(qname,// @see https://www.w3.org/TR/xml/#AVNormalize
// since the xmldom sax parser does not "interpret" DTD the following is not implemented:
// - recursive replacement of (DTD) entity references
// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA
value.replace(/[\t\n\r]/g,' ').replace(/&#?\w+;/g,entityReplacer),startIndex);}var attrName;var value;var p=++start;var s=S_TAG;//status
while(true){var c=source.charAt(p);switch(c){case'=':if(s===S_ATTR){//attrName
attrName=source.slice(start,p);s=S_EQ;}else if(s===S_ATTR_SPACE){s=S_EQ;}else{//fatalError: equal must after attrName or space after attrName
throw new Error('attribute equal must after attrName');// No known test case
}break;case'\'':case'"':if(s===S_EQ||s===S_ATTR//|| s == S_ATTR_SPACE
){//equal
if(s===S_ATTR){errorHandler.warning('attribute value must after "="');attrName=source.slice(start,p);}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p);addAttribute(attrName,value,start-1);s=S_ATTR_END;}else{//fatalError: no end quot match
throw new Error('attribute value no end \''+c+'\' match');}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p);addAttribute(attrName,value,start);errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+')!!');start=p+1;s=S_ATTR_END;}else{//fatalError: no equal before
throw new Error('attribute value must after "="');// No known test case
}break;case'/':switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:break;case S_ATTR_SPACE:el.closed=true;break;//case S_EQ:
default:throw new Error("attribute invalid close char('/')");// No known test case
}break;case''://end document
errorHandler.error('unexpected end of input');if(s==S_TAG){el.setTagName(source.slice(start,p));}return p;case'>':switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;//normal
case S_ATTR_NOQUOT_VALUE://Compatible state
case S_ATTR:value=source.slice(start,p);if(value.slice(-1)==='/'){el.closed=true;value=value.slice(0,-1);}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName;}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute "'+value+'" missed quot(")!');addAttribute(attrName,value,start);}else{if(!NAMESPACE$1.isHTML(currentNSMap[''])||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!');}addAttribute(value,value,start);}break;case S_EQ:throw new Error('attribute value missed!!');}//			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
return p;/*xml space '\x20' | #x9 | #xD | #xA; */case"\x80":c=' ';default:if(c<=' '){//space
switch(s){case S_TAG:el.setTagName(source.slice(start,p));//tagName
s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p);errorHandler.warning('attribute "'+value+'" missed quot(")!!');addAttribute(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break;//case S_TAG_SPACE:
//case S_EQ:
//case S_ATTR_SPACE:
//	void();break;
//case S_TAG_CLOSE:
//ignore warning
}}else{//not space
//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
switch(s){//case S_TAG:void();break;
//case S_ATTR:void();break;
//case S_ATTR_NOQUOT_VALUE:void();break;
case S_ATTR_SPACE:el.tagName;if(!NAMESPACE$1.isHTML(currentNSMap[''])||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead2!!');}addAttribute(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required"'+attrName+'"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error("elements closed character '/' and '>' must be connected to");}}}//end outer switch
//console.log('p++',p)
p++;}}/**
       * @return true if has new namespace define
       */function appendElement$1(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(':');if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix==='xmlns'&&localName;}else{localName=qName;prefix=null;nsPrefix=qName==='xmlns'&&'';}//can not set prefix,because prefix !== ''
a.localName=localName;//prefix == null for no ns prefix attribute
if(nsPrefix!==false){//hack!!
if(localNSMap==null){localNSMap={};//console.log(currentNSMap,0)
_copy(currentNSMap,currentNSMap={});//console.log(currentNSMap,1)
}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=NAMESPACE$1.XMLNS;domBuilder.startPrefixMapping(nsPrefix,value);}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){//no prefix attribute has no namespace
if(prefix==='xml'){a.uri=NAMESPACE$1.XML;}if(prefix!=='xmlns'){a.uri=currentNSMap[prefix||''];//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
}}}var nsp=tagName.indexOf(':');if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1);}else{prefix=null;//important!!
localName=el.localName=tagName;}//no prefix element has default namespace
var ns=el.uri=currentNSMap[prefix||''];domBuilder.startElement(ns,localName,tagName,el);//endPrefixMapping and startPrefixMapping have not any help for dom builder
//localNSMap = null
if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){if(Object.prototype.hasOwnProperty.call(localNSMap,prefix)){domBuilder.endPrefixMapping(prefix);}}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;//parseStack.push(el);
return true;}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf('</'+tagName+'>',elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){//if(!/\]\]>/.test(text)){
//lexHandler.startCDATA();
domBuilder.characters(text,0,text.length);//lexHandler.endCDATA();
return elEndStart;//}
}//}else{//text area
text=text.replace(/&#?\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart;//}
}}return elStartEnd+1;}function fixSelfClosed(source,elStartEnd,tagName,closeMap){//if(tagName in closeMap){
var pos=closeMap[tagName];if(pos==null){//console.log(tagName)
pos=source.lastIndexOf('</'+tagName+'>');if(pos<elStartEnd){//忘记闭合
pos=source.lastIndexOf('</'+tagName);}closeMap[tagName]=pos;}return pos<elStartEnd;//}
}function _copy(source,target){for(var n in source){if(Object.prototype.hasOwnProperty.call(source,n)){target[n]=source[n];}}}function parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'
var next=source.charAt(start+2);switch(next){case'-':if(source.charAt(start+3)==='-'){var end=source.indexOf('-->',start+4);//append comment source.substring(4,end)//<!--
if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3;}else{errorHandler.error("Unclosed comment");return-1;}}else{//error
return-1;}default:if(source.substr(start+3,6)=='CDATA['){var end=source.indexOf(']]>',start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3;}//<!DOCTYPE
//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)
var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=false;var sysid=false;if(len>3){if(/^public$/i.test(matchs[2][0])){pubid=matchs[3][0];sysid=len>4&&matchs[4][0];}else if(/^system$/i.test(matchs[2][0])){sysid=matchs[3][0];}}var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid,sysid);domBuilder.endDTD();return lastMatch.index+lastMatch[0].length;}}return-1;}function parseInstruction(source,start,domBuilder){var end=source.indexOf('?>',start);if(end){var match=source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);if(match){match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2;}else{//error
return-1;}}return-1;}function ElementAttributes(){this.attributeNames={};}ElementAttributes.prototype={setTagName:function setTagName(tagName){if(!tagNamePattern.test(tagName)){throw new Error('invalid tagName:'+tagName);}this.tagName=tagName;},addValue:function addValue(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error('invalid attribute:'+qName);}this.attributeNames[qName]=this.length;this[this.length++]={qName:qName,value:value,offset:offset};},length:0,getLocalName:function getLocalName(i){return this[i].localName;},getLocator:function getLocator(i){return this[i].locator;},getQName:function getQName(i){return this[i].qName;},getURI:function getURI(i){return this[i].uri;},getValue:function getValue(i){return this[i].value;}//	,getIndex:function(uri, localName)){
//		if(localName){
//
//		}else{
//			var qName = uri
//		}
//	},
//	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
//	getType:function(uri,localName){}
//	getType:function(i){},
};function split(source,start){var match;var buf=[];var reg=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;reg.lastIndex=start;reg.exec(source);//skip <
while(match=reg.exec(source)){buf.push(match);if(match[1])return buf;}}sax$1.XMLReader=XMLReader$1;sax$1.ParseError=ParseError$1;var conventions=conventions$2;var dom=dom$1;var entities=entities$1;var sax=sax$1;var DOMImplementation=dom.DOMImplementation;var NAMESPACE=conventions.NAMESPACE;var ParseError=sax.ParseError;var XMLReader=sax.XMLReader;/**
       * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:
       *
       * > XML parsed entities are often stored in computer files which,
       * > for editing convenience, are organized into lines.
       * > These lines are typically separated by some combination
       * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).
       * >
       * > To simplify the tasks of applications, the XML processor must behave
       * > as if it normalized all line breaks in external parsed entities (including the document entity)
       * > on input, before parsing, by translating all of the following to a single #xA character:
       * >
       * > 1. the two-character sequence #xD #xA
       * > 2. the two-character sequence #xD #x85
       * > 3. the single character #x85
       * > 4. the single character #x2028
       * > 5. any #xD character that is not immediately followed by #xA or #x85.
       *
       * @param {string} input
       * @returns {string}
       */function normalizeLineEndings(input){return input.replace(/\r[\n\u0085]/g,'\n').replace(/[\r\u0085\u2028]/g,'\n');}/**
       * @typedef Locator
       * @property {number} [columnNumber]
       * @property {number} [lineNumber]
       */ /**
       * @typedef DOMParserOptions
       * @property {DOMHandler} [domBuilder]
       * @property {Function} [errorHandler]
       * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing
       * 						defaults to `normalizeLineEndings`
       * @property {Locator} [locator]
       * @property {Record<string, string>} [xmlns]
       *
       * @see normalizeLineEndings
       */ /**
       * The DOMParser interface provides the ability to parse XML or HTML source code
       * from a string into a DOM `Document`.
       *
       * _xmldom is different from the spec in that it allows an `options` parameter,
       * to override the default behavior._
       *
       * @param {DOMParserOptions} [options]
       * @constructor
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser
       * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization
       */function DOMParser$1(options){this.options=options||{locator:{}};}DOMParser$1.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader();var domBuilder=options.domBuilder||new DOMHandler();//contentHandler and LexicalHandler
var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var isHTML=/\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;
var entityMap=isHTML?entities.HTML_ENTITIES:entities.XML_ENTITIES;if(locator){domBuilder.setDocumentLocator(locator);}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(isHTML){defaultNSMap['']=NAMESPACE.HTML;}defaultNSMap.xml=defaultNSMap.xml||NAMESPACE.XML;var normalize=options.normalizeLineEndings||normalizeLineEndings;if(source&&typeof source==='string'){sax.parse(normalize(source),defaultNSMap,entityMap);}else{sax.errorHandler.error('invalid doc source');}return domBuilder.doc;};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder;}errorImpl=domBuilder;}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg);}:errorImpl;}errorHandler[key]=fn&&function(msg){fn('[xmldom '+key+']\t'+msg+_locator(locator));}||function(){};}build('warning');build('error');build('fatalError');return errorHandler;}//console.log('#\n\n\n\n\n\n\n####')
/**
       * +ContentHandler+ErrorHandler
       * +LexicalHandler+EntityResolver2
       * -DeclHandler-DTDHandler
       *
       * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
       * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
       * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
       */function DOMHandler(){this.cdata=false;}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber;}/**
       * @see org.xml.sax.ContentHandler#startDocument
       * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
       */DOMHandler.prototype={startDocument:function startDocument(){this.doc=new DOMImplementation().createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId;}},startElement:function startElement(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr);}},endElement:function endElement(namespaceURI,localName,qName){var current=this.currentElement;current.tagName;this.currentElement=current.parentNode;},startPrefixMapping:function startPrefixMapping(prefix,uri){},endPrefixMapping:function endPrefixMapping(prefix){},processingInstruction:function processingInstruction(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins);},ignorableWhitespace:function ignorableWhitespace(ch,start,length){},characters:function characters(chars,start,length){chars=_toString.apply(this,arguments);//console.log(chars)
if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars);}else{var charNode=this.doc.createTextNode(chars);}if(this.currentElement){this.currentElement.appendChild(charNode);}else if(/^\s*$/.test(chars)){this.doc.appendChild(charNode);//process xml
}this.locator&&position(this.locator,charNode);}},skippedEntity:function skippedEntity(name){},endDocument:function endDocument(){this.doc.normalize();},setDocumentLocator:function setDocumentLocator(locator){if(this.locator=locator){// && !('lineNumber' in locator)){
locator.lineNumber=0;}},//LexicalHandler
comment:function comment(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm);},startCDATA:function startCDATA(){//used in characters() methods
this.cdata=true;},endCDATA:function endCDATA(){this.cdata=false;},startDTD:function startDTD(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt);this.doc.doctype=dt;}},/**
      	 * @see org.xml.sax.ErrorHandler
      	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
      	 */warning:function warning(error){console.warn('[xmldom warning]\t'+error,_locator(this.locator));},error:function error(_error){console.error('[xmldom error]\t'+_error,_locator(this.locator));},fatalError:function fatalError(error){throw new ParseError(error,this.locator);}};function _locator(l){if(l){return'\n@'+(l.systemId||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']';}}function _toString(chars,start,length){if(typeof chars=='string'){return chars.substr(start,length);}else{//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+'';}return chars;}}/*
       * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
       * used method of org.xml.sax.ext.LexicalHandler:
       *  #comment(chars, start, length)
       *  #startCDATA()
       *  #endCDATA()
       *  #startDTD(name, publicId, systemId)
       *
       *
       * IGNORED method of org.xml.sax.ext.LexicalHandler:
       *  #endDTD()
       *  #startEntity(name)
       *  #endEntity(name)
       *
       *
       * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
       * IGNORED method of org.xml.sax.ext.DeclHandler
       * 	#attributeDecl(eName, aName, type, mode, value)
       *  #elementDecl(name, model)
       *  #externalEntityDecl(name, publicId, systemId)
       *  #internalEntityDecl(name, value)
       * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
       * IGNORED method of org.xml.sax.EntityResolver2
       *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
       *  #resolveEntity(publicId, systemId)
       *  #getExternalSubset(name, baseURI)
       * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
       * IGNORED method of org.xml.sax.DTDHandler
       *  #notationDecl(name, publicId, systemId) {};
       *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
       */"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){DOMHandler.prototype[key]=function(){return null;};});/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node);}else{hander.currentElement.appendChild(node);}}//appendChild and setAttributeNS are preformance key
domParser.__DOMHandler=DOMHandler;domParser.normalizeLineEndings=normalizeLineEndings;domParser.DOMParser=DOMParser$1;var DOMParser=domParser.DOMParser;/*! @name mpd-parser @version 1.3.0 @license Apache-2.0 */var isObject$1=function isObject$1(obj){return!!obj&&_typeof(obj)==='object';};var merge$2=function merge$2(){for(var _len18=arguments.length,objects=new Array(_len18),_key19=0;_key19<_len18;_key19++){objects[_key19]=arguments[_key19];}return objects.reduce(function(result,source){if(_typeof(source)!=='object'){return result;}Object.keys(source).forEach(function(key){if(Array.isArray(result[key])&&Array.isArray(source[key])){result[key]=result[key].concat(source[key]);}else if(isObject$1(result[key])&&isObject$1(source[key])){result[key]=merge$2(result[key],source[key]);}else{result[key]=source[key];}});return result;},{});};var values$1=function values$1(o){return Object.keys(o).map(function(k){return o[k];});};var range=function range(start,end){var result=[];for(var _i73=start;_i73<end;_i73++){result.push(_i73);}return result;};var flatten=function flatten(lists){return lists.reduce(function(x,y){return x.concat(y);},[]);};var from=function from(list){if(!list.length){return[];}var result=[];for(var _i74=0;_i74<list.length;_i74++){result.push(list[_i74]);}return result;};var findIndexes=function findIndexes(l,key){return l.reduce(function(a,e,i){if(e[key]){a.push(i);}return a;},[]);};/**
       * Returns a union of the included lists provided each element can be identified by a key.
       *
       * @param {Array} list - list of lists to get the union of
       * @param {Function} keyFunction - the function to use as a key for each element
       *
       * @return {Array} the union of the arrays
       */var union=function union(lists,keyFunction){return values$1(lists.reduce(function(acc,list){list.forEach(function(el){acc[keyFunction(el)]=el;});return acc;},{}));};var errors={INVALID_NUMBER_OF_PERIOD:'INVALID_NUMBER_OF_PERIOD',INVALID_NUMBER_OF_CONTENT_STEERING:'INVALID_NUMBER_OF_CONTENT_STEERING',DASH_EMPTY_MANIFEST:'DASH_EMPTY_MANIFEST',DASH_INVALID_XML:'DASH_INVALID_XML',NO_BASE_URL:'NO_BASE_URL',MISSING_SEGMENT_INFORMATION:'MISSING_SEGMENT_INFORMATION',SEGMENT_TIME_UNSPECIFIED:'SEGMENT_TIME_UNSPECIFIED',UNSUPPORTED_UTC_TIMING_SCHEME:'UNSUPPORTED_UTC_TIMING_SCHEME'};/**
       * @typedef {Object} SingleUri
       * @property {string} uri - relative location of segment
       * @property {string} resolvedUri - resolved location of segment
       * @property {Object} byterange - Object containing information on how to make byte range
       *   requests following byte-range-spec per RFC2616.
       * @property {String} byterange.length - length of range request
       * @property {String} byterange.offset - byte offset of range request
       *
       * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1
       */ /**
       * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object
       * that conforms to how m3u8-parser is structured
       *
       * @see https://github.com/videojs/m3u8-parser
       *
       * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes
       * @param {string} source - source url for segment
       * @param {string} range - optional range used for range calls,
       *   follows  RFC 2616, Clause 14.35.1
       * @return {SingleUri} full segment information transformed into a format similar
       *   to m3u8-parser
       */var urlTypeToSegment=function urlTypeToSegment(_ref134){var _ref134$baseUrl=_ref134.baseUrl,baseUrl=_ref134$baseUrl===void 0?'':_ref134$baseUrl,_ref134$source=_ref134.source,source=_ref134$source===void 0?'':_ref134$source,_ref134$range=_ref134.range,range=_ref134$range===void 0?'':_ref134$range,_ref134$indexRange=_ref134.indexRange,indexRange=_ref134$indexRange===void 0?'':_ref134$indexRange;var segment={uri:source,resolvedUri:resolveUrl$1(baseUrl||'',source)};if(range||indexRange){var rangeStr=range?range:indexRange;var ranges=rangeStr.split('-');// default to parsing this as a BigInt if possible
var startRange=window_1.BigInt?window_1.BigInt(ranges[0]):parseInt(ranges[0],10);var endRange=window_1.BigInt?window_1.BigInt(ranges[1]):parseInt(ranges[1],10);// convert back to a number if less than MAX_SAFE_INTEGER
if(startRange<Number.MAX_SAFE_INTEGER&&typeof startRange==='bigint'){startRange=Number(startRange);}if(endRange<Number.MAX_SAFE_INTEGER&&typeof endRange==='bigint'){endRange=Number(endRange);}var _length2;if(typeof endRange==='bigint'||typeof startRange==='bigint'){_length2=window_1.BigInt(endRange)-window_1.BigInt(startRange)+window_1.BigInt(1);}else{_length2=endRange-startRange+1;}if(typeof _length2==='bigint'&&_length2<Number.MAX_SAFE_INTEGER){_length2=Number(_length2);}// byterange should be inclusive according to
// RFC 2616, Clause 14.35.1
segment.byterange={length:_length2,offset:startRange};}return segment;};var byteRangeToString=function byteRangeToString(byterange){// `endRange` is one less than `offset + length` because the HTTP range
// header uses inclusive ranges
var endRange;if(typeof byterange.offset==='bigint'||typeof byterange.length==='bigint'){endRange=window_1.BigInt(byterange.offset)+window_1.BigInt(byterange.length)-window_1.BigInt(1);}else{endRange=byterange.offset+byterange.length-1;}return"".concat(byterange.offset,"-").concat(endRange);};/**
       * parse the end number attribue that can be a string
       * number, or undefined.
       *
       * @param {string|number|undefined} endNumber
       *        The end number attribute.
       *
       * @return {number|null}
       *          The result of parsing the end number.
       */var parseEndNumber=function parseEndNumber(endNumber){if(endNumber&&typeof endNumber!=='number'){endNumber=parseInt(endNumber,10);}if(isNaN(endNumber)){return null;}return endNumber;};/**
       * Functions for calculating the range of available segments in static and dynamic
       * manifests.
       */var segmentRange={/**
         * Returns the entire range of available segments for a static MPD
         *
         * @param {Object} attributes
         *        Inheritied MPD attributes
         * @return {{ start: number, end: number }}
         *         The start and end numbers for available segments
         */static:function _static(attributes){var duration=attributes.duration,_attributes$timescale=attributes.timescale,timescale=_attributes$timescale===void 0?1:_attributes$timescale,sourceDuration=attributes.sourceDuration,periodDuration=attributes.periodDuration;var endNumber=parseEndNumber(attributes.endNumber);var segmentDuration=duration/timescale;if(typeof endNumber==='number'){return{start:0,end:endNumber};}if(typeof periodDuration==='number'){return{start:0,end:periodDuration/segmentDuration};}return{start:0,end:sourceDuration/segmentDuration};},/**
         * Returns the current live window range of available segments for a dynamic MPD
         *
         * @param {Object} attributes
         *        Inheritied MPD attributes
         * @return {{ start: number, end: number }}
         *         The start and end numbers for available segments
         */dynamic:function dynamic(attributes){var NOW=attributes.NOW,clientOffset=attributes.clientOffset,availabilityStartTime=attributes.availabilityStartTime,_attributes$timescale2=attributes.timescale,timescale=_attributes$timescale2===void 0?1:_attributes$timescale2,duration=attributes.duration,_attributes$periodSta=attributes.periodStart,periodStart=_attributes$periodSta===void 0?0:_attributes$periodSta,_attributes$minimumUp=attributes.minimumUpdatePeriod,minimumUpdatePeriod=_attributes$minimumUp===void 0?0:_attributes$minimumUp,_attributes$timeShift=attributes.timeShiftBufferDepth,timeShiftBufferDepth=_attributes$timeShift===void 0?Infinity:_attributes$timeShift;var endNumber=parseEndNumber(attributes.endNumber);// clientOffset is passed in at the top level of mpd-parser and is an offset calculated
// after retrieving UTC server time.
var now=(NOW+clientOffset)/1000;// WC stands for Wall Clock.
// Convert the period start time to EPOCH.
var periodStartWC=availabilityStartTime+periodStart;// Period end in EPOCH is manifest's retrieval time + time until next update.
var periodEndWC=now+minimumUpdatePeriod;var periodDuration=periodEndWC-periodStartWC;var segmentCount=Math.ceil(periodDuration*timescale/duration);var availableStart=Math.floor((now-periodStartWC-timeShiftBufferDepth)*timescale/duration);var availableEnd=Math.floor((now-periodStartWC)*timescale/duration);return{start:Math.max(0,availableStart),end:typeof endNumber==='number'?endNumber:Math.min(segmentCount,availableEnd)};}};/**
       * Maps a range of numbers to objects with information needed to build the corresponding
       * segment list
       *
       * @name toSegmentsCallback
       * @function
       * @param {number} number
       *        Number of the segment
       * @param {number} index
       *        Index of the number in the range list
       * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}
       *         Object with segment timing and duration info
       */ /**
       * Returns a callback for Array.prototype.map for mapping a range of numbers to
       * information needed to build the segment list.
       *
       * @param {Object} attributes
       *        Inherited MPD attributes
       * @return {toSegmentsCallback}
       *         Callback map function
       */var toSegments=function toSegments(attributes){return function(number){var duration=attributes.duration,_attributes$timescale3=attributes.timescale,timescale=_attributes$timescale3===void 0?1:_attributes$timescale3,periodStart=attributes.periodStart,_attributes$startNumb=attributes.startNumber,startNumber=_attributes$startNumb===void 0?1:_attributes$startNumb;return{number:startNumber+number,duration:duration/timescale,timeline:periodStart,time:number*duration};};};/**
       * Returns a list of objects containing segment timing and duration info used for
       * building the list of segments. This uses the @duration attribute specified
       * in the MPD manifest to derive the range of segments.
       *
       * @param {Object} attributes
       *        Inherited MPD attributes
       * @return {{number: number, duration: number, time: number, timeline: number}[]}
       *         List of Objects with segment timing and duration info
       */var parseByDuration=function parseByDuration(attributes){var type=attributes.type,duration=attributes.duration,_attributes$timescale4=attributes.timescale,timescale=_attributes$timescale4===void 0?1:_attributes$timescale4,periodDuration=attributes.periodDuration,sourceDuration=attributes.sourceDuration;var _segmentRange$type=segmentRange[type](attributes),start=_segmentRange$type.start,end=_segmentRange$type.end;var segments=range(start,end).map(toSegments(attributes));if(type==='static'){var _index6=segments.length-1;// section is either a period or the full source
var sectionDuration=typeof periodDuration==='number'?periodDuration:sourceDuration;// final segment may be less than full segment duration
segments[_index6].duration=sectionDuration-duration/timescale*_index6;}return segments;};/**
       * Translates SegmentBase into a set of segments.
       * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each
       * node should be translated into segment.
       *
       * @param {Object} attributes
       *   Object containing all inherited attributes from parent elements with attribute
       *   names as keys
       * @return {Object.<Array>} list of segments
       */var segmentsFromBase=function segmentsFromBase(attributes){var baseUrl=attributes.baseUrl,_attributes$initializ=attributes.initialization,initialization=_attributes$initializ===void 0?{}:_attributes$initializ,sourceDuration=attributes.sourceDuration,_attributes$indexRang=attributes.indexRange,indexRange=_attributes$indexRang===void 0?'':_attributes$indexRang,periodStart=attributes.periodStart,presentationTime=attributes.presentationTime,_attributes$number=attributes.number,number=_attributes$number===void 0?0:_attributes$number,duration=attributes.duration;// base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)
if(!baseUrl){throw new Error(errors.NO_BASE_URL);}var initSegment=urlTypeToSegment({baseUrl:baseUrl,source:initialization.sourceURL,range:initialization.range});var segment=urlTypeToSegment({baseUrl:baseUrl,source:baseUrl,indexRange:indexRange});segment.map=initSegment;// If there is a duration, use it, otherwise use the given duration of the source
// (since SegmentBase is only for one total segment)
if(duration){var segmentTimeInfo=parseByDuration(attributes);if(segmentTimeInfo.length){segment.duration=segmentTimeInfo[0].duration;segment.timeline=segmentTimeInfo[0].timeline;}}else if(sourceDuration){segment.duration=sourceDuration;segment.timeline=periodStart;}// If presentation time is provided, these segments are being generated by SIDX
// references, and should use the time provided. For the general case of SegmentBase,
// there should only be one segment in the period, so its presentation time is the same
// as its period start.
segment.presentationTime=presentationTime||periodStart;segment.number=number;return[segment];};/**
       * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist
       * according to the sidx information given.
       *
       * playlist.sidx has metadadata about the sidx where-as the sidx param
       * is the parsed sidx box itself.
       *
       * @param {Object} playlist the playlist to update the sidx information for
       * @param {Object} sidx the parsed sidx box
       * @return {Object} the playlist object with the updated sidx information
       */var addSidxSegmentsToPlaylist$1=function addSidxSegmentsToPlaylist$1(playlist,sidx,baseUrl){// Retain init segment information
var initSegment=playlist.sidx.map?playlist.sidx.map:null;// Retain source duration from initial main manifest parsing
var sourceDuration=playlist.sidx.duration;// Retain source timeline
var timeline=playlist.timeline||0;var sidxByteRange=playlist.sidx.byterange;var sidxEnd=sidxByteRange.offset+sidxByteRange.length;// Retain timescale of the parsed sidx
var timescale=sidx.timescale;// referenceType 1 refers to other sidx boxes
var mediaReferences=sidx.references.filter(function(r){return r.referenceType!==1;});var segments=[];var type=playlist.endList?'static':'dynamic';var periodStart=playlist.sidx.timeline;var presentationTime=periodStart;var number=playlist.mediaSequence||0;// firstOffset is the offset from the end of the sidx box
var startIndex;// eslint-disable-next-line
if(typeof sidx.firstOffset==='bigint'){startIndex=window_1.BigInt(sidxEnd)+sidx.firstOffset;}else{startIndex=sidxEnd+sidx.firstOffset;}for(var _i75=0;_i75<mediaReferences.length;_i75++){var reference=sidx.references[_i75];// size of the referenced (sub)segment
var size=reference.referencedSize;// duration of the referenced (sub)segment, in  the  timescale
// this will be converted to seconds when generating segments
var _duration=reference.subsegmentDuration;// should be an inclusive range
var endIndex=void 0;// eslint-disable-next-line
if(typeof startIndex==='bigint'){endIndex=startIndex+window_1.BigInt(size)-window_1.BigInt(1);}else{endIndex=startIndex+size-1;}var indexRange="".concat(startIndex,"-").concat(endIndex);var _attributes2={baseUrl:baseUrl,timescale:timescale,timeline:timeline,periodStart:periodStart,presentationTime:presentationTime,number:number,duration:_duration,sourceDuration:sourceDuration,indexRange:indexRange,type:type};var segment=segmentsFromBase(_attributes2)[0];if(initSegment){segment.map=initSegment;}segments.push(segment);if(typeof startIndex==='bigint'){startIndex+=window_1.BigInt(size);}else{startIndex+=size;}presentationTime+=_duration/timescale;number++;}playlist.segments=segments;return playlist;};var SUPPORTED_MEDIA_TYPES=['AUDIO','SUBTITLES'];// allow one 60fps frame as leniency (arbitrarily chosen)
var TIME_FUDGE=1/60;/**
       * Given a list of timelineStarts, combines, dedupes, and sorts them.
       *
       * @param {TimelineStart[]} timelineStarts - list of timeline starts
       *
       * @return {TimelineStart[]} the combined and deduped timeline starts
       */var getUniqueTimelineStarts=function getUniqueTimelineStarts(timelineStarts){return union(timelineStarts,function(_ref135){var timeline=_ref135.timeline;return timeline;}).sort(function(a,b){return a.timeline>b.timeline?1:-1;});};/**
       * Finds the playlist with the matching NAME attribute.
       *
       * @param {Array} playlists - playlists to search through
       * @param {string} name - the NAME attribute to search for
       *
       * @return {Object|null} the matching playlist object, or null
       */var findPlaylistWithName=function findPlaylistWithName(playlists,name){for(var _i76=0;_i76<playlists.length;_i76++){if(playlists[_i76].attributes.NAME===name){return playlists[_i76];}}return null;};/**
       * Gets a flattened array of media group playlists.
       *
       * @param {Object} manifest - the main manifest object
       *
       * @return {Array} the media group playlists
       */var getMediaGroupPlaylists=function getMediaGroupPlaylists(manifest){var mediaGroupPlaylists=[];forEachMediaGroup$1(manifest,SUPPORTED_MEDIA_TYPES,function(properties,type,group,label){mediaGroupPlaylists=mediaGroupPlaylists.concat(properties.playlists||[]);});return mediaGroupPlaylists;};/**
       * Updates the playlist's media sequence numbers.
       *
       * @param {Object} config - options object
       * @param {Object} config.playlist - the playlist to update
       * @param {number} config.mediaSequence - the mediaSequence number to start with
       */var updateMediaSequenceForPlaylist=function updateMediaSequenceForPlaylist(_ref136){var playlist=_ref136.playlist,mediaSequence=_ref136.mediaSequence;playlist.mediaSequence=mediaSequence;playlist.segments.forEach(function(segment,index){segment.number=playlist.mediaSequence+index;});};/**
       * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists
       * and a complete list of timeline starts.
       *
       * If no matching playlist is found, only the discontinuity sequence number of the playlist
       * will be updated.
       *
       * Since early available timelines are not supported, at least one segment must be present.
       *
       * @param {Object} config - options object
       * @param {Object[]} oldPlaylists - the old playlists to use as a reference
       * @param {Object[]} newPlaylists - the new playlists to update
       * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point
       */var updateSequenceNumbers=function updateSequenceNumbers(_ref137){var oldPlaylists=_ref137.oldPlaylists,newPlaylists=_ref137.newPlaylists,timelineStarts=_ref137.timelineStarts;newPlaylists.forEach(function(playlist){playlist.discontinuitySequence=timelineStarts.findIndex(function(_ref138){var timeline=_ref138.timeline;return timeline===playlist.timeline;});// Playlists NAMEs come from DASH Representation IDs, which are mandatory
// (see ISO_23009-1-2012 5.3.5.2).
//
// If the same Representation existed in a prior Period, it will retain the same NAME.
var oldPlaylist=findPlaylistWithName(oldPlaylists,playlist.attributes.NAME);if(!oldPlaylist){// Since this is a new playlist, the media sequence values can start from 0 without
// consequence.
return;}// TODO better support for live SIDX
//
// As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).
// This is evident by a playlist only having a single SIDX reference. In a multiperiod
// playlist there would need to be multiple SIDX references. In addition, live SIDX is
// not supported when the SIDX properties change on refreshes.
//
// In the future, if support needs to be added, the merging logic here can be called
// after SIDX references are resolved. For now, exit early to prevent exceptions being
// thrown due to undefined references.
if(playlist.sidx){return;}// Since we don't yet support early available timelines, we don't need to support
// playlists with no segments.
var firstNewSegment=playlist.segments[0];var oldMatchingSegmentIndex=oldPlaylist.segments.findIndex(function(oldSegment){return Math.abs(oldSegment.presentationTime-firstNewSegment.presentationTime)<TIME_FUDGE;});// No matching segment from the old playlist means the entire playlist was refreshed.
// In this case the media sequence should account for this update, and the new segments
// should be marked as discontinuous from the prior content, since the last prior
// timeline was removed.
if(oldMatchingSegmentIndex===-1){updateMediaSequenceForPlaylist({playlist:playlist,mediaSequence:oldPlaylist.mediaSequence+oldPlaylist.segments.length});playlist.segments[0].discontinuity=true;playlist.discontinuityStarts.unshift(0);// No matching segment does not necessarily mean there's missing content.
//
// If the new playlist's timeline is the same as the last seen segment's timeline,
// then a discontinuity can be added to identify that there's potentially missing
// content. If there's no missing content, the discontinuity should still be rather
// harmless. It's possible that if segment durations are accurate enough, that the
// existence of a gap can be determined using the presentation times and durations,
// but if the segment timing info is off, it may introduce more problems than simply
// adding the discontinuity.
//
// If the new playlist's timeline is different from the last seen segment's timeline,
// then a discontinuity can be added to identify that this is the first seen segment
// of a new timeline. However, the logic at the start of this function that
// determined the disconinuity sequence by timeline index is now off by one (the
// discontinuity of the newest timeline hasn't yet fallen off the manifest...since
// we added it), so the disconinuity sequence must be decremented.
//
// A period may also have a duration of zero, so the case of no segments is handled
// here even though we don't yet support early available periods.
if(!oldPlaylist.segments.length&&playlist.timeline>oldPlaylist.timeline||oldPlaylist.segments.length&&playlist.timeline>oldPlaylist.segments[oldPlaylist.segments.length-1].timeline){playlist.discontinuitySequence--;}return;}// If the first segment matched with a prior segment on a discontinuity (it's matching
// on the first segment of a period), then the discontinuitySequence shouldn't be the
// timeline's matching one, but instead should be the one prior, and the first segment
// of the new manifest should be marked with a discontinuity.
//
// The reason for this special case is that discontinuity sequence shows how many
// discontinuities have fallen off of the playlist, and discontinuities are marked on
// the first segment of a new "timeline." Because of this, while DASH will retain that
// Period while the "timeline" exists, HLS keeps track of it via the discontinuity
// sequence, and that first segment is an indicator, but can be removed before that
// timeline is gone.
var oldMatchingSegment=oldPlaylist.segments[oldMatchingSegmentIndex];if(oldMatchingSegment.discontinuity&&!firstNewSegment.discontinuity){firstNewSegment.discontinuity=true;playlist.discontinuityStarts.unshift(0);playlist.discontinuitySequence--;}updateMediaSequenceForPlaylist({playlist:playlist,mediaSequence:oldPlaylist.segments[oldMatchingSegmentIndex].number});});};/**
       * Given an old parsed manifest object and a new parsed manifest object, updates the
       * sequence and timing values within the new manifest to ensure that it lines up with the
       * old.
       *
       * @param {Array} oldManifest - the old main manifest object
       * @param {Array} newManifest - the new main manifest object
       *
       * @return {Object} the updated new manifest object
       */var positionManifestOnTimeline=function positionManifestOnTimeline(_ref139){var oldManifest=_ref139.oldManifest,newManifest=_ref139.newManifest;// Starting from v4.1.2 of the IOP, section 4.4.3.3 states:
//
// "MPD@availabilityStartTime and Period@start shall not be changed over MPD updates."
//
// This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160
//
// Because of this change, and the difficulty of supporting periods with changing start
// times, periods with changing start times are not supported. This makes the logic much
// simpler, since periods with the same start time can be considerred the same period
// across refreshes.
//
// To give an example as to the difficulty of handling periods where the start time may
// change, if a single period manifest is refreshed with another manifest with a single
// period, and both the start and end times are increased, then the only way to determine
// if it's a new period or an old one that has changed is to look through the segments of
// each playlist and determine the presentation time bounds to find a match. In addition,
// if the period start changed to exceed the old period end, then there would be no
// match, and it would not be possible to determine whether the refreshed period is a new
// one or the old one.
var oldPlaylists=oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));var newPlaylists=newManifest.playlists.concat(getMediaGroupPlaylists(newManifest));// Save all seen timelineStarts to the new manifest. Although this potentially means that
// there's a "memory leak" in that it will never stop growing, in reality, only a couple
// of properties are saved for each seen Period. Even long running live streams won't
// generate too many Periods, unless the stream is watched for decades. In the future,
// this can be optimized by mapping to discontinuity sequence numbers for each timeline,
// but it may not become an issue, and the additional info can be useful for debugging.
newManifest.timelineStarts=getUniqueTimelineStarts([oldManifest.timelineStarts,newManifest.timelineStarts]);updateSequenceNumbers({oldPlaylists:oldPlaylists,newPlaylists:newPlaylists,timelineStarts:newManifest.timelineStarts});return newManifest;};var generateSidxKey=function generateSidxKey(sidx){return sidx&&sidx.uri+'-'+byteRangeToString(sidx.byterange);};var mergeDiscontiguousPlaylists=function mergeDiscontiguousPlaylists(playlists){// Break out playlists into groups based on their baseUrl
var playlistsByBaseUrl=playlists.reduce(function(acc,cur){if(!acc[cur.attributes.baseUrl]){acc[cur.attributes.baseUrl]=[];}acc[cur.attributes.baseUrl].push(cur);return acc;},{});var allPlaylists=[];Object.values(playlistsByBaseUrl).forEach(function(playlistGroup){var mergedPlaylists=values$1(playlistGroup.reduce(function(acc,playlist){// assuming playlist IDs are the same across periods
// TODO: handle multiperiod where representation sets are not the same
// across periods
var name=playlist.attributes.id+(playlist.attributes.lang||'');if(!acc[name]){// First Period
acc[name]=playlist;acc[name].attributes.timelineStarts=[];}else{// Subsequent Periods
if(playlist.segments){var _acc$name$segments;// first segment of subsequent periods signal a discontinuity
if(playlist.segments[0]){playlist.segments[0].discontinuity=true;}(_acc$name$segments=acc[name].segments).push.apply(_acc$name$segments,_toConsumableArray(playlist.segments));}// bubble up contentProtection, this assumes all DRM content
// has the same contentProtection
if(playlist.attributes.contentProtection){acc[name].attributes.contentProtection=playlist.attributes.contentProtection;}}acc[name].attributes.timelineStarts.push({// Although they represent the same number, it's important to have both to make it
// compatible with HLS potentially having a similar attribute.
start:playlist.attributes.periodStart,timeline:playlist.attributes.periodStart});return acc;},{}));allPlaylists=allPlaylists.concat(mergedPlaylists);});return allPlaylists.map(function(playlist){playlist.discontinuityStarts=findIndexes(playlist.segments||[],'discontinuity');return playlist;});};var addSidxSegmentsToPlaylist=function addSidxSegmentsToPlaylist(playlist,sidxMapping){var sidxKey=generateSidxKey(playlist.sidx);var sidxMatch=sidxKey&&sidxMapping[sidxKey]&&sidxMapping[sidxKey].sidx;if(sidxMatch){addSidxSegmentsToPlaylist$1(playlist,sidxMatch,playlist.sidx.resolvedUri);}return playlist;};var addSidxSegmentsToPlaylists=function addSidxSegmentsToPlaylists(playlists){var sidxMapping=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!Object.keys(sidxMapping).length){return playlists;}for(var _i77 in playlists){playlists[_i77]=addSidxSegmentsToPlaylist(playlists[_i77],sidxMapping);}return playlists;};var formatAudioPlaylist=function formatAudioPlaylist(_ref140,isAudioOnly){var attributes=_ref140.attributes,segments=_ref140.segments,sidx=_ref140.sidx,mediaSequence=_ref140.mediaSequence,discontinuitySequence=_ref140.discontinuitySequence,discontinuityStarts=_ref140.discontinuityStarts;var playlist={attributes:_defineProperty({NAME:attributes.id,BANDWIDTH:attributes.bandwidth,CODECS:attributes.codecs},'PROGRAM-ID',1),uri:'',endList:attributes.type==='static',timeline:attributes.periodStart,resolvedUri:attributes.baseUrl||'',targetDuration:attributes.duration,discontinuitySequence:discontinuitySequence,discontinuityStarts:discontinuityStarts,timelineStarts:attributes.timelineStarts,mediaSequence:mediaSequence,segments:segments};if(attributes.contentProtection){playlist.contentProtection=attributes.contentProtection;}if(attributes.serviceLocation){playlist.attributes.serviceLocation=attributes.serviceLocation;}if(sidx){playlist.sidx=sidx;}if(isAudioOnly){playlist.attributes.AUDIO='audio';playlist.attributes.SUBTITLES='subs';}return playlist;};var formatVttPlaylist=function formatVttPlaylist(_ref141){var attributes=_ref141.attributes,segments=_ref141.segments,mediaSequence=_ref141.mediaSequence,discontinuityStarts=_ref141.discontinuityStarts,discontinuitySequence=_ref141.discontinuitySequence;if(typeof segments==='undefined'){// vtt tracks may use single file in BaseURL
segments=[{uri:attributes.baseUrl,timeline:attributes.periodStart,resolvedUri:attributes.baseUrl||'',duration:attributes.sourceDuration,number:0}];// targetDuration should be the same duration as the only segment
attributes.duration=attributes.sourceDuration;}var m3u8Attributes=_defineProperty({NAME:attributes.id,BANDWIDTH:attributes.bandwidth},'PROGRAM-ID',1);if(attributes.codecs){m3u8Attributes.CODECS=attributes.codecs;}var vttPlaylist={attributes:m3u8Attributes,uri:'',endList:attributes.type==='static',timeline:attributes.periodStart,resolvedUri:attributes.baseUrl||'',targetDuration:attributes.duration,timelineStarts:attributes.timelineStarts,discontinuityStarts:discontinuityStarts,discontinuitySequence:discontinuitySequence,mediaSequence:mediaSequence,segments:segments};if(attributes.serviceLocation){vttPlaylist.attributes.serviceLocation=attributes.serviceLocation;}return vttPlaylist;};var organizeAudioPlaylists=function organizeAudioPlaylists(playlists){var sidxMapping=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var isAudioOnly=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var mainPlaylist;var formattedPlaylists=playlists.reduce(function(a,playlist){var role=playlist.attributes.role&&playlist.attributes.role.value||'';var language=playlist.attributes.lang||'';var label=playlist.attributes.label||'main';if(language&&!playlist.attributes.label){var roleLabel=role?" (".concat(role,")"):'';label="".concat(playlist.attributes.lang).concat(roleLabel);}if(!a[label]){a[label]={language:language,autoselect:true,default:role==='main',playlists:[],uri:''};}var formatted=addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist,isAudioOnly),sidxMapping);a[label].playlists.push(formatted);if(typeof mainPlaylist==='undefined'&&role==='main'){mainPlaylist=playlist;mainPlaylist.default=true;}return a;},{});// if no playlists have role "main", mark the first as main
if(!mainPlaylist){var firstLabel=Object.keys(formattedPlaylists)[0];formattedPlaylists[firstLabel].default=true;}return formattedPlaylists;};var organizeVttPlaylists=function organizeVttPlaylists(playlists){var sidxMapping=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return playlists.reduce(function(a,playlist){var label=playlist.attributes.label||playlist.attributes.lang||'text';if(!a[label]){a[label]={language:label,default:false,autoselect:false,playlists:[],uri:''};}a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist),sidxMapping));return a;},{});};var organizeCaptionServices=function organizeCaptionServices(captionServices){return captionServices.reduce(function(svcObj,svc){if(!svc){return svcObj;}svc.forEach(function(service){var channel=service.channel,language=service.language;svcObj[language]={autoselect:false,default:false,instreamId:channel,language:language};if(service.hasOwnProperty('aspectRatio')){svcObj[language].aspectRatio=service.aspectRatio;}if(service.hasOwnProperty('easyReader')){svcObj[language].easyReader=service.easyReader;}if(service.hasOwnProperty('3D')){svcObj[language]['3D']=service['3D'];}});return svcObj;},{});};var formatVideoPlaylist=function formatVideoPlaylist(_ref142){var attributes=_ref142.attributes,segments=_ref142.segments,sidx=_ref142.sidx,discontinuityStarts=_ref142.discontinuityStarts;var playlist={attributes:_defineProperty({NAME:attributes.id,AUDIO:'audio',SUBTITLES:'subs',RESOLUTION:{width:attributes.width,height:attributes.height},CODECS:attributes.codecs,BANDWIDTH:attributes.bandwidth},'PROGRAM-ID',1),uri:'',endList:attributes.type==='static',timeline:attributes.periodStart,resolvedUri:attributes.baseUrl||'',targetDuration:attributes.duration,discontinuityStarts:discontinuityStarts,timelineStarts:attributes.timelineStarts,segments:segments};if(attributes.frameRate){playlist.attributes['FRAME-RATE']=attributes.frameRate;}if(attributes.contentProtection){playlist.contentProtection=attributes.contentProtection;}if(attributes.serviceLocation){playlist.attributes.serviceLocation=attributes.serviceLocation;}if(sidx){playlist.sidx=sidx;}return playlist;};var videoOnly=function videoOnly(_ref143){var attributes=_ref143.attributes;return attributes.mimeType==='video/mp4'||attributes.mimeType==='video/webm'||attributes.contentType==='video';};var audioOnly=function audioOnly(_ref144){var attributes=_ref144.attributes;return attributes.mimeType==='audio/mp4'||attributes.mimeType==='audio/webm'||attributes.contentType==='audio';};var vttOnly=function vttOnly(_ref145){var attributes=_ref145.attributes;return attributes.mimeType==='text/vtt'||attributes.contentType==='text';};/**
       * Contains start and timeline properties denoting a timeline start. For DASH, these will
       * be the same number.
       *
       * @typedef {Object} TimelineStart
       * @property {number} start - the start time of the timeline
       * @property {number} timeline - the timeline number
       */ /**
       * Adds appropriate media and discontinuity sequence values to the segments and playlists.
       *
       * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a
       * DASH specific attribute used in constructing segment URI's from templates. However, from
       * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`
       * value, which should start at the original media sequence value (or 0) and increment by 1
       * for each segment thereafter. Since DASH's `startNumber` values are independent per
       * period, it doesn't make sense to use it for `number`. Instead, assume everything starts
       * from a 0 mediaSequence value and increment from there.
       *
       * Note that VHS currently doesn't use the `number` property, but it can be helpful for
       * debugging and making sense of the manifest.
       *
       * For live playlists, to account for values increasing in manifests when periods are
       * removed on refreshes, merging logic should be used to update the numbers to their
       * appropriate values (to ensure they're sequential and increasing).
       *
       * @param {Object[]} playlists - the playlists to update
       * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest
       */var addMediaSequenceValues=function addMediaSequenceValues(playlists,timelineStarts){// increment all segments sequentially
playlists.forEach(function(playlist){playlist.mediaSequence=0;playlist.discontinuitySequence=timelineStarts.findIndex(function(_ref146){var timeline=_ref146.timeline;return timeline===playlist.timeline;});if(!playlist.segments){return;}playlist.segments.forEach(function(segment,index){segment.number=index;});});};/**
       * Given a media group object, flattens all playlists within the media group into a single
       * array.
       *
       * @param {Object} mediaGroupObject - the media group object
       *
       * @return {Object[]}
       *         The media group playlists
       */var flattenMediaGroupPlaylists=function flattenMediaGroupPlaylists(mediaGroupObject){if(!mediaGroupObject){return[];}return Object.keys(mediaGroupObject).reduce(function(acc,label){var labelContents=mediaGroupObject[label];return acc.concat(labelContents.playlists);},[]);};var toM3u8=function toM3u8(_ref147){var _mediaGroups;var dashPlaylists=_ref147.dashPlaylists,locations=_ref147.locations,contentSteering=_ref147.contentSteering,_ref147$sidxMapping=_ref147.sidxMapping,sidxMapping=_ref147$sidxMapping===void 0?{}:_ref147$sidxMapping,previousManifest=_ref147.previousManifest,eventStream=_ref147.eventStream;if(!dashPlaylists.length){return{};}// grab all main manifest attributes
var _dashPlaylists$0$attr=dashPlaylists[0].attributes,duration=_dashPlaylists$0$attr.sourceDuration,type=_dashPlaylists$0$attr.type,suggestedPresentationDelay=_dashPlaylists$0$attr.suggestedPresentationDelay,minimumUpdatePeriod=_dashPlaylists$0$attr.minimumUpdatePeriod;var videoPlaylists=mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);var audioPlaylists=mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));var vttPlaylists=mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));var captions=dashPlaylists.map(function(playlist){return playlist.attributes.captionServices;}).filter(Boolean);var manifest={allowCache:true,discontinuityStarts:[],segments:[],endList:true,mediaGroups:(_mediaGroups={AUDIO:{},VIDEO:{}},_defineProperty(_mediaGroups,'CLOSED-CAPTIONS',{}),_defineProperty(_mediaGroups,"SUBTITLES",{}),_mediaGroups),uri:'',duration:duration,playlists:addSidxSegmentsToPlaylists(videoPlaylists,sidxMapping)};if(minimumUpdatePeriod>=0){manifest.minimumUpdatePeriod=minimumUpdatePeriod*1000;}if(locations){manifest.locations=locations;}if(contentSteering){manifest.contentSteering=contentSteering;}if(type==='dynamic'){manifest.suggestedPresentationDelay=suggestedPresentationDelay;}if(eventStream&&eventStream.length>0){manifest.eventStream=eventStream;}var isAudioOnly=manifest.playlists.length===0;var organizedAudioGroup=audioPlaylists.length?organizeAudioPlaylists(audioPlaylists,sidxMapping,isAudioOnly):null;var organizedVttGroup=vttPlaylists.length?organizeVttPlaylists(vttPlaylists,sidxMapping):null;var formattedPlaylists=videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup),flattenMediaGroupPlaylists(organizedVttGroup));var playlistTimelineStarts=formattedPlaylists.map(function(_ref148){var timelineStarts=_ref148.timelineStarts;return timelineStarts;});manifest.timelineStarts=getUniqueTimelineStarts(playlistTimelineStarts);addMediaSequenceValues(formattedPlaylists,manifest.timelineStarts);if(organizedAudioGroup){manifest.mediaGroups.AUDIO.audio=organizedAudioGroup;}if(organizedVttGroup){manifest.mediaGroups.SUBTITLES.subs=organizedVttGroup;}if(captions.length){manifest.mediaGroups['CLOSED-CAPTIONS'].cc=organizeCaptionServices(captions);}if(previousManifest){return positionManifestOnTimeline({oldManifest:previousManifest,newManifest:manifest});}return manifest;};/**
       * Calculates the R (repetition) value for a live stream (for the final segment
       * in a manifest where the r value is negative 1)
       *
       * @param {Object} attributes
       *        Object containing all inherited attributes from parent elements with attribute
       *        names as keys
       * @param {number} time
       *        current time (typically the total time up until the final segment)
       * @param {number} duration
       *        duration property for the given <S />
       *
       * @return {number}
       *        R value to reach the end of the given period
       */var getLiveRValue=function getLiveRValue(attributes,time,duration){var NOW=attributes.NOW,clientOffset=attributes.clientOffset,availabilityStartTime=attributes.availabilityStartTime,_attributes$timescale5=attributes.timescale,timescale=_attributes$timescale5===void 0?1:_attributes$timescale5,_attributes$periodSta2=attributes.periodStart,periodStart=_attributes$periodSta2===void 0?0:_attributes$periodSta2,_attributes$minimumUp2=attributes.minimumUpdatePeriod,minimumUpdatePeriod=_attributes$minimumUp2===void 0?0:_attributes$minimumUp2;var now=(NOW+clientOffset)/1000;var periodStartWC=availabilityStartTime+periodStart;var periodEndWC=now+minimumUpdatePeriod;var periodDuration=periodEndWC-periodStartWC;return Math.ceil((periodDuration*timescale-time)/duration);};/**
       * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment
       * timing and duration
       *
       * @param {Object} attributes
       *        Object containing all inherited attributes from parent elements with attribute
       *        names as keys
       * @param {Object[]} segmentTimeline
       *        List of objects representing the attributes of each S element contained within
       *
       * @return {{number: number, duration: number, time: number, timeline: number}[]}
       *         List of Objects with segment timing and duration info
       */var parseByTimeline=function parseByTimeline(attributes,segmentTimeline){var type=attributes.type,_attributes$minimumUp3=attributes.minimumUpdatePeriod,minimumUpdatePeriod=_attributes$minimumUp3===void 0?0:_attributes$minimumUp3,_attributes$media=attributes.media,media=_attributes$media===void 0?'':_attributes$media,sourceDuration=attributes.sourceDuration,_attributes$timescale6=attributes.timescale,timescale=_attributes$timescale6===void 0?1:_attributes$timescale6,_attributes$startNumb2=attributes.startNumber,startNumber=_attributes$startNumb2===void 0?1:_attributes$startNumb2,timeline=attributes.periodStart;var segments=[];var time=-1;for(var sIndex=0;sIndex<segmentTimeline.length;sIndex++){var _S=segmentTimeline[sIndex];var _duration2=_S.d;var repeat=_S.r||0;var segmentTime=_S.t||0;if(time<0){// first segment
time=segmentTime;}if(segmentTime&&segmentTime>time){// discontinuity
// TODO: How to handle this type of discontinuity
// timeline++ here would treat it like HLS discontuity and content would
// get appended without gap
// E.G.
//  <S t="0" d="1" />
//  <S d="1" />
//  <S d="1" />
//  <S t="5" d="1" />
// would have $Time$ values of [0, 1, 2, 5]
// should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)
// or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)
// does the value of sourceDuration consider this when calculating arbitrary
// negative @r repeat value?
// E.G. Same elements as above with this added at the end
//  <S d="1" r="-1" />
//  with a sourceDuration of 10
// Would the 2 gaps be included in the time duration calculations resulting in
// 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments
// with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?
time=segmentTime;}var count=void 0;if(repeat<0){var nextS=sIndex+1;if(nextS===segmentTimeline.length){// last segment
if(type==='dynamic'&&minimumUpdatePeriod>0&&media.indexOf('$Number$')>0){count=getLiveRValue(attributes,time,_duration2);}else{// TODO: This may be incorrect depending on conclusion of TODO above
count=(sourceDuration*timescale-time)/_duration2;}}else{count=(segmentTimeline[nextS].t-time)/_duration2;}}else{count=repeat+1;}var _end3=startNumber+segments.length+count;var number=startNumber+segments.length;while(number<_end3){segments.push({number:number,duration:_duration2/timescale,time:time,timeline:timeline});time+=_duration2;number++;}}return segments;};var identifierPattern=/\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;/**
       * Replaces template identifiers with corresponding values. To be used as the callback
       * for String.prototype.replace
       *
       * @name replaceCallback
       * @function
       * @param {string} match
       *        Entire match of identifier
       * @param {string} identifier
       *        Name of matched identifier
       * @param {string} format
       *        Format tag string. Its presence indicates that padding is expected
       * @param {string} width
       *        Desired length of the replaced value. Values less than this width shall be left
       *        zero padded
       * @return {string}
       *         Replacement for the matched identifier
       */ /**
       * Returns a function to be used as a callback for String.prototype.replace to replace
       * template identifiers
       *
       * @param {Obect} values
       *        Object containing values that shall be used to replace known identifiers
       * @param {number} values.RepresentationID
       *        Value of the Representation@id attribute
       * @param {number} values.Number
       *        Number of the corresponding segment
       * @param {number} values.Bandwidth
       *        Value of the Representation@bandwidth attribute.
       * @param {number} values.Time
       *        Timestamp value of the corresponding segment
       * @return {replaceCallback}
       *         Callback to be used with String.prototype.replace to replace identifiers
       */var identifierReplacement=function identifierReplacement(values){return function(match,identifier,format,width){if(match==='$$'){// escape sequence
return'$';}if(typeof values[identifier]==='undefined'){return match;}var value=''+values[identifier];if(identifier==='RepresentationID'){// Format tag shall not be present with RepresentationID
return value;}if(!format){width=1;}else{width=parseInt(width,10);}if(value.length>=width){return value;}return"".concat(new Array(width-value.length+1).join('0')).concat(value);};};/**
       * Constructs a segment url from a template string
       *
       * @param {string} url
       *        Template string to construct url from
       * @param {Obect} values
       *        Object containing values that shall be used to replace known identifiers
       * @param {number} values.RepresentationID
       *        Value of the Representation@id attribute
       * @param {number} values.Number
       *        Number of the corresponding segment
       * @param {number} values.Bandwidth
       *        Value of the Representation@bandwidth attribute.
       * @param {number} values.Time
       *        Timestamp value of the corresponding segment
       * @return {string}
       *         Segment url with identifiers replaced
       */var constructTemplateUrl=function constructTemplateUrl(url,values){return url.replace(identifierPattern,identifierReplacement(values));};/**
       * Generates a list of objects containing timing and duration information about each
       * segment needed to generate segment uris and the complete segment object
       *
       * @param {Object} attributes
       *        Object containing all inherited attributes from parent elements with attribute
       *        names as keys
       * @param {Object[]|undefined} segmentTimeline
       *        List of objects representing the attributes of each S element contained within
       *        the SegmentTimeline element
       * @return {{number: number, duration: number, time: number, timeline: number}[]}
       *         List of Objects with segment timing and duration info
       */var parseTemplateInfo=function parseTemplateInfo(attributes,segmentTimeline){if(!attributes.duration&&!segmentTimeline){// if neither @duration or SegmentTimeline are present, then there shall be exactly
// one media segment
return[{number:attributes.startNumber||1,duration:attributes.sourceDuration,time:0,timeline:attributes.periodStart}];}if(attributes.duration){return parseByDuration(attributes);}return parseByTimeline(attributes,segmentTimeline);};/**
       * Generates a list of segments using information provided by the SegmentTemplate element
       *
       * @param {Object} attributes
       *        Object containing all inherited attributes from parent elements with attribute
       *        names as keys
       * @param {Object[]|undefined} segmentTimeline
       *        List of objects representing the attributes of each S element contained within
       *        the SegmentTimeline element
       * @return {Object[]}
       *         List of segment objects
       */var segmentsFromTemplate=function segmentsFromTemplate(attributes,segmentTimeline){var templateValues={RepresentationID:attributes.id,Bandwidth:attributes.bandwidth||0};var _attributes$initializ2=attributes.initialization,initialization=_attributes$initializ2===void 0?{sourceURL:'',range:''}:_attributes$initializ2;var mapSegment=urlTypeToSegment({baseUrl:attributes.baseUrl,source:constructTemplateUrl(initialization.sourceURL,templateValues),range:initialization.range});var segments=parseTemplateInfo(attributes,segmentTimeline);return segments.map(function(segment){templateValues.Number=segment.number;templateValues.Time=segment.time;var uri=constructTemplateUrl(attributes.media||'',templateValues);// See DASH spec section 5.3.9.2.2
// - if timescale isn't present on any level, default to 1.
var timescale=attributes.timescale||1;// - if presentationTimeOffset isn't present on any level, default to 0
var presentationTimeOffset=attributes.presentationTimeOffset||0;var presentationTime=// Even if the @t attribute is not specified for the segment, segment.time is
// calculated in mpd-parser prior to this, so it's assumed to be available.
attributes.periodStart+(segment.time-presentationTimeOffset)/timescale;var map={uri:uri,timeline:segment.timeline,duration:segment.duration,resolvedUri:resolveUrl$1(attributes.baseUrl||'',uri),map:mapSegment,number:segment.number,presentationTime:presentationTime};return map;});};/**
       * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)
       * to an object that matches the output of a segment in videojs/mpd-parser
       *
       * @param {Object} attributes
       *   Object containing all inherited attributes from parent elements with attribute
       *   names as keys
       * @param {Object} segmentUrl
       *   <SegmentURL> node to translate into a segment object
       * @return {Object} translated segment object
       */var SegmentURLToSegmentObject=function SegmentURLToSegmentObject(attributes,segmentUrl){var baseUrl=attributes.baseUrl,_attributes$initializ3=attributes.initialization,initialization=_attributes$initializ3===void 0?{}:_attributes$initializ3;var initSegment=urlTypeToSegment({baseUrl:baseUrl,source:initialization.sourceURL,range:initialization.range});var segment=urlTypeToSegment({baseUrl:baseUrl,source:segmentUrl.media,range:segmentUrl.mediaRange});segment.map=initSegment;return segment;};/**
       * Generates a list of segments using information provided by the SegmentList element
       * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each
       * node should be translated into segment.
       *
       * @param {Object} attributes
       *   Object containing all inherited attributes from parent elements with attribute
       *   names as keys
       * @param {Object[]|undefined} segmentTimeline
       *        List of objects representing the attributes of each S element contained within
       *        the SegmentTimeline element
       * @return {Object.<Array>} list of segments
       */var segmentsFromList=function segmentsFromList(attributes,segmentTimeline){var duration=attributes.duration,_attributes$segmentUr=attributes.segmentUrls,segmentUrls=_attributes$segmentUr===void 0?[]:_attributes$segmentUr,periodStart=attributes.periodStart;// Per spec (5.3.9.2.1) no way to determine segment duration OR
// if both SegmentTimeline and @duration are defined, it is outside of spec.
if(!duration&&!segmentTimeline||duration&&segmentTimeline){throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);}var segmentUrlMap=segmentUrls.map(function(segmentUrlObject){return SegmentURLToSegmentObject(attributes,segmentUrlObject);});var segmentTimeInfo;if(duration){segmentTimeInfo=parseByDuration(attributes);}if(segmentTimeline){segmentTimeInfo=parseByTimeline(attributes,segmentTimeline);}var segments=segmentTimeInfo.map(function(segmentTime,index){if(segmentUrlMap[index]){var segment=segmentUrlMap[index];// See DASH spec section 5.3.9.2.2
// - if timescale isn't present on any level, default to 1.
var timescale=attributes.timescale||1;// - if presentationTimeOffset isn't present on any level, default to 0
var presentationTimeOffset=attributes.presentationTimeOffset||0;segment.timeline=segmentTime.timeline;segment.duration=segmentTime.duration;segment.number=segmentTime.number;segment.presentationTime=periodStart+(segmentTime.time-presentationTimeOffset)/timescale;return segment;}// Since we're mapping we should get rid of any blank segments (in case
// the given SegmentTimeline is handling for more elements than we have
// SegmentURLs for).
}).filter(function(segment){return segment;});return segments;};var generateSegments=function generateSegments(_ref149){var attributes=_ref149.attributes,segmentInfo=_ref149.segmentInfo;var segmentAttributes;var segmentsFn;if(segmentInfo.template){segmentsFn=segmentsFromTemplate;segmentAttributes=merge$2(attributes,segmentInfo.template);}else if(segmentInfo.base){segmentsFn=segmentsFromBase;segmentAttributes=merge$2(attributes,segmentInfo.base);}else if(segmentInfo.list){segmentsFn=segmentsFromList;segmentAttributes=merge$2(attributes,segmentInfo.list);}var segmentsInfo={attributes:attributes};if(!segmentsFn){return segmentsInfo;}var segments=segmentsFn(segmentAttributes,segmentInfo.segmentTimeline);// The @duration attribute will be used to determin the playlist's targetDuration which
// must be in seconds. Since we've generated the segment list, we no longer need
// @duration to be in @timescale units, so we can convert it here.
if(segmentAttributes.duration){var _segmentAttributes=segmentAttributes,_duration3=_segmentAttributes.duration,_segmentAttributes$ti=_segmentAttributes.timescale,timescale=_segmentAttributes$ti===void 0?1:_segmentAttributes$ti;segmentAttributes.duration=_duration3/timescale;}else if(segments.length){// if there is no @duration attribute, use the largest segment duration as
// as target duration
segmentAttributes.duration=segments.reduce(function(max,segment){return Math.max(max,Math.ceil(segment.duration));},0);}else{segmentAttributes.duration=0;}segmentsInfo.attributes=segmentAttributes;segmentsInfo.segments=segments;// This is a sidx box without actual segment information
if(segmentInfo.base&&segmentAttributes.indexRange){segmentsInfo.sidx=segments[0];segmentsInfo.segments=[];}return segmentsInfo;};var toPlaylists=function toPlaylists(representations){return representations.map(generateSegments);};var findChildren=function findChildren(element,name){return from(element.childNodes).filter(function(_ref150){var tagName=_ref150.tagName;return tagName===name;});};var getContent=function getContent(element){return element.textContent.trim();};/**
       * Converts the provided string that may contain a division operation to a number.
       *
       * @param {string} value - the provided string value
       *
       * @return {number} the parsed string value
       */var parseDivisionValue=function parseDivisionValue(value){return parseFloat(value.split('/').reduce(function(prev,current){return prev/current;}));};var parseDuration=function parseDuration(str){var SECONDS_IN_YEAR=365*24*60*60;var SECONDS_IN_MONTH=30*24*60*60;var SECONDS_IN_DAY=24*60*60;var SECONDS_IN_HOUR=60*60;var SECONDS_IN_MIN=60;// P10Y10M10DT10H10M10.1S
var durationRegex=/P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/;var match=durationRegex.exec(str);if(!match){return 0;}var _match$slice=match.slice(1),_match$slice2=_slicedToArray(_match$slice,6),year=_match$slice2[0],month=_match$slice2[1],day=_match$slice2[2],hour=_match$slice2[3],minute=_match$slice2[4],second=_match$slice2[5];return parseFloat(year||0)*SECONDS_IN_YEAR+parseFloat(month||0)*SECONDS_IN_MONTH+parseFloat(day||0)*SECONDS_IN_DAY+parseFloat(hour||0)*SECONDS_IN_HOUR+parseFloat(minute||0)*SECONDS_IN_MIN+parseFloat(second||0);};var parseDate=function parseDate(str){// Date format without timezone according to ISO 8601
// YYY-MM-DDThh:mm:ss.ssssss
var dateRegex=/^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;// If the date string does not specifiy a timezone, we must specifiy UTC. This is
// expressed by ending with 'Z'
if(dateRegex.test(str)){str+='Z';}return Date.parse(str);};var parsers={/**
         * Specifies the duration of the entire Media Presentation. Format is a duration string
         * as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The duration in seconds
         */mediaPresentationDuration:function mediaPresentationDuration(value){return parseDuration(value);},/**
         * Specifies the Segment availability start time for all Segments referred to in this
         * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability
         * time. Format is a date string as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The date as seconds from unix epoch
         */availabilityStartTime:function availabilityStartTime(value){return parseDate(value)/1000;},/**
         * Specifies the smallest period between potential changes to the MPD. Format is a
         * duration string as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The duration in seconds
         */minimumUpdatePeriod:function minimumUpdatePeriod(value){return parseDuration(value);},/**
         * Specifies the suggested presentation delay. Format is a
         * duration string as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The duration in seconds
         */suggestedPresentationDelay:function suggestedPresentationDelay(value){return parseDuration(value);},/**
         * specifices the type of mpd. Can be either "static" or "dynamic"
         *
         * @param {string} value
         *        value of attribute as a string
         *
         * @return {string}
         *         The type as a string
         */type:function type(value){return value;},/**
         * Specifies the duration of the smallest time shifting buffer for any Representation
         * in the MPD. Format is a duration string as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The duration in seconds
         */timeShiftBufferDepth:function timeShiftBufferDepth(value){return parseDuration(value);},/**
         * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.
         * Format is a duration string as specified in ISO 8601
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The duration in seconds
         */start:function start(value){return parseDuration(value);},/**
         * Specifies the width of the visual presentation
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed width
         */width:function width(value){return parseInt(value,10);},/**
         * Specifies the height of the visual presentation
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed height
         */height:function height(value){return parseInt(value,10);},/**
         * Specifies the bitrate of the representation
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed bandwidth
         */bandwidth:function bandwidth(value){return parseInt(value,10);},/**
         * Specifies the frame rate of the representation
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed frame rate
         */frameRate:function frameRate(value){return parseDivisionValue(value);},/**
         * Specifies the number of the first Media Segment in this Representation in the Period
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed number
         */startNumber:function startNumber(value){return parseInt(value,10);},/**
         * Specifies the timescale in units per seconds
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed timescale
         */timescale:function timescale(value){return parseInt(value,10);},/**
         * Specifies the presentationTimeOffset.
         *
         * @param {string} value
         *        value of the attribute as a string
         *
         * @return {number}
         *         The parsed presentationTimeOffset
         */presentationTimeOffset:function presentationTimeOffset(value){return parseInt(value,10);},/**
         * Specifies the constant approximate Segment duration
         * NOTE: The <Period> element also contains an @duration attribute. This duration
         *       specifies the duration of the Period. This attribute is currently not
         *       supported by the rest of the parser, however we still check for it to prevent
         *       errors.
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed duration
         */duration:function duration(value){var parsedValue=parseInt(value,10);if(isNaN(parsedValue)){return parseDuration(value);}return parsedValue;},/**
         * Specifies the Segment duration, in units of the value of the @timescale.
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed duration
         */d:function d(value){return parseInt(value,10);},/**
         * Specifies the MPD start time, in @timescale units, the first Segment in the series
         * starts relative to the beginning of the Period
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed time
         */t:function t(value){return parseInt(value,10);},/**
         * Specifies the repeat count of the number of following contiguous Segments with the
         * same duration expressed by the value of @d
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {number}
         *         The parsed number
         */r:function r(value){return parseInt(value,10);},/**
         * Specifies the presentationTime.
         *
         * @param {string} value
         *        value of the attribute as a string
         *
         * @return {number}
         *         The parsed presentationTime
         */presentationTime:function presentationTime(value){return parseInt(value,10);},/**
         * Default parser for all other attributes. Acts as a no-op and just returns the value
         * as a string
         *
         * @param {string} value
         *        value of attribute as a string
         * @return {string}
         *         Unparsed value
         */DEFAULT:function DEFAULT(value){return value;}};/**
       * Gets all the attributes and values of the provided node, parses attributes with known
       * types, and returns an object with attribute names mapped to values.
       *
       * @param {Node} el
       *        The node to parse attributes from
       * @return {Object}
       *         Object with all attributes of el parsed
       */var parseAttributes=function parseAttributes(el){if(!(el&&el.attributes)){return{};}return from(el.attributes).reduce(function(a,e){var parseFn=parsers[e.name]||parsers.DEFAULT;a[e.name]=parseFn(e.value);return a;},{});};var keySystemsMap={'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b':'org.w3.clearkey','urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed':'com.widevine.alpha','urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95':'com.microsoft.playready','urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb':'com.adobe.primetime',// ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme
'urn:mpeg:dash:mp4protection:2011':'mp4protection'};/**
       * Builds a list of urls that is the product of the reference urls and BaseURL values
       *
       * @param {Object[]} references
       *        List of objects containing the reference URL as well as its attributes
       * @param {Node[]} baseUrlElements
       *        List of BaseURL nodes from the mpd
       * @return {Object[]}
       *         List of objects with resolved urls and attributes
       */var buildBaseUrls=function buildBaseUrls(references,baseUrlElements){if(!baseUrlElements.length){return references;}return flatten(references.map(function(reference){return baseUrlElements.map(function(baseUrlElement){var initialBaseUrl=getContent(baseUrlElement);var resolvedBaseUrl=resolveUrl$1(reference.baseUrl,initialBaseUrl);var finalBaseUrl=merge$2(parseAttributes(baseUrlElement),{baseUrl:resolvedBaseUrl});// If the URL is resolved, we want to get the serviceLocation from the reference
// assuming there is no serviceLocation on the initialBaseUrl
if(resolvedBaseUrl!==initialBaseUrl&&!finalBaseUrl.serviceLocation&&reference.serviceLocation){finalBaseUrl.serviceLocation=reference.serviceLocation;}return finalBaseUrl;});}));};/**
       * Contains all Segment information for its containing AdaptationSet
       *
       * @typedef {Object} SegmentInformation
       * @property {Object|undefined} template
       *           Contains the attributes for the SegmentTemplate node
       * @property {Object[]|undefined} segmentTimeline
       *           Contains a list of atrributes for each S node within the SegmentTimeline node
       * @property {Object|undefined} list
       *           Contains the attributes for the SegmentList node
       * @property {Object|undefined} base
       *           Contains the attributes for the SegmentBase node
       */ /**
       * Returns all available Segment information contained within the AdaptationSet node
       *
       * @param {Node} adaptationSet
       *        The AdaptationSet node to get Segment information from
       * @return {SegmentInformation}
       *         The Segment information contained within the provided AdaptationSet
       */var getSegmentInformation=function getSegmentInformation(adaptationSet){var segmentTemplate=findChildren(adaptationSet,'SegmentTemplate')[0];var segmentList=findChildren(adaptationSet,'SegmentList')[0];var segmentUrls=segmentList&&findChildren(segmentList,'SegmentURL').map(function(s){return merge$2({tag:'SegmentURL'},parseAttributes(s));});var segmentBase=findChildren(adaptationSet,'SegmentBase')[0];var segmentTimelineParentNode=segmentList||segmentTemplate;var segmentTimeline=segmentTimelineParentNode&&findChildren(segmentTimelineParentNode,'SegmentTimeline')[0];var segmentInitializationParentNode=segmentList||segmentBase||segmentTemplate;var segmentInitialization=segmentInitializationParentNode&&findChildren(segmentInitializationParentNode,'Initialization')[0];// SegmentTemplate is handled slightly differently, since it can have both
// @initialization and an <Initialization> node.  @initialization can be templated,
// while the node can have a url and range specified.  If the <SegmentTemplate> has
// both @initialization and an <Initialization> subelement we opt to override with
// the node, as this interaction is not defined in the spec.
var template=segmentTemplate&&parseAttributes(segmentTemplate);if(template&&segmentInitialization){template.initialization=segmentInitialization&&parseAttributes(segmentInitialization);}else if(template&&template.initialization){// If it is @initialization we convert it to an object since this is the format that
// later functions will rely on for the initialization segment.  This is only valid
// for <SegmentTemplate>
template.initialization={sourceURL:template.initialization};}var segmentInfo={template:template,segmentTimeline:segmentTimeline&&findChildren(segmentTimeline,'S').map(function(s){return parseAttributes(s);}),list:segmentList&&merge$2(parseAttributes(segmentList),{segmentUrls:segmentUrls,initialization:parseAttributes(segmentInitialization)}),base:segmentBase&&merge$2(parseAttributes(segmentBase),{initialization:parseAttributes(segmentInitialization)})};Object.keys(segmentInfo).forEach(function(key){if(!segmentInfo[key]){delete segmentInfo[key];}});return segmentInfo;};/**
       * Contains Segment information and attributes needed to construct a Playlist object
       * from a Representation
       *
       * @typedef {Object} RepresentationInformation
       * @property {SegmentInformation} segmentInfo
       *           Segment information for this Representation
       * @property {Object} attributes
       *           Inherited attributes for this Representation
       */ /**
       * Maps a Representation node to an object containing Segment information and attributes
       *
       * @name inheritBaseUrlsCallback
       * @function
       * @param {Node} representation
       *        Representation node from the mpd
       * @return {RepresentationInformation}
       *         Representation information needed to construct a Playlist object
       */ /**
       * Returns a callback for Array.prototype.map for mapping Representation nodes to
       * Segment information and attributes using inherited BaseURL nodes.
       *
       * @param {Object} adaptationSetAttributes
       *        Contains attributes inherited by the AdaptationSet
       * @param {Object[]} adaptationSetBaseUrls
       *        List of objects containing resolved base URLs and attributes
       *        inherited by the AdaptationSet
       * @param {SegmentInformation} adaptationSetSegmentInfo
       *        Contains Segment information for the AdaptationSet
       * @return {inheritBaseUrlsCallback}
       *         Callback map function
       */var inheritBaseUrls=function inheritBaseUrls(adaptationSetAttributes,adaptationSetBaseUrls,adaptationSetSegmentInfo){return function(representation){var repBaseUrlElements=findChildren(representation,'BaseURL');var repBaseUrls=buildBaseUrls(adaptationSetBaseUrls,repBaseUrlElements);var attributes=merge$2(adaptationSetAttributes,parseAttributes(representation));var representationSegmentInfo=getSegmentInformation(representation);return repBaseUrls.map(function(baseUrl){return{segmentInfo:merge$2(adaptationSetSegmentInfo,representationSegmentInfo),attributes:merge$2(attributes,baseUrl)};});};};/**
       * Tranforms a series of content protection nodes to
       * an object containing pssh data by key system
       *
       * @param {Node[]} contentProtectionNodes
       *        Content protection nodes
       * @return {Object}
       *        Object containing pssh data by key system
       */var generateKeySystemInformation=function generateKeySystemInformation(contentProtectionNodes){return contentProtectionNodes.reduce(function(acc,node){var attributes=parseAttributes(node);// Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated
// as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system
// UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do
// .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).
if(attributes.schemeIdUri){attributes.schemeIdUri=attributes.schemeIdUri.toLowerCase();}var keySystem=keySystemsMap[attributes.schemeIdUri];if(keySystem){acc[keySystem]={attributes:attributes};var psshNode=findChildren(node,'cenc:pssh')[0];if(psshNode){var pssh=getContent(psshNode);acc[keySystem].pssh=pssh&&decodeB64ToUint8Array(pssh);}}return acc;},{});};// defined in ANSI_SCTE 214-1 2016
var parseCaptionServiceMetadata=function parseCaptionServiceMetadata(service){// 608 captions
if(service.schemeIdUri==='urn:scte:dash:cc:cea-608:2015'){var _values2=typeof service.value!=='string'?[]:service.value.split(';');return _values2.map(function(value){var channel;var language;// default language to value
language=value;if(/^CC\d=/.test(value)){var _value$split=value.split('=');var _value$split2=_slicedToArray(_value$split,2);channel=_value$split2[0];language=_value$split2[1];}else if(/^CC\d$/.test(value)){channel=value;}return{channel:channel,language:language};});}else if(service.schemeIdUri==='urn:scte:dash:cc:cea-708:2015'){var _values3=typeof service.value!=='string'?[]:service.value.split(';');return _values3.map(function(value){var flags={// service or channel number 1-63
'channel':undefined,// language is a 3ALPHA per ISO 639.2/B
// field is required
'language':undefined,// BIT 1/0 or ?
// default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown
'aspectRatio':1,// BIT 1/0
// easy reader flag indicated the text is tailed to the needs of beginning readers
// default 0, or off
'easyReader':0,// BIT 1/0
// If 3d metadata is present (CEA-708.1) then 1
// default 0
'3D':0};if(/=/.test(value)){var _value$split3=value.split('='),_value$split4=_slicedToArray(_value$split3,2),channel=_value$split4[0],_value$split4$=_value$split4[1],opts=_value$split4$===void 0?'':_value$split4$;flags.channel=channel;flags.language=value;opts.split(',').forEach(function(opt){var _opt$split=opt.split(':'),_opt$split2=_slicedToArray(_opt$split,2),name=_opt$split2[0],val=_opt$split2[1];if(name==='lang'){flags.language=val;// er for easyReadery
}else if(name==='er'){flags.easyReader=Number(val);// war for wide aspect ratio
}else if(name==='war'){flags.aspectRatio=Number(val);}else if(name==='3D'){flags['3D']=Number(val);}});}else{flags.language=value;}if(flags.channel){flags.channel='SERVICE'+flags.channel;}return flags;});}};/**
       * A map callback that will parse all event stream data for a collection of periods
       * DASH ISO_IEC_23009 5.10.2.2
       * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing
       *
       * @param {PeriodInformation} period object containing necessary period information
       * @return a collection of parsed eventstream event objects
       */var toEventStream=function toEventStream(period){// get and flatten all EventStreams tags and parse attributes and children
return flatten(findChildren(period.node,'EventStream').map(function(eventStream){var eventStreamAttributes=parseAttributes(eventStream);var schemeIdUri=eventStreamAttributes.schemeIdUri;// find all Events per EventStream tag and map to return objects
return findChildren(eventStream,'Event').map(function(event){var eventAttributes=parseAttributes(event);var presentationTime=eventAttributes.presentationTime||0;var timescale=eventStreamAttributes.timescale||1;var duration=eventAttributes.duration||0;var start=presentationTime/timescale+period.attributes.start;return{schemeIdUri:schemeIdUri,value:eventStreamAttributes.value,id:eventAttributes.id,start:start,end:start+duration/timescale,messageData:getContent(event)||eventAttributes.messageData,contentEncoding:eventStreamAttributes.contentEncoding,presentationTimeOffset:eventStreamAttributes.presentationTimeOffset||0};});}));};/**
       * Maps an AdaptationSet node to a list of Representation information objects
       *
       * @name toRepresentationsCallback
       * @function
       * @param {Node} adaptationSet
       *        AdaptationSet node from the mpd
       * @return {RepresentationInformation[]}
       *         List of objects containing Representaion information
       */ /**
       * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of
       * Representation information objects
       *
       * @param {Object} periodAttributes
       *        Contains attributes inherited by the Period
       * @param {Object[]} periodBaseUrls
       *        Contains list of objects with resolved base urls and attributes
       *        inherited by the Period
       * @param {string[]} periodSegmentInfo
       *        Contains Segment Information at the period level
       * @return {toRepresentationsCallback}
       *         Callback map function
       */var toRepresentations=function toRepresentations(periodAttributes,periodBaseUrls,periodSegmentInfo){return function(adaptationSet){var adaptationSetAttributes=parseAttributes(adaptationSet);var adaptationSetBaseUrls=buildBaseUrls(periodBaseUrls,findChildren(adaptationSet,'BaseURL'));var role=findChildren(adaptationSet,'Role')[0];var roleAttributes={role:parseAttributes(role)};var attrs=merge$2(periodAttributes,adaptationSetAttributes,roleAttributes);var accessibility=findChildren(adaptationSet,'Accessibility')[0];var captionServices=parseCaptionServiceMetadata(parseAttributes(accessibility));if(captionServices){attrs=merge$2(attrs,{captionServices:captionServices});}var label=findChildren(adaptationSet,'Label')[0];if(label&&label.childNodes.length){var labelVal=label.childNodes[0].nodeValue.trim();attrs=merge$2(attrs,{label:labelVal});}var contentProtection=generateKeySystemInformation(findChildren(adaptationSet,'ContentProtection'));if(Object.keys(contentProtection).length){attrs=merge$2(attrs,{contentProtection:contentProtection});}var segmentInfo=getSegmentInformation(adaptationSet);var representations=findChildren(adaptationSet,'Representation');var adaptationSetSegmentInfo=merge$2(periodSegmentInfo,segmentInfo);return flatten(representations.map(inheritBaseUrls(attrs,adaptationSetBaseUrls,adaptationSetSegmentInfo)));};};/**
       * Contains all period information for mapping nodes onto adaptation sets.
       *
       * @typedef {Object} PeriodInformation
       * @property {Node} period.node
       *           Period node from the mpd
       * @property {Object} period.attributes
       *           Parsed period attributes from node plus any added
       */ /**
       * Maps a PeriodInformation object to a list of Representation information objects for all
       * AdaptationSet nodes contained within the Period.
       *
       * @name toAdaptationSetsCallback
       * @function
       * @param {PeriodInformation} period
       *        Period object containing necessary period information
       * @param {number} periodStart
       *        Start time of the Period within the mpd
       * @return {RepresentationInformation[]}
       *         List of objects containing Representaion information
       */ /**
       * Returns a callback for Array.prototype.map for mapping Period nodes to a list of
       * Representation information objects
       *
       * @param {Object} mpdAttributes
       *        Contains attributes inherited by the mpd
        * @param {Object[]} mpdBaseUrls
       *        Contains list of objects with resolved base urls and attributes
       *        inherited by the mpd
       * @return {toAdaptationSetsCallback}
       *         Callback map function
       */var toAdaptationSets=function toAdaptationSets(mpdAttributes,mpdBaseUrls){return function(period,index){var periodBaseUrls=buildBaseUrls(mpdBaseUrls,findChildren(period.node,'BaseURL'));var periodAttributes=merge$2(mpdAttributes,{periodStart:period.attributes.start});if(typeof period.attributes.duration==='number'){periodAttributes.periodDuration=period.attributes.duration;}var adaptationSets=findChildren(period.node,'AdaptationSet');var periodSegmentInfo=getSegmentInformation(period.node);return flatten(adaptationSets.map(toRepresentations(periodAttributes,periodBaseUrls,periodSegmentInfo)));};};/**
       * Tranforms an array of content steering nodes into an object
       * containing CDN content steering information from the MPD manifest.
       *
       * For more information on the DASH spec for Content Steering parsing, see:
       * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf
       *
       * @param {Node[]} contentSteeringNodes
       *        Content steering nodes
       * @param {Function} eventHandler
       *        The event handler passed into the parser options to handle warnings
       * @return {Object}
       *        Object containing content steering data
       */var generateContentSteeringInformation=function generateContentSteeringInformation(contentSteeringNodes,eventHandler){// If there are more than one ContentSteering tags, throw an error
if(contentSteeringNodes.length>1){eventHandler({type:'warn',message:'The MPD manifest should contain no more than one ContentSteering tag'});}// Return a null value if there are no ContentSteering tags
if(!contentSteeringNodes.length){return null;}var infoFromContentSteeringTag=merge$2({serverURL:getContent(contentSteeringNodes[0])},parseAttributes(contentSteeringNodes[0]));// Converts `queryBeforeStart` to a boolean, as well as setting the default value
// to `false` if it doesn't exist
infoFromContentSteeringTag.queryBeforeStart=infoFromContentSteeringTag.queryBeforeStart==='true';return infoFromContentSteeringTag;};/**
       * Gets Period@start property for a given period.
       *
       * @param {Object} options
       *        Options object
       * @param {Object} options.attributes
       *        Period attributes
       * @param {Object} [options.priorPeriodAttributes]
       *        Prior period attributes (if prior period is available)
       * @param {string} options.mpdType
       *        The MPD@type these periods came from
       * @return {number|null}
       *         The period start, or null if it's an early available period or error
       */var getPeriodStart=function getPeriodStart(_ref151){var attributes=_ref151.attributes,priorPeriodAttributes=_ref151.priorPeriodAttributes,mpdType=_ref151.mpdType;// Summary of period start time calculation from DASH spec section 5.3.2.1
//
// A period's start is the first period's start + time elapsed after playing all
// prior periods to this one. Periods continue one after the other in time (without
// gaps) until the end of the presentation.
//
// The value of Period@start should be:
// 1. if Period@start is present: value of Period@start
// 2. if previous period exists and it has @duration: previous Period@start +
//    previous Period@duration
// 3. if this is first period and MPD@type is 'static': 0
// 4. in all other cases, consider the period an "early available period" (note: not
//    currently supported)
// (1)
if(typeof attributes.start==='number'){return attributes.start;}// (2)
if(priorPeriodAttributes&&typeof priorPeriodAttributes.start==='number'&&typeof priorPeriodAttributes.duration==='number'){return priorPeriodAttributes.start+priorPeriodAttributes.duration;}// (3)
if(!priorPeriodAttributes&&mpdType==='static'){return 0;}// (4)
// There is currently no logic for calculating the Period@start value if there is
// no Period@start or prior Period@start and Period@duration available. This is not made
// explicit by the DASH interop guidelines or the DASH spec, however, since there's
// nothing about any other resolution strategies, it's implied. Thus, this case should
// be considered an early available period, or error, and null should suffice for both
// of those cases.
return null;};/**
       * Traverses the mpd xml tree to generate a list of Representation information objects
       * that have inherited attributes from parent nodes
       *
       * @param {Node} mpd
       *        The root node of the mpd
       * @param {Object} options
       *        Available options for inheritAttributes
       * @param {string} options.manifestUri
       *        The uri source of the mpd
       * @param {number} options.NOW
       *        Current time per DASH IOP.  Default is current time in ms since epoch
       * @param {number} options.clientOffset
       *        Client time difference from NOW (in milliseconds)
       * @return {RepresentationInformation[]}
       *         List of objects containing Representation information
       */var inheritAttributes=function inheritAttributes(mpd){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$manifestUri=options.manifestUri,manifestUri=_options$manifestUri===void 0?'':_options$manifestUri,_options$NOW=options.NOW,NOW=_options$NOW===void 0?Date.now():_options$NOW,_options$clientOffset=options.clientOffset,clientOffset=_options$clientOffset===void 0?0:_options$clientOffset,_options$eventHandler=options.eventHandler,eventHandler=_options$eventHandler===void 0?function(){}:_options$eventHandler;var periodNodes=findChildren(mpd,'Period');if(!periodNodes.length){throw new Error(errors.INVALID_NUMBER_OF_PERIOD);}var locations=findChildren(mpd,'Location');var mpdAttributes=parseAttributes(mpd);var mpdBaseUrls=buildBaseUrls([{baseUrl:manifestUri}],findChildren(mpd,'BaseURL'));var contentSteeringNodes=findChildren(mpd,'ContentSteering');// See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.
mpdAttributes.type=mpdAttributes.type||'static';mpdAttributes.sourceDuration=mpdAttributes.mediaPresentationDuration||0;mpdAttributes.NOW=NOW;mpdAttributes.clientOffset=clientOffset;if(locations.length){mpdAttributes.locations=locations.map(getContent);}var periods=[];// Since toAdaptationSets acts on individual periods right now, the simplest approach to
// adding properties that require looking at prior periods is to parse attributes and add
// missing ones before toAdaptationSets is called. If more such properties are added, it
// may be better to refactor toAdaptationSets.
periodNodes.forEach(function(node,index){var attributes=parseAttributes(node);// Use the last modified prior period, as it may contain added information necessary
// for this period.
var priorPeriod=periods[index-1];attributes.start=getPeriodStart({attributes:attributes,priorPeriodAttributes:priorPeriod?priorPeriod.attributes:null,mpdType:mpdAttributes.type});periods.push({node:node,attributes:attributes});});return{locations:mpdAttributes.locations,contentSteeringInfo:generateContentSteeringInformation(contentSteeringNodes,eventHandler),// TODO: There are occurences where this `representationInfo` array contains undesired
// duplicates. This generally occurs when there are multiple BaseURL nodes that are
// direct children of the MPD node. When we attempt to resolve URLs from a combination of the
// parent BaseURL and a child BaseURL, and the value does not resolve,
// we end up returning the child BaseURL multiple times.
// We need to determine a way to remove these duplicates in a safe way.
// See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527
representationInfo:flatten(periods.map(toAdaptationSets(mpdAttributes,mpdBaseUrls))),eventStream:flatten(periods.map(toEventStream))};};var stringToMpdXml=function stringToMpdXml(manifestString){if(manifestString===''){throw new Error(errors.DASH_EMPTY_MANIFEST);}var parser=new DOMParser();var xml;var mpd;try{xml=parser.parseFromString(manifestString,'application/xml');mpd=xml&&xml.documentElement.tagName==='MPD'?xml.documentElement:null;}catch(e){// ie 11 throws on invalid xml
}if(!mpd||mpd&&mpd.getElementsByTagName('parsererror').length>0){throw new Error(errors.DASH_INVALID_XML);}return mpd;};/**
       * Parses the manifest for a UTCTiming node, returning the nodes attributes if found
       *
       * @param {string} mpd
       *        XML string of the MPD manifest
       * @return {Object|null}
       *         Attributes of UTCTiming node specified in the manifest. Null if none found
       */var parseUTCTimingScheme=function parseUTCTimingScheme(mpd){var UTCTimingNode=findChildren(mpd,'UTCTiming')[0];if(!UTCTimingNode){return null;}var attributes=parseAttributes(UTCTimingNode);switch(attributes.schemeIdUri){case'urn:mpeg:dash:utc:http-head:2014':case'urn:mpeg:dash:utc:http-head:2012':attributes.method='HEAD';break;case'urn:mpeg:dash:utc:http-xsdate:2014':case'urn:mpeg:dash:utc:http-iso:2014':case'urn:mpeg:dash:utc:http-xsdate:2012':case'urn:mpeg:dash:utc:http-iso:2012':attributes.method='GET';break;case'urn:mpeg:dash:utc:direct:2014':case'urn:mpeg:dash:utc:direct:2012':attributes.method='DIRECT';attributes.value=Date.parse(attributes.value);break;case'urn:mpeg:dash:utc:http-ntp:2014':case'urn:mpeg:dash:utc:ntp:2014':case'urn:mpeg:dash:utc:sntp:2014':default:throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);}return attributes;};/*
       * Given a DASH manifest string and options, parses the DASH manifest into an object in the
       * form outputed by m3u8-parser and accepted by videojs/http-streaming.
       *
       * For live DASH manifests, if `previousManifest` is provided in options, then the newly
       * parsed DASH manifest will have its media sequence and discontinuity sequence values
       * updated to reflect its position relative to the prior manifest.
       *
       * @param {string} manifestString - the DASH manifest as a string
       * @param {options} [options] - any options
       *
       * @return {Object} the manifest object
       */var parse=function parse(manifestString){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var parsedManifestInfo=inheritAttributes(stringToMpdXml(manifestString),options);var playlists=toPlaylists(parsedManifestInfo.representationInfo);return toM3u8({dashPlaylists:playlists,locations:parsedManifestInfo.locations,contentSteering:parsedManifestInfo.contentSteeringInfo,sidxMapping:options.sidxMapping,previousManifest:options.previousManifest,eventStream:parsedManifestInfo.eventStream});};/**
       * Parses the manifest for a UTCTiming node, returning the nodes attributes if found
       *
       * @param {string} manifestString
       *        XML string of the MPD manifest
       * @return {Object|null}
       *         Attributes of UTCTiming node specified in the manifest. Null if none found
       */var parseUTCTiming=function parseUTCTiming(manifestString){return parseUTCTimingScheme(stringToMpdXml(manifestString));};var MAX_UINT32=Math.pow(2,32);var getUint64$1=function getUint64$1(uint8){var dv=new DataView(uint8.buffer,uint8.byteOffset,uint8.byteLength);var value;if(dv.getBigUint64){value=dv.getBigUint64(0);if(value<Number.MAX_SAFE_INTEGER){return Number(value);}return value;}return dv.getUint32(0)*MAX_UINT32+dv.getUint32(4);};var numbers={getUint64:getUint64$1,MAX_UINT32:MAX_UINT32};var getUint64=numbers.getUint64;var parseSidx=function parseSidx(data){var view=new DataView(data.buffer,data.byteOffset,data.byteLength),result={version:data[0],flags:new Uint8Array(data.subarray(1,4)),references:[],referenceId:view.getUint32(4),timescale:view.getUint32(8)},i=12;if(result.version===0){result.earliestPresentationTime=view.getUint32(i);result.firstOffset=view.getUint32(i+4);i+=8;}else{// read 64 bits
result.earliestPresentationTime=getUint64(data.subarray(i));result.firstOffset=getUint64(data.subarray(i+8));i+=16;}i+=2;// reserved
var referenceCount=view.getUint16(i);i+=2;// start of references
for(;referenceCount>0;i+=12,referenceCount--){result.references.push({referenceType:(data[i]&0x80)>>>7,referencedSize:view.getUint32(i)&0x7FFFFFFF,subsegmentDuration:view.getUint32(i+4),startsWithSap:!!(data[i+8]&0x80),sapType:(data[i+8]&0x70)>>>4,sapDeltaTime:view.getUint32(i+8)&0x0FFFFFFF});}return result;};var parseSidx_1=parseSidx;var ID3=toUint8([0x49,0x44,0x33]);var getId3Size=function getId3Size(bytes,offset){if(offset===void 0){offset=0;}bytes=toUint8(bytes);var flags=bytes[offset+5];var returnSize=bytes[offset+6]<<21|bytes[offset+7]<<14|bytes[offset+8]<<7|bytes[offset+9];var footerPresent=(flags&16)>>4;if(footerPresent){return returnSize+20;}return returnSize+10;};var getId3Offset=function getId3Offset(bytes,offset){if(offset===void 0){offset=0;}bytes=toUint8(bytes);if(bytes.length-offset<10||!bytesMatch(bytes,ID3,{offset:offset})){return offset;}offset+=getId3Size(bytes,offset);// recursive check for id3 tags as some files
// have multiple ID3 tag sections even though
// they should not.
return getId3Offset(bytes,offset);};var normalizePath$1=function normalizePath(path){if(typeof path==='string'){return stringToBytes(path);}if(typeof path==='number'){return path;}return path;};var normalizePaths$1=function normalizePaths(paths){if(!Array.isArray(paths)){return[normalizePath$1(paths)];}return paths.map(function(p){return normalizePath$1(p);});};/**
       * find any number of boxes by name given a path to it in an iso bmff
       * such as mp4.
       *
       * @param {TypedArray} bytes
       *        bytes for the iso bmff to search for boxes in
       *
       * @param {Uint8Array[]|string[]|string|Uint8Array} name
       *        An array of paths or a single path representing the name
       *        of boxes to search through in bytes. Paths may be
       *        uint8 (character codes) or strings.
       *
       * @param {boolean} [complete=false]
       *        Should we search only for complete boxes on the final path.
       *        This is very useful when you do not want to get back partial boxes
       *        in the case of streaming files.
       *
       * @return {Uint8Array[]}
       *         An array of the end paths that we found.
       */var findBox=function findBox(bytes,paths,complete){if(complete===void 0){complete=false;}paths=normalizePaths$1(paths);bytes=toUint8(bytes);var results=[];if(!paths.length){// short-circuit the search for empty paths
return results;}var i=0;while(i<bytes.length){var size=(bytes[i]<<24|bytes[i+1]<<16|bytes[i+2]<<8|bytes[i+3])>>>0;var type=bytes.subarray(i+4,i+8);// invalid box format.
if(size===0){break;}var end=i+size;if(end>bytes.length){// this box is bigger than the number of bytes we have
// and complete is set, we cannot find any more boxes.
if(complete){break;}end=bytes.length;}var data=bytes.subarray(i+8,end);if(bytesMatch(type,paths[0])){if(paths.length===1){// this is the end of the path and we've found the box we were
// looking for
results.push(data);}else{// recursively search for the next box along the path
results.push.apply(results,findBox(data,paths.slice(1),complete));}}i=end;}// we've finished searching all of bytes
return results;};// https://matroska-org.github.io/libebml/specs.html
// https://www.matroska.org/technical/elements.html
// https://www.webmproject.org/docs/container/
var EBML_TAGS={EBML:toUint8([0x1A,0x45,0xDF,0xA3]),DocType:toUint8([0x42,0x82]),Segment:toUint8([0x18,0x53,0x80,0x67]),SegmentInfo:toUint8([0x15,0x49,0xA9,0x66]),Tracks:toUint8([0x16,0x54,0xAE,0x6B]),Track:toUint8([0xAE]),TrackNumber:toUint8([0xd7]),DefaultDuration:toUint8([0x23,0xe3,0x83]),TrackEntry:toUint8([0xAE]),TrackType:toUint8([0x83]),FlagDefault:toUint8([0x88]),CodecID:toUint8([0x86]),CodecPrivate:toUint8([0x63,0xA2]),VideoTrack:toUint8([0xe0]),AudioTrack:toUint8([0xe1]),// Not used yet, but will be used for live webm/mkv
// see https://www.matroska.org/technical/basics.html#block-structure
// see https://www.matroska.org/technical/basics.html#simpleblock-structure
Cluster:toUint8([0x1F,0x43,0xB6,0x75]),Timestamp:toUint8([0xE7]),TimestampScale:toUint8([0x2A,0xD7,0xB1]),BlockGroup:toUint8([0xA0]),BlockDuration:toUint8([0x9B]),Block:toUint8([0xA1]),SimpleBlock:toUint8([0xA3])};/**
       * This is a simple table to determine the length
       * of things in ebml. The length is one based (starts at 1,
       * rather than zero) and for every zero bit before a one bit
       * we add one to length. We also need this table because in some
       * case we have to xor all the length bits from another value.
       */var LENGTH_TABLE=[128,64,32,16,8,4,2,1];var getLength=function getLength(byte){var len=1;for(var i=0;i<LENGTH_TABLE.length;i++){if(byte&LENGTH_TABLE[i]){break;}len++;}return len;};// length in ebml is stored in the first 4 to 8 bits
// of the first byte. 4 for the id length and 8 for the
// data size length. Length is measured by converting the number to binary
// then 1 + the number of zeros before a 1 is encountered starting
// from the left.
var getvint=function getvint(bytes,offset,removeLength,signed){if(removeLength===void 0){removeLength=true;}if(signed===void 0){signed=false;}var length=getLength(bytes[offset]);var valueBytes=bytes.subarray(offset,offset+length);// NOTE that we do **not** subarray here because we need to copy these bytes
// as they will be modified below to remove the dataSizeLen bits and we do not
// want to modify the original data. normally we could just call slice on
// uint8array but ie 11 does not support that...
if(removeLength){valueBytes=Array.prototype.slice.call(bytes,offset,offset+length);valueBytes[0]^=LENGTH_TABLE[length-1];}return{length:length,value:bytesToNumber(valueBytes,{signed:signed}),bytes:valueBytes};};var normalizePath=function normalizePath(path){if(typeof path==='string'){return path.match(/.{1,2}/g).map(function(p){return normalizePath(p);});}if(typeof path==='number'){return numberToBytes(path);}return path;};var normalizePaths=function normalizePaths(paths){if(!Array.isArray(paths)){return[normalizePath(paths)];}return paths.map(function(p){return normalizePath(p);});};var getInfinityDataSize=function getInfinityDataSize(id,bytes,offset){if(offset>=bytes.length){return bytes.length;}var innerid=getvint(bytes,offset,false);if(bytesMatch(id.bytes,innerid.bytes)){return offset;}var dataHeader=getvint(bytes,offset+innerid.length);return getInfinityDataSize(id,bytes,offset+dataHeader.length+dataHeader.value+innerid.length);};/**
       * Notes on the EBLM format.
       *
       * EBLM uses "vints" tags. Every vint tag contains
       * two parts
       *
       * 1. The length from the first byte. You get this by
       *    converting the byte to binary and counting the zeros
       *    before a 1. Then you add 1 to that. Examples
       *    00011111 = length 4 because there are 3 zeros before a 1.
       *    00100000 = length 3 because there are 2 zeros before a 1.
       *    00000011 = length 7 because there are 6 zeros before a 1.
       *
       * 2. The bits used for length are removed from the first byte
       *    Then all the bytes are merged into a value. NOTE: this
       *    is not the case for id ebml tags as there id includes
       *    length bits.
       *
       */var findEbml=function findEbml(bytes,paths){paths=normalizePaths(paths);bytes=toUint8(bytes);var results=[];if(!paths.length){return results;}var i=0;while(i<bytes.length){var id=getvint(bytes,i,false);var dataHeader=getvint(bytes,i+id.length);var dataStart=i+id.length+dataHeader.length;// dataSize is unknown or this is a live stream
if(dataHeader.value===0x7f){dataHeader.value=getInfinityDataSize(id,bytes,dataStart);if(dataHeader.value!==bytes.length){dataHeader.value-=dataStart;}}var dataEnd=dataStart+dataHeader.value>bytes.length?bytes.length:dataStart+dataHeader.value;var data=bytes.subarray(dataStart,dataEnd);if(bytesMatch(paths[0],id.bytes)){if(paths.length===1){// this is the end of the paths and we've found the tag we were
// looking for
results.push(data);}else{// recursively search for the next tag inside of the data
// of this one
results=results.concat(findEbml(data,paths.slice(1)));}}var totalLength=id.length+dataHeader.length+data.length;// move past this tag entirely, we are not looking for it
i+=totalLength;}return results;};// see https://www.matroska.org/technical/basics.html#block-structure
var NAL_TYPE_ONE=toUint8([0x00,0x00,0x00,0x01]);var NAL_TYPE_TWO=toUint8([0x00,0x00,0x01]);var EMULATION_PREVENTION=toUint8([0x00,0x00,0x03]);/**
       * Expunge any "Emulation Prevention" bytes from a "Raw Byte
       * Sequence Payload"
       *
       * @param data {Uint8Array} the bytes of a RBSP from a NAL
       * unit
       * @return {Uint8Array} the RBSP without any Emulation
       * Prevention Bytes
       */var discardEmulationPreventionBytes=function discardEmulationPreventionBytes(bytes){var positions=[];var i=1;// Find all `Emulation Prevention Bytes`
while(i<bytes.length-2){if(bytesMatch(bytes.subarray(i,i+3),EMULATION_PREVENTION)){positions.push(i+2);i++;}i++;}// If no Emulation Prevention Bytes were found just return the original
// array
if(positions.length===0){return bytes;}// Create a new array to hold the NAL unit data
var newLength=bytes.length-positions.length;var newData=new Uint8Array(newLength);var sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++){if(sourceIndex===positions[0]){// Skip this byte
sourceIndex++;// Remove this position index
positions.shift();}newData[i]=bytes[sourceIndex];}return newData;};var findNal=function findNal(bytes,dataType,types,nalLimit){if(nalLimit===void 0){nalLimit=Infinity;}bytes=toUint8(bytes);types=[].concat(types);var i=0;var nalStart;var nalsFound=0;// keep searching until:
// we reach the end of bytes
// we reach the maximum number of nals they want to seach
// NOTE: that we disregard nalLimit when we have found the start
// of the nal we want so that we can find the end of the nal we want.
while(i<bytes.length&&(nalsFound<nalLimit||nalStart)){var nalOffset=void 0;if(bytesMatch(bytes.subarray(i),NAL_TYPE_ONE)){nalOffset=4;}else if(bytesMatch(bytes.subarray(i),NAL_TYPE_TWO)){nalOffset=3;}// we are unsynced,
// find the next nal unit
if(!nalOffset){i++;continue;}nalsFound++;if(nalStart){return discardEmulationPreventionBytes(bytes.subarray(nalStart,i));}var nalType=void 0;if(dataType==='h264'){nalType=bytes[i+nalOffset]&0x1f;}else if(dataType==='h265'){nalType=bytes[i+nalOffset]>>1&0x3f;}if(types.indexOf(nalType)!==-1){nalStart=i+nalOffset;}// nal header is 1 length for h264, and 2 for h265
i+=nalOffset+(dataType==='h264'?1:2);}return bytes.subarray(0,0);};var findH264Nal=function findH264Nal(bytes,type,nalLimit){return findNal(bytes,'h264',type,nalLimit);};var findH265Nal=function findH265Nal(bytes,type,nalLimit){return findNal(bytes,'h265',type,nalLimit);};var CONSTANTS={// "webm" string literal in hex
'webm':toUint8([0x77,0x65,0x62,0x6d]),// "matroska" string literal in hex
'matroska':toUint8([0x6d,0x61,0x74,0x72,0x6f,0x73,0x6b,0x61]),// "fLaC" string literal in hex
'flac':toUint8([0x66,0x4c,0x61,0x43]),// "OggS" string literal in hex
'ogg':toUint8([0x4f,0x67,0x67,0x53]),// ac-3 sync byte, also works for ec-3 as that is simply a codec
// of ac-3
'ac3':toUint8([0x0b,0x77]),// "RIFF" string literal in hex used for wav and avi
'riff':toUint8([0x52,0x49,0x46,0x46]),// "AVI" string literal in hex
'avi':toUint8([0x41,0x56,0x49]),// "WAVE" string literal in hex
'wav':toUint8([0x57,0x41,0x56,0x45]),// "ftyp3g" string literal in hex
'3gp':toUint8([0x66,0x74,0x79,0x70,0x33,0x67]),// "ftyp" string literal in hex
'mp4':toUint8([0x66,0x74,0x79,0x70]),// "styp" string literal in hex
'fmp4':toUint8([0x73,0x74,0x79,0x70]),// "ftypqt" string literal in hex
'mov':toUint8([0x66,0x74,0x79,0x70,0x71,0x74]),// moov string literal in hex
'moov':toUint8([0x6D,0x6F,0x6F,0x76]),// moof string literal in hex
'moof':toUint8([0x6D,0x6F,0x6F,0x66])};var _isLikely={aac:function aac(bytes){var offset=getId3Offset(bytes);return bytesMatch(bytes,[0xFF,0x10],{offset:offset,mask:[0xFF,0x16]});},mp3:function mp3(bytes){var offset=getId3Offset(bytes);return bytesMatch(bytes,[0xFF,0x02],{offset:offset,mask:[0xFF,0x06]});},webm:function webm(bytes){var docType=findEbml(bytes,[EBML_TAGS.EBML,EBML_TAGS.DocType])[0];// check if DocType EBML tag is webm
return bytesMatch(docType,CONSTANTS.webm);},mkv:function mkv(bytes){var docType=findEbml(bytes,[EBML_TAGS.EBML,EBML_TAGS.DocType])[0];// check if DocType EBML tag is matroska
return bytesMatch(docType,CONSTANTS.matroska);},mp4:function mp4(bytes){// if this file is another base media file format, it is not mp4
if(_isLikely['3gp'](bytes)||_isLikely.mov(bytes)){return false;}// if this file starts with a ftyp or styp box its mp4
if(bytesMatch(bytes,CONSTANTS.mp4,{offset:4})||bytesMatch(bytes,CONSTANTS.fmp4,{offset:4})){return true;}// if this file starts with a moof/moov box its mp4
if(bytesMatch(bytes,CONSTANTS.moof,{offset:4})||bytesMatch(bytes,CONSTANTS.moov,{offset:4})){return true;}},mov:function mov(bytes){return bytesMatch(bytes,CONSTANTS.mov,{offset:4});},'3gp':function gp(bytes){return bytesMatch(bytes,CONSTANTS['3gp'],{offset:4});},ac3:function ac3(bytes){var offset=getId3Offset(bytes);return bytesMatch(bytes,CONSTANTS.ac3,{offset:offset});},ts:function ts(bytes){if(bytes.length<189&&bytes.length>=1){return bytes[0]===0x47;}var i=0;// check the first 376 bytes for two matching sync bytes
while(i+188<bytes.length&&i<188){if(bytes[i]===0x47&&bytes[i+188]===0x47){return true;}i+=1;}return false;},flac:function flac(bytes){var offset=getId3Offset(bytes);return bytesMatch(bytes,CONSTANTS.flac,{offset:offset});},ogg:function ogg(bytes){return bytesMatch(bytes,CONSTANTS.ogg);},avi:function avi(bytes){return bytesMatch(bytes,CONSTANTS.riff)&&bytesMatch(bytes,CONSTANTS.avi,{offset:8});},wav:function wav(bytes){return bytesMatch(bytes,CONSTANTS.riff)&&bytesMatch(bytes,CONSTANTS.wav,{offset:8});},'h264':function h264(bytes){// find seq_parameter_set_rbsp
return findH264Nal(bytes,7,3).length;},'h265':function h265(bytes){// find video_parameter_set_rbsp or seq_parameter_set_rbsp
return findH265Nal(bytes,[32,33],3).length;}};// get all the isLikely functions
// but make sure 'ts' is above h264 and h265
// but below everything else as it is the least specific
var isLikelyTypes=Object.keys(_isLikely)// remove ts, h264, h265
.filter(function(t){return t!=='ts'&&t!=='h264'&&t!=='h265';})// add it back to the bottom
.concat(['ts','h264','h265']);// make sure we are dealing with uint8 data.
isLikelyTypes.forEach(function(type){var isLikelyFn=_isLikely[type];_isLikely[type]=function(bytes){return isLikelyFn(toUint8(bytes));};});// export after wrapping
var isLikely=_isLikely;// A useful list of file signatures can be found here
// https://en.wikipedia.org/wiki/List_of_file_signatures
var detectContainerForBytes=function detectContainerForBytes(bytes){bytes=toUint8(bytes);for(var i=0;i<isLikelyTypes.length;i++){var type=isLikelyTypes[i];if(isLikely[type](bytes)){return type;}}return'';};// fmp4 is not a container
var isLikelyFmp4MediaSegment=function isLikelyFmp4MediaSegment(bytes){return findBox(bytes,['moof']).length>0;};/**
       * mux.js
       *
       * Copyright (c) Brightcove
       * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
       */var ONE_SECOND_IN_TS=90000,// 90kHz clock
secondsToVideoTs,secondsToAudioTs,videoTsToSeconds,audioTsToSeconds,audioTsToVideoTs,videoTsToAudioTs,metadataTsToSeconds;secondsToVideoTs=function secondsToVideoTs(seconds){return seconds*ONE_SECOND_IN_TS;};secondsToAudioTs=function secondsToAudioTs(seconds,sampleRate){return seconds*sampleRate;};videoTsToSeconds=function videoTsToSeconds(timestamp){return timestamp/ONE_SECOND_IN_TS;};audioTsToSeconds=function audioTsToSeconds(timestamp,sampleRate){return timestamp/sampleRate;};audioTsToVideoTs=function audioTsToVideoTs(timestamp,sampleRate){return secondsToVideoTs(audioTsToSeconds(timestamp,sampleRate));};videoTsToAudioTs=function videoTsToAudioTs(timestamp,sampleRate){return secondsToAudioTs(videoTsToSeconds(timestamp),sampleRate);};/**
       * Adjust ID3 tag or caption timing information by the timeline pts values
       * (if keepOriginalTimestamps is false) and convert to seconds
       */metadataTsToSeconds=function metadataTsToSeconds(timestamp,timelineStartPts,keepOriginalTimestamps){return videoTsToSeconds(keepOriginalTimestamps?timestamp:timestamp-timelineStartPts);};var clock={ONE_SECOND_IN_TS:ONE_SECOND_IN_TS,secondsToVideoTs:secondsToVideoTs,secondsToAudioTs:secondsToAudioTs,videoTsToSeconds:videoTsToSeconds,audioTsToSeconds:audioTsToSeconds,audioTsToVideoTs:audioTsToVideoTs,videoTsToAudioTs:videoTsToAudioTs,metadataTsToSeconds:metadataTsToSeconds};/**
       * @license
       * Video.js 8.13.0 <http://videojs.com/>
       * Copyright Brightcove, Inc. <https://www.brightcove.com/>
       * Available under Apache License Version 2.0
       * <https://github.com/videojs/video.js/blob/main/LICENSE>
       *
       * Includes vtt.js <https://github.com/mozilla/vtt.js>
       * Available under Apache License Version 2.0
       * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>
       */var version$6="8.13.0";/**
       * An Object that contains lifecycle hooks as keys which point to an array
       * of functions that are run when a lifecycle is triggered
       *
       * @private
       */var hooks_={};/**
       * Get a list of hooks for a specific lifecycle
       *
       * @param  {string} type
       *         the lifecycle to get hooks from
       *
       * @param  {Function|Function[]} [fn]
       *         Optionally add a hook (or hooks) to the lifecycle that your are getting.
       *
       * @return {Array}
       *         an array of hooks, or an empty array if there are none.
       */var hooks=function hooks(type,fn){hooks_[type]=hooks_[type]||[];if(fn){hooks_[type]=hooks_[type].concat(fn);}return hooks_[type];};/**
       * Add a function hook to a specific videojs lifecycle.
       *
       * @param {string} type
       *        the lifecycle to hook the function to.
       *
       * @param {Function|Function[]}
       *        The function or array of functions to attach.
       */var hook=function hook(type,fn){hooks(type,fn);};/**
       * Remove a hook from a specific videojs lifecycle.
       *
       * @param  {string} type
       *         the lifecycle that the function hooked to
       *
       * @param  {Function} fn
       *         The hooked function to remove
       *
       * @return {boolean}
       *         The function that was removed or undef
       */var removeHook=function removeHook(type,fn){var index=hooks(type).indexOf(fn);if(index<=-1){return false;}hooks_[type]=hooks_[type].slice();hooks_[type].splice(index,1);return true;};/**
       * Add a function hook that will only run once to a specific videojs lifecycle.
       *
       * @param {string} type
       *        the lifecycle to hook the function to.
       *
       * @param {Function|Function[]}
       *        The function or array of functions to attach.
       */var hookOnce=function hookOnce(type,fn){hooks(type,[].concat(fn).map(function(original){var wrapper=function wrapper(){removeHook(type,wrapper);return original.apply(void 0,arguments);};return wrapper;}));};/**
       * @file fullscreen-api.js
       * @module fullscreen-api
       */ /**
       * Store the browser-specific methods for the fullscreen API.
       *
       * @type {Object}
       * @see [Specification]{@link https://fullscreen.spec.whatwg.org}
       * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}
       */var FullscreenApi={prefixed:true};// browser API methods
var apiMap=[['requestFullscreen','exitFullscreen','fullscreenElement','fullscreenEnabled','fullscreenchange','fullscreenerror','fullscreen'],// WebKit
['webkitRequestFullscreen','webkitExitFullscreen','webkitFullscreenElement','webkitFullscreenEnabled','webkitfullscreenchange','webkitfullscreenerror','-webkit-full-screen']];var specApi=apiMap[0];var browserApi;// determine the supported set of functions
for(var _i78=0;_i78<apiMap.length;_i78++){// check for exitFullscreen function
if(apiMap[_i78][1]in document_1){browserApi=apiMap[_i78];break;}}// map the browser API names to the spec API names
if(browserApi){for(var _i79=0;_i79<browserApi.length;_i79++){FullscreenApi[specApi[_i79]]=browserApi[_i79];}FullscreenApi.prefixed=browserApi[0]!==specApi[0];}/**
       * @file create-logger.js
       * @module create-logger
       */ // This is the private tracking variable for the logging history.
var history=[];/**
       * Log messages to the console and history based on the type of message
       *
       * @private
       * @param  {string} name
       *         The name of the console method to use.
       *
       * @param  {Object} log
       *         The arguments to be passed to the matching console method.
       *
       * @param {string} [styles]
       *        styles for name
       */var LogByTypeFactory=function LogByTypeFactory(name,log,styles){return function(type,level,args){var lvl=log.levels[level];var lvlRegExp=new RegExp("^(".concat(lvl,")$"));var resultName=name;if(type!=='log'){// Add the type to the front of the message when it's not "log".
args.unshift(type.toUpperCase()+':');}if(styles){resultName="%c".concat(name);args.unshift(styles);}// Add console prefix after adding to history.
args.unshift(resultName+':');// Add a clone of the args at this point to history.
if(history){history.push([].concat(args));// only store 1000 history entries
var splice=history.length-1000;history.splice(0,splice>0?splice:0);}// If there's no console then don't try to output messages, but they will
// still be stored in history.
if(!window_1.console){return;}// Was setting these once outside of this function, but containing them
// in the function makes it easier to test cases where console doesn't exist
// when the module is executed.
var fn=window_1.console[type];if(!fn&&type==='debug'){// Certain browsers don't have support for console.debug. For those, we
// should default to the closest comparable log.
fn=window_1.console.info||window_1.console.log;}// Bail out if there's no console or if this type is not allowed by the
// current logging level.
if(!fn||!lvl||!lvlRegExp.test(type)){return;}fn[Array.isArray(args)?'apply':'call'](window_1.console,args);};};function createLogger$1(name){var delimiter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:':';var styles=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';// This is the private tracking variable for logging level.
var level='info';// the curried logByType bound to the specific log and history
var logByType;/**
         * Logs plain debug messages. Similar to `console.log`.
         *
         * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)
         * of our JSDoc template, we cannot properly document this as both a function
         * and a namespace, so its function signature is documented here.
         *
         * #### Arguments
         * ##### *args
         * *[]
         *
         * Any combination of values that could be passed to `console.log()`.
         *
         * #### Return Value
         *
         * `undefined`
         *
         * @namespace
         * @param    {...*} args
         *           One or more messages or objects that should be logged.
         */var log=function log(){for(var _len19=arguments.length,args=new Array(_len19),_key20=0;_key20<_len19;_key20++){args[_key20]=arguments[_key20];}logByType('log',level,args);};// This is the logByType helper that the logging methods below use
logByType=LogByTypeFactory(name,log,styles);/**
         * Create a new subLogger which chains the old name to the new name.
         *
         * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:
         * ```js
         *  mylogger('foo');
         *  // > VIDEOJS: player: foo
         * ```
         *
         * @param {string} subName
         *        The name to add call the new logger
         * @param {string} [subDelimiter]
         *        Optional delimiter
         * @param {string} [subStyles]
         *        Optional styles
         * @return {Object}
         */log.createLogger=function(subName,subDelimiter,subStyles){var resultDelimiter=subDelimiter!==undefined?subDelimiter:delimiter;var resultStyles=subStyles!==undefined?subStyles:styles;var resultName="".concat(name," ").concat(resultDelimiter," ").concat(subName);return createLogger$1(resultName,resultDelimiter,resultStyles);};/**
         * Create a new logger.
         *
         * @param {string} newName
         *        The name for the new logger
         * @param {string} [newDelimiter]
         *        Optional delimiter
         * @param {string} [newStyles]
         *        Optional styles
         * @return {Object}
         */log.createNewLogger=function(newName,newDelimiter,newStyles){return createLogger$1(newName,newDelimiter,newStyles);};/**
         * Enumeration of available logging levels, where the keys are the level names
         * and the values are `|`-separated strings containing logging methods allowed
         * in that logging level. These strings are used to create a regular expression
         * matching the function name being called.
         *
         * Levels provided by Video.js are:
         *
         * - `off`: Matches no calls. Any value that can be cast to `false` will have
         *   this effect. The most restrictive.
         * - `all`: Matches only Video.js-provided functions (`debug`, `log`,
         *   `log.warn`, and `log.error`).
         * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.
         * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.
         * - `warn`: Matches `log.warn` and `log.error` calls.
         * - `error`: Matches only `log.error` calls.
         *
         * @type {Object}
         */log.levels={all:'debug|log|warn|error',off:'',debug:'debug|log|warn|error',info:'log|warn|error',warn:'warn|error',error:'error',DEFAULT:level};/**
         * Get or set the current logging level.
         *
         * If a string matching a key from {@link module:log.levels} is provided, acts
         * as a setter.
         *
         * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]
         *         Pass a valid level to set a new logging level.
         *
         * @return {string}
         *         The current logging level.
         */log.level=function(lvl){if(typeof lvl==='string'){if(!log.levels.hasOwnProperty(lvl)){throw new Error("\"".concat(lvl,"\" in not a valid log level"));}level=lvl;}return level;};/**
         * Returns an array containing everything that has been logged to the history.
         *
         * This array is a shallow clone of the internal history record. However, its
         * contents are _not_ cloned; so, mutating objects inside this array will
         * mutate them in history.
         *
         * @return {Array}
         */log.history=function(){return history?[].concat(history):[];};/**
         * Allows you to filter the history by the given logger name
         *
         * @param {string} fname
         *        The name to filter by
         *
         * @return {Array}
         *         The filtered list to return
         */log.history.filter=function(fname){return(history||[]).filter(function(historyItem){// if the first item in each historyItem includes `fname`, then it's a match
return new RegExp(".*".concat(fname,".*")).test(historyItem[0]);});};/**
         * Clears the internal history tracking, but does not prevent further history
         * tracking.
         */log.history.clear=function(){if(history){history.length=0;}};/**
         * Disable history tracking if it is currently enabled.
         */log.history.disable=function(){if(history!==null){history.length=0;history=null;}};/**
         * Enable history tracking if it is currently disabled.
         */log.history.enable=function(){if(history===null){history=[];}};/**
         * Logs error messages. Similar to `console.error`.
         *
         * @param {...*} args
         *        One or more messages or objects that should be logged as an error
         */log.error=function(){for(var _len20=arguments.length,args=new Array(_len20),_key21=0;_key21<_len20;_key21++){args[_key21]=arguments[_key21];}return logByType('error',level,args);};/**
         * Logs warning messages. Similar to `console.warn`.
         *
         * @param {...*} args
         *        One or more messages or objects that should be logged as a warning.
         */log.warn=function(){for(var _len21=arguments.length,args=new Array(_len21),_key22=0;_key22<_len21;_key22++){args[_key22]=arguments[_key22];}return logByType('warn',level,args);};/**
         * Logs debug messages. Similar to `console.debug`, but may also act as a comparable
         * log if `console.debug` is not available
         *
         * @param {...*} args
         *        One or more messages or objects that should be logged as debug.
         */log.debug=function(){for(var _len22=arguments.length,args=new Array(_len22),_key23=0;_key23<_len22;_key23++){args[_key23]=arguments[_key23];}return logByType('debug',level,args);};return log;}/**
       * @file log.js
       * @module log
       */var log$1=createLogger$1('VIDEOJS');var createLogger=log$1.createLogger;/**
       * @file obj.js
       * @module obj
       */ /**
       * @callback obj:EachCallback
       *
       * @param {*} value
       *        The current key for the object that is being iterated over.
       *
       * @param {string} key
       *        The current key-value for object that is being iterated over
       */ /**
       * @callback obj:ReduceCallback
       *
       * @param {*} accum
       *        The value that is accumulating over the reduce loop.
       *
       * @param {*} value
       *        The current key for the object that is being iterated over.
       *
       * @param {string} key
       *        The current key-value for object that is being iterated over
       *
       * @return {*}
       *         The new accumulated value.
       */var toString=Object.prototype.toString;/**
       * Get the keys of an Object
       *
       * @param {Object}
       *        The Object to get the keys from
       *
       * @return {string[]}
       *         An array of the keys from the object. Returns an empty array if the
       *         object passed in was invalid or had no keys.
       *
       * @private
       */var keys=function keys(object){return isObject(object)?Object.keys(object):[];};/**
       * Array-like iteration for objects.
       *
       * @param {Object} object
       *        The object to iterate over
       *
       * @param {obj:EachCallback} fn
       *        The callback function which is called for each key in the object.
       */function each(object,fn){keys(object).forEach(function(key){return fn(object[key],key);});}/**
       * Array-like reduce for objects.
       *
       * @param {Object} object
       *        The Object that you want to reduce.
       *
       * @param {Function} fn
       *         A callback function which is called for each key in the object. It
       *         receives the accumulated value and the per-iteration value and key
       *         as arguments.
       *
       * @param {*} [initial = 0]
       *        Starting value
       *
       * @return {*}
       *         The final accumulated value.
       */function reduce(object,fn){var initial=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;return keys(object).reduce(function(accum,key){return fn(accum,object[key],key);},initial);}/**
       * Returns whether a value is an object of any kind - including DOM nodes,
       * arrays, regular expressions, etc. Not functions, though.
       *
       * This avoids the gotcha where using `typeof` on a `null` value
       * results in `'object'`.
       *
       * @param  {Object} value
       * @return {boolean}
       */function isObject(value){return!!value&&_typeof(value)==='object';}/**
       * Returns whether an object appears to be a "plain" object - that is, a
       * direct instance of `Object`.
       *
       * @param  {Object} value
       * @return {boolean}
       */function isPlain(value){return isObject(value)&&toString.call(value)==='[object Object]'&&value.constructor===Object;}/**
       * Merge two objects recursively.
       *
       * Performs a deep merge like
       * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges
       * plain objects (not arrays, elements, or anything else).
       *
       * Non-plain object values will be copied directly from the right-most
       * argument.
       *
       * @param   {Object[]} sources
       *          One or more objects to merge into a new object.
       *
       * @return {Object}
       *          A new object that is the merged result of all sources.
       */function merge$1(){var result={};for(var _len23=arguments.length,sources=new Array(_len23),_key24=0;_key24<_len23;_key24++){sources[_key24]=arguments[_key24];}sources.forEach(function(source){if(!source){return;}each(source,function(value,key){if(!isPlain(value)){result[key]=value;return;}if(!isPlain(result[key])){result[key]={};}result[key]=merge$1(result[key],value);});});return result;}/**
       * Returns an array of values for a given object
       *
       * @param  {Object} source - target object
       * @return {Array<unknown>} - object values
       */function values(){var source=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var result=[];for(var key in source){if(source.hasOwnProperty(key)){var value=source[key];result.push(value);}}return result;}/**
       * Object.defineProperty but "lazy", which means that the value is only set after
       * it is retrieved the first time, rather than being set right away.
       *
       * @param {Object} obj the object to set the property on
       * @param {string} key the key for the property to set
       * @param {Function} getValue the function used to get the value when it is needed.
       * @param {boolean} setter whether a setter should be allowed or not
       */function defineLazyProperty(obj,key,getValue){var setter=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var set=function set(value){return Object.defineProperty(obj,key,{value:value,enumerable:true,writable:true});};var options={configurable:true,enumerable:true,get:function get(){var value=getValue();set(value);return value;}};if(setter){options.set=set;}return Object.defineProperty(obj,key,options);}var Obj=/*#__PURE__*/Object.freeze({__proto__:null,each:each,reduce:reduce,isObject:isObject,isPlain:isPlain,merge:merge$1,values:values,defineLazyProperty:defineLazyProperty});/**
       * @file browser.js
       * @module browser
       */ /**
       * Whether or not this device is an iPod.
       *
       * @static
       * @type {Boolean}
       */var IS_IPOD=false;/**
       * The detected iOS version - or `null`.
       *
       * @static
       * @type {string|null}
       */var IOS_VERSION=null;/**
       * Whether or not this is an Android device.
       *
       * @static
       * @type {Boolean}
       */var IS_ANDROID=false;/**
       * The detected Android version - or `null` if not Android or indeterminable.
       *
       * @static
       * @type {number|string|null}
       */var ANDROID_VERSION;/**
       * Whether or not this is Mozilla Firefox.
       *
       * @static
       * @type {Boolean}
       */var IS_FIREFOX=false;/**
       * Whether or not this is Microsoft Edge.
       *
       * @static
       * @type {Boolean}
       */var IS_EDGE=false;/**
       * Whether or not this is any Chromium Browser
       *
       * @static
       * @type {Boolean}
       */var IS_CHROMIUM=false;/**
       * Whether or not this is any Chromium browser that is not Edge.
       *
       * This will also be `true` for Chrome on iOS, which will have different support
       * as it is actually Safari under the hood.
       *
       * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.
       * IS_CHROMIUM should be used instead.
       * "Chromium but not Edge" could be explicitly tested with IS_CHROMIUM && !IS_EDGE
       *
       * @static
       * @deprecated
       * @type {Boolean}
       */var IS_CHROME=false;/**
       * The detected Chromium version - or `null`.
       *
       * @static
       * @type {number|null}
       */var CHROMIUM_VERSION=null;/**
       * The detected Google Chrome version - or `null`.
       * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.
       * Deprecated, use CHROMIUM_VERSION instead.
       *
       * @static
       * @deprecated
       * @type {number|null}
       */var CHROME_VERSION=null;/**
       * The detected Internet Explorer version - or `null`.
       *
       * @static
       * @deprecated
       * @type {number|null}
       */var IE_VERSION=null;/**
       * Whether or not this is desktop Safari.
       *
       * @static
       * @type {Boolean}
       */var IS_SAFARI=false;/**
       * Whether or not this is a Windows machine.
       *
       * @static
       * @type {Boolean}
       */var IS_WINDOWS=false;/**
       * Whether or not this device is an iPad.
       *
       * @static
       * @type {Boolean}
       */var IS_IPAD=false;/**
       * Whether or not this device is an iPhone.
       *
       * @static
       * @type {Boolean}
       */ // The Facebook app's UIWebView identifies as both an iPhone and iPad, so
// to identify iPhones, we need to exclude iPads.
// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/
var IS_IPHONE=false;/**
       * Whether or not this is a Tizen device.
       *
       * @static
       * @type {Boolean}
       */var IS_TIZEN=false;/**
       * Whether or not this is a WebOS device.
       *
       * @static
       * @type {Boolean}
       */var IS_WEBOS=false;/**
       * Whether or not this is a Smart TV (Tizen or WebOS) device.
       *
       * @static
       * @type {Boolean}
       */var IS_SMART_TV=false;/**
       * Whether or not this device is touch-enabled.
       *
       * @static
       * @const
       * @type {Boolean}
       */var TOUCH_ENABLED=Boolean(isReal()&&('ontouchstart'in window_1||window_1.navigator.maxTouchPoints||window_1.DocumentTouch&&window_1.document instanceof window_1.DocumentTouch));var UAD=window_1.navigator&&window_1.navigator.userAgentData;if(UAD&&UAD.platform&&UAD.brands){// If userAgentData is present, use it instead of userAgent to avoid warnings
// Currently only implemented on Chromium
// userAgentData does not expose Android version, so ANDROID_VERSION remains `null`
IS_ANDROID=UAD.platform==='Android';IS_EDGE=Boolean(UAD.brands.find(function(b){return b.brand==='Microsoft Edge';}));IS_CHROMIUM=Boolean(UAD.brands.find(function(b){return b.brand==='Chromium';}));IS_CHROME=!IS_EDGE&&IS_CHROMIUM;CHROMIUM_VERSION=CHROME_VERSION=(UAD.brands.find(function(b){return b.brand==='Chromium';})||{}).version||null;IS_WINDOWS=UAD.platform==='Windows';}// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,
//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,
// the checks need to be made agiainst the regular userAgent string.
if(!IS_CHROMIUM){var USER_AGENT=window_1.navigator&&window_1.navigator.userAgent||'';IS_IPOD=/iPod/i.test(USER_AGENT);IOS_VERSION=function(){var match=USER_AGENT.match(/OS (\d+)_/i);if(match&&match[1]){return match[1];}return null;}();IS_ANDROID=/Android/i.test(USER_AGENT);ANDROID_VERSION=function(){// This matches Android Major.Minor.Patch versions
// ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned
var match=USER_AGENT.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);if(!match){return null;}var major=match[1]&&parseFloat(match[1]);var minor=match[2]&&parseFloat(match[2]);if(major&&minor){return parseFloat(match[1]+'.'+match[2]);}else if(major){return major;}return null;}();IS_FIREFOX=/Firefox/i.test(USER_AGENT);IS_EDGE=/Edg/i.test(USER_AGENT);IS_CHROMIUM=/Chrome/i.test(USER_AGENT)||/CriOS/i.test(USER_AGENT);IS_CHROME=!IS_EDGE&&IS_CHROMIUM;CHROMIUM_VERSION=CHROME_VERSION=function(){var match=USER_AGENT.match(/(Chrome|CriOS)\/(\d+)/);if(match&&match[2]){return parseFloat(match[2]);}return null;}();IE_VERSION=function(){var result=/MSIE\s(\d+)\.\d/.exec(USER_AGENT);var version=result&&parseFloat(result[1]);if(!version&&/Trident\/7.0/i.test(USER_AGENT)&&/rv:11.0/.test(USER_AGENT)){// IE 11 has a different user agent string than other IE versions
version=11.0;}return version;}();IS_TIZEN=/Tizen/i.test(USER_AGENT);IS_WEBOS=/Web0S/i.test(USER_AGENT);IS_SMART_TV=IS_TIZEN||IS_WEBOS;IS_SAFARI=/Safari/i.test(USER_AGENT)&&!IS_CHROME&&!IS_ANDROID&&!IS_EDGE&&!IS_SMART_TV;IS_WINDOWS=/Windows/i.test(USER_AGENT);IS_IPAD=/iPad/i.test(USER_AGENT)||IS_SAFARI&&TOUCH_ENABLED&&!/iPhone/i.test(USER_AGENT);IS_IPHONE=/iPhone/i.test(USER_AGENT)&&!IS_IPAD;}/**
       * Whether or not this is an iOS device.
       *
       * @static
       * @const
       * @type {Boolean}
       */var IS_IOS=IS_IPHONE||IS_IPAD||IS_IPOD;/**
       * Whether or not this is any flavor of Safari - including iOS.
       *
       * @static
       * @const
       * @type {Boolean}
       */var IS_ANY_SAFARI=(IS_SAFARI||IS_IOS)&&!IS_CHROME;var browser=/*#__PURE__*/Object.freeze({__proto__:null,get IS_IPOD(){return IS_IPOD;},get IOS_VERSION(){return IOS_VERSION;},get IS_ANDROID(){return IS_ANDROID;},get ANDROID_VERSION(){return ANDROID_VERSION;},get IS_FIREFOX(){return IS_FIREFOX;},get IS_EDGE(){return IS_EDGE;},get IS_CHROMIUM(){return IS_CHROMIUM;},get IS_CHROME(){return IS_CHROME;},get CHROMIUM_VERSION(){return CHROMIUM_VERSION;},get CHROME_VERSION(){return CHROME_VERSION;},get IE_VERSION(){return IE_VERSION;},get IS_SAFARI(){return IS_SAFARI;},get IS_WINDOWS(){return IS_WINDOWS;},get IS_IPAD(){return IS_IPAD;},get IS_IPHONE(){return IS_IPHONE;},get IS_TIZEN(){return IS_TIZEN;},get IS_WEBOS(){return IS_WEBOS;},get IS_SMART_TV(){return IS_SMART_TV;},TOUCH_ENABLED:TOUCH_ENABLED,IS_IOS:IS_IOS,IS_ANY_SAFARI:IS_ANY_SAFARI});/**
       * @file dom.js
       * @module dom
       */ /**
       * Detect if a value is a string with any non-whitespace characters.
       *
       * @private
       * @param  {string} str
       *         The string to check
       *
       * @return {boolean}
       *         Will be `true` if the string is non-blank, `false` otherwise.
       *
       */function isNonBlankString(str){// we use str.trim as it will trim any whitespace characters
// from the front or back of non-whitespace characters. aka
// Any string that contains non-whitespace characters will
// still contain them after `trim` but whitespace only strings
// will have a length of 0, failing this check.
return typeof str==='string'&&Boolean(str.trim());}/**
       * Throws an error if the passed string has whitespace. This is used by
       * class methods to be relatively consistent with the classList API.
       *
       * @private
       * @param  {string} str
       *         The string to check for whitespace.
       *
       * @throws {Error}
       *         Throws an error if there is whitespace in the string.
       */function throwIfWhitespace(str){// str.indexOf instead of regex because str.indexOf is faster performance wise.
if(str.indexOf(' ')>=0){throw new Error('class has illegal whitespace characters');}}/**
       * Whether the current DOM interface appears to be real (i.e. not simulated).
       *
       * @return {boolean}
       *         Will be `true` if the DOM appears to be real, `false` otherwise.
       */function isReal(){// Both document and window will never be undefined thanks to `global`.
return document_1===window_1.document;}/**
       * Determines, via duck typing, whether or not a value is a DOM element.
       *
       * @param  {*} value
       *         The value to check.
       *
       * @return {boolean}
       *         Will be `true` if the value is a DOM element, `false` otherwise.
       */function isEl(value){return isObject(value)&&value.nodeType===1;}/**
       * Determines if the current DOM is embedded in an iframe.
       *
       * @return {boolean}
       *         Will be `true` if the DOM is embedded in an iframe, `false`
       *         otherwise.
       */function isInFrame(){// We need a try/catch here because Safari will throw errors when attempting
// to get either `parent` or `self`
try{return window_1.parent!==window_1.self;}catch(x){return true;}}/**
       * Creates functions to query the DOM using a given method.
       *
       * @private
       * @param   {string} method
       *          The method to create the query with.
       *
       * @return  {Function}
       *          The query method
       */function createQuerier(method){return function(selector,context){if(!isNonBlankString(selector)){return document_1[method](null);}if(isNonBlankString(context)){context=document_1.querySelector(context);}var ctx=isEl(context)?context:document_1;return ctx[method]&&ctx[method](selector);};}/**
       * Creates an element and applies properties, attributes, and inserts content.
       *
       * @param  {string} [tagName='div']
       *         Name of tag to be created.
       *
       * @param  {Object} [properties={}]
       *         Element properties to be applied.
       *
       * @param  {Object} [attributes={}]
       *         Element attributes to be applied.
       *
       * @param {ContentDescriptor} [content]
       *        A content descriptor object.
       *
       * @return {Element}
       *         The element that was created.
       */function _createEl(){var tagName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'div';var properties=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var attributes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var content=arguments.length>3?arguments[3]:undefined;var el=document_1.createElement(tagName);Object.getOwnPropertyNames(properties).forEach(function(propName){var val=properties[propName];// Handle textContent since it's not supported everywhere and we have a
// method for it.
if(propName==='textContent'){textContent(el,val);}else if(el[propName]!==val||propName==='tabIndex'){el[propName]=val;}});Object.getOwnPropertyNames(attributes).forEach(function(attrName){el.setAttribute(attrName,attributes[attrName]);});if(content){appendContent(el,content);}return el;}/**
       * Injects text into an element, replacing any existing contents entirely.
       *
       * @param  {HTMLElement} el
       *         The element to add text content into
       *
       * @param  {string} text
       *         The text content to add.
       *
       * @return {Element}
       *         The element with added text content.
       */function textContent(el,text){if(typeof el.textContent==='undefined'){el.innerText=text;}else{el.textContent=text;}return el;}/**
       * Insert an element as the first child node of another
       *
       * @param {Element} child
       *        Element to insert
       *
       * @param {Element} parent
       *        Element to insert child into
       */function prependTo(child,parent){if(parent.firstChild){parent.insertBefore(child,parent.firstChild);}else{parent.appendChild(child);}}/**
       * Check if an element has a class name.
       *
       * @param  {Element} element
       *         Element to check
       *
       * @param  {string} classToCheck
       *         Class name to check for
       *
       * @return {boolean}
       *         Will be `true` if the element has a class, `false` otherwise.
       *
       * @throws {Error}
       *         Throws an error if `classToCheck` has white space.
       */function _hasClass(element,classToCheck){throwIfWhitespace(classToCheck);return element.classList.contains(classToCheck);}/**
       * Add a class name to an element.
       *
       * @param  {Element} element
       *         Element to add class name to.
       *
       * @param  {...string} classesToAdd
       *         One or more class name to add.
       *
       * @return {Element}
       *         The DOM element with the added class name.
       */function _addClass(element){var _element$classList;for(var _len24=arguments.length,classesToAdd=new Array(_len24>1?_len24-1:0),_key25=1;_key25<_len24;_key25++){classesToAdd[_key25-1]=arguments[_key25];}(_element$classList=element.classList).add.apply(_element$classList,_toConsumableArray(classesToAdd.reduce(function(prev,current){return prev.concat(current.split(/\s+/));},[])));return element;}/**
       * Remove a class name from an element.
       *
       * @param  {Element} element
       *         Element to remove a class name from.
       *
       * @param  {...string} classesToRemove
       *         One or more class name to remove.
       *
       * @return {Element}
       *         The DOM element with class name removed.
       */function _removeClass(element){var _element$classList2;// Protect in case the player gets disposed
if(!element){log$1.warn("removeClass was called with an element that doesn't exist");return null;}for(var _len25=arguments.length,classesToRemove=new Array(_len25>1?_len25-1:0),_key26=1;_key26<_len25;_key26++){classesToRemove[_key26-1]=arguments[_key26];}(_element$classList2=element.classList).remove.apply(_element$classList2,_toConsumableArray(classesToRemove.reduce(function(prev,current){return prev.concat(current.split(/\s+/));},[])));return element;}/**
       * The callback definition for toggleClass.
       *
       * @callback module:dom~PredicateCallback
       * @param    {Element} element
       *           The DOM element of the Component.
       *
       * @param    {string} classToToggle
       *           The `className` that wants to be toggled
       *
       * @return   {boolean|undefined}
       *           If `true` is returned, the `classToToggle` will be added to the
       *           `element`. If `false`, the `classToToggle` will be removed from
       *           the `element`. If `undefined`, the callback will be ignored.
       */ /**
       * Adds or removes a class name to/from an element depending on an optional
       * condition or the presence/absence of the class name.
       *
       * @param  {Element} element
       *         The element to toggle a class name on.
       *
       * @param  {string} classToToggle
       *         The class that should be toggled.
       *
       * @param  {boolean|module:dom~PredicateCallback} [predicate]
       *         See the return value for {@link module:dom~PredicateCallback}
       *
       * @return {Element}
       *         The element with a class that has been toggled.
       */function _toggleClass(element,classToToggle,predicate){if(typeof predicate==='function'){predicate=predicate(element,classToToggle);}if(typeof predicate!=='boolean'){predicate=undefined;}classToToggle.split(/\s+/).forEach(function(className){return element.classList.toggle(className,predicate);});return element;}/**
       * Apply attributes to an HTML element.
       *
       * @param {Element} el
       *        Element to add attributes to.
       *
       * @param {Object} [attributes]
       *        Attributes to be applied.
       */function setAttributes(el,attributes){Object.getOwnPropertyNames(attributes).forEach(function(attrName){var attrValue=attributes[attrName];if(attrValue===null||typeof attrValue==='undefined'||attrValue===false){el.removeAttribute(attrName);}else{el.setAttribute(attrName,attrValue===true?'':attrValue);}});}/**
       * Get an element's attribute values, as defined on the HTML tag.
       *
       * Attributes are not the same as properties. They're defined on the tag
       * or with setAttribute.
       *
       * @param  {Element} tag
       *         Element from which to get tag attributes.
       *
       * @return {Object}
       *         All attributes of the element. Boolean attributes will be `true` or
       *         `false`, others will be strings.
       */function getAttributes(tag){var obj={};// known boolean attributes
// we can check for matching boolean properties, but not all browsers
// and not all tags know about these attributes, so, we still want to check them manually
var knownBooleans=['autoplay','controls','playsinline','loop','muted','default','defaultMuted'];if(tag&&tag.attributes&&tag.attributes.length>0){var attrs=tag.attributes;for(var _i80=attrs.length-1;_i80>=0;_i80--){var attrName=attrs[_i80].name;/** @type {boolean|string} */var attrVal=attrs[_i80].value;// check for known booleans
// the matching element property will return a value for typeof
if(knownBooleans.includes(attrName)){// the value of an included boolean attribute is typically an empty
// string ('') which would equal false if we just check for a false value.
// we also don't want support bad code like autoplay='false'
attrVal=attrVal!==null?true:false;}obj[attrName]=attrVal;}}return obj;}/**
       * Get the value of an element's attribute.
       *
       * @param {Element} el
       *        A DOM element.
       *
       * @param {string} attribute
       *        Attribute to get the value of.
       *
       * @return {string}
       *         The value of the attribute.
       */function _getAttribute(el,attribute){return el.getAttribute(attribute);}/**
       * Set the value of an element's attribute.
       *
       * @param {Element} el
       *        A DOM element.
       *
       * @param {string} attribute
       *        Attribute to set.
       *
       * @param {string} value
       *        Value to set the attribute to.
       */function _setAttribute(el,attribute,value){el.setAttribute(attribute,value);}/**
       * Remove an element's attribute.
       *
       * @param {Element} el
       *        A DOM element.
       *
       * @param {string} attribute
       *        Attribute to remove.
       */function _removeAttribute(el,attribute){el.removeAttribute(attribute);}/**
       * Attempt to block the ability to select text.
       */function blockTextSelection(){document_1.body.focus();document_1.onselectstart=function(){return false;};}/**
       * Turn off text selection blocking.
       */function unblockTextSelection(){document_1.onselectstart=function(){return true;};}/**
       * Identical to the native `getBoundingClientRect` function, but ensures that
       * the method is supported at all (it is in all browsers we claim to support)
       * and that the element is in the DOM before continuing.
       *
       * This wrapper function also shims properties which are not provided by some
       * older browsers (namely, IE8).
       *
       * Additionally, some browsers do not support adding properties to a
       * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard
       * properties (except `x` and `y` which are not widely supported). This helps
       * avoid implementations where keys are non-enumerable.
       *
       * @param  {Element} el
       *         Element whose `ClientRect` we want to calculate.
       *
       * @return {Object|undefined}
       *         Always returns a plain object - or `undefined` if it cannot.
       */function getBoundingClientRect(el){if(el&&el.getBoundingClientRect&&el.parentNode){var rect=el.getBoundingClientRect();var result={};['bottom','height','left','right','top','width'].forEach(function(k){if(rect[k]!==undefined){result[k]=rect[k];}});if(!result.height){result.height=parseFloat(computedStyle(el,'height'));}if(!result.width){result.width=parseFloat(computedStyle(el,'width'));}return result;}}/**
       * Represents the position of a DOM element on the page.
       *
       * @typedef  {Object} module:dom~Position
       *
       * @property {number} left
       *           Pixels to the left.
       *
       * @property {number} top
       *           Pixels from the top.
       */ /**
       * Get the position of an element in the DOM.
       *
       * Uses `getBoundingClientRect` technique from John Resig.
       *
       * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/
       *
       * @param  {Element} el
       *         Element from which to get offset.
       *
       * @return {module:dom~Position}
       *         The position of the element that was passed in.
       */function findPosition(el){if(!el||el&&!el.offsetParent){return{left:0,top:0,width:0,height:0};}var width=el.offsetWidth;var height=el.offsetHeight;var left=0;var top=0;while(el.offsetParent&&el!==document_1[FullscreenApi.fullscreenElement]){left+=el.offsetLeft;top+=el.offsetTop;el=el.offsetParent;}return{left:left,top:top,width:width,height:height};}/**
       * Represents x and y coordinates for a DOM element or mouse pointer.
       *
       * @typedef  {Object} module:dom~Coordinates
       *
       * @property {number} x
       *           x coordinate in pixels
       *
       * @property {number} y
       *           y coordinate in pixels
       */ /**
       * Get the pointer position within an element.
       *
       * The base on the coordinates are the bottom left of the element.
       *
       * @param  {Element} el
       *         Element on which to get the pointer position on.
       *
       * @param  {Event} event
       *         Event object.
       *
       * @return {module:dom~Coordinates}
       *         A coordinates object corresponding to the mouse position.
       *
       */function getPointerPosition(el,event){var translated={x:0,y:0};if(IS_IOS){var item=el;while(item&&item.nodeName.toLowerCase()!=='html'){var _transform=computedStyle(item,'transform');if(/^matrix/.test(_transform)){var _values4=_transform.slice(7,-1).split(/,\s/).map(Number);translated.x+=_values4[4];translated.y+=_values4[5];}else if(/^matrix3d/.test(_transform)){var _values5=_transform.slice(9,-1).split(/,\s/).map(Number);translated.x+=_values5[12];translated.y+=_values5[13];}item=item.parentNode;}}var position={};var boxTarget=findPosition(event.target);var box=findPosition(el);var boxW=box.width;var boxH=box.height;var offsetY=event.offsetY-(box.top-boxTarget.top);var offsetX=event.offsetX-(box.left-boxTarget.left);if(event.changedTouches){offsetX=event.changedTouches[0].pageX-box.left;offsetY=event.changedTouches[0].pageY+box.top;if(IS_IOS){offsetX-=translated.x;offsetY-=translated.y;}}position.y=1-Math.max(0,Math.min(1,offsetY/boxH));position.x=Math.max(0,Math.min(1,offsetX/boxW));return position;}/**
       * Determines, via duck typing, whether or not a value is a text node.
       *
       * @param  {*} value
       *         Check if this value is a text node.
       *
       * @return {boolean}
       *         Will be `true` if the value is a text node, `false` otherwise.
       */function isTextNode(value){return isObject(value)&&value.nodeType===3;}/**
       * Empties the contents of an element.
       *
       * @param  {Element} el
       *         The element to empty children from
       *
       * @return {Element}
       *         The element with no children
       */function emptyEl(el){while(el.firstChild){el.removeChild(el.firstChild);}return el;}/**
       * This is a mixed value that describes content to be injected into the DOM
       * via some method. It can be of the following types:
       *
       * Type       | Description
       * -----------|-------------
       * `string`   | The value will be normalized into a text node.
       * `Element`  | The value will be accepted as-is.
       * `Text`     | A TextNode. The value will be accepted as-is.
       * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).
       * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.
       *
       * @typedef {string|Element|Text|Array|Function} ContentDescriptor
       */ /**
       * Normalizes content for eventual insertion into the DOM.
       *
       * This allows a wide range of content definition methods, but helps protect
       * from falling into the trap of simply writing to `innerHTML`, which could
       * be an XSS concern.
       *
       * The content for an element can be passed in multiple types and
       * combinations, whose behavior is as follows:
       *
       * @param {ContentDescriptor} content
       *        A content descriptor value.
       *
       * @return {Array}
       *         All of the content that was passed in, normalized to an array of
       *         elements or text nodes.
       */function normalizeContent(content){// First, invoke content if it is a function. If it produces an array,
// that needs to happen before normalization.
if(typeof content==='function'){content=content();}// Next up, normalize to an array, so one or many items can be normalized,
// filtered, and returned.
return(Array.isArray(content)?content:[content]).map(function(value){// First, invoke value if it is a function to produce a new value,
// which will be subsequently normalized to a Node of some kind.
if(typeof value==='function'){value=value();}if(isEl(value)||isTextNode(value)){return value;}if(typeof value==='string'&&/\S/.test(value)){return document_1.createTextNode(value);}}).filter(function(value){return value;});}/**
       * Normalizes and appends content to an element.
       *
       * @param  {Element} el
       *         Element to append normalized content to.
       *
       * @param {ContentDescriptor} content
       *        A content descriptor value.
       *
       * @return {Element}
       *         The element with appended normalized content.
       */function appendContent(el,content){normalizeContent(content).forEach(function(node){return el.appendChild(node);});return el;}/**
       * Normalizes and inserts content into an element; this is identical to
       * `appendContent()`, except it empties the element first.
       *
       * @param {Element} el
       *        Element to insert normalized content into.
       *
       * @param {ContentDescriptor} content
       *        A content descriptor value.
       *
       * @return {Element}
       *         The element with inserted normalized content.
       */function insertContent(el,content){return appendContent(emptyEl(el),content);}/**
       * Check if an event was a single left click.
       *
       * @param  {MouseEvent} event
       *         Event object.
       *
       * @return {boolean}
       *         Will be `true` if a single left click, `false` otherwise.
       */function isSingleLeftClick(event){// Note: if you create something draggable, be sure to
// call it on both `mousedown` and `mousemove` event,
// otherwise `mousedown` should be enough for a button
if(event.button===undefined&&event.buttons===undefined){// Why do we need `buttons` ?
// Because, middle mouse sometimes have this:
// e.button === 0 and e.buttons === 4
// Furthermore, we want to prevent combination click, something like
// HOLD middlemouse then left click, that would be
// e.button === 0, e.buttons === 5
// just `button` is not gonna work
// Alright, then what this block does ?
// this is for chrome `simulate mobile devices`
// I want to support this as well
return true;}if(event.button===0&&event.buttons===undefined){// Touch screen, sometimes on some specific device, `buttons`
// doesn't have anything (safari on ios, blackberry...)
return true;}// `mouseup` event on a single left click has
// `button` and `buttons` equal to 0
if(event.type==='mouseup'&&event.button===0&&event.buttons===0){return true;}if(event.button!==0||event.buttons!==1){// This is the reason we have those if else block above
// if any special case we can catch and let it slide
// we do it above, when get to here, this definitely
// is-not-left-click
return false;}return true;}/**
       * Finds a single DOM element matching `selector` within the optional
       * `context` of another DOM element (defaulting to `document`).
       *
       * @param  {string} selector
       *         A valid CSS selector, which will be passed to `querySelector`.
       *
       * @param  {Element|String} [context=document]
       *         A DOM element within which to query. Can also be a selector
       *         string in which case the first matching element will be used
       *         as context. If missing (or no element matches selector), falls
       *         back to `document`.
       *
       * @return {Element|null}
       *         The element that was found or null.
       */var _$=createQuerier('querySelector');/**
       * Finds a all DOM elements matching `selector` within the optional
       * `context` of another DOM element (defaulting to `document`).
       *
       * @param  {string} selector
       *         A valid CSS selector, which will be passed to `querySelectorAll`.
       *
       * @param  {Element|String} [context=document]
       *         A DOM element within which to query. Can also be a selector
       *         string in which case the first matching element will be used
       *         as context. If missing (or no element matches selector), falls
       *         back to `document`.
       *
       * @return {NodeList}
       *         A element list of elements that were found. Will be empty if none
       *         were found.
       *
       */var _$$=createQuerier('querySelectorAll');/**
       * A safe getComputedStyle.
       *
       * This is needed because in Firefox, if the player is loaded in an iframe with
       * `display:none`, then `getComputedStyle` returns `null`, so, we do a
       * null-check to make sure that the player doesn't break in these cases.
       *
       * @param    {Element} el
       *           The element you want the computed style of
       *
       * @param    {string} prop
       *           The property name you want
       *
       * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397
       */function computedStyle(el,prop){if(!el||!prop){return'';}if(typeof window_1.getComputedStyle==='function'){var computedStyleValue;try{computedStyleValue=window_1.getComputedStyle(el);}catch(e){return'';}return computedStyleValue?computedStyleValue.getPropertyValue(prop)||computedStyleValue[prop]:'';}return'';}/**
       * Copy document style sheets to another window.
       *
       * @param    {Window} win
       *           The window element you want to copy the document style sheets to.
       *
       */function copyStyleSheetsToWindow(win){_toConsumableArray(document_1.styleSheets).forEach(function(styleSheet){try{var cssRules=_toConsumableArray(styleSheet.cssRules).map(function(rule){return rule.cssText;}).join('');var _style2=document_1.createElement('style');_style2.textContent=cssRules;win.document.head.appendChild(_style2);}catch(e){var link=document_1.createElement('link');link.rel='stylesheet';link.type=styleSheet.type;// For older Safari this has to be the string; on other browsers setting the MediaList works
link.media=styleSheet.media.mediaText;link.href=styleSheet.href;win.document.head.appendChild(link);}});}var Dom=/*#__PURE__*/Object.freeze({__proto__:null,isReal:isReal,isEl:isEl,isInFrame:isInFrame,createEl:_createEl,textContent:textContent,prependTo:prependTo,hasClass:_hasClass,addClass:_addClass,removeClass:_removeClass,toggleClass:_toggleClass,setAttributes:setAttributes,getAttributes:getAttributes,getAttribute:_getAttribute,setAttribute:_setAttribute,removeAttribute:_removeAttribute,blockTextSelection:blockTextSelection,unblockTextSelection:unblockTextSelection,getBoundingClientRect:getBoundingClientRect,findPosition:findPosition,getPointerPosition:getPointerPosition,isTextNode:isTextNode,emptyEl:emptyEl,normalizeContent:normalizeContent,appendContent:appendContent,insertContent:insertContent,isSingleLeftClick:isSingleLeftClick,$:_$,$$:_$$,computedStyle:computedStyle,copyStyleSheetsToWindow:copyStyleSheetsToWindow});/**
       * @file setup.js - Functions for setting up a player without
       * user interaction based on the data-setup `attribute` of the video tag.
       *
       * @module setup
       */var _windowLoaded=false;var videojs$1;/**
       * Set up any tags that have a data-setup `attribute` when the player is started.
       */var autoSetup=function autoSetup(){if(videojs$1.options.autoSetup===false){return;}var vids=Array.prototype.slice.call(document_1.getElementsByTagName('video'));var audios=Array.prototype.slice.call(document_1.getElementsByTagName('audio'));var divs=Array.prototype.slice.call(document_1.getElementsByTagName('video-js'));var mediaEls=vids.concat(audios,divs);// Check if any media elements exist
if(mediaEls&&mediaEls.length>0){for(var _i81=0,_e2=mediaEls.length;_i81<_e2;_i81++){var mediaEl=mediaEls[_i81];// Check if element exists, has getAttribute func.
if(mediaEl&&mediaEl.getAttribute){// Make sure this player hasn't already been set up.
if(mediaEl.player===undefined){var options=mediaEl.getAttribute('data-setup');// Check if data-setup attr exists.
// We only auto-setup if they've added the data-setup attr.
if(options!==null){// Create new video.js instance.
videojs$1(mediaEl);}}// If getAttribute isn't defined, we need to wait for the DOM.
}else{autoSetupTimeout(1);break;}}// No videos were found, so keep looping unless page is finished loading.
}else if(!_windowLoaded){autoSetupTimeout(1);}};/**
       * Wait until the page is loaded before running autoSetup. This will be called in
       * autoSetup if `hasLoaded` returns false.
       *
       * @param {number} wait
       *        How long to wait in ms
       *
       * @param {module:videojs} [vjs]
       *        The videojs library function
       */function autoSetupTimeout(wait,vjs){// Protect against breakage in non-browser environments
if(!isReal()){return;}if(vjs){videojs$1=vjs;}window_1.setTimeout(autoSetup,wait);}/**
       * Used to set the internal tracking of window loaded state to true.
       *
       * @private
       */function setWindowLoaded(){_windowLoaded=true;window_1.removeEventListener('load',setWindowLoaded);}if(isReal()){if(document_1.readyState==='complete'){setWindowLoaded();}else{/**
           * Listen for the load event on window, and set _windowLoaded to true.
           *
           * We use a standard event listener here to avoid incrementing the GUID
           * before any players are created.
           *
           * @listens load
           */window_1.addEventListener('load',setWindowLoaded);}}/**
       * @file stylesheet.js
       * @module stylesheet
       */ /**
       * Create a DOM style element given a className for it.
       *
       * @param {string} className
       *        The className to add to the created style element.
       *
       * @return {Element}
       *         The element that was created.
       */var createStyleElement=function createStyleElement(className){var style=document_1.createElement('style');style.className=className;return style;};/**
       * Add text to a DOM element.
       *
       * @param {Element} el
       *        The Element to add text content to.
       *
       * @param {string} content
       *        The text to add to the element.
       */var setTextContent=function setTextContent(el,content){if(el.styleSheet){el.styleSheet.cssText=content;}else{el.textContent=content;}};/**
       * @file dom-data.js
       * @module dom-data
       */ /**
       * Element Data Store.
       *
       * Allows for binding data to an element without putting it directly on the
       * element. Ex. Event listeners are stored here.
       * (also from jsninja.com, slightly modified and updated for closure compiler)
       *
       * @type {Object}
       * @private
       */var DomData=new WeakMap();/**
       * @file guid.js
       * @module guid
       */ // Default value for GUIDs. This allows us to reset the GUID counter in tests.
//
// The initial GUID is 3 because some users have come to rely on the first
// default player ID ending up as `vjs_video_3`.
//
// See: https://github.com/videojs/video.js/pull/6216
var _initialGuid=3;/**
       * Unique ID for an element or function
       *
       * @type {Number}
       */var _guid=_initialGuid;/**
       * Get a unique auto-incrementing ID by number that has not been returned before.
       *
       * @return {number}
       *         A new unique ID.
       */function newGUID(){return _guid++;}/**
       * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)
       * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)
       * This should work very similarly to jQuery's events, however it's based off the book version which isn't as
       * robust as jquery's, so there's probably some differences.
       *
       * @file events.js
       * @module events
       */ /**
       * Clean up the listener cache and dispatchers
       *
       * @param {Element|Object} elem
       *        Element to clean up
       *
       * @param {string} type
       *        Type of event to clean up
       */function _cleanUpEvents(elem,type){if(!DomData.has(elem)){return;}var data=DomData.get(elem);// Remove the events of a particular type if there are none left
if(data.handlers[type].length===0){delete data.handlers[type];// data.handlers[type] = null;
// Setting to null was causing an error with data.handlers
// Remove the meta-handler from the element
if(elem.removeEventListener){elem.removeEventListener(type,data.dispatcher,false);}else if(elem.detachEvent){elem.detachEvent('on'+type,data.dispatcher);}}// Remove the events object if there are no types left
if(Object.getOwnPropertyNames(data.handlers).length<=0){delete data.handlers;delete data.dispatcher;delete data.disabled;}// Finally remove the element data if there is no data left
if(Object.getOwnPropertyNames(data).length===0){DomData.delete(elem);}}/**
       * Loops through an array of event types and calls the requested method for each type.
       *
       * @param {Function} fn
       *        The event method we want to use.
       *
       * @param {Element|Object} elem
       *        Element or object to bind listeners to
       *
       * @param {string[]} types
       *        Type of event to bind to.
       *
       * @param {Function} callback
       *        Event listener.
       */function _handleMultipleEvents(fn,elem,types,callback){types.forEach(function(type){// Call the event method for each one of the types
fn(elem,type,callback);});}/**
       * Fix a native event to have standard property values
       *
       * @param {Object} event
       *        Event object to fix.
       *
       * @return {Object}
       *         Fixed event object.
       */function fixEvent(event){if(event.fixed_){return event;}function returnTrue(){return true;}function returnFalse(){return false;}// Test if fixing up is needed
// Used to check if !event.stopPropagation instead of isPropagationStopped
// But native events return true for stopPropagation, but don't have
// other expected methods like isPropagationStopped. Seems to be a problem
// with the Javascript Ninja code. So we're just overriding all events now.
if(!event||!event.isPropagationStopped||!event.isImmediatePropagationStopped){var old=event||window_1.event;event={};// Clone the old object so that we can modify the values event = {};
// IE8 Doesn't like when you mess with native event properties
// Firefox returns false for event.hasOwnProperty('type') and other props
//  which makes copying more difficult.
// TODO: Probably best to create a whitelist of event props
for(var key in old){// Safari 6.0.3 warns you if you try to copy deprecated layerX/Y
// Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation
// and webkitMovementX/Y
// Lighthouse complains if Event.path is copied
if(key!=='layerX'&&key!=='layerY'&&key!=='keyLocation'&&key!=='webkitMovementX'&&key!=='webkitMovementY'&&key!=='path'){// Chrome 32+ warns if you try to copy deprecated returnValue, but
// we still want to if preventDefault isn't supported (IE8).
if(!(key==='returnValue'&&old.preventDefault)){event[key]=old[key];}}}// The event occurred on this element
if(!event.target){event.target=event.srcElement||document_1;}// Handle which other element the event is related to
if(!event.relatedTarget){event.relatedTarget=event.fromElement===event.target?event.toElement:event.fromElement;}// Stop the default browser action
event.preventDefault=function(){if(old.preventDefault){old.preventDefault();}event.returnValue=false;old.returnValue=false;event.defaultPrevented=true;};event.defaultPrevented=false;// Stop the event from bubbling
event.stopPropagation=function(){if(old.stopPropagation){old.stopPropagation();}event.cancelBubble=true;old.cancelBubble=true;event.isPropagationStopped=returnTrue;};event.isPropagationStopped=returnFalse;// Stop the event from bubbling and executing other handlers
event.stopImmediatePropagation=function(){if(old.stopImmediatePropagation){old.stopImmediatePropagation();}event.isImmediatePropagationStopped=returnTrue;event.stopPropagation();};event.isImmediatePropagationStopped=returnFalse;// Handle mouse position
if(event.clientX!==null&&event.clientX!==undefined){var doc=document_1.documentElement;var _body=document_1.body;event.pageX=event.clientX+(doc&&doc.scrollLeft||_body&&_body.scrollLeft||0)-(doc&&doc.clientLeft||_body&&_body.clientLeft||0);event.pageY=event.clientY+(doc&&doc.scrollTop||_body&&_body.scrollTop||0)-(doc&&doc.clientTop||_body&&_body.clientTop||0);}// Handle key presses
event.which=event.charCode||event.keyCode;// Fix button for mouse clicks:
// 0 == left; 1 == middle; 2 == right
if(event.button!==null&&event.button!==undefined){// The following is disabled because it does not pass videojs-standard
// and... yikes.
/* eslint-disable */event.button=event.button&1?0:event.button&4?1:event.button&2?2:0;/* eslint-enable */}}event.fixed_=true;// Returns fixed-up instance
return event;}/**
       * Whether passive event listeners are supported
       */var _supportsPassive;var supportsPassive=function supportsPassive(){if(typeof _supportsPassive!=='boolean'){_supportsPassive=false;try{var opts=Object.defineProperty({},'passive',{get:function get(){_supportsPassive=true;}});window_1.addEventListener('test',null,opts);window_1.removeEventListener('test',null,opts);}catch(e){// disregard
}}return _supportsPassive;};/**
       * Touch events Chrome expects to be passive
       */var passiveEvents=['touchstart','touchmove'];/**
       * Add an event listener to element
       * It stores the handler function in a separate cache object
       * and adds a generic handler to the element's event,
       * along with a unique id (guid) to the element.
       *
       * @param {Element|Object} elem
       *        Element or object to bind listeners to
       *
       * @param {string|string[]} type
       *        Type of event to bind to.
       *
       * @param {Function} fn
       *        Event listener.
       */function _on(elem,type,fn){if(Array.isArray(type)){return _handleMultipleEvents(_on,elem,type,fn);}if(!DomData.has(elem)){DomData.set(elem,{});}var data=DomData.get(elem);// We need a place to store all our handler data
if(!data.handlers){data.handlers={};}if(!data.handlers[type]){data.handlers[type]=[];}if(!fn.guid){fn.guid=newGUID();}data.handlers[type].push(fn);if(!data.dispatcher){data.disabled=false;data.dispatcher=function(event,hash){if(data.disabled){return;}event=fixEvent(event);var handlers=data.handlers[event.type];if(handlers){// Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.
var handlersCopy=handlers.slice(0);for(var _m=0,_n3=handlersCopy.length;_m<_n3;_m++){if(event.isImmediatePropagationStopped()){break;}else{try{handlersCopy[_m].call(elem,event,hash);}catch(e){log$1.error(e);}}}}};}if(data.handlers[type].length===1){if(elem.addEventListener){var options=false;if(supportsPassive()&&passiveEvents.indexOf(type)>-1){options={passive:true};}elem.addEventListener(type,data.dispatcher,options);}else if(elem.attachEvent){elem.attachEvent('on'+type,data.dispatcher);}}}/**
       * Removes event listeners from an element
       *
       * @param {Element|Object} elem
       *        Object to remove listeners from.
       *
       * @param {string|string[]} [type]
       *        Type of listener to remove. Don't include to remove all events from element.
       *
       * @param {Function} [fn]
       *        Specific listener to remove. Don't include to remove listeners for an event
       *        type.
       */function _off(elem,type,fn){// Don't want to add a cache object through getElData if not needed
if(!DomData.has(elem)){return;}var data=DomData.get(elem);// If no events exist, nothing to unbind
if(!data.handlers){return;}if(Array.isArray(type)){return _handleMultipleEvents(_off,elem,type,fn);}// Utility function
var removeType=function removeType(el,t){data.handlers[t]=[];_cleanUpEvents(el,t);};// Are we removing all bound events?
if(type===undefined){for(var _t7 in data.handlers){if(Object.prototype.hasOwnProperty.call(data.handlers||{},_t7)){removeType(elem,_t7);}}return;}var handlers=data.handlers[type];// If no handlers exist, nothing to unbind
if(!handlers){return;}// If no listener was provided, remove all listeners for type
if(!fn){removeType(elem,type);return;}// We're only removing a single handler
if(fn.guid){for(var _n4=0;_n4<handlers.length;_n4++){if(handlers[_n4].guid===fn.guid){handlers.splice(_n4--,1);}}}_cleanUpEvents(elem,type);}/**
       * Trigger an event for an element
       *
       * @param {Element|Object} elem
       *        Element to trigger an event on
       *
       * @param {EventTarget~Event|string} event
       *        A string (the type) or an event object with a type attribute
       *
       * @param {Object} [hash]
       *        data hash to pass along with the event
       *
       * @return {boolean|undefined}
       *         Returns the opposite of `defaultPrevented` if default was
       *         prevented. Otherwise, returns `undefined`
       */function _trigger(elem,event,hash){// Fetches element data and a reference to the parent (for bubbling).
// Don't want to add a data object to cache for every parent,
// so checking hasElData first.
var elemData=DomData.has(elem)?DomData.get(elem):{};var parent=elem.parentNode||elem.ownerDocument;// type = event.type || event,
// handler;
// If an event name was passed as a string, creates an event out of it
if(typeof event==='string'){event={type:event,target:elem};}else if(!event.target){event.target=elem;}// Normalizes the event properties.
event=fixEvent(event);// If the passed element has a dispatcher, executes the established handlers.
if(elemData.dispatcher){elemData.dispatcher.call(elem,event,hash);}// Unless explicitly stopped or the event does not bubble (e.g. media events)
// recursively calls this function to bubble the event up the DOM.
if(parent&&!event.isPropagationStopped()&&event.bubbles===true){_trigger.call(null,parent,event,hash);// If at the top of the DOM, triggers the default action unless disabled.
}else if(!parent&&!event.defaultPrevented&&event.target&&event.target[event.type]){if(!DomData.has(event.target)){DomData.set(event.target,{});}var targetData=DomData.get(event.target);// Checks if the target has a default action for this event.
if(event.target[event.type]){// Temporarily disables event dispatching on the target as we have already executed the handler.
targetData.disabled=true;// Executes the default action.
if(typeof event.target[event.type]==='function'){event.target[event.type]();}// Re-enables event dispatching.
targetData.disabled=false;}}// Inform the triggerer if the default was prevented by returning false
return!event.defaultPrevented;}/**
       * Trigger a listener only once for an event.
       *
       * @param {Element|Object} elem
       *        Element or object to bind to.
       *
       * @param {string|string[]} type
       *        Name/type of event
       *
       * @param {Event~EventListener} fn
       *        Event listener function
       */function _one(elem,type,fn){if(Array.isArray(type)){return _handleMultipleEvents(_one,elem,type,fn);}var func=function func(){_off(elem,type,func);fn.apply(this,arguments);};// copy the guid to the new function so it can removed using the original function's ID
func.guid=fn.guid=fn.guid||newGUID();_on(elem,type,func);}/**
       * Trigger a listener only once and then turn if off for all
       * configured events
       *
       * @param {Element|Object} elem
       *        Element or object to bind to.
       *
       * @param {string|string[]} type
       *        Name/type of event
       *
       * @param {Event~EventListener} fn
       *        Event listener function
       */function _any(elem,type,fn){var func=function func(){_off(elem,type,func);fn.apply(this,arguments);};// copy the guid to the new function so it can removed using the original function's ID
func.guid=fn.guid=fn.guid||newGUID();// multiple ons, but one off for everything
_on(elem,type,func);}var Events=/*#__PURE__*/Object.freeze({__proto__:null,fixEvent:fixEvent,on:_on,off:_off,trigger:_trigger,one:_one,any:_any});/**
       * @file fn.js
       * @module fn
       */var UPDATE_REFRESH_INTERVAL=30;/**
       * A private, internal-only function for changing the context of a function.
       *
       * It also stores a unique id on the function so it can be easily removed from
       * events.
       *
       * @private
       * @function
       * @param    {*} context
       *           The object to bind as scope.
       *
       * @param    {Function} fn
       *           The function to be bound to a scope.
       *
       * @param    {number} [uid]
       *           An optional unique ID for the function to be set
       *
       * @return   {Function}
       *           The new function that will be bound into the context given
       */var bind_=function bind_(context,fn,uid){// Make sure the function has a unique ID
if(!fn.guid){fn.guid=newGUID();}// Create the new function that changes the context
var bound=fn.bind(context);// Allow for the ability to individualize this function
// Needed in the case where multiple objects might share the same prototype
// IF both items add an event listener with the same function, then you try to remove just one
// it will remove both because they both have the same guid.
// when using this, you need to use the bind method when you remove the listener as well.
// currently used in text tracks
bound.guid=uid?uid+'_'+fn.guid:fn.guid;return bound;};/**
       * Wraps the given function, `fn`, with a new function that only invokes `fn`
       * at most once per every `wait` milliseconds.
       *
       * @function
       * @param    {Function} fn
       *           The function to be throttled.
       *
       * @param    {number}   wait
       *           The number of milliseconds by which to throttle.
       *
       * @return   {Function}
       */var throttle=function throttle(fn,wait){var last=window_1.performance.now();var throttled=function throttled(){var now=window_1.performance.now();if(now-last>=wait){fn.apply(void 0,arguments);last=now;}};return throttled;};/**
       * Creates a debounced function that delays invoking `func` until after `wait`
       * milliseconds have elapsed since the last time the debounced function was
       * invoked.
       *
       * Inspired by lodash and underscore implementations.
       *
       * @function
       * @param    {Function} func
       *           The function to wrap with debounce behavior.
       *
       * @param    {number} wait
       *           The number of milliseconds to wait after the last invocation.
       *
       * @param    {boolean} [immediate]
       *           Whether or not to invoke the function immediately upon creation.
       *
       * @param    {Object} [context=window]
       *           The "context" in which the debounced function should debounce. For
       *           example, if this function should be tied to a Video.js player,
       *           the player can be passed here. Alternatively, defaults to the
       *           global `window` object.
       *
       * @return   {Function}
       *           A debounced function.
       */var debounce=function debounce(func,wait,immediate){var context=arguments.length>3&&arguments[3]!==undefined?arguments[3]:window_1;var timeout;var cancel=function cancel(){context.clearTimeout(timeout);timeout=null;};/* eslint-disable consistent-this */var debounced=function debounced(){var self=this;var args=arguments;var _later=function later(){timeout=null;_later=null;if(!immediate){func.apply(self,args);}};if(!timeout&&immediate){func.apply(self,args);}context.clearTimeout(timeout);timeout=context.setTimeout(_later,wait);};/* eslint-enable consistent-this */debounced.cancel=cancel;return debounced;};var Fn=/*#__PURE__*/Object.freeze({__proto__:null,UPDATE_REFRESH_INTERVAL:UPDATE_REFRESH_INTERVAL,bind_:bind_,throttle:throttle,debounce:debounce});/**
       * @file src/js/event-target.js
       */var EVENT_MAP;/**
       * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It
       * adds shorthand functions that wrap around lengthy functions. For example:
       * the `on` function is a wrapper around `addEventListener`.
       *
       * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}
       * @class EventTarget
       */var EventTarget$2=/*#__PURE__*/function(){function EventTarget$2(){_classCallCheck(this,EventTarget$2);}_createClass(EventTarget$2,[{key:"on",value:/**
         * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a
         * function that will get called when an event with a certain name gets triggered.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to call with `EventTarget`s
         */function on(type,fn){// Remove the addEventListener alias before calling Events.on
// so we don't get into an infinite type loop
var ael=this.addEventListener;this.addEventListener=function(){};_on(this,type,fn);this.addEventListener=ael;}/**
         * Removes an `event listener` for a specific event from an instance of `EventTarget`.
         * This makes it so that the `event listener` will no longer get called when the
         * named event happens.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to remove.
         */},{key:"off",value:function off(type,fn){_off(this,type,fn);}/**
         * This function will add an `event listener` that gets triggered only once. After the
         * first trigger it will get removed. This is like adding an `event listener`
         * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to be called once for each event name.
         */},{key:"one",value:function one(type,fn){// Remove the addEventListener aliasing Events.on
// so we don't get into an infinite type loop
var ael=this.addEventListener;this.addEventListener=function(){};_one(this,type,fn);this.addEventListener=ael;}/**
         * This function will add an `event listener` that gets triggered only once and is
         * removed from all events. This is like adding an array of `event listener`s
         * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the
         * first time it is triggered.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to be called once for each event name.
         */},{key:"any",value:function any(type,fn){// Remove the addEventListener aliasing Events.on
// so we don't get into an infinite type loop
var ael=this.addEventListener;this.addEventListener=function(){};_any(this,type,fn);this.addEventListener=ael;}/**
         * This function causes an event to happen. This will then cause any `event listeners`
         * that are waiting for that event, to get called. If there are no `event listeners`
         * for an event then nothing will happen.
         *
         * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.
         * Trigger will also call the `on` + `uppercaseEventName` function.
         *
         * Example:
         * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call
         * `onClick` if it exists.
         *
         * @param {string|EventTarget~Event|Object} event
         *        The name of the event, an `Event`, or an object with a key of type set to
         *        an event name.
         */},{key:"trigger",value:function trigger(event){var type=event.type||event;// deprecation
// In a future version we should default target to `this`
// similar to how we default the target to `elem` in
// `Events.trigger`. Right now the default `target` will be
// `document` due to the `Event.fixEvent` call.
if(typeof event==='string'){event={type:type};}event=fixEvent(event);if(this.allowedEvents_[type]&&this['on'+type]){this['on'+type](event);}_trigger(this,event);}},{key:"queueTrigger",value:function queueTrigger(event){var _this39=this;// only set up EVENT_MAP if it'll be used
if(!EVENT_MAP){EVENT_MAP=new Map();}var type=event.type||event;var map=EVENT_MAP.get(this);if(!map){map=new Map();EVENT_MAP.set(this,map);}var oldTimeout=map.get(type);map.delete(type);window_1.clearTimeout(oldTimeout);var timeout=window_1.setTimeout(function(){map.delete(type);// if we cleared out all timeouts for the current target, delete its map
if(map.size===0){map=null;EVENT_MAP.delete(_this39);}_this39.trigger(event);},0);map.set(type,timeout);}}]);return EventTarget$2;}();/**
       * A Custom DOM event.
       *
       * @typedef {CustomEvent} Event
       * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}
       */ /**
       * All event listeners should follow the following format.
       *
       * @callback EventListener
       * @this {EventTarget}
       *
       * @param {Event} event
       *        the event that triggered this function
       *
       * @param {Object} [hash]
       *        hash of data sent during the event
       */ /**
       * An object containing event names as keys and booleans as values.
       *
       * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}
       *         will have extra functionality. See that function for more information.
       *
       * @property EventTarget.prototype.allowedEvents_
       * @protected
       */EventTarget$2.prototype.allowedEvents_={};/**
       * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic
       * the standard DOM API.
       *
       * @function
       * @see {@link EventTarget#on}
       */EventTarget$2.prototype.addEventListener=EventTarget$2.prototype.on;/**
       * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic
       * the standard DOM API.
       *
       * @function
       * @see {@link EventTarget#off}
       */EventTarget$2.prototype.removeEventListener=EventTarget$2.prototype.off;/**
       * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic
       * the standard DOM API.
       *
       * @function
       * @see {@link EventTarget#trigger}
       */EventTarget$2.prototype.dispatchEvent=EventTarget$2.prototype.trigger;/**
       * @file mixins/evented.js
       * @module evented
       */var objName=function objName(obj){if(typeof obj.name==='function'){return obj.name();}if(typeof obj.name==='string'){return obj.name;}if(obj.name_){return obj.name_;}if(obj.constructor&&obj.constructor.name){return obj.constructor.name;}return _typeof(obj);};/**
       * Returns whether or not an object has had the evented mixin applied.
       *
       * @param  {Object} object
       *         An object to test.
       *
       * @return {boolean}
       *         Whether or not the object appears to be evented.
       */var isEvented=function isEvented(object){return object instanceof EventTarget$2||!!object.eventBusEl_&&['on','one','off','trigger'].every(function(k){return typeof object[k]==='function';});};/**
       * Adds a callback to run after the evented mixin applied.
       *
       * @param  {Object} target
       *         An object to Add
       * @param  {Function} callback
       *         The callback to run.
       */var addEventedCallback=function addEventedCallback(target,callback){if(isEvented(target)){callback();}else{if(!target.eventedCallbacks){target.eventedCallbacks=[];}target.eventedCallbacks.push(callback);}};/**
       * Whether a value is a valid event type - non-empty string or array.
       *
       * @private
       * @param  {string|Array} type
       *         The type value to test.
       *
       * @return {boolean}
       *         Whether or not the type is a valid event type.
       */var isValidEventType=function isValidEventType(type){return(// The regex here verifies that the `type` contains at least one non-
// whitespace character.
typeof type==='string'&&/\S/.test(type)||Array.isArray(type)&&!!type.length);};/**
       * Validates a value to determine if it is a valid event target. Throws if not.
       *
       * @private
       * @throws {Error}
       *         If the target does not appear to be a valid event target.
       *
       * @param  {Object} target
       *         The object to test.
       *
       * @param  {Object} obj
       *         The evented object we are validating for
       *
       * @param  {string} fnName
       *         The name of the evented mixin function that called this.
       */var validateTarget=function validateTarget(target,obj,fnName){if(!target||!target.nodeName&&!isEvented(target)){throw new Error("Invalid target for ".concat(objName(obj),"#").concat(fnName,"; must be a DOM node or evented object."));}};/**
       * Validates a value to determine if it is a valid event target. Throws if not.
       *
       * @private
       * @throws {Error}
       *         If the type does not appear to be a valid event type.
       *
       * @param  {string|Array} type
       *         The type to test.
       *
       * @param  {Object} obj
      *         The evented object we are validating for
       *
       * @param  {string} fnName
       *         The name of the evented mixin function that called this.
       */var validateEventType=function validateEventType(type,obj,fnName){if(!isValidEventType(type)){throw new Error("Invalid event type for ".concat(objName(obj),"#").concat(fnName,"; must be a non-empty string or array."));}};/**
       * Validates a value to determine if it is a valid listener. Throws if not.
       *
       * @private
       * @throws {Error}
       *         If the listener is not a function.
       *
       * @param  {Function} listener
       *         The listener to test.
       *
       * @param  {Object} obj
       *         The evented object we are validating for
       *
       * @param  {string} fnName
       *         The name of the evented mixin function that called this.
       */var validateListener=function validateListener(listener,obj,fnName){if(typeof listener!=='function'){throw new Error("Invalid listener for ".concat(objName(obj),"#").concat(fnName,"; must be a function."));}};/**
       * Takes an array of arguments given to `on()` or `one()`, validates them, and
       * normalizes them into an object.
       *
       * @private
       * @param  {Object} self
       *         The evented object on which `on()` or `one()` was called. This
       *         object will be bound as the `this` value for the listener.
       *
       * @param  {Array} args
       *         An array of arguments passed to `on()` or `one()`.
       *
       * @param  {string} fnName
       *         The name of the evented mixin function that called this.
       *
       * @return {Object}
       *         An object containing useful values for `on()` or `one()` calls.
       */var normalizeListenArgs=function normalizeListenArgs(self,args,fnName){// If the number of arguments is less than 3, the target is always the
// evented object itself.
var isTargetingSelf=args.length<3||args[0]===self||args[0]===self.eventBusEl_;var target;var type;var listener;if(isTargetingSelf){target=self.eventBusEl_;// Deal with cases where we got 3 arguments, but we are still listening to
// the evented object itself.
if(args.length>=3){args.shift();}var _args=_slicedToArray(args,2);type=_args[0];listener=_args[1];}else{var _args2=_slicedToArray(args,3);target=_args2[0];type=_args2[1];listener=_args2[2];}validateTarget(target,self,fnName);validateEventType(type,self,fnName);validateListener(listener,self,fnName);listener=bind_(self,listener);return{isTargetingSelf:isTargetingSelf,target:target,type:type,listener:listener};};/**
       * Adds the listener to the event type(s) on the target, normalizing for
       * the type of target.
       *
       * @private
       * @param  {Element|Object} target
       *         A DOM node or evented object.
       *
       * @param  {string} method
       *         The event binding method to use ("on" or "one").
       *
       * @param  {string|Array} type
       *         One or more event type(s).
       *
       * @param  {Function} listener
       *         A listener function.
       */var listen=function listen(target,method,type,listener){validateTarget(target,target,method);if(target.nodeName){Events[method](target,type,listener);}else{target[method](type,listener);}};/**
       * Contains methods that provide event capabilities to an object which is passed
       * to {@link module:evented|evented}.
       *
       * @mixin EventedMixin
       */var EventedMixin={/**
         * Add a listener to an event (or events) on this object or another evented
         * object.
         *
         * @param  {string|Array|Element|Object} targetOrType
         *         If this is a string or array, it represents the event type(s)
         *         that will trigger the listener.
         *
         *         Another evented object can be passed here instead, which will
         *         cause the listener to listen for events on _that_ object.
         *
         *         In either case, the listener's `this` value will be bound to
         *         this object.
         *
         * @param  {string|Array|Function} typeOrListener
         *         If the first argument was a string or array, this should be the
         *         listener function. Otherwise, this is a string or array of event
         *         type(s).
         *
         * @param  {Function} [listener]
         *         If the first argument was another evented object, this will be
         *         the listener function.
         */on:function on(){var _this40=this;for(var _len26=arguments.length,args=new Array(_len26),_key27=0;_key27<_len26;_key27++){args[_key27]=arguments[_key27];}var _normalizeListenArgs=normalizeListenArgs(this,args,'on'),isTargetingSelf=_normalizeListenArgs.isTargetingSelf,target=_normalizeListenArgs.target,type=_normalizeListenArgs.type,listener=_normalizeListenArgs.listener;listen(target,'on',type,listener);// If this object is listening to another evented object.
if(!isTargetingSelf){// If this object is disposed, remove the listener.
var removeListenerOnDispose=function removeListenerOnDispose(){return _this40.off(target,type,listener);};// Use the same function ID as the listener so we can remove it later it
// using the ID of the original listener.
removeListenerOnDispose.guid=listener.guid;// Add a listener to the target's dispose event as well. This ensures
// that if the target is disposed BEFORE this object, we remove the
// removal listener that was just added. Otherwise, we create a memory leak.
var removeRemoverOnTargetDispose=function removeRemoverOnTargetDispose(){return _this40.off('dispose',removeListenerOnDispose);};// Use the same function ID as the listener so we can remove it later
// it using the ID of the original listener.
removeRemoverOnTargetDispose.guid=listener.guid;listen(this,'on','dispose',removeListenerOnDispose);listen(target,'on','dispose',removeRemoverOnTargetDispose);}},/**
         * Add a listener to an event (or events) on this object or another evented
         * object. The listener will be called once per event and then removed.
         *
         * @param  {string|Array|Element|Object} targetOrType
         *         If this is a string or array, it represents the event type(s)
         *         that will trigger the listener.
         *
         *         Another evented object can be passed here instead, which will
         *         cause the listener to listen for events on _that_ object.
         *
         *         In either case, the listener's `this` value will be bound to
         *         this object.
         *
         * @param  {string|Array|Function} typeOrListener
         *         If the first argument was a string or array, this should be the
         *         listener function. Otherwise, this is a string or array of event
         *         type(s).
         *
         * @param  {Function} [listener]
         *         If the first argument was another evented object, this will be
         *         the listener function.
         */one:function one(){var _this41=this;for(var _len27=arguments.length,args=new Array(_len27),_key28=0;_key28<_len27;_key28++){args[_key28]=arguments[_key28];}var _normalizeListenArgs2=normalizeListenArgs(this,args,'one'),isTargetingSelf=_normalizeListenArgs2.isTargetingSelf,target=_normalizeListenArgs2.target,type=_normalizeListenArgs2.type,listener=_normalizeListenArgs2.listener;// Targeting this evented object.
if(isTargetingSelf){listen(target,'one',type,listener);// Targeting another evented object.
}else{// TODO: This wrapper is incorrect! It should only
//       remove the wrapper for the event type that called it.
//       Instead all listeners are removed on the first trigger!
//       see https://github.com/videojs/video.js/issues/5962
var wrapper=function wrapper(){_this41.off(target,type,wrapper);for(var _len28=arguments.length,largs=new Array(_len28),_key29=0;_key29<_len28;_key29++){largs[_key29]=arguments[_key29];}listener.apply(null,largs);};// Use the same function ID as the listener so we can remove it later
// it using the ID of the original listener.
wrapper.guid=listener.guid;listen(target,'one',type,wrapper);}},/**
         * Add a listener to an event (or events) on this object or another evented
         * object. The listener will only be called once for the first event that is triggered
         * then removed.
         *
         * @param  {string|Array|Element|Object} targetOrType
         *         If this is a string or array, it represents the event type(s)
         *         that will trigger the listener.
         *
         *         Another evented object can be passed here instead, which will
         *         cause the listener to listen for events on _that_ object.
         *
         *         In either case, the listener's `this` value will be bound to
         *         this object.
         *
         * @param  {string|Array|Function} typeOrListener
         *         If the first argument was a string or array, this should be the
         *         listener function. Otherwise, this is a string or array of event
         *         type(s).
         *
         * @param  {Function} [listener]
         *         If the first argument was another evented object, this will be
         *         the listener function.
         */any:function any(){var _this42=this;for(var _len29=arguments.length,args=new Array(_len29),_key30=0;_key30<_len29;_key30++){args[_key30]=arguments[_key30];}var _normalizeListenArgs3=normalizeListenArgs(this,args,'any'),isTargetingSelf=_normalizeListenArgs3.isTargetingSelf,target=_normalizeListenArgs3.target,type=_normalizeListenArgs3.type,listener=_normalizeListenArgs3.listener;// Targeting this evented object.
if(isTargetingSelf){listen(target,'any',type,listener);// Targeting another evented object.
}else{var wrapper=function wrapper(){_this42.off(target,type,wrapper);for(var _len30=arguments.length,largs=new Array(_len30),_key31=0;_key31<_len30;_key31++){largs[_key31]=arguments[_key31];}listener.apply(null,largs);};// Use the same function ID as the listener so we can remove it later
// it using the ID of the original listener.
wrapper.guid=listener.guid;listen(target,'any',type,wrapper);}},/**
         * Removes listener(s) from event(s) on an evented object.
         *
         * @param  {string|Array|Element|Object} [targetOrType]
         *         If this is a string or array, it represents the event type(s).
         *
         *         Another evented object can be passed here instead, in which case
         *         ALL 3 arguments are _required_.
         *
         * @param  {string|Array|Function} [typeOrListener]
         *         If the first argument was a string or array, this may be the
         *         listener function. Otherwise, this is a string or array of event
         *         type(s).
         *
         * @param  {Function} [listener]
         *         If the first argument was another evented object, this will be
         *         the listener function; otherwise, _all_ listeners bound to the
         *         event type(s) will be removed.
         */off:function off(targetOrType,typeOrListener,listener){// Targeting this evented object.
if(!targetOrType||isValidEventType(targetOrType)){_off(this.eventBusEl_,targetOrType,typeOrListener);// Targeting another evented object.
}else{var target=targetOrType;var type=typeOrListener;// Fail fast and in a meaningful way!
validateTarget(target,this,'off');validateEventType(type,this,'off');validateListener(listener,this,'off');// Ensure there's at least a guid, even if the function hasn't been used
listener=bind_(this,listener);// Remove the dispose listener on this evented object, which was given
// the same guid as the event listener in on().
this.off('dispose',listener);if(target.nodeName){_off(target,type,listener);_off(target,'dispose',listener);}else if(isEvented(target)){target.off(type,listener);target.off('dispose',listener);}}},/**
         * Fire an event on this evented object, causing its listeners to be called.
         *
         * @param   {string|Object} event
         *          An event type or an object with a type property.
         *
         * @param   {Object} [hash]
         *          An additional object to pass along to listeners.
         *
         * @return {boolean}
         *          Whether or not the default behavior was prevented.
         */trigger:function trigger(event,hash){validateTarget(this.eventBusEl_,this,'trigger');var type=event&&typeof event!=='string'?event.type:event;if(!isValidEventType(type)){throw new Error("Invalid event type for ".concat(objName(this),"#trigger; ")+'must be a non-empty string or object with a type key that has a non-empty value.');}return _trigger(this.eventBusEl_,event,hash);}};/**
       * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.
       *
       * @param  {Object} target
       *         The object to which to add event methods.
       *
       * @param  {Object} [options={}]
       *         Options for customizing the mixin behavior.
       *
       * @param  {string} [options.eventBusKey]
       *         By default, adds a `eventBusEl_` DOM element to the target object,
       *         which is used as an event bus. If the target object already has a
       *         DOM element that should be used, pass its key here.
       *
       * @return {Object}
       *         The target object.
       */function evented(target){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var eventBusKey=options.eventBusKey;// Set or create the eventBusEl_.
if(eventBusKey){if(!target[eventBusKey].nodeName){throw new Error("The eventBusKey \"".concat(eventBusKey,"\" does not refer to an element."));}target.eventBusEl_=target[eventBusKey];}else{target.eventBusEl_=_createEl('span',{className:'vjs-event-bus'});}Object.assign(target,EventedMixin);if(target.eventedCallbacks){target.eventedCallbacks.forEach(function(callback){callback();});}// When any evented object is disposed, it removes all its listeners.
target.on('dispose',function(){target.off();[target,target.el_,target.eventBusEl_].forEach(function(val){if(val&&DomData.has(val)){DomData.delete(val);}});window_1.setTimeout(function(){target.eventBusEl_=null;},0);});return target;}/**
       * @file mixins/stateful.js
       * @module stateful
       */ /**
       * Contains methods that provide statefulness to an object which is passed
       * to {@link module:stateful}.
       *
       * @mixin StatefulMixin
       */var StatefulMixin={/**
         * A hash containing arbitrary keys and values representing the state of
         * the object.
         *
         * @type {Object}
         */state:{},/**
         * Set the state of an object by mutating its
         * {@link module:stateful~StatefulMixin.state|state} object in place.
         *
         * @fires   module:stateful~StatefulMixin#statechanged
         * @param   {Object|Function} stateUpdates
         *          A new set of properties to shallow-merge into the plugin state.
         *          Can be a plain object or a function returning a plain object.
         *
         * @return {Object|undefined}
         *          An object containing changes that occurred. If no changes
         *          occurred, returns `undefined`.
         */setState:function setState(stateUpdates){var _this43=this;// Support providing the `stateUpdates` state as a function.
if(typeof stateUpdates==='function'){stateUpdates=stateUpdates();}var changes;each(stateUpdates,function(value,key){// Record the change if the value is different from what's in the
// current state.
if(_this43.state[key]!==value){changes=changes||{};changes[key]={from:_this43.state[key],to:value};}_this43.state[key]=value;});// Only trigger "statechange" if there were changes AND we have a trigger
// function. This allows us to not require that the target object be an
// evented object.
if(changes&&isEvented(this)){/**
             * An event triggered on an object that is both
             * {@link module:stateful|stateful} and {@link module:evented|evented}
             * indicating that its state has changed.
             *
             * @event    module:stateful~StatefulMixin#statechanged
             * @type     {Object}
             * @property {Object} changes
             *           A hash containing the properties that were changed and
             *           the values they were changed `from` and `to`.
             */this.trigger({changes:changes,type:'statechanged'});}return changes;}};/**
       * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target
       * object.
       *
       * If the target object is {@link module:evented|evented} and has a
       * `handleStateChanged` method, that method will be automatically bound to the
       * `statechanged` event on itself.
       *
       * @param   {Object} target
       *          The object to be made stateful.
       *
       * @param   {Object} [defaultState]
       *          A default set of properties to populate the newly-stateful object's
       *          `state` property.
       *
       * @return {Object}
       *          Returns the `target`.
       */function stateful(target,defaultState){Object.assign(target,StatefulMixin);// This happens after the mixing-in because we need to replace the `state`
// added in that step.
target.state=Object.assign({},target.state,defaultState);// Auto-bind the `handleStateChanged` method of the target object if it exists.
if(typeof target.handleStateChanged==='function'&&isEvented(target)){target.on('statechanged',target.handleStateChanged);}return target;}/**
       * @file str.js
       * @module to-lower-case
       */ /**
       * Lowercase the first letter of a string.
       *
       * @param {string} string
       *        String to be lowercased
       *
       * @return {string}
       *         The string with a lowercased first letter
       */var toLowerCase=function toLowerCase(string){if(typeof string!=='string'){return string;}return string.replace(/./,function(w){return w.toLowerCase();});};/**
       * Uppercase the first letter of a string.
       *
       * @param {string} string
       *        String to be uppercased
       *
       * @return {string}
       *         The string with an uppercased first letter
       */var toTitleCase$1=function toTitleCase$1(string){if(typeof string!=='string'){return string;}return string.replace(/./,function(w){return w.toUpperCase();});};/**
       * Compares the TitleCase versions of the two strings for equality.
       *
       * @param {string} str1
       *        The first string to compare
       *
       * @param {string} str2
       *        The second string to compare
       *
       * @return {boolean}
       *         Whether the TitleCase versions of the strings are equal
       */var titleCaseEquals=function titleCaseEquals(str1,str2){return toTitleCase$1(str1)===toTitleCase$1(str2);};var Str=/*#__PURE__*/Object.freeze({__proto__:null,toLowerCase:toLowerCase,toTitleCase:toTitleCase$1,titleCaseEquals:titleCaseEquals});/**
       * Player Component - Base class for all UI objects
       *
       * @file component.js
       */ /**
       * Base class for all UI Components.
       * Components are UI objects which represent both a javascript object and an element
       * in the DOM. They can be children of other components, and can have
       * children themselves.
       *
       * Components can also use methods from {@link EventTarget}
       */var Component$1=/*#__PURE__*/function(){/**
         * A callback that is called when a component is ready. Does not have any
         * parameters and any callback value will be ignored.
         *
         * @callback ReadyCallback
         * @this Component
         */ /**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of component options.
         *
         * @param {Object[]} [options.children]
         *        An array of children objects to initialize this component with. Children objects have
         *        a name property that will be used if more than one component of the same type needs to be
         *        added.
         *
         * @param  {string} [options.className]
         *         A class or space separated list of classes to add the component
         *
         * @param {ReadyCallback} [ready]
         *        Function that gets called when the `Component` is ready.
         */function Component$1(player,options,ready){var _this44=this;_classCallCheck(this,Component$1);// The component might be the player itself and we can't pass `this` to super
if(!player&&this.play){this.player_=player=this;// eslint-disable-line
}else{this.player_=player;}this.isDisposed_=false;// Hold the reference to the parent component via `addChild` method
this.parentComponent_=null;// Make a copy of prototype.options_ to protect against overriding defaults
this.options_=merge$1({},this.options_);// Updated options with supplied options
options=this.options_=merge$1(this.options_,options);// Get ID from options or options element if one is supplied
this.id_=options.id||options.el&&options.el.id;// If there was no ID from the options, generate one
if(!this.id_){// Don't require the player ID function in the case of mock players
var id=player&&player.id&&player.id()||'no_player';this.id_="".concat(id,"_component_").concat(newGUID());}this.name_=options.name||null;// Create element if one wasn't provided in options
if(options.el){this.el_=options.el;}else if(options.createEl!==false){this.el_=this.createEl();}if(options.className&&this.el_){options.className.split(' ').forEach(function(c){return _this44.addClass(c);});}// Remove the placeholder event methods. If the component is evented, the
// real methods are added next
['on','off','one','any','trigger'].forEach(function(fn){_this44[fn]=undefined;});// if evented is anything except false, we want to mixin in evented
if(options.evented!==false){// Make this an evented object and use `el_`, if available, as its event bus
evented(this,{eventBusKey:this.el_?'el_':null});this.handleLanguagechange=this.handleLanguagechange.bind(this);this.on(this.player_,'languagechange',this.handleLanguagechange);}stateful(this,this.constructor.defaultState);this.children_=[];this.childIndex_={};this.childNameIndex_={};this.setTimeoutIds_=new Set();this.setIntervalIds_=new Set();this.rafIds_=new Set();this.namedRafs_=new Map();this.clearingTimersOnDispose_=false;// Add any child components in options
if(options.initChildren!==false){this.initChildren();}// Don't want to trigger ready here or it will go before init is actually
// finished for all children that run this constructor
this.ready(ready);if(options.reportTouchActivity!==false){this.enableTouchActivity();}}// `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.
// They are replaced or removed in the constructor
/**
         * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a
         * function that will get called when an event with a certain name gets triggered.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to call with `EventTarget`s
         */_createClass(Component$1,[{key:"on",value:function on(type,fn){}/**
         * Removes an `event listener` for a specific event from an instance of `EventTarget`.
         * This makes it so that the `event listener` will no longer get called when the
         * named event happens.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} [fn]
         *        The function to remove. If not specified, all listeners managed by Video.js will be removed.
         */},{key:"off",value:function off(type,fn){}/**
         * This function will add an `event listener` that gets triggered only once. After the
         * first trigger it will get removed. This is like adding an `event listener`
         * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to be called once for each event name.
         */},{key:"one",value:function one(type,fn){}/**
         * This function will add an `event listener` that gets triggered only once and is
         * removed from all events. This is like adding an array of `event listener`s
         * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the
         * first time it is triggered.
         *
         * @param {string|string[]} type
         *        An event name or an array of event names.
         *
         * @param {Function} fn
         *        The function to be called once for each event name.
         */},{key:"any",value:function any(type,fn){}/**
         * This function causes an event to happen. This will then cause any `event listeners`
         * that are waiting for that event, to get called. If there are no `event listeners`
         * for an event then nothing will happen.
         *
         * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.
         * Trigger will also call the `on` + `uppercaseEventName` function.
         *
         * Example:
         * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call
         * `onClick` if it exists.
         *
         * @param {string|Event|Object} event
         *        The name of the event, an `Event`, or an object with a key of type set to
         *        an event name.
         *
         * @param {Object} [hash]
         *        Optionally extra argument to pass through to an event listener
         */},{key:"trigger",value:function trigger(event,hash){}/**
         * Dispose of the `Component` and all child components.
         *
         * @fires Component#dispose
         *
         * @param {Object} options
         * @param {Element} options.originalEl element with which to replace player element
         */},{key:"dispose",value:function dispose(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Bail out if the component has already been disposed.
if(this.isDisposed_){return;}if(this.readyQueue_){this.readyQueue_.length=0;}/**
           * Triggered when a `Component` is disposed.
           *
           * @event Component#dispose
           * @type {Event}
           *
           * @property {boolean} [bubbles=false]
           *           set to false so that the dispose event does not
           *           bubble up
           */this.trigger({type:'dispose',bubbles:false});this.isDisposed_=true;// Dispose all children.
if(this.children_){for(var _i82=this.children_.length-1;_i82>=0;_i82--){if(this.children_[_i82].dispose){this.children_[_i82].dispose();}}}// Delete child references
this.children_=null;this.childIndex_=null;this.childNameIndex_=null;this.parentComponent_=null;if(this.el_){// Remove element from DOM
if(this.el_.parentNode){if(options.restoreEl){this.el_.parentNode.replaceChild(options.restoreEl,this.el_);}else{this.el_.parentNode.removeChild(this.el_);}}this.el_=null;}// remove reference to the player after disposing of the element
this.player_=null;}/**
         * Determine whether or not this component has been disposed.
         *
         * @return {boolean}
         *         If the component has been disposed, will be `true`. Otherwise, `false`.
         */},{key:"isDisposed",value:function isDisposed(){return Boolean(this.isDisposed_);}/**
         * Return the {@link Player} that the `Component` has attached to.
         *
         * @return { import('./player').default }
         *         The player that this `Component` has attached to.
         */},{key:"player",value:function player(){return this.player_;}/**
         * Deep merge of options objects with new options.
         * > Note: When both `obj` and `options` contain properties whose values are objects.
         *         The two properties get merged using {@link module:obj.merge}
         *
         * @param {Object} obj
         *        The object that contains new options.
         *
         * @return {Object}
         *         A new object of `this.options_` and `obj` merged together.
         */},{key:"options",value:function options(obj){if(!obj){return this.options_;}this.options_=merge$1(this.options_,obj);return this.options_;}/**
         * Get the `Component`s DOM element
         *
         * @return {Element}
         *         The DOM element for this `Component`.
         */},{key:"el",value:function el(){return this.el_;}/**
         * Create the `Component`s DOM element.
         *
         * @param {string} [tagName]
         *        Element's DOM node type. e.g. 'div'
         *
         * @param {Object} [properties]
         *        An object of properties that should be set.
         *
         * @param {Object} [attributes]
         *        An object of attributes that should be set.
         *
         * @return {Element}
         *         The element that gets created.
         */},{key:"createEl",value:function createEl(tagName,properties,attributes){return _createEl(tagName,properties,attributes);}/**
         * Localize a string given the string in english.
         *
         * If tokens are provided, it'll try and run a simple token replacement on the provided string.
         * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.
         *
         * If a `defaultValue` is provided, it'll use that over `string`,
         * if a value isn't found in provided language files.
         * This is useful if you want to have a descriptive key for token replacement
         * but have a succinct localized string and not require `en.json` to be included.
         *
         * Currently, it is used for the progress bar timing.
         * ```js
         * {
         *   "progress bar timing: currentTime={1} duration={2}": "{1} of {2}"
         * }
         * ```
         * It is then used like so:
         * ```js
         * this.localize('progress bar timing: currentTime={1} duration{2}',
         *               [this.player_.currentTime(), this.player_.duration()],
         *               '{1} of {2}');
         * ```
         *
         * Which outputs something like: `01:23 of 24:56`.
         *
         *
         * @param {string} string
         *        The string to localize and the key to lookup in the language files.
         * @param {string[]} [tokens]
         *        If the current item has token replacements, provide the tokens here.
         * @param {string} [defaultValue]
         *        Defaults to `string`. Can be a default value to use for token replacement
         *        if the lookup key is needed to be separate.
         *
         * @return {string}
         *         The localized string or if no localization exists the english string.
         */},{key:"localize",value:function localize(string,tokens){var defaultValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:string;var code=this.player_.language&&this.player_.language();var languages=this.player_.languages&&this.player_.languages();var language=languages&&languages[code];var primaryCode=code&&code.split('-')[0];var primaryLang=languages&&languages[primaryCode];var localizedString=defaultValue;if(language&&language[string]){localizedString=language[string];}else if(primaryLang&&primaryLang[string]){localizedString=primaryLang[string];}if(tokens){localizedString=localizedString.replace(/\{(\d+)\}/g,function(match,index){var value=tokens[index-1];var ret=value;if(typeof value==='undefined'){ret=match;}return ret;});}return localizedString;}/**
         * Handles language change for the player in components. Should be overridden by sub-components.
         *
         * @abstract
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){}/**
         * Return the `Component`s DOM element. This is where children get inserted.
         * This will usually be the the same as the element returned in {@link Component#el}.
         *
         * @return {Element}
         *         The content element for this `Component`.
         */},{key:"contentEl",value:function contentEl(){return this.contentEl_||this.el_;}/**
         * Get this `Component`s ID
         *
         * @return {string}
         *         The id of this `Component`
         */},{key:"id",value:function id(){return this.id_;}/**
         * Get the `Component`s name. The name gets used to reference the `Component`
         * and is set during registration.
         *
         * @return {string}
         *         The name of this `Component`.
         */},{key:"name",value:function name(){return this.name_;}/**
         * Get an array of all child components
         *
         * @return {Array}
         *         The children
         */},{key:"children",value:function children(){return this.children_;}/**
         * Returns the child `Component` with the given `id`.
         *
         * @param {string} id
         *        The id of the child `Component` to get.
         *
         * @return {Component|undefined}
         *         The child `Component` with the given `id` or undefined.
         */},{key:"getChildById",value:function getChildById(id){return this.childIndex_[id];}/**
         * Returns the child `Component` with the given `name`.
         *
         * @param {string} name
         *        The name of the child `Component` to get.
         *
         * @return {Component|undefined}
         *         The child `Component` with the given `name` or undefined.
         */},{key:"getChild",value:function getChild(name){if(!name){return;}return this.childNameIndex_[name];}/**
         * Returns the descendant `Component` following the givent
         * descendant `names`. For instance ['foo', 'bar', 'baz'] would
         * try to get 'foo' on the current component, 'bar' on the 'foo'
         * component and 'baz' on the 'bar' component and return undefined
         * if any of those don't exist.
         *
         * @param {...string[]|...string} names
         *        The name of the child `Component` to get.
         *
         * @return {Component|undefined}
         *         The descendant `Component` following the given descendant
         *         `names` or undefined.
         */},{key:"getDescendant",value:function getDescendant(){for(var _len31=arguments.length,names=new Array(_len31),_key32=0;_key32<_len31;_key32++){names[_key32]=arguments[_key32];}// flatten array argument into the main array
names=names.reduce(function(acc,n){return acc.concat(n);},[]);var currentChild=this;for(var _i83=0;_i83<names.length;_i83++){currentChild=currentChild.getChild(names[_i83]);if(!currentChild||!currentChild.getChild){return;}}return currentChild;}/**
         * Adds an SVG icon element to another element or component.
         *
         * @param {string} iconName
         *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'
         *
         * @param {Element} [el=this.el()]
         *        Element to set the title on. Defaults to the current Component's element.
         *
         * @return {Element}
         *        The newly created icon element.
         */},{key:"setIcon",value:function setIcon(iconName){var el=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.el();// TODO: In v9 of video.js, we will want to remove font icons entirely.
// This means this check, as well as the others throughout the code, and
// the unecessary CSS for font icons, will need to be removed.
// See https://github.com/videojs/video.js/pull/8260 as to which components
// need updating.
if(!this.player_.options_.experimentalSvgIcons){return;}var xmlnsURL='http://www.w3.org/2000/svg';// The below creates an element in the format of:
// <span><svg><use>....</use></svg></span>
var iconContainer=_createEl('span',{className:'vjs-icon-placeholder vjs-svg-icon'},{'aria-hidden':'true'});var svgEl=document_1.createElementNS(xmlnsURL,'svg');svgEl.setAttributeNS(null,'viewBox','0 0 512 512');var useEl=document_1.createElementNS(xmlnsURL,'use');svgEl.appendChild(useEl);useEl.setAttributeNS(null,'href',"#vjs-icon-".concat(iconName));iconContainer.appendChild(svgEl);// Replace a pre-existing icon if one exists.
if(this.iconIsSet_){el.replaceChild(iconContainer,el.querySelector('.vjs-icon-placeholder'));}else{el.appendChild(iconContainer);}this.iconIsSet_=true;return iconContainer;}/**
         * Add a child `Component` inside the current `Component`.
         *
         * @param {string|Component} child
         *        The name or instance of a child to add.
         *
         * @param {Object} [options={}]
         *        The key/value store of options that will get passed to children of
         *        the child.
         *
         * @param {number} [index=this.children_.length]
         *        The index to attempt to add a child into.
         *
         *
         * @return {Component}
         *         The `Component` that gets added as a child. When using a string the
         *         `Component` will get created by this process.
         */},{key:"addChild",value:function addChild(child){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var index=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.children_.length;var component;var componentName;// If child is a string, create component with options
if(typeof child==='string'){componentName=toTitleCase$1(child);var componentClassName=options.componentClass||componentName;// Set name through options
options.name=componentName;// Create a new object & element for this controls set
// If there's no .player_, this is a player
var ComponentClass=Component$1.getComponent(componentClassName);if(!ComponentClass){throw new Error("Component ".concat(componentClassName," does not exist"));}// data stored directly on the videojs object may be
// misidentified as a component to retain
// backwards-compatibility with 4.x. check to make sure the
// component class can be instantiated.
if(typeof ComponentClass!=='function'){return null;}component=new ComponentClass(this.player_||this,options);// child is a component instance
}else{component=child;}if(component.parentComponent_){component.parentComponent_.removeChild(component);}this.children_.splice(index,0,component);component.parentComponent_=this;if(typeof component.id==='function'){this.childIndex_[component.id()]=component;}// If a name wasn't used to create the component, check if we can use the
// name function of the component
componentName=componentName||component.name&&toTitleCase$1(component.name());if(componentName){this.childNameIndex_[componentName]=component;this.childNameIndex_[toLowerCase(componentName)]=component;}// Add the UI object's element to the container div (box)
// Having an element is not required
if(typeof component.el==='function'&&component.el()){// If inserting before a component, insert before that component's element
var refNode=null;if(this.children_[index+1]){// Most children are components, but the video tech is an HTML element
if(this.children_[index+1].el_){refNode=this.children_[index+1].el_;}else if(isEl(this.children_[index+1])){refNode=this.children_[index+1];}}this.contentEl().insertBefore(component.el(),refNode);}// Return so it can stored on parent object if desired.
return component;}/**
         * Remove a child `Component` from this `Component`s list of children. Also removes
         * the child `Component`s element from this `Component`s element.
         *
         * @param {Component} component
         *        The child `Component` to remove.
         */},{key:"removeChild",value:function removeChild(component){if(typeof component==='string'){component=this.getChild(component);}if(!component||!this.children_){return;}var childFound=false;for(var _i84=this.children_.length-1;_i84>=0;_i84--){if(this.children_[_i84]===component){childFound=true;this.children_.splice(_i84,1);break;}}if(!childFound){return;}component.parentComponent_=null;this.childIndex_[component.id()]=null;this.childNameIndex_[toTitleCase$1(component.name())]=null;this.childNameIndex_[toLowerCase(component.name())]=null;var compEl=component.el();if(compEl&&compEl.parentNode===this.contentEl()){this.contentEl().removeChild(component.el());}}/**
         * Add and initialize default child `Component`s based upon options.
         */},{key:"initChildren",value:function initChildren(){var _this45=this;var children=this.options_.children;if(children){// `this` is `parent`
var parentOptions=this.options_;var handleAdd=function handleAdd(child){var name=child.name;var opts=child.opts;// Allow options for children to be set at the parent options
// e.g. videojs(id, { controlBar: false });
// instead of videojs(id, { children: { controlBar: false });
if(parentOptions[name]!==undefined){opts=parentOptions[name];}// Allow for disabling default components
// e.g. options['children']['posterImage'] = false
if(opts===false){return;}// Allow options to be passed as a simple boolean if no configuration
// is necessary.
if(opts===true){opts={};}// We also want to pass the original player options
// to each component as well so they don't need to
// reach back into the player for options later.
opts.playerOptions=_this45.options_.playerOptions;// Create and add the child component.
// Add a direct reference to the child by name on the parent instance.
// If two of the same component are used, different names should be supplied
// for each
var newChild=_this45.addChild(name,opts);if(newChild){_this45[name]=newChild;}};// Allow for an array of children details to passed in the options
var workingChildren;var _Tech2=Component$1.getComponent('Tech');if(Array.isArray(children)){workingChildren=children;}else{workingChildren=Object.keys(children);}workingChildren// children that are in this.options_ but also in workingChildren  would
// give us extra children we do not want. So, we want to filter them out.
.concat(Object.keys(this.options_).filter(function(child){return!workingChildren.some(function(wchild){if(typeof wchild==='string'){return child===wchild;}return child===wchild.name;});})).map(function(child){var name;var opts;if(typeof child==='string'){name=child;opts=children[name]||_this45.options_[name]||{};}else{name=child.name;opts=child;}return{name:name,opts:opts};}).filter(function(child){// we have to make sure that child.name isn't in the techOrder since
// techs are registered as Components but can't aren't compatible
// See https://github.com/videojs/video.js/issues/2772
var c=Component$1.getComponent(child.opts.componentClass||toTitleCase$1(child.name));return c&&!_Tech2.isTech(c);}).forEach(handleAdd);}}/**
         * Builds the default DOM class name. Should be overridden by sub-components.
         *
         * @return {string}
         *         The DOM class name for this object.
         *
         * @abstract
         */},{key:"buildCSSClass",value:function buildCSSClass(){// Child classes can include a function that does:
// return 'CLASS NAME' + this._super();
return'';}/**
         * Bind a listener to the component's ready state.
         * Different from event listeners in that if the ready event has already happened
         * it will trigger the function immediately.
         *
         * @param {ReadyCallback} fn
         *        Function that gets called when the `Component` is ready.
         *
         * @return {Component}
         *         Returns itself; method can be chained.
         */},{key:"ready",value:function ready(fn){var sync=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!fn){return;}if(!this.isReady_){this.readyQueue_=this.readyQueue_||[];this.readyQueue_.push(fn);return;}if(sync){fn.call(this);}else{// Call the function asynchronously by default for consistency
this.setTimeout(fn,1);}}/**
         * Trigger all the ready listeners for this `Component`.
         *
         * @fires Component#ready
         */},{key:"triggerReady",value:function triggerReady(){this.isReady_=true;// Ensure ready is triggered asynchronously
this.setTimeout(function(){var readyQueue=this.readyQueue_;// Reset Ready Queue
this.readyQueue_=[];if(readyQueue&&readyQueue.length>0){readyQueue.forEach(function(fn){fn.call(this);},this);}// Allow for using event listeners also
/**
             * Triggered when a `Component` is ready.
             *
             * @event Component#ready
             * @type {Event}
             */this.trigger('ready');},1);}/**
         * Find a single DOM element matching a `selector`. This can be within the `Component`s
         * `contentEl()` or another custom context.
         *
         * @param {string} selector
         *        A valid CSS selector, which will be passed to `querySelector`.
         *
         * @param {Element|string} [context=this.contentEl()]
         *        A DOM element within which to query. Can also be a selector string in
         *        which case the first matching element will get used as context. If
         *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns
         *        nothing it falls back to `document`.
         *
         * @return {Element|null}
         *         the dom element that was found, or null
         *
         * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)
         */},{key:"$",value:function $(selector,context){return _$(selector,context||this.contentEl());}/**
         * Finds all DOM element matching a `selector`. This can be within the `Component`s
         * `contentEl()` or another custom context.
         *
         * @param {string} selector
         *        A valid CSS selector, which will be passed to `querySelectorAll`.
         *
         * @param {Element|string} [context=this.contentEl()]
         *        A DOM element within which to query. Can also be a selector string in
         *        which case the first matching element will get used as context. If
         *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns
         *        nothing it falls back to `document`.
         *
         * @return {NodeList}
         *         a list of dom elements that were found
         *
         * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)
         */},{key:"$$",value:function $$(selector,context){return _$$(selector,context||this.contentEl());}/**
         * Check if a component's element has a CSS class name.
         *
         * @param {string} classToCheck
         *        CSS class name to check.
         *
         * @return {boolean}
         *         - True if the `Component` has the class.
         *         - False if the `Component` does not have the class`
         */},{key:"hasClass",value:function hasClass(classToCheck){return _hasClass(this.el_,classToCheck);}/**
         * Add a CSS class name to the `Component`s element.
         *
         * @param {...string} classesToAdd
         *        One or more CSS class name to add.
         */},{key:"addClass",value:function addClass(){for(var _len32=arguments.length,classesToAdd=new Array(_len32),_key33=0;_key33<_len32;_key33++){classesToAdd[_key33]=arguments[_key33];}_addClass.apply(void 0,[this.el_].concat(classesToAdd));}/**
         * Remove a CSS class name from the `Component`s element.
         *
         * @param {...string} classesToRemove
         *        One or more CSS class name to remove.
         */},{key:"removeClass",value:function removeClass(){for(var _len33=arguments.length,classesToRemove=new Array(_len33),_key34=0;_key34<_len33;_key34++){classesToRemove[_key34]=arguments[_key34];}_removeClass.apply(void 0,[this.el_].concat(classesToRemove));}/**
         * Add or remove a CSS class name from the component's element.
         * - `classToToggle` gets added when {@link Component#hasClass} would return false.
         * - `classToToggle` gets removed when {@link Component#hasClass} would return true.
         *
         * @param  {string} classToToggle
         *         The class to add or remove based on (@link Component#hasClass}
         *
         * @param  {boolean|Dom~predicate} [predicate]
         *         An {@link Dom~predicate} function or a boolean
         */},{key:"toggleClass",value:function toggleClass(classToToggle,predicate){_toggleClass(this.el_,classToToggle,predicate);}/**
         * Show the `Component`s element if it is hidden by removing the
         * 'vjs-hidden' class name from it.
         */},{key:"show",value:function show(){this.removeClass('vjs-hidden');}/**
         * Hide the `Component`s element if it is currently showing by adding the
         * 'vjs-hidden` class name to it.
         */},{key:"hide",value:function hide(){this.addClass('vjs-hidden');}/**
         * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'
         * class name to it. Used during fadeIn/fadeOut.
         *
         * @private
         */},{key:"lockShowing",value:function lockShowing(){this.addClass('vjs-lock-showing');}/**
         * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'
         * class name from it. Used during fadeIn/fadeOut.
         *
         * @private
         */},{key:"unlockShowing",value:function unlockShowing(){this.removeClass('vjs-lock-showing');}/**
         * Get the value of an attribute on the `Component`s element.
         *
         * @param {string} attribute
         *        Name of the attribute to get the value from.
         *
         * @return {string|null}
         *         - The value of the attribute that was asked for.
         *         - Can be an empty string on some browsers if the attribute does not exist
         *           or has no value
         *         - Most browsers will return null if the attribute does not exist or has
         *           no value.
         *
         * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}
         */},{key:"getAttribute",value:function getAttribute(attribute){return _getAttribute(this.el_,attribute);}/**
         * Set the value of an attribute on the `Component`'s element
         *
         * @param {string} attribute
         *        Name of the attribute to set.
         *
         * @param {string} value
         *        Value to set the attribute to.
         *
         * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}
         */},{key:"setAttribute",value:function setAttribute(attribute,value){_setAttribute(this.el_,attribute,value);}/**
         * Remove an attribute from the `Component`s element.
         *
         * @param {string} attribute
         *        Name of the attribute to remove.
         *
         * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}
         */},{key:"removeAttribute",value:function removeAttribute(attribute){_removeAttribute(this.el_,attribute);}/**
         * Get or set the width of the component based upon the CSS styles.
         * See {@link Component#dimension} for more detailed information.
         *
         * @param {number|string} [num]
         *        The width that you want to set postfixed with '%', 'px' or nothing.
         *
         * @param {boolean} [skipListeners]
         *        Skip the componentresize event trigger
         *
         * @return {number|undefined}
         *         The width when getting, zero if there is no width
         */},{key:"width",value:function width(num,skipListeners){return this.dimension('width',num,skipListeners);}/**
         * Get or set the height of the component based upon the CSS styles.
         * See {@link Component#dimension} for more detailed information.
         *
         * @param {number|string} [num]
         *        The height that you want to set postfixed with '%', 'px' or nothing.
         *
         * @param {boolean} [skipListeners]
         *        Skip the componentresize event trigger
         *
         * @return {number|undefined}
         *         The height when getting, zero if there is no height
         */},{key:"height",value:function height(num,skipListeners){return this.dimension('height',num,skipListeners);}/**
         * Set both the width and height of the `Component` element at the same time.
         *
         * @param  {number|string} width
         *         Width to set the `Component`s element to.
         *
         * @param  {number|string} height
         *         Height to set the `Component`s element to.
         */},{key:"dimensions",value:function dimensions(width,height){// Skip componentresize listeners on width for optimization
this.width(width,true);this.height(height);}/**
         * Get or set width or height of the `Component` element. This is the shared code
         * for the {@link Component#width} and {@link Component#height}.
         *
         * Things to know:
         * - If the width or height in an number this will return the number postfixed with 'px'.
         * - If the width/height is a percent this will return the percent postfixed with '%'
         * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function
         *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.
         *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}
         *   for more information
         * - If you want the computed style of the component, use {@link Component#currentWidth}
         *   and {@link {Component#currentHeight}
         *
         * @fires Component#componentresize
         *
         * @param {string} widthOrHeight
         8        'width' or 'height'
         *
         * @param  {number|string} [num]
         8         New dimension
         *
         * @param  {boolean} [skipListeners]
         *         Skip componentresize event trigger
         *
         * @return {number|undefined}
         *         The dimension when getting or 0 if unset
         */},{key:"dimension",value:function dimension(widthOrHeight,num,skipListeners){if(num!==undefined){// Set to zero if null or literally NaN (NaN !== NaN)
if(num===null||num!==num){num=0;}// Check if using css width/height (% or px) and adjust
if((''+num).indexOf('%')!==-1||(''+num).indexOf('px')!==-1){this.el_.style[widthOrHeight]=num;}else if(num==='auto'){this.el_.style[widthOrHeight]='';}else{this.el_.style[widthOrHeight]=num+'px';}// skipListeners allows us to avoid triggering the resize event when setting both width and height
if(!skipListeners){/**
               * Triggered when a component is resized.
               *
               * @event Component#componentresize
               * @type {Event}
               */this.trigger('componentresize');}return;}// Not setting a value, so getting it
// Make sure element exists
if(!this.el_){return 0;}// Get dimension value from style
var val=this.el_.style[widthOrHeight];var pxIndex=val.indexOf('px');if(pxIndex!==-1){// Return the pixel value with no 'px'
return parseInt(val.slice(0,pxIndex),10);}// No px so using % or no style was set, so falling back to offsetWidth/height
// If component has display:none, offset will return 0
// TODO: handle display:none and no dimension style using px
return parseInt(this.el_['offset'+toTitleCase$1(widthOrHeight)],10);}/**
         * Get the computed width or the height of the component's element.
         *
         * Uses `window.getComputedStyle`.
         *
         * @param {string} widthOrHeight
         *        A string containing 'width' or 'height'. Whichever one you want to get.
         *
         * @return {number}
         *         The dimension that gets asked for or 0 if nothing was set
         *         for that dimension.
         */},{key:"currentDimension",value:function currentDimension(widthOrHeight){var computedWidthOrHeight=0;if(widthOrHeight!=='width'&&widthOrHeight!=='height'){throw new Error('currentDimension only accepts width or height value');}computedWidthOrHeight=computedStyle(this.el_,widthOrHeight);// remove 'px' from variable and parse as integer
computedWidthOrHeight=parseFloat(computedWidthOrHeight);// if the computed value is still 0, it's possible that the browser is lying
// and we want to check the offset values.
// This code also runs wherever getComputedStyle doesn't exist.
if(computedWidthOrHeight===0||isNaN(computedWidthOrHeight)){var rule="offset".concat(toTitleCase$1(widthOrHeight));computedWidthOrHeight=this.el_[rule];}return computedWidthOrHeight;}/**
         * An object that contains width and height values of the `Component`s
         * computed style. Uses `window.getComputedStyle`.
         *
         * @typedef {Object} Component~DimensionObject
         *
         * @property {number} width
         *           The width of the `Component`s computed style.
         *
         * @property {number} height
         *           The height of the `Component`s computed style.
         */ /**
         * Get an object that contains computed width and height values of the
         * component's element.
         *
         * Uses `window.getComputedStyle`.
         *
         * @return {Component~DimensionObject}
         *         The computed dimensions of the component's element.
         */},{key:"currentDimensions",value:function currentDimensions(){return{width:this.currentDimension('width'),height:this.currentDimension('height')};}/**
         * Get the computed width of the component's element.
         *
         * Uses `window.getComputedStyle`.
         *
         * @return {number}
         *         The computed width of the component's element.
         */},{key:"currentWidth",value:function currentWidth(){return this.currentDimension('width');}/**
         * Get the computed height of the component's element.
         *
         * Uses `window.getComputedStyle`.
         *
         * @return {number}
         *         The computed height of the component's element.
         */},{key:"currentHeight",value:function currentHeight(){return this.currentDimension('height');}/**
         * Retrieves the position and size information of the component's element.
         *
         * @return {Object} An object with `boundingClientRect` and `center` properties.
         *         - `boundingClientRect`: An object with properties `x`, `y`, `width`,
         *           `height`, `top`, `right`, `bottom`, and `left`, representing
         *           the bounding rectangle of the element.
         *         - `center`: An object with properties `x` and `y`, representing
         *           the center point of the element. `width` and `height` are set to 0.
         */},{key:"getPositions",value:function getPositions(){var rect=this.el_.getBoundingClientRect();// Creating objects that mirror DOMRectReadOnly for boundingClientRect and center
var boundingClientRect={x:rect.x,y:rect.y,width:rect.width,height:rect.height,top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left};// Calculating the center position
var center={x:rect.left+rect.width/2,y:rect.top+rect.height/2,width:0,height:0,top:rect.top+rect.height/2,right:rect.left+rect.width/2,bottom:rect.top+rect.height/2,left:rect.left+rect.width/2};return{boundingClientRect:boundingClientRect,center:center};}/**
         * Set the focus to this component
         */},{key:"focus",value:function focus(){this.el_.focus();}/**
         * Remove the focus from this component
         */},{key:"blur",value:function blur(){this.el_.blur();}/**
         * When this Component receives a `keydown` event which it does not process,
         *  it passes the event to the Player for handling.
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         */},{key:"handleKeyDown",value:function handleKeyDown(event){if(this.player_){// We only stop propagation here because we want unhandled events to fall
// back to the browser. Exclude Tab for focus trapping, exclude also when spatialNavigation is enabled.
if(!keycode.isEventKey(event,'Tab')&&!(this.player_.options_.playerOptions.spatialNavigation&&this.player_.options_.playerOptions.spatialNavigation.enabled)){event.stopPropagation();}this.player_.handleKeyDown(event);}}/**
         * Many components used to have a `handleKeyPress` method, which was poorly
         * named because it listened to a `keydown` event. This method name now
         * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`
         * will not see their method calls stop working.
         *
         * @param {KeyboardEvent} event
         *        The event that caused this function to be called.
         */},{key:"handleKeyPress",value:function handleKeyPress(event){this.handleKeyDown(event);}/**
         * Emit a 'tap' events when touch event support gets detected. This gets used to
         * support toggling the controls through a tap on the video. They get enabled
         * because every sub-component would have extra overhead otherwise.
         *
         * @protected
         * @fires Component#tap
         * @listens Component#touchstart
         * @listens Component#touchmove
         * @listens Component#touchleave
         * @listens Component#touchcancel
         * @listens Component#touchend
          */},{key:"emitTapEvents",value:function emitTapEvents(){// Track the start time so we can determine how long the touch lasted
var touchStart=0;var firstTouch=null;// Maximum movement allowed during a touch event to still be considered a tap
// Other popular libs use anywhere from 2 (hammer.js) to 15,
// so 10 seems like a nice, round number.
var tapMovementThreshold=10;// The maximum length a touch can be while still being considered a tap
var touchTimeThreshold=200;var couldBeTap;this.on('touchstart',function(event){// If more than one finger, don't consider treating this as a click
if(event.touches.length===1){// Copy pageX/pageY from the object
firstTouch={pageX:event.touches[0].pageX,pageY:event.touches[0].pageY};// Record start time so we can detect a tap vs. "touch and hold"
touchStart=window_1.performance.now();// Reset couldBeTap tracking
couldBeTap=true;}});this.on('touchmove',function(event){// If more than one finger, don't consider treating this as a click
if(event.touches.length>1){couldBeTap=false;}else if(firstTouch){// Some devices will throw touchmoves for all but the slightest of taps.
// So, if we moved only a small distance, this could still be a tap
var xdiff=event.touches[0].pageX-firstTouch.pageX;var ydiff=event.touches[0].pageY-firstTouch.pageY;var touchDistance=Math.sqrt(xdiff*xdiff+ydiff*ydiff);if(touchDistance>tapMovementThreshold){couldBeTap=false;}}});var noTap=function noTap(){couldBeTap=false;};// TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s
this.on('touchleave',noTap);this.on('touchcancel',noTap);// When the touch ends, measure how long it took and trigger the appropriate
// event
this.on('touchend',function(event){firstTouch=null;// Proceed only if the touchmove/leave/cancel event didn't happen
if(couldBeTap===true){// Measure how long the touch lasted
var touchTime=window_1.performance.now()-touchStart;// Make sure the touch was less than the threshold to be considered a tap
if(touchTime<touchTimeThreshold){// Don't let browser turn this into a click
event.preventDefault();/**
                 * Triggered when a `Component` is tapped.
                 *
                 * @event Component#tap
                 * @type {MouseEvent}
                 */this.trigger('tap');// It may be good to copy the touchend event object and change the
// type to tap, if the other event properties aren't exact after
// Events.fixEvent runs (e.g. event.target)
}}});}/**
         * This function reports user activity whenever touch events happen. This can get
         * turned off by any sub-components that wants touch events to act another way.
         *
         * Report user touch activity when touch events occur. User activity gets used to
         * determine when controls should show/hide. It is simple when it comes to mouse
         * events, because any mouse event should show the controls. So we capture mouse
         * events that bubble up to the player and report activity when that happens.
         * With touch events it isn't as easy as `touchstart` and `touchend` toggle player
         * controls. So touch events can't help us at the player level either.
         *
         * User activity gets checked asynchronously. So what could happen is a tap event
         * on the video turns the controls off. Then the `touchend` event bubbles up to
         * the player. Which, if it reported user activity, would turn the controls right
         * back on. We also don't want to completely block touch events from bubbling up.
         * Furthermore a `touchmove` event and anything other than a tap, should not turn
         * controls back on.
         *
         * @listens Component#touchstart
         * @listens Component#touchmove
         * @listens Component#touchend
         * @listens Component#touchcancel
         */},{key:"enableTouchActivity",value:function enableTouchActivity(){// Don't continue if the root player doesn't support reporting user activity
if(!this.player()||!this.player().reportUserActivity){return;}// listener for reporting that the user is active
var report=bind_(this.player(),this.player().reportUserActivity);var touchHolding;this.on('touchstart',function(){report();// For as long as the they are touching the device or have their mouse down,
// we consider them active even if they're not moving their finger or mouse.
// So we want to continue to update that they are active
this.clearInterval(touchHolding);// report at the same interval as activityCheck
touchHolding=this.setInterval(report,250);});var touchEnd=function touchEnd(event){report();// stop the interval that maintains activity if the touch is holding
this.clearInterval(touchHolding);};this.on('touchmove',report);this.on('touchend',touchEnd);this.on('touchcancel',touchEnd);}/**
         * A callback that has no parameters and is bound into `Component`s context.
         *
         * @callback Component~GenericCallback
         * @this Component
         */ /**
         * Creates a function that runs after an `x` millisecond timeout. This function is a
         * wrapper around `window.setTimeout`. There are a few reasons to use this one
         * instead though:
         * 1. It gets cleared via  {@link Component#clearTimeout} when
         *    {@link Component#dispose} gets called.
         * 2. The function callback will gets turned into a {@link Component~GenericCallback}
         *
         * > Note: You can't use `window.clearTimeout` on the id returned by this function. This
         *         will cause its dispose listener not to get cleaned up! Please use
         *         {@link Component#clearTimeout} or {@link Component#dispose} instead.
         *
         * @param {Component~GenericCallback} fn
         *        The function that will be run after `timeout`.
         *
         * @param {number} timeout
         *        Timeout in milliseconds to delay before executing the specified function.
         *
         * @return {number}
         *         Returns a timeout ID that gets used to identify the timeout. It can also
         *         get used in {@link Component#clearTimeout} to clear the timeout that
         *         was set.
         *
         * @listens Component#dispose
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}
         */},{key:"setTimeout",value:function setTimeout(fn,timeout){var _this46=this;// declare as variables so they are properly available in timeout function
// eslint-disable-next-line
var timeoutId;fn=bind_(this,fn);this.clearTimersOnDispose_();timeoutId=window_1.setTimeout(function(){if(_this46.setTimeoutIds_.has(timeoutId)){_this46.setTimeoutIds_.delete(timeoutId);}fn();},timeout);this.setTimeoutIds_.add(timeoutId);return timeoutId;}/**
         * Clears a timeout that gets created via `window.setTimeout` or
         * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}
         * use this function instead of `window.clearTimout`. If you don't your dispose
         * listener will not get cleaned up until {@link Component#dispose}!
         *
         * @param {number} timeoutId
         *        The id of the timeout to clear. The return value of
         *        {@link Component#setTimeout} or `window.setTimeout`.
         *
         * @return {number}
         *         Returns the timeout id that was cleared.
         *
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}
         */},{key:"clearTimeout",value:function clearTimeout(timeoutId){if(this.setTimeoutIds_.has(timeoutId)){this.setTimeoutIds_.delete(timeoutId);window_1.clearTimeout(timeoutId);}return timeoutId;}/**
         * Creates a function that gets run every `x` milliseconds. This function is a wrapper
         * around `window.setInterval`. There are a few reasons to use this one instead though.
         * 1. It gets cleared via  {@link Component#clearInterval} when
         *    {@link Component#dispose} gets called.
         * 2. The function callback will be a {@link Component~GenericCallback}
         *
         * @param {Component~GenericCallback} fn
         *        The function to run every `x` seconds.
         *
         * @param {number} interval
         *        Execute the specified function every `x` milliseconds.
         *
         * @return {number}
         *         Returns an id that can be used to identify the interval. It can also be be used in
         *         {@link Component#clearInterval} to clear the interval.
         *
         * @listens Component#dispose
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}
         */},{key:"setInterval",value:function setInterval(fn,interval){fn=bind_(this,fn);this.clearTimersOnDispose_();var intervalId=window_1.setInterval(fn,interval);this.setIntervalIds_.add(intervalId);return intervalId;}/**
         * Clears an interval that gets created via `window.setInterval` or
         * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}
         * use this function instead of `window.clearInterval`. If you don't your dispose
         * listener will not get cleaned up until {@link Component#dispose}!
         *
         * @param {number} intervalId
         *        The id of the interval to clear. The return value of
         *        {@link Component#setInterval} or `window.setInterval`.
         *
         * @return {number}
         *         Returns the interval id that was cleared.
         *
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}
         */},{key:"clearInterval",value:function clearInterval(intervalId){if(this.setIntervalIds_.has(intervalId)){this.setIntervalIds_.delete(intervalId);window_1.clearInterval(intervalId);}return intervalId;}/**
         * Queues up a callback to be passed to requestAnimationFrame (rAF), but
         * with a few extra bonuses:
         *
         * - Supports browsers that do not support rAF by falling back to
         *   {@link Component#setTimeout}.
         *
         * - The callback is turned into a {@link Component~GenericCallback} (i.e.
         *   bound to the component).
         *
         * - Automatic cancellation of the rAF callback is handled if the component
         *   is disposed before it is called.
         *
         * @param  {Component~GenericCallback} fn
         *         A function that will be bound to this component and executed just
         *         before the browser's next repaint.
         *
         * @return {number}
         *         Returns an rAF ID that gets used to identify the timeout. It can
         *         also be used in {@link Component#cancelAnimationFrame} to cancel
         *         the animation frame callback.
         *
         * @listens Component#dispose
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}
         */},{key:"requestAnimationFrame",value:function requestAnimationFrame(fn){var _this47=this;this.clearTimersOnDispose_();// declare as variables so they are properly available in rAF function
// eslint-disable-next-line
var id;fn=bind_(this,fn);id=window_1.requestAnimationFrame(function(){if(_this47.rafIds_.has(id)){_this47.rafIds_.delete(id);}fn();});this.rafIds_.add(id);return id;}/**
         * Request an animation frame, but only one named animation
         * frame will be queued. Another will never be added until
         * the previous one finishes.
         *
         * @param {string} name
         *        The name to give this requestAnimationFrame
         *
         * @param  {Component~GenericCallback} fn
         *         A function that will be bound to this component and executed just
         *         before the browser's next repaint.
         */},{key:"requestNamedAnimationFrame",value:function requestNamedAnimationFrame(name,fn){var _this48=this;if(this.namedRafs_.has(name)){return;}this.clearTimersOnDispose_();fn=bind_(this,fn);var id=this.requestAnimationFrame(function(){fn();if(_this48.namedRafs_.has(name)){_this48.namedRafs_.delete(name);}});this.namedRafs_.set(name,id);return name;}/**
         * Cancels a current named animation frame if it exists.
         *
         * @param {string} name
         *        The name of the requestAnimationFrame to cancel.
         */},{key:"cancelNamedAnimationFrame",value:function cancelNamedAnimationFrame(name){if(!this.namedRafs_.has(name)){return;}this.cancelAnimationFrame(this.namedRafs_.get(name));this.namedRafs_.delete(name);}/**
         * Cancels a queued callback passed to {@link Component#requestAnimationFrame}
         * (rAF).
         *
         * If you queue an rAF callback via {@link Component#requestAnimationFrame},
         * use this function instead of `window.cancelAnimationFrame`. If you don't,
         * your dispose listener will not get cleaned up until {@link Component#dispose}!
         *
         * @param {number} id
         *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.
         *
         * @return {number}
         *         Returns the rAF ID that was cleared.
         *
         * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}
         */},{key:"cancelAnimationFrame",value:function cancelAnimationFrame(id){if(this.rafIds_.has(id)){this.rafIds_.delete(id);window_1.cancelAnimationFrame(id);}return id;}/**
         * A function to setup `requestAnimationFrame`, `setTimeout`,
         * and `setInterval`, clearing on dispose.
         *
         * > Previously each timer added and removed dispose listeners on it's own.
         * For better performance it was decided to batch them all, and use `Set`s
         * to track outstanding timer ids.
         *
         * @private
         */},{key:"clearTimersOnDispose_",value:function clearTimersOnDispose_(){var _this49=this;if(this.clearingTimersOnDispose_){return;}this.clearingTimersOnDispose_=true;this.one('dispose',function(){[['namedRafs_','cancelNamedAnimationFrame'],['rafIds_','cancelAnimationFrame'],['setTimeoutIds_','clearTimeout'],['setIntervalIds_','clearInterval']].forEach(function(_ref152){var _ref153=_slicedToArray(_ref152,2),idName=_ref153[0],cancelName=_ref153[1];// for a `Set` key will actually be the value again
// so forEach((val, val) =>` but for maps we want to use
// the key.
_this49[idName].forEach(function(val,key){return _this49[cancelName](key);});});_this49.clearingTimersOnDispose_=false;});}/**
          * Decide whether an element is actually disabled or not.
          *
          * @function isActuallyDisabled
          * @param element {Node}
          * @return {boolean}
          *
          * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}
          */},{key:"getIsDisabled",value:function getIsDisabled(){return Boolean(this.el_.disabled);}/**
          * Decide whether the element is expressly inert or not.
          *
          * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}
          * @function isExpresslyInert
          * @param element {Node}
          * @return {boolean}
          */},{key:"getIsExpresslyInert",value:function getIsExpresslyInert(){return this.el_.inert&&!this.el_.ownerDocument.documentElement.inert;}/**
         * Determine whether or not this component can be considered as focusable component.
         *
         * @param {HTMLElement} el - The HTML element representing the component.
         * @return {boolean}
         *         If the component can be focused, will be `true`. Otherwise, `false`.
         */},{key:"getIsFocusable",value:function getIsFocusable(el){var element=el||this.el_;return element.tabIndex>=0&&!(this.getIsDisabled()||this.getIsExpresslyInert());}/**
         * Determine whether or not this component is currently visible/enabled/etc...
         *
         * @param {HTMLElement} el - The HTML element representing the component.
         * @return {boolean}
         *         If the component can is currently visible & enabled, will be `true`. Otherwise, `false`.
         */},{key:"getIsAvailableToBeFocused",value:function getIsAvailableToBeFocused(el){/**
           * Decide the style property of this element is specified whether it's visible or not.
           *
           * @function isVisibleStyleProperty
           * @param element {CSSStyleDeclaration}
           * @return {boolean}
           */function isVisibleStyleProperty(element){var elementStyle=window_1.getComputedStyle(element,null);var thisVisibility=elementStyle.getPropertyValue('visibility');var thisDisplay=elementStyle.getPropertyValue('display');var invisibleStyle=['hidden','collapse'];return thisDisplay!=='none'&&!invisibleStyle.includes(thisVisibility);}/**
           * Decide whether the element is being rendered or not.
           * 1. If an element has the style as "visibility: hidden | collapse" or "display: none", it is not being rendered.
           * 2. If an element has the style as "opacity: 0", it is not being rendered.(that is, invisible).
           * 3. If width and height of an element are explicitly set to 0, it is not being rendered.
           * 4. If a parent element is hidden, an element itself is not being rendered.
           * (CSS visibility property and display property are inherited.)
           *
           * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}
           * @function isBeingRendered
           * @param element {Node}
           * @return {boolean}
           */function isBeingRendered(element){if(!isVisibleStyleProperty(element.parentElement)){return false;}if(!isVisibleStyleProperty(element)||element.style.opacity==='0'||window_1.getComputedStyle(element).height==='0px'||window_1.getComputedStyle(element).width==='0px'){return false;}return true;}/**
           * Determine if the element is visible for the user or not.
           * 1. If an element sum of its offsetWidth, offsetHeight, height and width is less than 1 is not visible.
           * 2. If elementCenter.x is less than is not visible.
           * 3. If elementCenter.x is more than the document's width is not visible.
           * 4. If elementCenter.y is less than 0 is not visible.
           * 5. If elementCenter.y is the document's height is not visible.
           *
           * @function isVisible
           * @param element {Node}
           * @return {boolean}
           */function isVisible(element){if(element.offsetWidth+element.offsetHeight+element.getBoundingClientRect().height+element.getBoundingClientRect().width===0){return false;}// Define elementCenter object with props of x and y
// x: Left position relative to the viewport plus element's width (no margin) divided between 2.
// y: Top position relative to the viewport plus element's height (no margin) divided between 2.
var elementCenter={x:element.getBoundingClientRect().left+element.offsetWidth/2,y:element.getBoundingClientRect().top+element.offsetHeight/2};if(elementCenter.x<0){return false;}if(elementCenter.x>(document_1.documentElement.clientWidth||window_1.innerWidth)){return false;}if(elementCenter.y<0){return false;}if(elementCenter.y>(document_1.documentElement.clientHeight||window_1.innerHeight)){return false;}var pointContainer=document_1.elementFromPoint(elementCenter.x,elementCenter.y);while(pointContainer){if(pointContainer===element){return true;}if(pointContainer.parentNode){pointContainer=pointContainer.parentNode;}else{return false;}}}// If no DOM element was passed as argument use this component's element.
if(!el){el=this.el();}// If element is visible, is being rendered & either does not have a parent element or its tabIndex is not negative.
if(isVisible(el)&&isBeingRendered(el)&&(!el.parentElement||el.tabIndex>=0)){return true;}return false;}/**
         * Register a `Component` with `videojs` given the name and the component.
         *
         * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s
         *         should be registered using {@link Tech.registerTech} or
         *         {@link videojs:videojs.registerTech}.
         *
         * > NOTE: This function can also be seen on videojs as
         *         {@link videojs:videojs.registerComponent}.
         *
         * @param {string} name
         *        The name of the `Component` to register.
         *
         * @param {Component} ComponentToRegister
         *        The `Component` class to register.
         *
         * @return {Component}
         *         The `Component` that was registered.
         */}],[{key:"registerComponent",value:function registerComponent(name,ComponentToRegister){if(typeof name!=='string'||!name){throw new Error("Illegal component name, \"".concat(name,"\"; must be a non-empty string."));}var Tech=Component$1.getComponent('Tech');// We need to make sure this check is only done if Tech has been registered.
var isTech=Tech&&Tech.isTech(ComponentToRegister);var isComp=Component$1===ComponentToRegister||Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);if(isTech||!isComp){var reason;if(isTech){reason='techs must be registered using Tech.registerTech()';}else{reason='must be a Component subclass';}throw new Error("Illegal component, \"".concat(name,"\"; ").concat(reason,"."));}name=toTitleCase$1(name);if(!Component$1.components_){Component$1.components_={};}var Player=Component$1.getComponent('Player');if(name==='Player'&&Player&&Player.players){var players=Player.players;var playerNames=Object.keys(players);// If we have players that were disposed, then their name will still be
// in Players.players. So, we must loop through and verify that the value
// for each item is not null. This allows registration of the Player component
// after all players have been disposed or before any were created.
if(players&&playerNames.length>0&&playerNames.map(function(pname){return players[pname];}).every(Boolean)){throw new Error('Can not register Player component after player has been created.');}}Component$1.components_[name]=ComponentToRegister;Component$1.components_[toLowerCase(name)]=ComponentToRegister;return ComponentToRegister;}/**
         * Get a `Component` based on the name it was registered with.
         *
         * @param {string} name
         *        The Name of the component to get.
         *
         * @return {typeof Component}
         *         The `Component` that got registered under the given name.
         */},{key:"getComponent",value:function getComponent(name){if(!name||!Component$1.components_){return;}return Component$1.components_[name];}}]);return Component$1;}();Component$1.registerComponent('Component',Component$1);/**
       * @file time.js
       * @module time
       */ /**
       * Returns the time for the specified index at the start or end
       * of a TimeRange object.
       *
       * @typedef    {Function} TimeRangeIndex
       *
       * @param      {number} [index=0]
       *             The range number to return the time for.
       *
       * @return     {number}
       *             The time offset at the specified index.
       *
       * @deprecated The index argument must be provided.
       *             In the future, leaving it out will throw an error.
       */ /**
       * An object that contains ranges of time, which mimics {@link TimeRanges}.
       *
       * @typedef  {Object} TimeRange
       *
       * @property {number} length
       *           The number of time ranges represented by this object.
       *
       * @property {module:time~TimeRangeIndex} start
       *           Returns the time offset at which a specified time range begins.
       *
       * @property {module:time~TimeRangeIndex} end
       *           Returns the time offset at which a specified time range ends.
       *
       * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges
       */ /**
       * Check if any of the time ranges are over the maximum index.
       *
       * @private
       * @param   {string} fnName
       *          The function name to use for logging
       *
       * @param   {number} index
       *          The index to check
       *
       * @param   {number} maxIndex
       *          The maximum possible index
       *
       * @throws  {Error} if the timeRanges provided are over the maxIndex
       */function rangeCheck(fnName,index,maxIndex){if(typeof index!=='number'||index<0||index>maxIndex){throw new Error("Failed to execute '".concat(fnName,"' on 'TimeRanges': The index provided (").concat(index,") is non-numeric or out of bounds (0-").concat(maxIndex,")."));}}/**
       * Get the time for the specified index at the start or end
       * of a TimeRange object.
       *
       * @private
       * @param      {string} fnName
       *             The function name to use for logging
       *
       * @param      {string} valueIndex
       *             The property that should be used to get the time. should be
       *             'start' or 'end'
       *
       * @param      {Array} ranges
       *             An array of time ranges
       *
       * @param      {Array} [rangeIndex=0]
       *             The index to start the search at
       *
       * @return     {number}
       *             The time that offset at the specified index.
       *
       * @deprecated rangeIndex must be set to a value, in the future this will throw an error.
       * @throws     {Error} if rangeIndex is more than the length of ranges
       */function getRange(fnName,valueIndex,ranges,rangeIndex){rangeCheck(fnName,rangeIndex,ranges.length-1);return ranges[rangeIndex][valueIndex];}/**
       * Create a time range object given ranges of time.
       *
       * @private
       * @param   {Array} [ranges]
       *          An array of time ranges.
       *
       * @return  {TimeRange}
       */function createTimeRangesObj(ranges){var timeRangesObj;if(ranges===undefined||ranges.length===0){timeRangesObj={length:0,start:function start(){throw new Error('This TimeRanges object is empty');},end:function end(){throw new Error('This TimeRanges object is empty');}};}else{timeRangesObj={length:ranges.length,start:getRange.bind(null,'start',0,ranges),end:getRange.bind(null,'end',1,ranges)};}if(window_1.Symbol&&window_1.Symbol.iterator){timeRangesObj[window_1.Symbol.iterator]=function(){return(ranges||[]).values();};}return timeRangesObj;}/**
       * Create a `TimeRange` object which mimics an
       * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.
       *
       * @param {number|Array[]} start
       *        The start of a single range (a number) or an array of ranges (an
       *        array of arrays of two numbers each).
       *
       * @param {number} end
       *        The end of a single range. Cannot be used with the array form of
       *        the `start` argument.
       *
       * @return {TimeRange}
       */function createTimeRanges$1(start,end){if(Array.isArray(start)){return createTimeRangesObj(start);}else if(start===undefined||end===undefined){return createTimeRangesObj();}return createTimeRangesObj([[start,end]]);}/**
       * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in
       * seconds) will force a number of leading zeros to cover the length of the
       * guide.
       *
       * @private
       * @param  {number} seconds
       *         Number of seconds to be turned into a string
       *
       * @param  {number} guide
       *         Number (in seconds) to model the string after
       *
       * @return {string}
       *         Time formatted as H:MM:SS or M:SS
       */var defaultImplementation=function defaultImplementation(seconds,guide){seconds=seconds<0?0:seconds;var s=Math.floor(seconds%60);var m=Math.floor(seconds/60%60);var h=Math.floor(seconds/3600);var gm=Math.floor(guide/60%60);var gh=Math.floor(guide/3600);// handle invalid times
if(isNaN(seconds)||seconds===Infinity){// '-' is false for all relational operators (e.g. <, >=) so this setting
// will add the minimum number of fields specified by the guide
h=m=s='-';}// Check if we need to show hours
h=h>0||gh>0?h+':':'';// If hours are showing, we may need to add a leading zero.
// Always show at least one digit of minutes.
m=((h||gm>=10)&&m<10?'0'+m:m)+':';// Check if leading zero is need for seconds
s=s<10?'0'+s:s;return h+m+s;};// Internal pointer to the current implementation.
var implementation=defaultImplementation;/**
       * Replaces the default formatTime implementation with a custom implementation.
       *
       * @param {Function} customImplementation
       *        A function which will be used in place of the default formatTime
       *        implementation. Will receive the current time in seconds and the
       *        guide (in seconds) as arguments.
       */function setFormatTime(customImplementation){implementation=customImplementation;}/**
       * Resets formatTime to the default implementation.
       */function resetFormatTime(){implementation=defaultImplementation;}/**
       * Delegates to either the default time formatting function or a custom
       * function supplied via `setFormatTime`.
       *
       * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a
       * guide (in seconds) will force a number of leading zeros to cover the
       * length of the guide.
       *
       * @example  formatTime(125, 600) === "02:05"
       * @param    {number} seconds
       *           Number of seconds to be turned into a string
       *
       * @param    {number} guide
       *           Number (in seconds) to model the string after
       *
       * @return   {string}
       *           Time formatted as H:MM:SS or M:SS
       */function formatTime(seconds){var guide=arguments.length>1&&arguments[1]!==undefined?arguments[1]:seconds;return implementation(seconds,guide);}var Time=/*#__PURE__*/Object.freeze({__proto__:null,createTimeRanges:createTimeRanges$1,createTimeRange:createTimeRanges$1,setFormatTime:setFormatTime,resetFormatTime:resetFormatTime,formatTime:formatTime});/**
       * @file buffer.js
       * @module buffer
       */ /**
       * Compute the percentage of the media that has been buffered.
       *
       * @param { import('./time').TimeRange } buffered
       *        The current `TimeRanges` object representing buffered time ranges
       *
       * @param {number} duration
       *        Total duration of the media
       *
       * @return {number}
       *         Percent buffered of the total duration in decimal form.
       */function _bufferedPercent(buffered,duration){var bufferedDuration=0;var start;var end;if(!duration){return 0;}if(!buffered||!buffered.length){buffered=createTimeRanges$1(0,0);}for(var _i85=0;_i85<buffered.length;_i85++){start=buffered.start(_i85);end=buffered.end(_i85);// buffered end can be bigger than duration by a very small fraction
if(end>duration){end=duration;}bufferedDuration+=end-start;}return bufferedDuration/duration;}/**
       * @file media-error.js
       */ /**
       * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.
       *
       * @param {number|string|Object|MediaError} value
       *        This can be of multiple types:
       *        - number: should be a standard error code
       *        - string: an error message (the code will be 0)
       *        - Object: arbitrary properties
       *        - `MediaError` (native): used to populate a video.js `MediaError` object
       *        - `MediaError` (video.js): will return itself if it's already a
       *          video.js `MediaError` object.
       *
       * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}
       * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}
       *
       * @class MediaError
       */function MediaError(value){// Allow redundant calls to this constructor to avoid having `instanceof`
// checks peppered around the code.
if(value instanceof MediaError){return value;}if(typeof value==='number'){this.code=value;}else if(typeof value==='string'){// default code is zero, so this is a custom error
this.message=value;}else if(isObject(value)){// We assign the `code` property manually because native `MediaError` objects
// do not expose it as an own/enumerable property of the object.
if(typeof value.code==='number'){this.code=value.code;}Object.assign(this,value);}if(!this.message){this.message=MediaError.defaultMessages[this.code]||'';}}/**
       * The error code that refers two one of the defined `MediaError` types
       *
       * @type {Number}
       */MediaError.prototype.code=0;/**
       * An optional message that to show with the error. Message is not part of the HTML5
       * video spec but allows for more informative custom errors.
       *
       * @type {String}
       */MediaError.prototype.message='';/**
       * An optional status code that can be set by plugins to allow even more detail about
       * the error. For example a plugin might provide a specific HTTP status code and an
       * error message for that code. Then when the plugin gets that error this class will
       * know how to display an error message for it. This allows a custom message to show
       * up on the `Player` error overlay.
       *
       * @type {Array}
       */MediaError.prototype.status=null;/**
       * An object containing an error type, as well as other information regarding the error.
       *
       * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata
       */ /**
       * An optional object to give more detail about the error. This can be used to give
       * a higher level of specificity to an error versus the more generic MediaError codes.
       * `metadata` expects an `errorType` string that should align with the values from videojs.Error.
       *
       * @type {ErrorMetadata}
       */MediaError.prototype.metadata=null;/**
       * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the
       * specification listed under {@link MediaError} for more information.
       *
       * @enum {array}
       * @readonly
       * @property {string} 0 - MEDIA_ERR_CUSTOM
       * @property {string} 1 - MEDIA_ERR_ABORTED
       * @property {string} 2 - MEDIA_ERR_NETWORK
       * @property {string} 3 - MEDIA_ERR_DECODE
       * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED
       * @property {string} 5 - MEDIA_ERR_ENCRYPTED
       */MediaError.errorTypes=['MEDIA_ERR_CUSTOM','MEDIA_ERR_ABORTED','MEDIA_ERR_NETWORK','MEDIA_ERR_DECODE','MEDIA_ERR_SRC_NOT_SUPPORTED','MEDIA_ERR_ENCRYPTED'];/**
       * The default `MediaError` messages based on the {@link MediaError.errorTypes}.
       *
       * @type {Array}
       * @constant
       */MediaError.defaultMessages={1:'You aborted the media playback',2:'A network error caused the media download to fail part-way.',3:'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',4:'The media could not be loaded, either because the server or network failed or because the format is not supported.',5:'The media is encrypted and we do not have the keys to decrypt it.'};/**
       * W3C error code for any custom error.
       *
       * @member MediaError#MEDIA_ERR_CUSTOM
       * @constant {number}
       * @default 0
       */MediaError.MEDIA_ERR_CUSTOM=0;/**
       * W3C error code for any custom error.
       *
       * @member MediaError.MEDIA_ERR_CUSTOM
       * @constant {number}
       * @default 0
       */MediaError.prototype.MEDIA_ERR_CUSTOM=0;/**
       * W3C error code for media error aborted.
       *
       * @member MediaError#MEDIA_ERR_ABORTED
       * @constant {number}
       * @default 1
       */MediaError.MEDIA_ERR_ABORTED=1;/**
       * W3C error code for media error aborted.
       *
       * @member MediaError.MEDIA_ERR_ABORTED
       * @constant {number}
       * @default 1
       */MediaError.prototype.MEDIA_ERR_ABORTED=1;/**
       * W3C error code for any network error.
       *
       * @member MediaError#MEDIA_ERR_NETWORK
       * @constant {number}
       * @default 2
       */MediaError.MEDIA_ERR_NETWORK=2;/**
       * W3C error code for any network error.
       *
       * @member MediaError.MEDIA_ERR_NETWORK
       * @constant {number}
       * @default 2
       */MediaError.prototype.MEDIA_ERR_NETWORK=2;/**
       * W3C error code for any decoding error.
       *
       * @member MediaError#MEDIA_ERR_DECODE
       * @constant {number}
       * @default 3
       */MediaError.MEDIA_ERR_DECODE=3;/**
       * W3C error code for any decoding error.
       *
       * @member MediaError.MEDIA_ERR_DECODE
       * @constant {number}
       * @default 3
       */MediaError.prototype.MEDIA_ERR_DECODE=3;/**
       * W3C error code for any time that a source is not supported.
       *
       * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED
       * @constant {number}
       * @default 4
       */MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED=4;/**
       * W3C error code for any time that a source is not supported.
       *
       * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED
       * @constant {number}
       * @default 4
       */MediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED=4;/**
       * W3C error code for any time that a source is encrypted.
       *
       * @member MediaError#MEDIA_ERR_ENCRYPTED
       * @constant {number}
       * @default 5
       */MediaError.MEDIA_ERR_ENCRYPTED=5;/**
       * W3C error code for any time that a source is encrypted.
       *
       * @member MediaError.MEDIA_ERR_ENCRYPTED
       * @constant {number}
       * @default 5
       */MediaError.prototype.MEDIA_ERR_ENCRYPTED=5;/**
       * Returns whether an object is `Promise`-like (i.e. has a `then` method).
       *
       * @param  {Object}  value
       *         An object that may or may not be `Promise`-like.
       *
       * @return {boolean}
       *         Whether or not the object is `Promise`-like.
       */function isPromise(value){return value!==undefined&&value!==null&&typeof value.then==='function';}/**
       * Silence a Promise-like object.
       *
       * This is useful for avoiding non-harmful, but potentially confusing "uncaught
       * play promise" rejection error messages.
       *
       * @param  {Object} value
       *         An object that may or may not be `Promise`-like.
       */function silencePromise(value){if(isPromise(value)){value.then(null,function(e){});}}/**
       * @file text-track-list-converter.js Utilities for capturing text track state and
       * re-creating tracks based on a capture.
       *
       * @module text-track-list-converter
       */ /**
       * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that
       * represents the {@link TextTrack}'s state.
       *
       * @param {TextTrack} track
       *        The text track to query.
       *
       * @return {Object}
       *         A serializable javascript representation of the TextTrack.
       * @private
       */var trackToJson_=function trackToJson_(track){var ret=['kind','label','language','id','inBandMetadataTrackDispatchType','mode','src'].reduce(function(acc,prop,i){if(track[prop]){acc[prop]=track[prop];}return acc;},{cues:track.cues&&Array.prototype.map.call(track.cues,function(cue){return{startTime:cue.startTime,endTime:cue.endTime,text:cue.text,id:cue.id};})});return ret;};/**
       * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the
       * state of all {@link TextTrack}s currently configured. The return array is compatible with
       * {@link text-track-list-converter:jsonToTextTracks}.
       *
       * @param { import('../tech/tech').default } tech
       *        The tech object to query
       *
       * @return {Array}
       *         A serializable javascript representation of the {@link Tech}s
       *         {@link TextTrackList}.
       */var textTracksToJson=function textTracksToJson(tech){var trackEls=tech.$$('track');var trackObjs=Array.prototype.map.call(trackEls,function(t){return t.track;});var tracks=Array.prototype.map.call(trackEls,function(trackEl){var json=trackToJson_(trackEl.track);if(trackEl.src){json.src=trackEl.src;}return json;});return tracks.concat(Array.prototype.filter.call(tech.textTracks(),function(track){return trackObjs.indexOf(track)===-1;}).map(trackToJson_));};/**
       * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript
       * object {@link TextTrack} representations.
       *
       * @param {Array} json
       *        An array of `TextTrack` representation objects, like those that would be
       *        produced by `textTracksToJson`.
       *
       * @param {Tech} tech
       *        The `Tech` to create the `TextTrack`s on.
       */var jsonToTextTracks=function jsonToTextTracks(json,tech){json.forEach(function(track){var addedTrack=tech.addRemoteTextTrack(track).track;if(!track.src&&track.cues){track.cues.forEach(function(cue){return addedTrack.addCue(cue);});}});return tech.textTracks();};var textTrackConverter={textTracksToJson:textTracksToJson,jsonToTextTracks:jsonToTextTracks,trackToJson_:trackToJson_};/**
       * @file modal-dialog.js
       */var MODAL_CLASS_NAME='vjs-modal-dialog';/**
       * The `ModalDialog` displays over the video and its controls, which blocks
       * interaction with the player until it is closed.
       *
       * Modal dialogs include a "Close" button and will close when that button
       * is activated - or when ESC is pressed anywhere.
       *
       * @extends Component
       */var ModalDialog=/*#__PURE__*/function(_Component$){_inherits(ModalDialog,_Component$);var _super13=_createSuper(ModalDialog);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]
         *        Provide customized content for this modal.
         *
         * @param {string} [options.description]
         *        A text description for the modal, primarily for accessibility.
         *
         * @param {boolean} [options.fillAlways=false]
         *        Normally, modals are automatically filled only the first time
         *        they open. This tells the modal to refresh its content
         *        every time it opens.
         *
         * @param {string} [options.label]
         *        A text label for the modal, primarily for accessibility.
         *
         * @param {boolean} [options.pauseOnOpen=true]
         *        If `true`, playback will will be paused if playing when
         *        the modal opens, and resumed when it closes.
         *
         * @param {boolean} [options.temporary=true]
         *        If `true`, the modal can only be opened once; it will be
         *        disposed as soon as it's closed.
         *
         * @param {boolean} [options.uncloseable=false]
         *        If `true`, the user will not be able to close the modal
         *        through the UI in the normal ways. Programmatic closing is
         *        still possible.
         */function ModalDialog(player,options){var _this50;_classCallCheck(this,ModalDialog);_this50=_super13.call(this,player,options);_this50.handleKeyDown_=function(e){return _this50.handleKeyDown(e);};_this50.close_=function(e){return _this50.close(e);};_this50.opened_=_this50.hasBeenOpened_=_this50.hasBeenFilled_=false;_this50.closeable(!_this50.options_.uncloseable);_this50.content(_this50.options_.content);// Make sure the contentEl is defined AFTER any children are initialized
// because we only want the contents of the modal in the contentEl
// (not the UI elements like the close button).
_this50.contentEl_=_createEl('div',{className:"".concat(MODAL_CLASS_NAME,"-content")},{role:'document'});_this50.descEl_=_createEl('p',{className:"".concat(MODAL_CLASS_NAME,"-description vjs-control-text"),id:_this50.el().getAttribute('aria-describedby')});textContent(_this50.descEl_,_this50.description());_this50.el_.appendChild(_this50.descEl_);_this50.el_.appendChild(_this50.contentEl_);return _this50;}/**
         * Create the `ModalDialog`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(ModalDialog,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(ModalDialog.prototype),"createEl",this).call(this,'div',{className:this.buildCSSClass(),tabIndex:-1},{'aria-describedby':"".concat(this.id(),"_description"),'aria-hidden':'true','aria-label':this.label(),'role':'dialog','aria-live':'polite'});}},{key:"dispose",value:function dispose(){this.contentEl_=null;this.descEl_=null;this.previouslyActiveEl_=null;_get(_getPrototypeOf(ModalDialog.prototype),"dispose",this).call(this);}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */},{key:"buildCSSClass",value:function buildCSSClass(){return"".concat(MODAL_CLASS_NAME," vjs-hidden ").concat(_get(_getPrototypeOf(ModalDialog.prototype),"buildCSSClass",this).call(this));}/**
         * Returns the label string for this modal. Primarily used for accessibility.
         *
         * @return {string}
         *         the localized or raw label of this modal.
         */},{key:"label",value:function label(){return this.localize(this.options_.label||'Modal Window');}/**
         * Returns the description string for this modal. Primarily used for
         * accessibility.
         *
         * @return {string}
         *         The localized or raw description of this modal.
         */},{key:"description",value:function description(){var desc=this.options_.description||this.localize('This is a modal window.');// Append a universal closeability message if the modal is closeable.
if(this.closeable()){desc+=' '+this.localize('This modal can be closed by pressing the Escape key or activating the close button.');}return desc;}/**
         * Opens the modal.
         *
         * @fires ModalDialog#beforemodalopen
         * @fires ModalDialog#modalopen
         */},{key:"open",value:function open(){if(this.opened_){if(this.options_.fillAlways){this.fill();}return;}var player=this.player();/**
            * Fired just before a `ModalDialog` is opened.
            *
            * @event ModalDialog#beforemodalopen
            * @type {Event}
            */this.trigger('beforemodalopen');this.opened_=true;// Fill content if the modal has never opened before and
// never been filled.
if(this.options_.fillAlways||!this.hasBeenOpened_&&!this.hasBeenFilled_){this.fill();}// If the player was playing, pause it and take note of its previously
// playing state.
this.wasPlaying_=!player.paused();if(this.options_.pauseOnOpen&&this.wasPlaying_){player.pause();}this.on('keydown',this.handleKeyDown_);// Hide controls and note if they were enabled.
this.hadControls_=player.controls();player.controls(false);this.show();this.conditionalFocus_();this.el().setAttribute('aria-hidden','false');/**
            * Fired just after a `ModalDialog` is opened.
            *
            * @event ModalDialog#modalopen
            * @type {Event}
            */this.trigger('modalopen');this.hasBeenOpened_=true;}/**
         * If the `ModalDialog` is currently open or closed.
         *
         * @param  {boolean} [value]
         *         If given, it will open (`true`) or close (`false`) the modal.
         *
         * @return {boolean}
         *         the current open state of the modaldialog
         */},{key:"opened",value:function opened(value){if(typeof value==='boolean'){this[value?'open':'close']();}return this.opened_;}/**
         * Closes the modal, does nothing if the `ModalDialog` is
         * not open.
         *
         * @fires ModalDialog#beforemodalclose
         * @fires ModalDialog#modalclose
         */},{key:"close",value:function close(){if(!this.opened_){return;}var player=this.player();/**
            * Fired just before a `ModalDialog` is closed.
            *
            * @event ModalDialog#beforemodalclose
            * @type {Event}
            */this.trigger('beforemodalclose');this.opened_=false;if(this.wasPlaying_&&this.options_.pauseOnOpen){player.play();}this.off('keydown',this.handleKeyDown_);if(this.hadControls_){player.controls(true);}this.hide();this.el().setAttribute('aria-hidden','true');/**
            * Fired just after a `ModalDialog` is closed.
            *
            * @event ModalDialog#modalclose
            * @type {Event}
            *
            * @property {boolean} [bubbles=true]
            */this.trigger({type:'modalclose',bubbles:true});this.conditionalBlur_();if(this.options_.temporary){this.dispose();}}/**
         * Check to see if the `ModalDialog` is closeable via the UI.
         *
         * @param  {boolean} [value]
         *         If given as a boolean, it will set the `closeable` option.
         *
         * @return {boolean}
         *         Returns the final value of the closable option.
         */},{key:"closeable",value:function closeable(value){if(typeof value==='boolean'){var closeable=this.closeable_=!!value;var close=this.getChild('closeButton');// If this is being made closeable and has no close button, add one.
if(closeable&&!close){// The close button should be a child of the modal - not its
// content element, so temporarily change the content element.
var temp=this.contentEl_;this.contentEl_=this.el_;close=this.addChild('closeButton',{controlText:'Close Modal Dialog'});this.contentEl_=temp;this.on(close,'close',this.close_);}// If this is being made uncloseable and has a close button, remove it.
if(!closeable&&close){this.off(close,'close',this.close_);this.removeChild(close);close.dispose();}}return this.closeable_;}/**
         * Fill the modal's content element with the modal's "content" option.
         * The content element will be emptied before this change takes place.
         */},{key:"fill",value:function fill(){this.fillWith(this.content());}/**
         * Fill the modal's content element with arbitrary content.
         * The content element will be emptied before this change takes place.
         *
         * @fires ModalDialog#beforemodalfill
         * @fires ModalDialog#modalfill
         *
         * @param { import('./utils/dom').ContentDescriptor} [content]
         *        The same rules apply to this as apply to the `content` option.
         */},{key:"fillWith",value:function fillWith(content){var contentEl=this.contentEl();var parentEl=contentEl.parentNode;var nextSiblingEl=contentEl.nextSibling;/**
            * Fired just before a `ModalDialog` is filled with content.
            *
            * @event ModalDialog#beforemodalfill
            * @type {Event}
            */this.trigger('beforemodalfill');this.hasBeenFilled_=true;// Detach the content element from the DOM before performing
// manipulation to avoid modifying the live DOM multiple times.
parentEl.removeChild(contentEl);this.empty();insertContent(contentEl,content);/**
           * Fired just after a `ModalDialog` is filled with content.
           *
           * @event ModalDialog#modalfill
           * @type {Event}
           */this.trigger('modalfill');// Re-inject the re-filled content element.
if(nextSiblingEl){parentEl.insertBefore(contentEl,nextSiblingEl);}else{parentEl.appendChild(contentEl);}// make sure that the close button is last in the dialog DOM
var closeButton=this.getChild('closeButton');if(closeButton){parentEl.appendChild(closeButton.el_);}}/**
         * Empties the content element. This happens anytime the modal is filled.
         *
         * @fires ModalDialog#beforemodalempty
         * @fires ModalDialog#modalempty
         */},{key:"empty",value:function empty(){/**
          * Fired just before a `ModalDialog` is emptied.
          *
          * @event ModalDialog#beforemodalempty
          * @type {Event}
          */this.trigger('beforemodalempty');emptyEl(this.contentEl());/**
          * Fired just after a `ModalDialog` is emptied.
          *
          * @event ModalDialog#modalempty
          * @type {Event}
          */this.trigger('modalempty');}/**
         * Gets or sets the modal content, which gets normalized before being
         * rendered into the DOM.
         *
         * This does not update the DOM or fill the modal, but it is called during
         * that process.
         *
         * @param  { import('./utils/dom').ContentDescriptor} [value]
         *         If defined, sets the internal content value to be used on the
         *         next call(s) to `fill`. This value is normalized before being
         *         inserted. To "clear" the internal content value, pass `null`.
         *
         * @return { import('./utils/dom').ContentDescriptor}
         *         The current content of the modal dialog
         */},{key:"content",value:function content(value){if(typeof value!=='undefined'){this.content_=value;}return this.content_;}/**
         * conditionally focus the modal dialog if focus was previously on the player.
         *
         * @private
         */},{key:"conditionalFocus_",value:function conditionalFocus_(){var activeEl=document_1.activeElement;var playerEl=this.player_.el_;this.previouslyActiveEl_=null;if(playerEl.contains(activeEl)||playerEl===activeEl){this.previouslyActiveEl_=activeEl;this.focus();}}/**
         * conditionally blur the element and refocus the last focused element
         *
         * @private
         */},{key:"conditionalBlur_",value:function conditionalBlur_(){if(this.previouslyActiveEl_){this.previouslyActiveEl_.focus();this.previouslyActiveEl_=null;}}/**
         * Keydown handler. Attached when modal is focused.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){/**
           * Fired a custom keyDown event that bubbles.
           *
           * @event ModalDialog#modalKeydown
           * @type {Event}
           */this.trigger({type:'modalKeydown',originalEvent:event,target:this,bubbles:true});// Do not allow keydowns to reach out of the modal dialog.
event.stopPropagation();if(keycode.isEventKey(event,'Escape')&&this.closeable()){event.preventDefault();this.close();return;}// exit early if it isn't a tab key
if(!keycode.isEventKey(event,'Tab')){return;}var focusableEls=this.focusableEls_();var activeEl=this.el_.querySelector(':focus');var focusIndex;for(var _i86=0;_i86<focusableEls.length;_i86++){if(activeEl===focusableEls[_i86]){focusIndex=_i86;break;}}if(document_1.activeElement===this.el_){focusIndex=0;}if(event.shiftKey&&focusIndex===0){focusableEls[focusableEls.length-1].focus();event.preventDefault();}else if(!event.shiftKey&&focusIndex===focusableEls.length-1){focusableEls[0].focus();event.preventDefault();}}/**
         * get all focusable elements
         *
         * @private
         */},{key:"focusableEls_",value:function focusableEls_(){var allChildren=this.el_.querySelectorAll('*');return Array.prototype.filter.call(allChildren,function(child){return(child instanceof window_1.HTMLAnchorElement||child instanceof window_1.HTMLAreaElement)&&child.hasAttribute('href')||(child instanceof window_1.HTMLInputElement||child instanceof window_1.HTMLSelectElement||child instanceof window_1.HTMLTextAreaElement||child instanceof window_1.HTMLButtonElement)&&!child.hasAttribute('disabled')||child instanceof window_1.HTMLIFrameElement||child instanceof window_1.HTMLObjectElement||child instanceof window_1.HTMLEmbedElement||child.hasAttribute('tabindex')&&child.getAttribute('tabindex')!==-1||child.hasAttribute('contenteditable');});}}]);return ModalDialog;}(Component$1);/**
       * Default options for `ModalDialog` default options.
       *
       * @type {Object}
       * @private
       */ModalDialog.prototype.options_={pauseOnOpen:true,temporary:true};Component$1.registerComponent('ModalDialog',ModalDialog);/**
       * @file track-list.js
       */ /**
       * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and
       * {@link VideoTrackList}
       *
       * @extends EventTarget
       */var TrackList=/*#__PURE__*/function(_EventTarget$){_inherits(TrackList,_EventTarget$);var _super14=_createSuper(TrackList);/**
         * Create an instance of this class
         *
         * @param { import('./track').default[] } tracks
         *        A list of tracks to initialize the list with.
         *
         * @abstract
         */function TrackList(){var _this51;var tracks=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,TrackList);_this51=_super14.call(this);_this51.tracks_=[];/**
           * @memberof TrackList
           * @member {number} length
           *         The current number of `Track`s in the this Trackist.
           * @instance
           */Object.defineProperty(_assertThisInitialized2(_this51),'length',{get:function get(){return this.tracks_.length;}});for(var _i87=0;_i87<tracks.length;_i87++){_this51.addTrack(tracks[_i87]);}return _this51;}/**
         * Add a {@link Track} to the `TrackList`
         *
         * @param { import('./track').default } track
         *        The audio, video, or text track to add to the list.
         *
         * @fires TrackList#addtrack
         */_createClass(TrackList,[{key:"addTrack",value:function addTrack(track){var _this52=this;var index=this.tracks_.length;if(!(''+index in this)){Object.defineProperty(this,index,{get:function get(){return this.tracks_[index];}});}// Do not add duplicate tracks
if(this.tracks_.indexOf(track)===-1){this.tracks_.push(track);/**
             * Triggered when a track is added to a track list.
             *
             * @event TrackList#addtrack
             * @type {Event}
             * @property {Track} track
             *           A reference to track that was added.
             */this.trigger({track:track,type:'addtrack',target:this});}/**
           * Triggered when a track label is changed.
           *
           * @event TrackList#addtrack
           * @type {Event}
           * @property {Track} track
           *           A reference to track that was added.
           */track.labelchange_=function(){_this52.trigger({track:track,type:'labelchange',target:_this52});};if(isEvented(track)){track.addEventListener('labelchange',track.labelchange_);}}/**
         * Remove a {@link Track} from the `TrackList`
         *
         * @param { import('./track').default } rtrack
         *        The audio, video, or text track to remove from the list.
         *
         * @fires TrackList#removetrack
         */},{key:"removeTrack",value:function removeTrack(rtrack){var track;for(var _i88=0,_l=this.length;_i88<_l;_i88++){if(this[_i88]===rtrack){track=this[_i88];if(track.off){track.off();}this.tracks_.splice(_i88,1);break;}}if(!track){return;}/**
           * Triggered when a track is removed from track list.
           *
           * @event TrackList#removetrack
           * @type {Event}
           * @property {Track} track
           *           A reference to track that was removed.
           */this.trigger({track:track,type:'removetrack',target:this});}/**
         * Get a Track from the TrackList by a tracks id
         *
         * @param {string} id - the id of the track to get
         * @method getTrackById
         * @return { import('./track').default }
         * @private
         */},{key:"getTrackById",value:function getTrackById(id){var result=null;for(var _i89=0,_l2=this.length;_i89<_l2;_i89++){var track=this[_i89];if(track.id===id){result=track;break;}}return result;}}]);return TrackList;}(EventTarget$2);/**
       * Triggered when a different track is selected/enabled.
       *
       * @event TrackList#change
       * @type {Event}
       */ /**
       * Events that can be called with on + eventName. See {@link EventHandler}.
       *
       * @property {Object} TrackList#allowedEvents_
       * @protected
       */TrackList.prototype.allowedEvents_={change:'change',addtrack:'addtrack',removetrack:'removetrack',labelchange:'labelchange'};// emulate attribute EventHandler support to allow for feature detection
for(var event in TrackList.prototype.allowedEvents_){TrackList.prototype['on'+event]=null;}/**
       * @file audio-track-list.js
       */ /**
       * Anywhere we call this function we diverge from the spec
       * as we only support one enabled audiotrack at a time
       *
       * @param {AudioTrackList} list
       *        list to work on
       *
       * @param { import('./audio-track').default } track
       *        The track to skip
       *
       * @private
       */var disableOthers$1=function disableOthers$1(list,track){for(var _i90=0;_i90<list.length;_i90++){if(!Object.keys(list[_i90]).length||track.id===list[_i90].id){continue;}// another audio track is enabled, disable it
list[_i90].enabled=false;}};/**
       * The current list of {@link AudioTrack} for a media file.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}
       * @extends TrackList
       */var AudioTrackList=/*#__PURE__*/function(_TrackList){_inherits(AudioTrackList,_TrackList);var _super15=_createSuper(AudioTrackList);/**
         * Create an instance of this class.
         *
         * @param { import('./audio-track').default[] } [tracks=[]]
         *        A list of `AudioTrack` to instantiate the list with.
         */function AudioTrackList(){var _this53;var tracks=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,AudioTrackList);// make sure only 1 track is enabled
// sorted from last index to first index
for(var _i91=tracks.length-1;_i91>=0;_i91--){if(tracks[_i91].enabled){disableOthers$1(tracks,tracks[_i91]);break;}}_this53=_super15.call(this,tracks);_this53.changing_=false;return _this53;}/**
         * Add an {@link AudioTrack} to the `AudioTrackList`.
         *
         * @param { import('./audio-track').default } track
         *        The AudioTrack to add to the list
         *
         * @fires TrackList#addtrack
         */_createClass(AudioTrackList,[{key:"addTrack",value:function addTrack(track){var _this54=this;if(track.enabled){disableOthers$1(this,track);}_get(_getPrototypeOf(AudioTrackList.prototype),"addTrack",this).call(this,track);// native tracks don't have this
if(!track.addEventListener){return;}track.enabledChange_=function(){// when we are disabling other tracks (since we don't support
// more than one track at a time) we will set changing_
// to true so that we don't trigger additional change events
if(_this54.changing_){return;}_this54.changing_=true;disableOthers$1(_this54,track);_this54.changing_=false;_this54.trigger('change');};/**
           * @listens AudioTrack#enabledchange
           * @fires TrackList#change
           */track.addEventListener('enabledchange',track.enabledChange_);}},{key:"removeTrack",value:function removeTrack(rtrack){_get(_getPrototypeOf(AudioTrackList.prototype),"removeTrack",this).call(this,rtrack);if(rtrack.removeEventListener&&rtrack.enabledChange_){rtrack.removeEventListener('enabledchange',rtrack.enabledChange_);rtrack.enabledChange_=null;}}}]);return AudioTrackList;}(TrackList);/**
       * @file video-track-list.js
       */ /**
       * Un-select all other {@link VideoTrack}s that are selected.
       *
       * @param {VideoTrackList} list
       *        list to work on
       *
       * @param { import('./video-track').default } track
       *        The track to skip
       *
       * @private
       */var disableOthers=function disableOthers(list,track){for(var _i92=0;_i92<list.length;_i92++){if(!Object.keys(list[_i92]).length||track.id===list[_i92].id){continue;}// another video track is enabled, disable it
list[_i92].selected=false;}};/**
       * The current list of {@link VideoTrack} for a video.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}
       * @extends TrackList
       */var VideoTrackList=/*#__PURE__*/function(_TrackList2){_inherits(VideoTrackList,_TrackList2);var _super16=_createSuper(VideoTrackList);/**
         * Create an instance of this class.
         *
         * @param {VideoTrack[]} [tracks=[]]
         *        A list of `VideoTrack` to instantiate the list with.
         */function VideoTrackList(){var _this55;var tracks=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,VideoTrackList);// make sure only 1 track is enabled
// sorted from last index to first index
for(var _i93=tracks.length-1;_i93>=0;_i93--){if(tracks[_i93].selected){disableOthers(tracks,tracks[_i93]);break;}}_this55=_super16.call(this,tracks);_this55.changing_=false;/**
           * @member {number} VideoTrackList#selectedIndex
           *         The current index of the selected {@link VideoTrack`}.
           */Object.defineProperty(_assertThisInitialized2(_this55),'selectedIndex',{get:function get(){for(var _i94=0;_i94<this.length;_i94++){if(this[_i94].selected){return _i94;}}return-1;},set:function set(){}});return _this55;}/**
         * Add a {@link VideoTrack} to the `VideoTrackList`.
         *
         * @param { import('./video-track').default } track
         *        The VideoTrack to add to the list
         *
         * @fires TrackList#addtrack
         */_createClass(VideoTrackList,[{key:"addTrack",value:function addTrack(track){var _this56=this;if(track.selected){disableOthers(this,track);}_get(_getPrototypeOf(VideoTrackList.prototype),"addTrack",this).call(this,track);// native tracks don't have this
if(!track.addEventListener){return;}track.selectedChange_=function(){if(_this56.changing_){return;}_this56.changing_=true;disableOthers(_this56,track);_this56.changing_=false;_this56.trigger('change');};/**
           * @listens VideoTrack#selectedchange
           * @fires TrackList#change
           */track.addEventListener('selectedchange',track.selectedChange_);}},{key:"removeTrack",value:function removeTrack(rtrack){_get(_getPrototypeOf(VideoTrackList.prototype),"removeTrack",this).call(this,rtrack);if(rtrack.removeEventListener&&rtrack.selectedChange_){rtrack.removeEventListener('selectedchange',rtrack.selectedChange_);rtrack.selectedChange_=null;}}}]);return VideoTrackList;}(TrackList);/**
       * @file text-track-list.js
       */ /**
       * The current list of {@link TextTrack} for a media file.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}
       * @extends TrackList
       */var TextTrackList=/*#__PURE__*/function(_TrackList3){_inherits(TextTrackList,_TrackList3);var _super17=_createSuper(TextTrackList);function TextTrackList(){_classCallCheck(this,TextTrackList);return _super17.apply(this,arguments);}_createClass(TextTrackList,[{key:"addTrack",value:/**
         * Add a {@link TextTrack} to the `TextTrackList`
         *
         * @param { import('./text-track').default } track
         *        The text track to add to the list.
         *
         * @fires TrackList#addtrack
         */function addTrack(track){var _this57=this;_get(_getPrototypeOf(TextTrackList.prototype),"addTrack",this).call(this,track);if(!this.queueChange_){this.queueChange_=function(){return _this57.queueTrigger('change');};}if(!this.triggerSelectedlanguagechange){this.triggerSelectedlanguagechange_=function(){return _this57.trigger('selectedlanguagechange');};}/**
           * @listens TextTrack#modechange
           * @fires TrackList#change
           */track.addEventListener('modechange',this.queueChange_);var nonLanguageTextTrackKind=['metadata','chapters'];if(nonLanguageTextTrackKind.indexOf(track.kind)===-1){track.addEventListener('modechange',this.triggerSelectedlanguagechange_);}}},{key:"removeTrack",value:function removeTrack(rtrack){_get(_getPrototypeOf(TextTrackList.prototype),"removeTrack",this).call(this,rtrack);// manually remove the event handlers we added
if(rtrack.removeEventListener){if(this.queueChange_){rtrack.removeEventListener('modechange',this.queueChange_);}if(this.selectedlanguagechange_){rtrack.removeEventListener('modechange',this.triggerSelectedlanguagechange_);}}}}]);return TextTrackList;}(TrackList);/**
       * @file html-track-element-list.js
       */ /**
       * The current list of {@link HtmlTrackElement}s.
       */var HtmlTrackElementList=/*#__PURE__*/function(){/**
         * Create an instance of this class.
         *
         * @param {HtmlTrackElement[]} [tracks=[]]
         *        A list of `HtmlTrackElement` to instantiate the list with.
         */function HtmlTrackElementList(){var trackElements=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,HtmlTrackElementList);this.trackElements_=[];/**
           * @memberof HtmlTrackElementList
           * @member {number} length
           *         The current number of `Track`s in the this Trackist.
           * @instance
           */Object.defineProperty(this,'length',{get:function get(){return this.trackElements_.length;}});for(var _i95=0,_length3=trackElements.length;_i95<_length3;_i95++){this.addTrackElement_(trackElements[_i95]);}}/**
         * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`
         *
         * @param {HtmlTrackElement} trackElement
         *        The track element to add to the list.
         *
         * @private
         */_createClass(HtmlTrackElementList,[{key:"addTrackElement_",value:function addTrackElement_(trackElement){var index=this.trackElements_.length;if(!(''+index in this)){Object.defineProperty(this,index,{get:function get(){return this.trackElements_[index];}});}// Do not add duplicate elements
if(this.trackElements_.indexOf(trackElement)===-1){this.trackElements_.push(trackElement);}}/**
         * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an
         * {@link TextTrack}.
         *
         * @param {TextTrack} track
         *        The track associated with a track element.
         *
         * @return {HtmlTrackElement|undefined}
         *         The track element that was found or undefined.
         *
         * @private
         */},{key:"getTrackElementByTrack_",value:function getTrackElementByTrack_(track){var trackElement_;for(var _i96=0,_length4=this.trackElements_.length;_i96<_length4;_i96++){if(track===this.trackElements_[_i96].track){trackElement_=this.trackElements_[_i96];break;}}return trackElement_;}/**
         * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`
         *
         * @param {HtmlTrackElement} trackElement
         *        The track element to remove from the list.
         *
         * @private
         */},{key:"removeTrackElement_",value:function removeTrackElement_(trackElement){for(var _i97=0,_length5=this.trackElements_.length;_i97<_length5;_i97++){if(trackElement===this.trackElements_[_i97]){if(this.trackElements_[_i97].track&&typeof this.trackElements_[_i97].track.off==='function'){this.trackElements_[_i97].track.off();}if(typeof this.trackElements_[_i97].off==='function'){this.trackElements_[_i97].off();}this.trackElements_.splice(_i97,1);break;}}}}]);return HtmlTrackElementList;}();/**
       * @file text-track-cue-list.js
       */ /**
       * @typedef {Object} TextTrackCueList~TextTrackCue
       *
       * @property {string} id
       *           The unique id for this text track cue
       *
       * @property {number} startTime
       *           The start time for this text track cue
       *
       * @property {number} endTime
       *           The end time for this text track cue
       *
       * @property {boolean} pauseOnExit
       *           Pause when the end time is reached if true.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}
       */ /**
       * A List of TextTrackCues.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}
       */var TextTrackCueList=/*#__PURE__*/function(){/**
         * Create an instance of this class..
         *
         * @param {Array} cues
         *        A list of cues to be initialized with
         */function TextTrackCueList(cues){_classCallCheck(this,TextTrackCueList);TextTrackCueList.prototype.setCues_.call(this,cues);/**
           * @memberof TextTrackCueList
           * @member {number} length
           *         The current number of `TextTrackCue`s in the TextTrackCueList.
           * @instance
           */Object.defineProperty(this,'length',{get:function get(){return this.length_;}});}/**
         * A setter for cues in this list. Creates getters
         * an an index for the cues.
         *
         * @param {Array} cues
         *        An array of cues to set
         *
         * @private
         */_createClass(TextTrackCueList,[{key:"setCues_",value:function setCues_(cues){var oldLength=this.length||0;var i=0;var l=cues.length;this.cues_=cues;this.length_=cues.length;var defineProp=function defineProp(index){if(!(''+index in this)){Object.defineProperty(this,''+index,{get:function get(){return this.cues_[index];}});}};if(oldLength<l){i=oldLength;for(;i<l;i++){defineProp.call(this,i);}}}/**
         * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.
         *
         * @param {string} id
         *        The id of the cue that should be searched for.
         *
         * @return {TextTrackCueList~TextTrackCue|null}
         *         A single cue or null if none was found.
         */},{key:"getCueById",value:function getCueById(id){var result=null;for(var _i98=0,_l3=this.length;_i98<_l3;_i98++){var cue=this[_i98];if(cue.id===id){result=cue;break;}}return result;}}]);return TextTrackCueList;}();/**
       * @file track-kinds.js
       */ /**
       * All possible `VideoTrackKind`s
       *
       * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind
       * @typedef VideoTrack~Kind
       * @enum
       */var VideoTrackKind={alternative:'alternative',captions:'captions',main:'main',sign:'sign',subtitles:'subtitles',commentary:'commentary'};/**
       * All possible `AudioTrackKind`s
       *
       * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind
       * @typedef AudioTrack~Kind
       * @enum
       */var AudioTrackKind={'alternative':'alternative','descriptions':'descriptions','main':'main','main-desc':'main-desc','translation':'translation','commentary':'commentary'};/**
       * All possible `TextTrackKind`s
       *
       * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind
       * @typedef TextTrack~Kind
       * @enum
       */var TextTrackKind={subtitles:'subtitles',captions:'captions',descriptions:'descriptions',chapters:'chapters',metadata:'metadata'};/**
       * All possible `TextTrackMode`s
       *
       * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode
       * @typedef TextTrack~Mode
       * @enum
       */var TextTrackMode={disabled:'disabled',hidden:'hidden',showing:'showing'};/**
       * @file track.js
       */ /**
       * A Track class that contains all of the common functionality for {@link AudioTrack},
       * {@link VideoTrack}, and {@link TextTrack}.
       *
       * > Note: This class should not be used directly
       *
       * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}
       * @extends EventTarget
       * @abstract
       */var Track=/*#__PURE__*/function(_EventTarget$2){_inherits(Track,_EventTarget$2);var _super18=_createSuper(Track);/**
         * Create an instance of this class.
         *
         * @param {Object} [options={}]
         *        Object of option names and values
         *
         * @param {string} [options.kind='']
         *        A valid kind for the track type you are creating.
         *
         * @param {string} [options.id='vjs_track_' + Guid.newGUID()]
         *        A unique id for this AudioTrack.
         *
         * @param {string} [options.label='']
         *        The menu label for this track.
         *
         * @param {string} [options.language='']
         *        A valid two character language code.
         *
         * @abstract
         */function Track(){var _this58;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Track);_this58=_super18.call(this);var trackProps={id:options.id||'vjs_track_'+newGUID(),kind:options.kind||'',language:options.language||''};var label=options.label||'';/**
           * @memberof Track
           * @member {string} id
           *         The id of this track. Cannot be changed after creation.
           * @instance
           *
           * @readonly
           */ /**
           * @memberof Track
           * @member {string} kind
           *         The kind of track that this is. Cannot be changed after creation.
           * @instance
           *
           * @readonly
           */ /**
           * @memberof Track
           * @member {string} language
           *         The two letter language code for this track. Cannot be changed after
           *         creation.
           * @instance
           *
           * @readonly
           */var _loop3=function _loop3(key){Object.defineProperty(_assertThisInitialized2(_this58),key,{get:function get(){return trackProps[key];},set:function set(){}});};for(var key in trackProps){_loop3(key);}/**
           * @memberof Track
           * @member {string} label
           *         The label of this track. Cannot be changed after creation.
           * @instance
           *
           * @fires Track#labelchange
           */Object.defineProperty(_assertThisInitialized2(_this58),'label',{get:function get(){return label;},set:function set(newLabel){if(newLabel!==label){label=newLabel;/**
                 * An event that fires when label changes on this track.
                 *
                 * > Note: This is not part of the spec!
                 *
                 * @event Track#labelchange
                 * @type {Event}
                 */this.trigger('labelchange');}}});return _this58;}return _createClass(Track);}(EventTarget$2);/**
       * @file url.js
       * @module url
       */ /**
       * @typedef {Object} url:URLObject
       *
       * @property {string} protocol
       *           The protocol of the url that was parsed.
       *
       * @property {string} hostname
       *           The hostname of the url that was parsed.
       *
       * @property {string} port
       *           The port of the url that was parsed.
       *
       * @property {string} pathname
       *           The pathname of the url that was parsed.
       *
       * @property {string} search
       *           The search query of the url that was parsed.
       *
       * @property {string} hash
       *           The hash of the url that was parsed.
       *
       * @property {string} host
       *           The host of the url that was parsed.
       */ /**
       * Resolve and parse the elements of a URL.
       *
       * @function
       * @param    {String} url
       *           The url to parse
       *
       * @return   {url:URLObject}
       *           An object of url details
       */var parseUrl=function parseUrl(url){// This entire method can be replace with URL once we are able to drop IE11
var props=['protocol','hostname','port','pathname','search','hash','host'];// add the url to an anchor and let the browser parse the URL
var a=document_1.createElement('a');a.href=url;// Copy the specific URL properties to a new object
// This is also needed for IE because the anchor loses its
// properties when it's removed from the dom
var details={};for(var _i99=0;_i99<props.length;_i99++){details[props[_i99]]=a[props[_i99]];}// IE adds the port to the host property unlike everyone else. If
// a port identifier is added for standard ports, strip it.
if(details.protocol==='http:'){details.host=details.host.replace(/:80$/,'');}if(details.protocol==='https:'){details.host=details.host.replace(/:443$/,'');}if(!details.protocol){details.protocol=window_1.location.protocol;}/* istanbul ignore if */if(!details.host){details.host=window_1.location.host;}return details;};/**
       * Get absolute version of relative URL.
       *
       * @function
       * @param    {string} url
       *           URL to make absolute
       *
       * @return   {string}
       *           Absolute URL
       *
       * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue
       */var getAbsoluteURL=function getAbsoluteURL(url){// Check if absolute URL
if(!url.match(/^https?:\/\//)){// Add the url to an anchor and let the browser parse it to convert to an absolute url
var _a3=document_1.createElement('a');_a3.href=url;url=_a3.href;}return url;};/**
       * Returns the extension of the passed file name. It will return an empty string
       * if passed an invalid path.
       *
       * @function
       * @param    {string} path
       *           The fileName path like '/path/to/file.mp4'
       *
       * @return  {string}
       *           The extension in lower case or an empty string if no
       *           extension could be found.
       */var getFileExtension=function getFileExtension(path){if(typeof path==='string'){var splitPathRe=/^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/;var pathParts=splitPathRe.exec(path);if(pathParts){return pathParts.pop().toLowerCase();}}return'';};/**
       * Returns whether the url passed is a cross domain request or not.
       *
       * @function
       * @param    {string} url
       *           The url to check.
       *
       * @param    {Object} [winLoc]
       *           the domain to check the url against, defaults to window.location
       *
       * @param    {string} [winLoc.protocol]
       *           The window location protocol defaults to window.location.protocol
       *
       * @param    {string} [winLoc.host]
       *           The window location host defaults to window.location.host
       *
       * @return   {boolean}
       *           Whether it is a cross domain request or not.
       */var isCrossOrigin=function isCrossOrigin(url){var winLoc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:window_1.location;var urlInfo=parseUrl(url);// IE8 protocol relative urls will return ':' for protocol
var srcProtocol=urlInfo.protocol===':'?winLoc.protocol:urlInfo.protocol;// Check if url is for another domain/origin
// IE8 doesn't know location.origin, so we won't rely on it here
var crossOrigin=srcProtocol+urlInfo.host!==winLoc.protocol+winLoc.host;return crossOrigin;};var Url=/*#__PURE__*/Object.freeze({__proto__:null,parseUrl:parseUrl,getAbsoluteURL:getAbsoluteURL,getFileExtension:getFileExtension,isCrossOrigin:isCrossOrigin});/**
       * @file text-track.js
       */ /**
       * Takes a webvtt file contents and parses it into cues
       *
       * @param {string} srcContent
       *        webVTT file contents
       *
       * @param {TextTrack} track
       *        TextTrack to add cues to. Cues come from the srcContent.
       *
       * @private
       */var parseCues=function parseCues(srcContent,track){var parser=new window_1.WebVTT.Parser(window_1,window_1.vttjs,window_1.WebVTT.StringDecoder());var errors=[];parser.oncue=function(cue){track.addCue(cue);};parser.onparsingerror=function(error){errors.push(error);};parser.onflush=function(){track.trigger({type:'loadeddata',target:track});};parser.parse(srcContent);if(errors.length>0){if(window_1.console&&window_1.console.groupCollapsed){window_1.console.groupCollapsed("Text Track parsing errors for ".concat(track.src));}errors.forEach(function(error){return log$1.error(error);});if(window_1.console&&window_1.console.groupEnd){window_1.console.groupEnd();}}parser.flush();};/**
       * Load a `TextTrack` from a specified url.
       *
       * @param {string} src
       *        Url to load track from.
       *
       * @param {TextTrack} track
       *        Track to add cues to. Comes from the content at the end of `url`.
       *
       * @private
       */var loadTrack=function loadTrack(src,track){var opts={uri:src};var crossOrigin=isCrossOrigin(src);if(crossOrigin){opts.cors=crossOrigin;}var withCredentials=track.tech_.crossOrigin()==='use-credentials';if(withCredentials){opts.withCredentials=withCredentials;}XHR(opts,bind_(this,function(err,response,responseBody){if(err){return log$1.error(err,response);}track.loaded_=true;// Make sure that vttjs has loaded, otherwise, wait till it finished loading
// NOTE: this is only used for the alt/video.novtt.js build
if(typeof window_1.WebVTT!=='function'){if(track.tech_){// to prevent use before define eslint error, we define loadHandler
// as a let here
track.tech_.any(['vttjsloaded','vttjserror'],function(event){if(event.type==='vttjserror'){log$1.error("vttjs failed to load, stopping trying to process ".concat(track.src));return;}return parseCues(responseBody,track);});}}else{parseCues(responseBody,track);}}));};/**
       * A representation of a single `TextTrack`.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}
       * @extends Track
       */var TextTrack=/*#__PURE__*/function(_Track){_inherits(TextTrack,_Track);var _super19=_createSuper(TextTrack);/**
         * Create an instance of this class.
         *
         * @param {Object} options={}
         *        Object of option names and values
         *
         * @param { import('../tech/tech').default } options.tech
         *        A reference to the tech that owns this TextTrack.
         *
         * @param {TextTrack~Kind} [options.kind='subtitles']
         *        A valid text track kind.
         *
         * @param {TextTrack~Mode} [options.mode='disabled']
         *        A valid text track mode.
         *
         * @param {string} [options.id='vjs_track_' + Guid.newGUID()]
         *        A unique id for this TextTrack.
         *
         * @param {string} [options.label='']
         *        The menu label for this track.
         *
         * @param {string} [options.language='']
         *        A valid two character language code.
         *
         * @param {string} [options.srclang='']
         *        A valid two character language code. An alternative, but deprioritized
         *        version of `options.language`
         *
         * @param {string} [options.src]
         *        A url to TextTrack cues.
         *
         * @param {boolean} [options.default]
         *        If this track should default to on or off.
         */function TextTrack(){var _this59;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,TextTrack);if(!options.tech){throw new Error('A tech was not provided.');}var settings=merge$1(options,{kind:TextTrackKind[options.kind]||'subtitles',language:options.language||options.srclang||''});var mode=TextTrackMode[settings.mode]||'disabled';var default_=settings.default;if(settings.kind==='metadata'||settings.kind==='chapters'){mode='hidden';}_this59=_super19.call(this,settings);_this59.tech_=settings.tech;_this59.cues_=[];_this59.activeCues_=[];_this59.preload_=_this59.tech_.preloadTextTracks!==false;var cues=new TextTrackCueList(_this59.cues_);var activeCues=new TextTrackCueList(_this59.activeCues_);var changed=false;_this59.timeupdateHandler=bind_(_assertThisInitialized2(_this59),function(){var event=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(this.tech_.isDisposed()){return;}if(!this.tech_.isReady_){if(event.type!=='timeupdate'){this.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);}return;}// Accessing this.activeCues for the side-effects of updating itself
// due to its nature as a getter function. Do not remove or cues will
// stop updating!
// Use the setter to prevent deletion from uglify (pure_getters rule)
this.activeCues=this.activeCues;if(changed){this.trigger('cuechange');changed=false;}if(event.type!=='timeupdate'){this.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);}});var disposeHandler=function disposeHandler(){_this59.stopTracking();};_this59.tech_.one('dispose',disposeHandler);if(mode!=='disabled'){_this59.startTracking();}Object.defineProperties(_assertThisInitialized2(_this59),{/**
             * @memberof TextTrack
             * @member {boolean} default
             *         If this track was set to be on or off by default. Cannot be changed after
             *         creation.
             * @instance
             *
             * @readonly
             */default:{get:function get(){return default_;},set:function set(){}},/**
             * @memberof TextTrack
             * @member {string} mode
             *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will
             *         not be set if setting to an invalid mode.
             * @instance
             *
             * @fires TextTrack#modechange
             */mode:{get:function get(){return mode;},set:function set(newMode){if(!TextTrackMode[newMode]){return;}if(mode===newMode){return;}mode=newMode;if(!this.preload_&&mode!=='disabled'&&this.cues.length===0){// On-demand load.
loadTrack(this.src,this);}this.stopTracking();if(mode!=='disabled'){this.startTracking();}/**
                 * An event that fires when mode changes on this track. This allows
                 * the TextTrackList that holds this track to act accordingly.
                 *
                 * > Note: This is not part of the spec!
                 *
                 * @event TextTrack#modechange
                 * @type {Event}
                 */this.trigger('modechange');}},/**
             * @memberof TextTrack
             * @member {TextTrackCueList} cues
             *         The text track cue list for this TextTrack.
             * @instance
             */cues:{get:function get(){if(!this.loaded_){return null;}return cues;},set:function set(){}},/**
             * @memberof TextTrack
             * @member {TextTrackCueList} activeCues
             *         The list text track cues that are currently active for this TextTrack.
             * @instance
             */activeCues:{get:function get(){if(!this.loaded_){return null;}// nothing to do
if(this.cues.length===0){return activeCues;}var ct=this.tech_.currentTime();var active=[];for(var _i100=0,_l4=this.cues.length;_i100<_l4;_i100++){var cue=this.cues[_i100];if(cue.startTime<=ct&&cue.endTime>=ct){active.push(cue);}}changed=false;if(active.length!==this.activeCues_.length){changed=true;}else{for(var _i101=0;_i101<active.length;_i101++){if(this.activeCues_.indexOf(active[_i101])===-1){changed=true;}}}this.activeCues_=active;activeCues.setCues_(this.activeCues_);return activeCues;},// /!\ Keep this setter empty (see the timeupdate handler above)
set:function set(){}}});if(settings.src){_this59.src=settings.src;if(!_this59.preload_){// Tracks will load on-demand.
// Act like we're loaded for other purposes.
_this59.loaded_=true;}if(_this59.preload_||settings.kind!=='subtitles'&&settings.kind!=='captions'){loadTrack(_this59.src,_assertThisInitialized2(_this59));}}else{_this59.loaded_=true;}return _this59;}_createClass(TextTrack,[{key:"startTracking",value:function startTracking(){// More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback
this.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);// Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)
this.tech_.on('timeupdate',this.timeupdateHandler);}},{key:"stopTracking",value:function stopTracking(){if(this.rvf_){this.tech_.cancelVideoFrameCallback(this.rvf_);this.rvf_=undefined;}this.tech_.off('timeupdate',this.timeupdateHandler);}/**
         * Add a cue to the internal list of cues.
         *
         * @param {TextTrack~Cue} cue
         *        The cue to add to our internal list
         */},{key:"addCue",value:function addCue(originalCue){var cue=originalCue;// Testing if the cue is a VTTCue in a way that survives minification
if(!('getCueAsHTML'in cue)){cue=new window_1.vttjs.VTTCue(originalCue.startTime,originalCue.endTime,originalCue.text);for(var _prop2 in originalCue){if(!(_prop2 in cue)){cue[_prop2]=originalCue[_prop2];}}// make sure that `id` is copied over
cue.id=originalCue.id;cue.originalCue_=originalCue;}var tracks=this.tech_.textTracks();for(var _i102=0;_i102<tracks.length;_i102++){if(tracks[_i102]!==this){tracks[_i102].removeCue(cue);}}this.cues_.push(cue);this.cues.setCues_(this.cues_);}/**
         * Remove a cue from our internal list
         *
         * @param {TextTrack~Cue} removeCue
         *        The cue to remove from our internal list
         */},{key:"removeCue",value:function removeCue(_removeCue){var i=this.cues_.length;while(i--){var cue=this.cues_[i];if(cue===_removeCue||cue.originalCue_&&cue.originalCue_===_removeCue){this.cues_.splice(i,1);this.cues.setCues_(this.cues_);break;}}}}]);return TextTrack;}(Track);/**
       * cuechange - One or more cues in the track have become active or stopped being active.
       * @protected
       */TextTrack.prototype.allowedEvents_={cuechange:'cuechange'};/**
       * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}
       * only one `AudioTrack` in the list will be enabled at a time.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}
       * @extends Track
       */var AudioTrack=/*#__PURE__*/function(_Track2){_inherits(AudioTrack,_Track2);var _super20=_createSuper(AudioTrack);/**
         * Create an instance of this class.
         *
         * @param {Object} [options={}]
         *        Object of option names and values
         *
         * @param {AudioTrack~Kind} [options.kind='']
         *        A valid audio track kind
         *
         * @param {string} [options.id='vjs_track_' + Guid.newGUID()]
         *        A unique id for this AudioTrack.
         *
         * @param {string} [options.label='']
         *        The menu label for this track.
         *
         * @param {string} [options.language='']
         *        A valid two character language code.
         *
         * @param {boolean} [options.enabled]
         *        If this track is the one that is currently playing. If this track is part of
         *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.
         */function AudioTrack(){var _this60;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,AudioTrack);var settings=merge$1(options,{kind:AudioTrackKind[options.kind]||''});_this60=_super20.call(this,settings);var enabled=false;/**
           * @memberof AudioTrack
           * @member {boolean} enabled
           *         If this `AudioTrack` is enabled or not. When setting this will
           *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.
           * @instance
           *
           * @fires VideoTrack#selectedchange
           */Object.defineProperty(_assertThisInitialized2(_this60),'enabled',{get:function get(){return enabled;},set:function set(newEnabled){// an invalid or unchanged value
if(typeof newEnabled!=='boolean'||newEnabled===enabled){return;}enabled=newEnabled;/**
               * An event that fires when enabled changes on this track. This allows
               * the AudioTrackList that holds this track to act accordingly.
               *
               * > Note: This is not part of the spec! Native tracks will do
               *         this internally without an event.
               *
               * @event AudioTrack#enabledchange
               * @type {Event}
               */this.trigger('enabledchange');}});// if the user sets this track to selected then
// set selected to that true value otherwise
// we keep it false
if(settings.enabled){_this60.enabled=settings.enabled;}_this60.loaded_=true;return _this60;}return _createClass(AudioTrack);}(Track);/**
       * A representation of a single `VideoTrack`.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}
       * @extends Track
       */var VideoTrack=/*#__PURE__*/function(_Track3){_inherits(VideoTrack,_Track3);var _super21=_createSuper(VideoTrack);/**
         * Create an instance of this class.
         *
         * @param {Object} [options={}]
         *        Object of option names and values
         *
         * @param {string} [options.kind='']
         *        A valid {@link VideoTrack~Kind}
         *
         * @param {string} [options.id='vjs_track_' + Guid.newGUID()]
         *        A unique id for this AudioTrack.
         *
         * @param {string} [options.label='']
         *        The menu label for this track.
         *
         * @param {string} [options.language='']
         *        A valid two character language code.
         *
         * @param {boolean} [options.selected]
         *        If this track is the one that is currently playing.
         */function VideoTrack(){var _this61;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,VideoTrack);var settings=merge$1(options,{kind:VideoTrackKind[options.kind]||''});_this61=_super21.call(this,settings);var selected=false;/**
           * @memberof VideoTrack
           * @member {boolean} selected
           *         If this `VideoTrack` is selected or not. When setting this will
           *         fire {@link VideoTrack#selectedchange} if the state of selected changed.
           * @instance
           *
           * @fires VideoTrack#selectedchange
           */Object.defineProperty(_assertThisInitialized2(_this61),'selected',{get:function get(){return selected;},set:function set(newSelected){// an invalid or unchanged value
if(typeof newSelected!=='boolean'||newSelected===selected){return;}selected=newSelected;/**
               * An event that fires when selected changes on this track. This allows
               * the VideoTrackList that holds this track to act accordingly.
               *
               * > Note: This is not part of the spec! Native tracks will do
               *         this internally without an event.
               *
               * @event VideoTrack#selectedchange
               * @type {Event}
               */this.trigger('selectedchange');}});// if the user sets this track to selected then
// set selected to that true value otherwise
// we keep it false
if(settings.selected){_this61.selected=settings.selected;}return _this61;}return _createClass(VideoTrack);}(Track);/**
       * @file html-track-element.js
       */ /**
       * A single track represented in the DOM.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}
       * @extends EventTarget
       */var HTMLTrackElement=/*#__PURE__*/function(_EventTarget$3){_inherits(HTMLTrackElement,_EventTarget$3);var _super22=_createSuper(HTMLTrackElement);/**
         * Create an instance of this class.
         *
         * @param {Object} options={}
         *        Object of option names and values
         *
         * @param { import('../tech/tech').default } options.tech
         *        A reference to the tech that owns this HTMLTrackElement.
         *
         * @param {TextTrack~Kind} [options.kind='subtitles']
         *        A valid text track kind.
         *
         * @param {TextTrack~Mode} [options.mode='disabled']
         *        A valid text track mode.
         *
         * @param {string} [options.id='vjs_track_' + Guid.newGUID()]
         *        A unique id for this TextTrack.
         *
         * @param {string} [options.label='']
         *        The menu label for this track.
         *
         * @param {string} [options.language='']
         *        A valid two character language code.
         *
         * @param {string} [options.srclang='']
         *        A valid two character language code. An alternative, but deprioritized
         *        version of `options.language`
         *
         * @param {string} [options.src]
         *        A url to TextTrack cues.
         *
         * @param {boolean} [options.default]
         *        If this track should default to on or off.
         */function HTMLTrackElement(){var _this62;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,HTMLTrackElement);_this62=_super22.call(this);var readyState;var track=new TextTrack(options);_this62.kind=track.kind;_this62.src=track.src;_this62.srclang=track.language;_this62.label=track.label;_this62.default=track.default;Object.defineProperties(_assertThisInitialized2(_this62),{/**
             * @memberof HTMLTrackElement
             * @member {HTMLTrackElement~ReadyState} readyState
             *         The current ready state of the track element.
             * @instance
             */readyState:{get:function get(){return readyState;}},/**
             * @memberof HTMLTrackElement
             * @member {TextTrack} track
             *         The underlying TextTrack object.
             * @instance
             *
             */track:{get:function get(){return track;}}});readyState=HTMLTrackElement.NONE;/**
           * @listens TextTrack#loadeddata
           * @fires HTMLTrackElement#load
           */track.addEventListener('loadeddata',function(){readyState=HTMLTrackElement.LOADED;_this62.trigger({type:'load',target:_assertThisInitialized2(_this62)});});return _this62;}return _createClass(HTMLTrackElement);}(EventTarget$2);/**
       * @protected
       */HTMLTrackElement.prototype.allowedEvents_={load:'load'};/**
       * The text track not loaded state.
       *
       * @type {number}
       * @static
       */HTMLTrackElement.NONE=0;/**
       * The text track loading state.
       *
       * @type {number}
       * @static
       */HTMLTrackElement.LOADING=1;/**
       * The text track loaded state.
       *
       * @type {number}
       * @static
       */HTMLTrackElement.LOADED=2;/**
       * The text track failed to load state.
       *
       * @type {number}
       * @static
       */HTMLTrackElement.ERROR=3;/*
       * This file contains all track properties that are used in
       * player.js, tech.js, html5.js and possibly other techs in the future.
       */var NORMAL={audio:{ListClass:AudioTrackList,TrackClass:AudioTrack,capitalName:'Audio'},video:{ListClass:VideoTrackList,TrackClass:VideoTrack,capitalName:'Video'},text:{ListClass:TextTrackList,TrackClass:TextTrack,capitalName:'Text'}};Object.keys(NORMAL).forEach(function(type){NORMAL[type].getterName="".concat(type,"Tracks");NORMAL[type].privateName="".concat(type,"Tracks_");});var REMOTE={remoteText:{ListClass:TextTrackList,TrackClass:TextTrack,capitalName:'RemoteText',getterName:'remoteTextTracks',privateName:'remoteTextTracks_'},remoteTextEl:{ListClass:HtmlTrackElementList,TrackClass:HTMLTrackElement,capitalName:'RemoteTextTrackEls',getterName:'remoteTextTrackEls',privateName:'remoteTextTrackEls_'}};var ALL=Object.assign({},NORMAL,REMOTE);REMOTE.names=Object.keys(REMOTE);NORMAL.names=Object.keys(NORMAL);ALL.names=[].concat(REMOTE.names).concat(NORMAL.names);/**
       * @file tech.js
       */ /**
       * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string
       * that just contains the src url alone.
       * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`
         * `var SourceString = 'http://example.com/some-video.mp4';`
       *
       * @typedef {Object|string} SourceObject
       *
       * @property {string} src
       *           The url to the source
       *
       * @property {string} type
       *           The mime type of the source
       */ /**
       * A function used by {@link Tech} to create a new {@link TextTrack}.
       *
       * @private
       *
       * @param {Tech} self
       *        An instance of the Tech class.
       *
       * @param {string} kind
       *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)
       *
       * @param {string} [label]
       *        Label to identify the text track
       *
       * @param {string} [language]
       *        Two letter language abbreviation
       *
       * @param {Object} [options={}]
       *        An object with additional text track options
       *
       * @return {TextTrack}
       *          The text track that was created.
       */function createTrackHelper(self,kind,label,language){var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var tracks=self.textTracks();options.kind=kind;if(label){options.label=label;}if(language){options.language=language;}options.tech=self;var track=new ALL.text.TrackClass(options);tracks.addTrack(track);return track;}/**
       * This is the base class for media playback technology controllers, such as
       * {@link HTML5}
       *
       * @extends Component
       */var Tech=/*#__PURE__*/function(_Component$2){_inherits(Tech,_Component$2);var _super23=_createSuper(Tech);/**
        * Create an instance of this Tech.
        *
        * @param {Object} [options]
        *        The key/value store of player options.
        *
        * @param {Function} [ready]
        *        Callback function to call when the `HTML5` Tech is ready.
        */function Tech(){var _this63;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var ready=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};_classCallCheck(this,Tech);// we don't want the tech to report user activity automatically.
// This is done manually in addControlsListeners
options.reportTouchActivity=false;_this63=_super23.call(this,null,options,ready);_this63.onDurationChange_=function(e){return _this63.onDurationChange(e);};_this63.trackProgress_=function(e){return _this63.trackProgress(e);};_this63.trackCurrentTime_=function(e){return _this63.trackCurrentTime(e);};_this63.stopTrackingCurrentTime_=function(e){return _this63.stopTrackingCurrentTime(e);};_this63.disposeSourceHandler_=function(e){return _this63.disposeSourceHandler(e);};_this63.queuedHanders_=new Set();// keep track of whether the current source has played at all to
// implement a very limited played()
_this63.hasStarted_=false;_this63.on('playing',function(){this.hasStarted_=true;});_this63.on('loadstart',function(){this.hasStarted_=false;});ALL.names.forEach(function(name){var props=ALL[name];if(options&&options[props.getterName]){_this63[props.privateName]=options[props.getterName];}});// Manually track progress in cases where the browser/tech doesn't report it.
if(!_this63.featuresProgressEvents){_this63.manualProgressOn();}// Manually track timeupdates in cases where the browser/tech doesn't report it.
if(!_this63.featuresTimeupdateEvents){_this63.manualTimeUpdatesOn();}['Text','Audio','Video'].forEach(function(track){if(options["native".concat(track,"Tracks")]===false){_this63["featuresNative".concat(track,"Tracks")]=false;}});if(options.nativeCaptions===false||options.nativeTextTracks===false){_this63.featuresNativeTextTracks=false;}else if(options.nativeCaptions===true||options.nativeTextTracks===true){_this63.featuresNativeTextTracks=true;}if(!_this63.featuresNativeTextTracks){_this63.emulateTextTracks();}_this63.preloadTextTracks=options.preloadTextTracks!==false;_this63.autoRemoteTextTracks_=new ALL.text.ListClass();_this63.initTrackListeners();// Turn on component tap events only if not using native controls
if(!options.nativeControlsForTouch){_this63.emitTapEvents();}if(_this63.constructor){_this63.name_=_this63.constructor.name||'Unknown Tech';}return _this63;}/**
         * A special function to trigger source set in a way that will allow player
         * to re-trigger if the player or tech are not ready yet.
         *
         * @fires Tech#sourceset
         * @param {string} src The source string at the time of the source changing.
         */_createClass(Tech,[{key:"triggerSourceset",value:function triggerSourceset(src){var _this64=this;if(!this.isReady_){// on initial ready we have to trigger source set
// 1ms after ready so that player can watch for it.
this.one('ready',function(){return _this64.setTimeout(function(){return _this64.triggerSourceset(src);},1);});}/**
           * Fired when the source is set on the tech causing the media element
           * to reload.
           *
           * @see {@link Player#event:sourceset}
           * @event Tech#sourceset
           * @type {Event}
           */this.trigger({src:src,type:'sourceset'});}/* Fallbacks for unsupported event types
        ================================================================================ */ /**
         * Polyfill the `progress` event for browsers that don't support it natively.
         *
         * @see {@link Tech#trackProgress}
         */},{key:"manualProgressOn",value:function manualProgressOn(){this.on('durationchange',this.onDurationChange_);this.manualProgress=true;// Trigger progress watching when a source begins loading
this.one('ready',this.trackProgress_);}/**
         * Turn off the polyfill for `progress` events that was created in
         * {@link Tech#manualProgressOn}
         */},{key:"manualProgressOff",value:function manualProgressOff(){this.manualProgress=false;this.stopTrackingProgress();this.off('durationchange',this.onDurationChange_);}/**
         * This is used to trigger a `progress` event when the buffered percent changes. It
         * sets an interval function that will be called every 500 milliseconds to check if the
         * buffer end percent has changed.
         *
         * > This function is called by {@link Tech#manualProgressOn}
         *
         * @param {Event} event
         *        The `ready` event that caused this to run.
         *
         * @listens Tech#ready
         * @fires Tech#progress
         */},{key:"trackProgress",value:function trackProgress(event){this.stopTrackingProgress();this.progressInterval=this.setInterval(bind_(this,function(){// Don't trigger unless buffered amount is greater than last time
var numBufferedPercent=this.bufferedPercent();if(this.bufferedPercent_!==numBufferedPercent){/**
               * See {@link Player#progress}
               *
               * @event Tech#progress
               * @type {Event}
               */this.trigger('progress');}this.bufferedPercent_=numBufferedPercent;if(numBufferedPercent===1){this.stopTrackingProgress();}}),500);}/**
         * Update our internal duration on a `durationchange` event by calling
         * {@link Tech#duration}.
         *
         * @param {Event} event
         *        The `durationchange` event that caused this to run.
         *
         * @listens Tech#durationchange
         */},{key:"onDurationChange",value:function onDurationChange(event){this.duration_=this.duration();}/**
         * Get and create a `TimeRange` object for buffering.
         *
         * @return { import('../utils/time').TimeRange }
         *         The time range object that was created.
         */},{key:"buffered",value:function buffered(){return createTimeRanges$1(0,0);}/**
         * Get the percentage of the current video that is currently buffered.
         *
         * @return {number}
         *         A number from 0 to 1 that represents the decimal percentage of the
         *         video that is buffered.
         *
         */},{key:"bufferedPercent",value:function bufferedPercent(){return _bufferedPercent(this.buffered(),this.duration_);}/**
         * Turn off the polyfill for `progress` events that was created in
         * {@link Tech#manualProgressOn}
         * Stop manually tracking progress events by clearing the interval that was set in
         * {@link Tech#trackProgress}.
         */},{key:"stopTrackingProgress",value:function stopTrackingProgress(){this.clearInterval(this.progressInterval);}/**
         * Polyfill the `timeupdate` event for browsers that don't support it.
         *
         * @see {@link Tech#trackCurrentTime}
         */},{key:"manualTimeUpdatesOn",value:function manualTimeUpdatesOn(){this.manualTimeUpdates=true;this.on('play',this.trackCurrentTime_);this.on('pause',this.stopTrackingCurrentTime_);}/**
         * Turn off the polyfill for `timeupdate` events that was created in
         * {@link Tech#manualTimeUpdatesOn}
         */},{key:"manualTimeUpdatesOff",value:function manualTimeUpdatesOff(){this.manualTimeUpdates=false;this.stopTrackingCurrentTime();this.off('play',this.trackCurrentTime_);this.off('pause',this.stopTrackingCurrentTime_);}/**
         * Sets up an interval function to track current time and trigger `timeupdate` every
         * 250 milliseconds.
         *
         * @listens Tech#play
         * @triggers Tech#timeupdate
         */},{key:"trackCurrentTime",value:function trackCurrentTime(){if(this.currentTimeInterval){this.stopTrackingCurrentTime();}this.currentTimeInterval=this.setInterval(function(){/**
             * Triggered at an interval of 250ms to indicated that time is passing in the video.
             *
             * @event Tech#timeupdate
             * @type {Event}
             */this.trigger({type:'timeupdate',target:this,manuallyTriggered:true});// 42 = 24 fps // 250 is what Webkit uses // FF uses 15
},250);}/**
         * Stop the interval function created in {@link Tech#trackCurrentTime} so that the
         * `timeupdate` event is no longer triggered.
         *
         * @listens {Tech#pause}
         */},{key:"stopTrackingCurrentTime",value:function stopTrackingCurrentTime(){this.clearInterval(this.currentTimeInterval);// #1002 - if the video ends right before the next timeupdate would happen,
// the progress bar won't make it all the way to the end
this.trigger({type:'timeupdate',target:this,manuallyTriggered:true});}/**
         * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},
         * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.
         *
         * @fires Component#dispose
         */},{key:"dispose",value:function dispose(){// clear out all tracks because we can't reuse them between techs
this.clearTracks(NORMAL.names);// Turn off any manual progress or timeupdate tracking
if(this.manualProgress){this.manualProgressOff();}if(this.manualTimeUpdates){this.manualTimeUpdatesOff();}_get(_getPrototypeOf(Tech.prototype),"dispose",this).call(this);}/**
         * Clear out a single `TrackList` or an array of `TrackLists` given their names.
         *
         * > Note: Techs without source handlers should call this between sources for `video`
         *         & `audio` tracks. You don't want to use them between tracks!
         *
         * @param {string[]|string} types
         *        TrackList names to clear, valid names are `video`, `audio`, and
         *        `text`.
         */},{key:"clearTracks",value:function clearTracks(types){var _this65=this;types=[].concat(types);// clear out all tracks because we can't reuse them between techs
types.forEach(function(type){var list=_this65["".concat(type,"Tracks")]()||[];var i=list.length;while(i--){var track=list[i];if(type==='text'){_this65.removeRemoteTextTrack(track);}list.removeTrack(track);}});}/**
         * Remove any TextTracks added via addRemoteTextTrack that are
         * flagged for automatic garbage collection
         */},{key:"cleanupAutoTextTracks",value:function cleanupAutoTextTracks(){var list=this.autoRemoteTextTracks_||[];var i=list.length;while(i--){var track=list[i];this.removeRemoteTextTrack(track);}}/**
         * Reset the tech, which will removes all sources and reset the internal readyState.
         *
         * @abstract
         */},{key:"reset",value:function reset(){}/**
         * Get the value of `crossOrigin` from the tech.
         *
         * @abstract
         *
         * @see {Html5#crossOrigin}
         */},{key:"crossOrigin",value:function crossOrigin(){}/**
         * Set the value of `crossOrigin` on the tech.
         *
         * @abstract
         *
         * @param {string} crossOrigin the crossOrigin value
         * @see {Html5#setCrossOrigin}
         */},{key:"setCrossOrigin",value:function setCrossOrigin(){}/**
         * Get or set an error on the Tech.
         *
         * @param {MediaError} [err]
         *        Error to set on the Tech
         *
         * @return {MediaError|null}
         *         The current error object on the tech, or null if there isn't one.
         */},{key:"error",value:function error(err){if(err!==undefined){this.error_=new MediaError(err);this.trigger('error');}return this.error_;}/**
         * Returns the `TimeRange`s that have been played through for the current source.
         *
         * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.
         *         It only checks whether the source has played at all or not.
         *
         * @return { import('../utils/time').TimeRange }
         *         - A single time range if this video has played
         *         - An empty set of ranges if not.
         */},{key:"played",value:function played(){if(this.hasStarted_){return createTimeRanges$1(0,0);}return createTimeRanges$1();}/**
         * Start playback
         *
         * @abstract
         *
         * @see {Html5#play}
         */},{key:"play",value:function play(){}/**
         * Set whether we are scrubbing or not
         *
         * @abstract
         * @param {boolean} _isScrubbing
         *                  - true for we are currently scrubbing
         *                  - false for we are no longer scrubbing
         *
         * @see {Html5#setScrubbing}
         */},{key:"setScrubbing",value:function setScrubbing(_isScrubbing){}/**
         * Get whether we are scrubbing or not
         *
         * @abstract
         *
         * @see {Html5#scrubbing}
         */},{key:"scrubbing",value:function scrubbing(){}/**
         * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was
         * previously called.
         *
         * @param {number} _seconds
         *        Set the current time of the media to this.
         * @fires Tech#timeupdate
         */},{key:"setCurrentTime",value:function setCurrentTime(_seconds){// improve the accuracy of manual timeupdates
if(this.manualTimeUpdates){/**
             * A manual `timeupdate` event.
             *
             * @event Tech#timeupdate
             * @type {Event}
             */this.trigger({type:'timeupdate',target:this,manuallyTriggered:true});}}/**
         * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and
         * {@link TextTrackList} events.
         *
         * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.
         *
         * @fires Tech#audiotrackchange
         * @fires Tech#videotrackchange
         * @fires Tech#texttrackchange
         */},{key:"initTrackListeners",value:function initTrackListeners(){var _this66=this;/**
            * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}
            *
            * @event Tech#audiotrackchange
            * @type {Event}
            */ /**
            * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}
            *
            * @event Tech#videotrackchange
            * @type {Event}
            */ /**
            * Triggered when tracks are added or removed on the Tech {@link TextTrackList}
            *
            * @event Tech#texttrackchange
            * @type {Event}
            */NORMAL.names.forEach(function(name){var props=NORMAL[name];var trackListChanges=function trackListChanges(){_this66.trigger("".concat(name,"trackchange"));};var tracks=_this66[props.getterName]();tracks.addEventListener('removetrack',trackListChanges);tracks.addEventListener('addtrack',trackListChanges);_this66.on('dispose',function(){tracks.removeEventListener('removetrack',trackListChanges);tracks.removeEventListener('addtrack',trackListChanges);});});}/**
         * Emulate TextTracks using vtt.js if necessary
         *
         * @fires Tech#vttjsloaded
         * @fires Tech#vttjserror
         */},{key:"addWebVttScript_",value:function addWebVttScript_(){var _this67=this;if(window_1.WebVTT){return;}// Initially, Tech.el_ is a child of a dummy-div wait until the Component system
// signals that the Tech is ready at which point Tech.el_ is part of the DOM
// before inserting the WebVTT script
if(document_1.body.contains(this.el())){// load via require if available and vtt.js script location was not passed in
// as an option. novtt builds will turn the above require call into an empty object
// which will cause this if check to always fail.
if(!this.options_['vtt.js']&&isPlain(vtt)&&Object.keys(vtt).length>0){this.trigger('vttjsloaded');return;}// load vtt.js via the script location option or the cdn of no location was
// passed in
var script=document_1.createElement('script');script.src=this.options_['vtt.js']||'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';script.onload=function(){/**
               * Fired when vtt.js is loaded.
               *
               * @event Tech#vttjsloaded
               * @type {Event}
               */_this67.trigger('vttjsloaded');};script.onerror=function(){/**
               * Fired when vtt.js was not loaded due to an error
               *
               * @event Tech#vttjsloaded
               * @type {Event}
               */_this67.trigger('vttjserror');};this.on('dispose',function(){script.onload=null;script.onerror=null;});// but have not loaded yet and we set it to true before the inject so that
// we don't overwrite the injected window.WebVTT if it loads right away
window_1.WebVTT=true;this.el().parentNode.appendChild(script);}else{this.ready(this.addWebVttScript_);}}/**
         * Emulate texttracks
         *
         */},{key:"emulateTextTracks",value:function emulateTextTracks(){var _this68=this;var tracks=this.textTracks();var remoteTracks=this.remoteTextTracks();var handleAddTrack=function handleAddTrack(e){return tracks.addTrack(e.track);};var handleRemoveTrack=function handleRemoveTrack(e){return tracks.removeTrack(e.track);};remoteTracks.on('addtrack',handleAddTrack);remoteTracks.on('removetrack',handleRemoveTrack);this.addWebVttScript_();var updateDisplay=function updateDisplay(){return _this68.trigger('texttrackchange');};var textTracksChanges=function textTracksChanges(){updateDisplay();for(var _i103=0;_i103<tracks.length;_i103++){var track=tracks[_i103];track.removeEventListener('cuechange',updateDisplay);if(track.mode==='showing'){track.addEventListener('cuechange',updateDisplay);}}};textTracksChanges();tracks.addEventListener('change',textTracksChanges);tracks.addEventListener('addtrack',textTracksChanges);tracks.addEventListener('removetrack',textTracksChanges);this.on('dispose',function(){remoteTracks.off('addtrack',handleAddTrack);remoteTracks.off('removetrack',handleRemoveTrack);tracks.removeEventListener('change',textTracksChanges);tracks.removeEventListener('addtrack',textTracksChanges);tracks.removeEventListener('removetrack',textTracksChanges);for(var _i104=0;_i104<tracks.length;_i104++){var track=tracks[_i104];track.removeEventListener('cuechange',updateDisplay);}});}/**
         * Create and returns a remote {@link TextTrack} object.
         *
         * @param {string} kind
         *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)
         *
         * @param {string} [label]
         *        Label to identify the text track
         *
         * @param {string} [language]
         *        Two letter language abbreviation
         *
         * @return {TextTrack}
         *         The TextTrack that gets created.
         */},{key:"addTextTrack",value:function addTextTrack(kind,label,language){if(!kind){throw new Error('TextTrack kind is required but was not provided');}return createTrackHelper(this,kind,label,language);}/**
         * Create an emulated TextTrack for use by addRemoteTextTrack
         *
         * This is intended to be overridden by classes that inherit from
         * Tech in order to create native or custom TextTracks.
         *
         * @param {Object} options
         *        The object should contain the options to initialize the TextTrack with.
         *
         * @param {string} [options.kind]
         *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).
         *
         * @param {string} [options.label].
         *        Label to identify the text track
         *
         * @param {string} [options.language]
         *        Two letter language abbreviation.
         *
         * @return {HTMLTrackElement}
         *         The track element that gets created.
         */},{key:"createRemoteTextTrack",value:function createRemoteTextTrack(options){var track=merge$1(options,{tech:this});return new REMOTE.remoteTextEl.TrackClass(track);}/**
         * Creates a remote text track object and returns an html track element.
         *
         * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.
         *
         * @param {Object} options
         *        See {@link Tech#createRemoteTextTrack} for more detailed properties.
         *
         * @param {boolean} [manualCleanup=false]
         *        - When false: the TextTrack will be automatically removed from the video
         *          element whenever the source changes
         *        - When True: The TextTrack will have to be cleaned up manually
         *
         * @return {HTMLTrackElement}
         *         An Html Track Element.
         *
         */},{key:"addRemoteTextTrack",value:function addRemoteTextTrack(){var _this69=this;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var manualCleanup=arguments.length>1?arguments[1]:undefined;var htmlTrackElement=this.createRemoteTextTrack(options);if(typeof manualCleanup!=='boolean'){manualCleanup=false;}// store HTMLTrackElement and TextTrack to remote list
this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);this.remoteTextTracks().addTrack(htmlTrackElement.track);if(manualCleanup===false){// create the TextTrackList if it doesn't exist
this.ready(function(){return _this69.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);});}return htmlTrackElement;}/**
         * Remove a remote text track from the remote `TextTrackList`.
         *
         * @param {TextTrack} track
         *        `TextTrack` to remove from the `TextTrackList`
         */},{key:"removeRemoteTextTrack",value:function removeRemoteTextTrack(track){var trackElement=this.remoteTextTrackEls().getTrackElementByTrack_(track);// remove HTMLTrackElement and TextTrack from remote list
this.remoteTextTrackEls().removeTrackElement_(trackElement);this.remoteTextTracks().removeTrack(track);this.autoRemoteTextTracks_.removeTrack(track);}/**
         * Gets available media playback quality metrics as specified by the W3C's Media
         * Playback Quality API.
         *
         * @see [Spec]{@link https://wicg.github.io/media-playback-quality}
         *
         * @return {Object}
         *         An object with supported media playback quality metrics
         *
         * @abstract
         */},{key:"getVideoPlaybackQuality",value:function getVideoPlaybackQuality(){return{};}/**
         * Attempt to create a floating video window always on top of other windows
         * so that users may continue consuming media while they interact with other
         * content sites, or applications on their device.
         *
         * @see [Spec]{@link https://wicg.github.io/picture-in-picture}
         *
         * @return {Promise|undefined}
         *         A promise with a Picture-in-Picture window if the browser supports
         *         Promises (or one was passed in as an option). It returns undefined
         *         otherwise.
         *
         * @abstract
         */},{key:"requestPictureInPicture",value:function requestPictureInPicture(){return Promise.reject();}/**
         * A method to check for the value of the 'disablePictureInPicture' <video> property.
         * Defaults to true, as it should be considered disabled if the tech does not support pip
         *
         * @abstract
         */},{key:"disablePictureInPicture",value:function disablePictureInPicture(){return true;}/**
         * A method to set or unset the 'disablePictureInPicture' <video> property.
         *
         * @abstract
         */},{key:"setDisablePictureInPicture",value:function setDisablePictureInPicture(){}/**
         * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame
         *
         * @param {function} cb
         * @return {number} request id
         */},{key:"requestVideoFrameCallback",value:function requestVideoFrameCallback(cb){var _this70=this;var id=newGUID();if(!this.isReady_||this.paused()){this.queuedHanders_.add(id);this.one('playing',function(){if(_this70.queuedHanders_.has(id)){_this70.queuedHanders_.delete(id);cb();}});}else{this.requestNamedAnimationFrame(id,cb);}return id;}/**
         * A fallback implementation of cancelVideoFrameCallback
         *
         * @param {number} id id of callback to be cancelled
         */},{key:"cancelVideoFrameCallback",value:function cancelVideoFrameCallback(id){if(this.queuedHanders_.has(id)){this.queuedHanders_.delete(id);}else{this.cancelNamedAnimationFrame(id);}}/**
         * A method to set a poster from a `Tech`.
         *
         * @abstract
         */},{key:"setPoster",value:function setPoster(){}/**
         * A method to check for the presence of the 'playsinline' <video> attribute.
         *
         * @abstract
         */},{key:"playsinline",value:function playsinline(){}/**
         * A method to set or unset the 'playsinline' <video> attribute.
         *
         * @abstract
         */},{key:"setPlaysinline",value:function setPlaysinline(){}/**
         * Attempt to force override of native audio tracks.
         *
         * @param {boolean} override - If set to true native audio will be overridden,
         * otherwise native audio will potentially be used.
         *
         * @abstract
         */},{key:"overrideNativeAudioTracks",value:function overrideNativeAudioTracks(override){}/**
         * Attempt to force override of native video tracks.
         *
         * @param {boolean} override - If set to true native video will be overridden,
         * otherwise native video will potentially be used.
         *
         * @abstract
         */},{key:"overrideNativeVideoTracks",value:function overrideNativeVideoTracks(override){}/**
         * Check if the tech can support the given mime-type.
         *
         * The base tech does not support any type, but source handlers might
         * overwrite this.
         *
         * @param  {string} _type
         *         The mimetype to check for support
         *
         * @return {string}
         *         'probably', 'maybe', or empty string
         *
         * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}
         *
         * @abstract
         */},{key:"canPlayType",value:function canPlayType(_type){return'';}/**
         * Check if the type is supported by this tech.
         *
         * The base tech does not support any type, but source handlers might
         * overwrite this.
         *
         * @param {string} _type
         *        The media type to check
         * @return {string} Returns the native video element's response
         */}],[{key:"canPlayType",value:function canPlayType(_type){return'';}/**
         * Check if the tech can support the given source
         *
         * @param {Object} srcObj
         *        The source object
         * @param {Object} options
         *        The options passed to the tech
         * @return {string} 'probably', 'maybe', or '' (empty string)
         */},{key:"canPlaySource",value:function canPlaySource(srcObj,options){return Tech.canPlayType(srcObj.type);}/*
         * Return whether the argument is a Tech or not.
         * Can be passed either a Class like `Html5` or a instance like `player.tech_`
         *
         * @param {Object} component
         *        The item to check
         *
         * @return {boolean}
         *         Whether it is a tech or not
         *         - True if it is a tech
         *         - False if it is not
         */},{key:"isTech",value:function isTech(component){return component.prototype instanceof Tech||component instanceof Tech||component===Tech;}/**
         * Registers a `Tech` into a shared list for videojs.
         *
         * @param {string} name
         *        Name of the `Tech` to register.
         *
         * @param {Object} tech
         *        The `Tech` class to register.
         */},{key:"registerTech",value:function registerTech(name,tech){if(!Tech.techs_){Tech.techs_={};}if(!Tech.isTech(tech)){throw new Error("Tech ".concat(name," must be a Tech"));}if(!Tech.canPlayType){throw new Error('Techs must have a static canPlayType method on them');}if(!Tech.canPlaySource){throw new Error('Techs must have a static canPlaySource method on them');}name=toTitleCase$1(name);Tech.techs_[name]=tech;Tech.techs_[toLowerCase(name)]=tech;if(name!=='Tech'){// camel case the techName for use in techOrder
Tech.defaultTechOrder_.push(name);}return tech;}/**
         * Get a `Tech` from the shared list by name.
         *
         * @param {string} name
         *        `camelCase` or `TitleCase` name of the Tech to get
         *
         * @return {Tech|undefined}
         *         The `Tech` or undefined if there was no tech with the name requested.
         */},{key:"getTech",value:function getTech(name){if(!name){return;}if(Tech.techs_&&Tech.techs_[name]){return Tech.techs_[name];}name=toTitleCase$1(name);if(window_1&&window_1.videojs&&window_1.videojs[name]){log$1.warn("The ".concat(name," tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)"));return window_1.videojs[name];}}}]);return Tech;}(Component$1);/**
       * Get the {@link VideoTrackList}
       *
       * @returns {VideoTrackList}
       * @method Tech.prototype.videoTracks
       */ /**
       * Get the {@link AudioTrackList}
       *
       * @returns {AudioTrackList}
       * @method Tech.prototype.audioTracks
       */ /**
       * Get the {@link TextTrackList}
       *
       * @returns {TextTrackList}
       * @method Tech.prototype.textTracks
       */ /**
       * Get the remote element {@link TextTrackList}
       *
       * @returns {TextTrackList}
       * @method Tech.prototype.remoteTextTracks
       */ /**
       * Get the remote element {@link HtmlTrackElementList}
       *
       * @returns {HtmlTrackElementList}
       * @method Tech.prototype.remoteTextTrackEls
       */ALL.names.forEach(function(name){var props=ALL[name];Tech.prototype[props.getterName]=function(){this[props.privateName]=this[props.privateName]||new props.ListClass();return this[props.privateName];};});/**
       * List of associated text tracks
       *
       * @type {TextTrackList}
       * @private
       * @property Tech#textTracks_
       */ /**
       * List of associated audio tracks.
       *
       * @type {AudioTrackList}
       * @private
       * @property Tech#audioTracks_
       */ /**
       * List of associated video tracks.
       *
       * @type {VideoTrackList}
       * @private
       * @property Tech#videoTracks_
       */ /**
       * Boolean indicating whether the `Tech` supports volume control.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresVolumeControl=true;/**
       * Boolean indicating whether the `Tech` supports muting volume.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresMuteControl=true;/**
       * Boolean indicating whether the `Tech` supports fullscreen resize control.
       * Resizing plugins using request fullscreen reloads the plugin
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresFullscreenResize=false;/**
       * Boolean indicating whether the `Tech` supports changing the speed at which the video
       * plays. Examples:
       *   - Set player to play 2x (twice) as fast
       *   - Set player to play 0.5x (half) as fast
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresPlaybackRate=false;/**
       * Boolean indicating whether the `Tech` supports the `progress` event.
       * This will be used to determine if {@link Tech#manualProgressOn} should be called.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresProgressEvents=false;/**
       * Boolean indicating whether the `Tech` supports the `sourceset` event.
       *
       * A tech should set this to `true` and then use {@link Tech#triggerSourceset}
       * to trigger a {@link Tech#event:sourceset} at the earliest time after getting
       * a new source.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresSourceset=false;/**
       * Boolean indicating whether the `Tech` supports the `timeupdate` event.
       * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresTimeupdateEvents=false;/**
       * Boolean indicating whether the `Tech` supports the native `TextTrack`s.
       * This will help us integrate with native `TextTrack`s if the browser supports them.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresNativeTextTracks=false;/**
       * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.
       *
       * @type {boolean}
       * @default
       */Tech.prototype.featuresVideoFrameCallback=false;/**
       * A functional mixin for techs that want to use the Source Handler pattern.
       * Source handlers are scripts for handling specific formats.
       * The source handler pattern is used for adaptive formats (HLS, DASH) that
       * manually load video data and feed it into a Source Buffer (Media Source Extensions)
       * Example: `Tech.withSourceHandlers.call(MyTech);`
       *
       * @param {Tech} _Tech
       *        The tech to add source handler functions to.
       *
       * @mixes Tech~SourceHandlerAdditions
       */Tech.withSourceHandlers=function(_Tech){/**
         * Register a source handler
         *
         * @param {Function} handler
         *        The source handler class
         *
         * @param {number} [index]
         *        Register it at the following index
         */_Tech.registerSourceHandler=function(handler,index){var handlers=_Tech.sourceHandlers;if(!handlers){handlers=_Tech.sourceHandlers=[];}if(index===undefined){// add to the end of the list
index=handlers.length;}handlers.splice(index,0,handler);};/**
         * Check if the tech can support the given type. Also checks the
         * Techs sourceHandlers.
         *
         * @param {string} type
         *         The mimetype to check.
         *
         * @return {string}
         *         'probably', 'maybe', or '' (empty string)
         */_Tech.canPlayType=function(type){var handlers=_Tech.sourceHandlers||[];var can;for(var _i105=0;_i105<handlers.length;_i105++){can=handlers[_i105].canPlayType(type);if(can){return can;}}return'';};/**
         * Returns the first source handler that supports the source.
         *
         * TODO: Answer question: should 'probably' be prioritized over 'maybe'
         *
         * @param {SourceObject} source
         *        The source object
         *
         * @param {Object} options
         *        The options passed to the tech
         *
         * @return {SourceHandler|null}
         *          The first source handler that supports the source or null if
         *          no SourceHandler supports the source
         */_Tech.selectSourceHandler=function(source,options){var handlers=_Tech.sourceHandlers||[];var can;for(var _i106=0;_i106<handlers.length;_i106++){can=handlers[_i106].canHandleSource(source,options);if(can){return handlers[_i106];}}return null;};/**
         * Check if the tech can support the given source.
         *
         * @param {SourceObject} srcObj
         *        The source object
         *
         * @param {Object} options
         *        The options passed to the tech
         *
         * @return {string}
         *         'probably', 'maybe', or '' (empty string)
         */_Tech.canPlaySource=function(srcObj,options){var sh=_Tech.selectSourceHandler(srcObj,options);if(sh){return sh.canHandleSource(srcObj,options);}return'';};/**
         * When using a source handler, prefer its implementation of
         * any function normally provided by the tech.
         */var deferrable=['seekable','seeking','duration'];/**
         * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable
         * function if it exists, with a fallback to the Techs seekable function.
         *
         * @method _Tech.seekable
         */ /**
         * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration
         * function if it exists, otherwise it will fallback to the techs duration function.
         *
         * @method _Tech.duration
         */deferrable.forEach(function(fnName){var originalFn=this[fnName];if(typeof originalFn!=='function'){return;}this[fnName]=function(){if(this.sourceHandler_&&this.sourceHandler_[fnName]){return this.sourceHandler_[fnName].apply(this.sourceHandler_,arguments);}return originalFn.apply(this,arguments);};},_Tech.prototype);/**
         * Create a function for setting the source using a source object
         * and source handlers.
         * Should never be called unless a source handler was found.
         *
         * @param {SourceObject} source
         *        A source object with src and type keys
         */_Tech.prototype.setSource=function(source){var sh=_Tech.selectSourceHandler(source,this.options_);if(!sh){// Fall back to a native source handler when unsupported sources are
// deliberately set
if(_Tech.nativeSourceHandler){sh=_Tech.nativeSourceHandler;}else{log$1.error('No source handler found for the current source.');}}// Dispose any existing source handler
this.disposeSourceHandler();this.off('dispose',this.disposeSourceHandler_);if(sh!==_Tech.nativeSourceHandler){this.currentSource_=source;}this.sourceHandler_=sh.handleSource(source,this,this.options_);this.one('dispose',this.disposeSourceHandler_);};/**
         * Clean up any existing SourceHandlers and listeners when the Tech is disposed.
         *
         * @listens Tech#dispose
         */_Tech.prototype.disposeSourceHandler=function(){// if we have a source and get another one
// then we are loading something new
// than clear all of our current tracks
if(this.currentSource_){this.clearTracks(['audio','video']);this.currentSource_=null;}// always clean up auto-text tracks
this.cleanupAutoTextTracks();if(this.sourceHandler_){if(this.sourceHandler_.dispose){this.sourceHandler_.dispose();}this.sourceHandler_=null;}};};// The base Tech class needs to be registered as a Component. It is the only
// Tech that can be registered as a Component.
Component$1.registerComponent('Tech',Tech);Tech.registerTech('Tech',Tech);/**
       * A list of techs that should be added to techOrder on Players
       *
       * @private
       */Tech.defaultTechOrder_=[];/**
       * @file middleware.js
       * @module middleware
       */var middlewares={};var middlewareInstances={};var TERMINATOR={};/**
       * A middleware object is a plain JavaScript object that has methods that
       * match the {@link Tech} methods found in the lists of allowed
       * {@link module:middleware.allowedGetters|getters},
       * {@link module:middleware.allowedSetters|setters}, and
       * {@link module:middleware.allowedMediators|mediators}.
       *
       * @typedef {Object} MiddlewareObject
       */ /**
       * A middleware factory function that should return a
       * {@link module:middleware~MiddlewareObject|MiddlewareObject}.
       *
       * This factory will be called for each player when needed, with the player
       * passed in as an argument.
       *
       * @callback MiddlewareFactory
       * @param { import('../player').default } player
       *        A Video.js player.
       */ /**
       * Define a middleware that the player should use by way of a factory function
       * that returns a middleware object.
       *
       * @param  {string} type
       *         The MIME type to match or `"*"` for all MIME types.
       *
       * @param  {MiddlewareFactory} middleware
       *         A middleware factory function that will be executed for
       *         matching types.
       */function use(type,middleware){middlewares[type]=middlewares[type]||[];middlewares[type].push(middleware);}/**
       * Asynchronously sets a source using middleware by recursing through any
       * matching middlewares and calling `setSource` on each, passing along the
       * previous returned value each time.
       *
       * @param  { import('../player').default } player
       *         A {@link Player} instance.
       *
       * @param  {Tech~SourceObject} src
       *         A source object.
       *
       * @param  {Function}
       *         The next middleware to run.
       */function setSource(player,src,next){player.setTimeout(function(){return setSourceHelper(src,middlewares[src.type],next,player);},1);}/**
       * When the tech is set, passes the tech to each middleware's `setTech` method.
       *
       * @param {Object[]} middleware
       *        An array of middleware instances.
       *
       * @param { import('../tech/tech').default } tech
       *        A Video.js tech.
       */function setTech(middleware,tech){middleware.forEach(function(mw){return mw.setTech&&mw.setTech(tech);});}/**
       * Calls a getter on the tech first, through each middleware
       * from right to left to the player.
       *
       * @param  {Object[]} middleware
       *         An array of middleware instances.
       *
       * @param  { import('../tech/tech').default } tech
       *         The current tech.
       *
       * @param  {string} method
       *         A method name.
       *
       * @return {*}
       *         The final value from the tech after middleware has intercepted it.
       */function get(middleware,tech,method){return middleware.reduceRight(middlewareIterator(method),tech[method]());}/**
       * Takes the argument given to the player and calls the setter method on each
       * middleware from left to right to the tech.
       *
       * @param  {Object[]} middleware
       *         An array of middleware instances.
       *
       * @param  { import('../tech/tech').default } tech
       *         The current tech.
       *
       * @param  {string} method
       *         A method name.
       *
       * @param  {*} arg
       *         The value to set on the tech.
       *
       * @return {*}
       *         The return value of the `method` of the `tech`.
       */function set(middleware,tech,method,arg){return tech[method](middleware.reduce(middlewareIterator(method),arg));}/**
       * Takes the argument given to the player and calls the `call` version of the
       * method on each middleware from left to right.
       *
       * Then, call the passed in method on the tech and return the result unchanged
       * back to the player, through middleware, this time from right to left.
       *
       * @param  {Object[]} middleware
       *         An array of middleware instances.
       *
       * @param  { import('../tech/tech').default } tech
       *         The current tech.
       *
       * @param  {string} method
       *         A method name.
       *
       * @param  {*} arg
       *         The value to set on the tech.
       *
       * @return {*}
       *         The return value of the `method` of the `tech`, regardless of the
       *         return values of middlewares.
       */function mediate(middleware,tech,method){var arg=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var callMethod='call'+toTitleCase$1(method);var middlewareValue=middleware.reduce(middlewareIterator(callMethod),arg);var terminated=middlewareValue===TERMINATOR;// deprecated. The `null` return value should instead return TERMINATOR to
// prevent confusion if a techs method actually returns null.
var returnValue=terminated?null:tech[method](middlewareValue);executeRight(middleware,method,returnValue,terminated);return returnValue;}/**
       * Enumeration of allowed getters where the keys are method names.
       *
       * @type {Object}
       */var allowedGetters={buffered:1,currentTime:1,duration:1,muted:1,played:1,paused:1,seekable:1,volume:1,ended:1};/**
       * Enumeration of allowed setters where the keys are method names.
       *
       * @type {Object}
       */var allowedSetters={setCurrentTime:1,setMuted:1,setVolume:1};/**
       * Enumeration of allowed mediators where the keys are method names.
       *
       * @type {Object}
       */var allowedMediators={play:1,pause:1};function middlewareIterator(method){return function(value,mw){// if the previous middleware terminated, pass along the termination
if(value===TERMINATOR){return TERMINATOR;}if(mw[method]){return mw[method](value);}return value;};}function executeRight(mws,method,value,terminated){for(var _i107=mws.length-1;_i107>=0;_i107--){var mw=mws[_i107];if(mw[method]){mw[method](terminated,value);}}}/**
       * Clear the middleware cache for a player.
       *
       * @param  { import('../player').default } player
       *         A {@link Player} instance.
       */function clearCacheForPlayer(player){middlewareInstances[player.id()]=null;}/**
       * {
       *  [playerId]: [[mwFactory, mwInstance], ...]
       * }
       *
       * @private
       */function getOrCreateFactory(player,mwFactory){var mws=middlewareInstances[player.id()];var mw=null;if(mws===undefined||mws===null){mw=mwFactory(player);middlewareInstances[player.id()]=[[mwFactory,mw]];return mw;}for(var _i108=0;_i108<mws.length;_i108++){var _mws$_i=_slicedToArray(mws[_i108],2),mwf=_mws$_i[0],mwi=_mws$_i[1];if(mwf!==mwFactory){continue;}mw=mwi;}if(mw===null){mw=mwFactory(player);mws.push([mwFactory,mw]);}return mw;}function setSourceHelper(){var src=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var middleware=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var next=arguments.length>2?arguments[2]:undefined;var player=arguments.length>3?arguments[3]:undefined;var acc=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var lastRun=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var _middleware=_toArray(middleware),mwFactory=_middleware[0],mwrest=_middleware.slice(1);// if mwFactory is a string, then we're at a fork in the road
if(typeof mwFactory==='string'){setSourceHelper(src,middlewares[mwFactory],next,player,acc,lastRun);// if we have an mwFactory, call it with the player to get the mw,
// then call the mw's setSource method
}else if(mwFactory){var mw=getOrCreateFactory(player,mwFactory);// if setSource isn't present, implicitly select this middleware
if(!mw.setSource){acc.push(mw);return setSourceHelper(src,mwrest,next,player,acc,lastRun);}mw.setSource(Object.assign({},src),function(err,_src){// something happened, try the next middleware on the current level
// make sure to use the old src
if(err){return setSourceHelper(src,mwrest,next,player,acc,lastRun);}// we've succeeded, now we need to go deeper
acc.push(mw);// if it's the same type, continue down the current chain
// otherwise, we want to go down the new chain
setSourceHelper(_src,src.type===_src.type?mwrest:middlewares[_src.type],next,player,acc,lastRun);});}else if(mwrest.length){setSourceHelper(src,mwrest,next,player,acc,lastRun);}else if(lastRun){next(src,acc);}else{setSourceHelper(src,middlewares['*'],next,player,acc,true);}}/**
       * Mimetypes
       *
       * @see https://www.iana.org/assignments/media-types/media-types.xhtml
       * @typedef Mimetypes~Kind
       * @enum
       */var MimetypesKind={opus:'video/ogg',ogv:'video/ogg',mp4:'video/mp4',mov:'video/mp4',m4v:'video/mp4',mkv:'video/x-matroska',m4a:'audio/mp4',mp3:'audio/mpeg',aac:'audio/aac',caf:'audio/x-caf',flac:'audio/flac',oga:'audio/ogg',wav:'audio/wav',m3u8:'application/x-mpegURL',mpd:'application/dash+xml',jpg:'image/jpeg',jpeg:'image/jpeg',gif:'image/gif',png:'image/png',svg:'image/svg+xml',webp:'image/webp'};/**
       * Get the mimetype of a given src url if possible
       *
       * @param {string} src
       *        The url to the src
       *
       * @return {string}
       *         return the mimetype if it was known or empty string otherwise
       */var getMimetype=function getMimetype(){var src=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var ext=getFileExtension(src);var mimetype=MimetypesKind[ext.toLowerCase()];return mimetype||'';};/**
       * Find the mime type of a given source string if possible. Uses the player
       * source cache.
       *
       * @param { import('../player').default } player
       *        The player object
       *
       * @param {string} src
       *        The source string
       *
       * @return {string}
       *         The type that was found
       */var findMimetype=function findMimetype(player,src){if(!src){return'';}// 1. check for the type in the `source` cache
if(player.cache_.source.src===src&&player.cache_.source.type){return player.cache_.source.type;}// 2. see if we have this source in our `currentSources` cache
var matchingSources=player.cache_.sources.filter(function(s){return s.src===src;});if(matchingSources.length){return matchingSources[0].type;}// 3. look for the src url in source elements and use the type there
var sources=player.$$('source');for(var _i109=0;_i109<sources.length;_i109++){var _s2=sources[_i109];if(_s2.type&&_s2.src&&_s2.src===src){return _s2.type;}}// 4. finally fallback to our list of mime types based on src url extension
return getMimetype(src);};/**
       * @module filter-source
       */ /**
       * Filter out single bad source objects or multiple source objects in an
       * array. Also flattens nested source object arrays into a 1 dimensional
       * array of source objects.
       *
       * @param {Tech~SourceObject|Tech~SourceObject[]} src
       *        The src object to filter
       *
       * @return {Tech~SourceObject[]}
       *         An array of sourceobjects containing only valid sources
       *
       * @private
       */var filterSource=function filterSource(src){// traverse array
if(Array.isArray(src)){var newsrc=[];src.forEach(function(srcobj){srcobj=filterSource(srcobj);if(Array.isArray(srcobj)){newsrc=newsrc.concat(srcobj);}else if(isObject(srcobj)){newsrc.push(srcobj);}});src=newsrc;}else if(typeof src==='string'&&src.trim()){// convert string into object
src=[fixSource({src:src})];}else if(isObject(src)&&typeof src.src==='string'&&src.src&&src.src.trim()){// src is already valid
src=[fixSource(src)];}else{// invalid source, turn it into an empty array
src=[];}return src;};/**
       * Checks src mimetype, adding it when possible
       *
       * @param {Tech~SourceObject} src
       *        The src object to check
       * @return {Tech~SourceObject}
       *        src Object with known type
       */function fixSource(src){if(!src.type){var mimetype=getMimetype(src.src);if(mimetype){src.type=mimetype;}}return src;}var icons="<svg xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-play\">\n      <path d=\"M16 10v28l22-14z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-pause\">\n      <path d=\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-audio\">\n      <path d=\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-captions\">\n      <path d=\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-subtitles\">\n      <path d=\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-fullscreen-enter\">\n      <path d=\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-fullscreen-exit\">\n      <path d=\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-play-circle\">\n      <path d=\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-volume-mute\">\n      <path d=\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-volume-low\">\n      <path d=\"M14 18v12h8l10 10V8L22 18h-8z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-volume-medium\">\n      <path d=\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-volume-high\">\n      <path d=\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-spinner\">\n      <path d=\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 24 24\" id=\"vjs-icon-hd\">\n      <path d=\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-chapters\">\n      <path d=\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 40 40\" id=\"vjs-icon-downloading\">\n      <path d=\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-file-download\">\n      <path d=\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-file-download-done\">\n      <path d=\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-file-download-off\">\n      <path d=\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-share\">\n      <path d=\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-cog\">\n      <path d=\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-square\">\n      <path d=\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-circle\">\n      <circle cx=\"24\" cy=\"24\" r=\"20\"></circle>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-circle-outline\">\n      <path d=\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-circle-inner-circle\">\n      <path d=\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-cancel\">\n      <path d=\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-replay\">\n      <path d=\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-repeat\">\n      <path d=\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-replay-5\">\n      <path d=\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-replay-10\">\n      <path d=\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-replay-30\">\n      <path d=\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-forward-5\">\n      <path d=\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-forward-10\">\n      <path d=\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 96 48 48\" id=\"vjs-icon-forward-30\">\n      <path d=\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 512 512\" id=\"vjs-icon-audio-description\">\n      <g fill-rule=\"evenodd\"><path d=\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\"></path><path d=\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\"></path><path d=\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\"></path><path d=\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\"></path></g>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-next-item\">\n      <path d=\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-previous-item\">\n      <path d=\"M12 12h4v24h-4zm7 12l17 12V12z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-shuffle\">\n      <path d=\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-cast\">\n      <path d=\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 48 48\" id=\"vjs-icon-picture-in-picture-enter\">\n      <path d=\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 22 18\" id=\"vjs-icon-picture-in-picture-exit\">\n      <path d=\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\"></path>\n      <path fill=\"none\" d=\"M-1-3h24v24H-1z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 1792 1792\" id=\"vjs-icon-facebook\">\n      <path d=\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 1792 1792\" id=\"vjs-icon-linkedin\">\n      <path d=\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 1792 1792\" id=\"vjs-icon-twitter\">\n      <path d=\"M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5T1369.5 1125 1185 1335.5t-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5T285 1033q33 5 61 5 43 0 85-11-112-23-185.5-111.5T172 710v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5T884 653q-8-38-8-74 0-134 94.5-228.5T1199 256q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 1792 1792\" id=\"vjs-icon-tumblr\">\n      <path d=\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\"></path>\n    </symbol>\n    <symbol viewBox=\"0 0 1792 1792\" id=\"vjs-icon-pinterest\">\n      <path d=\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\"></path>\n    </symbol>\n  </defs>\n</svg>";// /**
// Determine the keycode for the 'back' key based on the platform
var backKeyCode=IS_TIZEN?10009:IS_WEBOS?461:8;var SpatialNavKeyCodes={codes:{play:415,pause:19,ff:417,rw:412,back:backKeyCode},names:_defineProperty({415:'play',19:'pause',417:'ff',412:'rw'},backKeyCode,'back'),isEventKey:function isEventKey(event,keyName){keyName=keyName.toLowerCase();if(this.names[event.keyCode]&&this.names[event.keyCode]===keyName){return true;}return false;},getEventName:function getEventName(event){if(this.names[event.keyCode]){return this.names[event.keyCode];}else if(this.codes[event.code]){var code=this.codes[event.code];return this.names[code];}return null;}};/**
       * @file spatial-navigation.js
       */ // The number of seconds the `step*` functions move the timeline.
var STEP_SECONDS$1=5;/**
       * Spatial Navigation in Video.js enhances user experience and accessibility on smartTV devices,
       * enabling seamless navigation through interactive elements within the player using remote control arrow keys.
       * This functionality allows users to effortlessly navigate through focusable components.
       *
       * @extends EventTarget
       */var SpatialNavigation=/*#__PURE__*/function(_EventTarget$4){_inherits(SpatialNavigation,_EventTarget$4);var _super24=_createSuper(SpatialNavigation);/**
         * Constructs a SpatialNavigation instance with initial settings.
         * Sets up the player instance, and prepares the spatial navigation system.
         *
         * @class
         * @param {Object} player - The Video.js player instance to which the spatial navigation is attached.
         */function SpatialNavigation(player){var _this71;_classCallCheck(this,SpatialNavigation);_this71=_super24.call(this);_this71.player_=player;_this71.focusableComponents=[];_this71.isListening_=false;_this71.isPaused_=false;_this71.onKeyDown_=_this71.onKeyDown_.bind(_assertThisInitialized2(_this71));_this71.lastFocusedComponent_=null;return _this71;}/**
         * Starts the spatial navigation by adding a keydown event listener to the video container.
         * This method ensures that the event listener is added only once.
         */_createClass(SpatialNavigation,[{key:"start",value:function start(){var _this72=this;// If the listener is already active, exit early.
if(this.isListening_){return;}// Add the event listener since the listener is not yet active.
this.player_.on('keydown',this.onKeyDown_);this.player_.on('modalKeydown',this.onKeyDown_);// Listen for source change events
this.player_.on('loadedmetadata',function(){_this72.focus(_this72.updateFocusableComponents()[0]);});this.player_.on('modalclose',function(){_this72.refocusComponent();});this.player_.on('focusin',this.handlePlayerFocus_.bind(this));this.player_.on('focusout',this.handlePlayerBlur_.bind(this));this.isListening_=true;}/**
         * Stops the spatial navigation by removing the keydown event listener from the video container.
         * Also sets the `isListening_` flag to false.
         */},{key:"stop",value:function stop(){this.player_.off('keydown',this.onKeyDown_);this.isListening_=false;}/**
         * Responds to keydown events for spatial navigation and media control.
         *
         * Determines if spatial navigation or media control is active and handles key inputs accordingly.
         *
         * @param {KeyboardEvent} event - The keydown event to be handled.
         */},{key:"onKeyDown_",value:function onKeyDown_(event){// Determine if the event is a custom modalKeydown event
var actualEvent=event.originalEvent?event.originalEvent:event;if(keycode.isEventKey(actualEvent,'left')||keycode.isEventKey(actualEvent,'up')||keycode.isEventKey(actualEvent,'right')||keycode.isEventKey(actualEvent,'down')){// Handle directional navigation
if(this.isPaused_){return;}actualEvent.preventDefault();var direction=keycode(actualEvent);this.move(direction);}else if(SpatialNavKeyCodes.isEventKey(actualEvent,'play')||SpatialNavKeyCodes.isEventKey(actualEvent,'pause')||SpatialNavKeyCodes.isEventKey(actualEvent,'ff')||SpatialNavKeyCodes.isEventKey(actualEvent,'rw')){// Handle media actions
actualEvent.preventDefault();var action=SpatialNavKeyCodes.getEventName(actualEvent);this.performMediaAction_(action);}else if(SpatialNavKeyCodes.isEventKey(actualEvent,'Back')&&event.target&&event.target.closeable()){actualEvent.preventDefault();event.target.close();}}/**
         * Performs media control actions based on the given key input.
         *
         * Controls the playback and seeking functionalities of the media player.
         *
         * @param {string} key - The key representing the media action to be performed.
         *   Accepted keys: 'play', 'pause', 'ff' (fast-forward), 'rw' (rewind).
         */},{key:"performMediaAction_",value:function performMediaAction_(key){if(this.player_){switch(key){case'play':if(this.player_.paused()){this.player_.play();}break;case'pause':if(!this.player_.paused()){this.player_.pause();}break;case'ff':this.userSeek_(this.player_.currentTime()+STEP_SECONDS$1);break;case'rw':this.userSeek_(this.player_.currentTime()-STEP_SECONDS$1);break;}}}/**
         * Prevent liveThreshold from causing seeks to seem like they
         * are not happening from a user perspective.
         *
         * @param {number} ct
         *        current time to seek to
         */},{key:"userSeek_",value:function userSeek_(ct){if(this.player_.liveTracker&&this.player_.liveTracker.isLive()){this.player_.liveTracker.nextSeekedFromUser();}this.player_.currentTime(ct);}/**
         * Pauses the spatial navigation functionality.
         * This method sets a flag that can be used to temporarily disable the navigation logic.
         */},{key:"pause",value:function pause(){this.isPaused_=true;}/**
         * Resumes the spatial navigation functionality if it has been paused.
         * This method resets the pause flag, re-enabling the navigation logic.
         */},{key:"resume",value:function resume(){this.isPaused_=false;}/**
         * Handles Player Blur.
         *
         * @param {string|Event|Object} event
         *        The name of the event, an `Event`, or an object with a key of type set to
         *        an event name.
         *
         * Calls for handling of the Player Blur if:
         * *The next focused element is not a child of current focused element &
         * The next focused element is not a child of the Player.
         * *There is no next focused element
         */},{key:"handlePlayerBlur_",value:function handlePlayerBlur_(event){var nextFocusedElement=event.relatedTarget;var isChildrenOfPlayer=null;var currentComponent=this.getCurrentComponent(event.target);if(nextFocusedElement){isChildrenOfPlayer=Boolean(nextFocusedElement.closest('.video-js'));// If nextFocusedElement is the 'TextTrackSettings' component
if(nextFocusedElement.classList.contains('vjs-text-track-settings')&&!this.isPaused_){this.searchForTrackSelect_();}}if(!event.currentTarget.contains(event.relatedTarget)&&!isChildrenOfPlayer||!nextFocusedElement){if(currentComponent.name()==='CloseButton'){this.refocusComponent();}else{this.pause();if(currentComponent&&currentComponent.el()){// Store last focused component
this.lastFocusedComponent_=currentComponent;}}}}/**
         * Handles the Player focus event.
         *
         * Calls for handling of the Player Focus if current element is focusable.
         */},{key:"handlePlayerFocus_",value:function handlePlayerFocus_(){if(this.getCurrentComponent()&&this.getCurrentComponent().getIsFocusable()){this.resume();}}/**
         * Gets a set of focusable components.
         *
         * @return {Array}
         *         Returns an array of focusable components.
         */},{key:"updateFocusableComponents",value:function updateFocusableComponents(){var _this73=this;var player=this.player_;var focusableComponents=[];/**
           * Searches for children candidates.
           *
           * Pushes Components to array of 'focusableComponents'.
           * Calls itself if there is children elements inside iterated component.
           *
           * @param {Array} componentsArray - The array of components to search for focusable children.
           */function searchForChildrenCandidates(componentsArray){var _iterator10=_createForOfIteratorHelper(componentsArray),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var _i110=_step10.value;if(_i110.hasOwnProperty('el_')&&_i110.getIsFocusable()&&_i110.getIsAvailableToBeFocused(_i110.el())){focusableComponents.push(_i110);}if(_i110.hasOwnProperty('children_')&&_i110.children_.length>0){searchForChildrenCandidates(_i110.children_);}}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}}// Iterate inside all children components of the player.
player.children_.forEach(function(value){if(value.hasOwnProperty('el_')){// If component has required functions 'getIsFocusable' & 'getIsAvailableToBeFocused', is focusable & available to be focused.
if(value.getIsFocusable&&value.getIsAvailableToBeFocused&&value.getIsFocusable()&&value.getIsAvailableToBeFocused(value.el())){focusableComponents.push(value);return;// If component has posible children components as candidates.
}else if(value.hasOwnProperty('children_')&&value.children_.length>0){searchForChildrenCandidates(value.children_);// If component has posible item components as candidates.
}else if(value.hasOwnProperty('items')&&value.items.length>0){searchForChildrenCandidates(value.items);// If there is a suitable child element within the component's DOM element.
}else if(_this73.findSuitableDOMChild(value)){focusableComponents.push(value);}}});this.focusableComponents=focusableComponents;return this.focusableComponents;}/**
         * Finds a suitable child element within the provided component's DOM element.
         *
         * @param {Object} component - The component containing the DOM element to search within.
         * @return {HTMLElement|null} Returns the suitable child element if found, or null if not found.
         */},{key:"findSuitableDOMChild",value:function findSuitableDOMChild(component){/**
           * Recursively searches for a suitable child node that can be focused within a given component.
           * It first checks if the provided node itself can be focused according to the component's
           * `getIsFocusable` and `getIsAvailableToBeFocused` methods. If not, it recursively searches
           * through the node's children to find a suitable child node that meets the focusability criteria.
           *
           * @param {HTMLElement} node - The DOM node to start the search from.
           * @return {HTMLElement|null} The first child node that is focusable and available to be focused,
           * or `null` if no suitable child is found.
           */function searchForSuitableChild(node){if(component.getIsFocusable(node)&&component.getIsAvailableToBeFocused(node)){return node;}for(var _i111=0;_i111<node.children.length;_i111++){var child=node.children[_i111];var suitableChild=searchForSuitableChild(child);if(suitableChild){return suitableChild;}}return null;}return searchForSuitableChild(component.el());}/**
         * Gets the currently focused component from the list of focusable components.
         * If a target element is provided, it uses that element to find the corresponding
         * component. If no target is provided, it defaults to using the document's currently
         * active element.
         *
         * @param {HTMLElement} [target] - The DOM element to check against the focusable components.
         *                                 If not provided, `document.activeElement` is used.
         * @return {Component|null} - Returns the focused component if found among the focusable components,
         *                            otherwise returns null if no matching component is found.
         */},{key:"getCurrentComponent",value:function getCurrentComponent(target){this.updateFocusableComponents();// eslint-disable-next-line
var curComp=target||document.activeElement;if(this.focusableComponents.length){var _iterator11=_createForOfIteratorHelper(this.focusableComponents),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var _i112=_step11.value;// If component Node is equal to the current active element.
if(_i112.el()===curComp){return _i112;}}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}}}/**
         * Adds a component to the array of focusable components.
         *
         * @param {Component} component
         *        The `Component` to be added.
         */},{key:"add",value:function add(component){var focusableComponents=_toConsumableArray(this.focusableComponents);if(component.hasOwnProperty('el_')&&component.getIsFocusable()&&component.getIsAvailableToBeFocused(component.el())){focusableComponents.push(component);}this.focusableComponents=focusableComponents;// Trigger the notification manually
this.trigger({type:'focusableComponentsChanged',focusableComponents:this.focusableComponents});}/**
         * Removes component from the array of focusable components.
         *
         * @param {Component} component - The component to be removed from the focusable components array.
         */},{key:"remove",value:function remove(component){for(var _i113=0;_i113<this.focusableComponents.length;_i113++){if(this.focusableComponents[_i113].name()===component.name()){this.focusableComponents.splice(_i113,1);// Trigger the notification manually
this.trigger({type:'focusableComponentsChanged',focusableComponents:this.focusableComponents});return;}}}/**
         * Clears array of focusable components.
         */},{key:"clear",value:function clear(){// Check if the array is already empty to avoid unnecessary event triggering
if(this.focusableComponents.length>0){// Clear the array
this.focusableComponents=[];// Trigger the notification manually
this.trigger({type:'focusableComponentsChanged',focusableComponents:this.focusableComponents});}}/**
         * Navigates to the next focusable component based on the specified direction.
         *
         * @param {string} direction 'up', 'down', 'left', 'right'
         */},{key:"move",value:function move(direction){var _this74=this;var currentFocusedComponent=this.getCurrentComponent();if(!currentFocusedComponent){return;}var currentPositions=currentFocusedComponent.getPositions();var candidates=this.focusableComponents.filter(function(component){return component!==currentFocusedComponent&&_this74.isInDirection_(currentPositions.boundingClientRect,component.getPositions().boundingClientRect,direction);});var bestCandidate=this.findBestCandidate_(currentPositions.center,candidates,direction);if(bestCandidate){this.focus(bestCandidate);}else{this.trigger({type:'endOfFocusableComponents',direction:direction,focusedComponent:currentFocusedComponent});}}/**
         * Finds the best candidate on the current center position,
         * the list of candidates, and the specified navigation direction.
         *
         * @param {Object} currentCenter The center position of the current focused component element.
         * @param {Array} candidates An array of candidate components to receive focus.
         * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').
         * @return {Object|null} The component that is the best candidate for receiving focus.
         */},{key:"findBestCandidate_",value:function findBestCandidate_(currentCenter,candidates,direction){var minDistance=Infinity;var bestCandidate=null;var _iterator12=_createForOfIteratorHelper(candidates),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var candidate=_step12.value;var candidateCenter=candidate.getPositions().center;var distance=this.calculateDistance_(currentCenter,candidateCenter,direction);if(distance<minDistance){minDistance=distance;bestCandidate=candidate;}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}return bestCandidate;}/**
         * Determines if a target rectangle is in the specified navigation direction
         * relative to a source rectangle.
         *
         * @param {Object} srcRect The bounding rectangle of the source element.
         * @param {Object} targetRect The bounding rectangle of the target element.
         * @param {string} direction The navigation direction ('up', 'down', 'left', 'right').
         * @return {boolean} True if the target is in the specified direction relative to the source.
         */},{key:"isInDirection_",value:function isInDirection_(srcRect,targetRect,direction){switch(direction){case'right':return targetRect.left>=srcRect.right;case'left':return targetRect.right<=srcRect.left;case'down':return targetRect.top>=srcRect.bottom;case'up':return targetRect.bottom<=srcRect.top;default:return false;}}/**
         * Focus the last focused component saved before blur on player.
         */},{key:"refocusComponent",value:function refocusComponent(){if(this.lastFocusedComponent_){// If use is not active, set it to active.
if(!this.player_.userActive()){this.player_.userActive(true);}this.updateFocusableComponents();// Search inside array of 'focusableComponents' for a match of name of
// the last focused component.
for(var _i114=0;_i114<this.focusableComponents.length;_i114++){if(this.focusableComponents[_i114].name()===this.lastFocusedComponent_.name()){this.focus(this.focusableComponents[_i114]);return;}}}else{this.focus(this.updateFocusableComponents()[0]);}}/**
         * Focuses on a given component.
         * If the component is available to be focused, it focuses on the component.
         * If not, it attempts to find a suitable DOM child within the component and focuses on it.
         *
         * @param {Component} component - The component to be focused.
         */},{key:"focus",value:function focus(component){if(component.getIsAvailableToBeFocused(component.el())){component.focus();}else if(this.findSuitableDOMChild(component)){this.findSuitableDOMChild(component).focus();}}/**
         * Calculates the distance between two points, adjusting the calculation based on
         * the specified navigation direction.
         *
         * @param {Object} center1 The center point of the first element.
         * @param {Object} center2 The center point of the second element.
         * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').
         * @return {number} The calculated distance between the two centers.
         */},{key:"calculateDistance_",value:function calculateDistance_(center1,center2,direction){var dx=Math.abs(center1.x-center2.x);var dy=Math.abs(center1.y-center2.y);var distance;switch(direction){case'right':case'left':// Higher weight for vertical distance in horizontal navigation.
distance=dx+dy*100;break;case'up':// Strongly prioritize vertical proximity for UP navigation.
// Adjust the weight to ensure that elements directly above are favored.
distance=dy*2+dx*0.5;break;case'down':// More balanced weight for vertical and horizontal distances.
// Adjust the weights here to find the best balance.
distance=dy*5+dx;break;default:distance=dx+dy;}return distance;}/**
         * This gets called by 'handlePlayerBlur_' if 'spatialNavigation' is enabled.
         * Searches for the first 'TextTrackSelect' inside of modal to focus.
         *
         * @private
         */},{key:"searchForTrackSelect_",value:function searchForTrackSelect_(){var spatialNavigation=this;var _iterator13=_createForOfIteratorHelper(spatialNavigation.updateFocusableComponents()),_step13;try{for(_iterator13.s();!(_step13=_iterator13.n()).done;){var component=_step13.value;if(component.constructor.name==='TextTrackSelect'){spatialNavigation.focus(component);break;}}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}}}]);return SpatialNavigation;}(EventTarget$2);/**
       * @file loader.js
       */ /**
       * The `MediaLoader` is the `Component` that decides which playback technology to load
       * when a player is initialized.
       *
       * @extends Component
       */var MediaLoader=/*#__PURE__*/function(_Component$3){_inherits(MediaLoader,_Component$3);var _super25=_createSuper(MediaLoader);/**
         * Create an instance of this class.
         *
         * @param { import('../player').default } player
         *        The `Player` that this class should attach to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function that is run when this component is ready.
         */function MediaLoader(player,options,ready){var _this75;_classCallCheck(this,MediaLoader);// MediaLoader has no element
var options_=merge$1({createEl:false},options);_this75=_super25.call(this,player,options_,ready);// If there are no sources when the player is initialized,
// load the first supported playback technology.
if(!options.playerOptions.sources||options.playerOptions.sources.length===0){for(var _i115=0,_j9=options.playerOptions.techOrder;_i115<_j9.length;_i115++){var techName=toTitleCase$1(_j9[_i115]);var tech=Tech.getTech(techName);// Support old behavior of techs being registered as components.
// Remove once that deprecated behavior is removed.
if(!techName){tech=Component$1.getComponent(techName);}// Check if the browser supports this technology
if(tech&&tech.isSupported()){player.loadTech_(techName);break;}}}else{// Loop through playback technologies (e.g. HTML5) and check for support.
// Then load the best source.
// A few assumptions here:
//   All playback technologies respect preload false.
player.src(options.playerOptions.sources);}return _this75;}return _createClass(MediaLoader);}(Component$1);Component$1.registerComponent('MediaLoader',MediaLoader);/**
       * @file clickable-component.js
       */ /**
       * Component which is clickable or keyboard actionable, but is not a
       * native HTML button.
       *
       * @extends Component
       */var ClickableComponent=/*#__PURE__*/function(_Component$4){_inherits(ClickableComponent,_Component$4);var _super26=_createSuper(ClickableComponent);/**
         * Creates an instance of this class.
         *
         * @param  { import('./player').default } player
         *         The `Player` that this class should be attached to.
         *
         * @param  {Object} [options]
         *         The key/value store of component options.
         *
         * @param  {function} [options.clickHandler]
         *         The function to call when the button is clicked / activated
         *
         * @param  {string} [options.controlText]
         *         The text to set on the button
         *
         * @param  {string} [options.className]
         *         A class or space separated list of classes to add the component
         *
         */function ClickableComponent(player,options){var _this76;_classCallCheck(this,ClickableComponent);_this76=_super26.call(this,player,options);if(_this76.options_.controlText){_this76.controlText(_this76.options_.controlText);}_this76.handleMouseOver_=function(e){return _this76.handleMouseOver(e);};_this76.handleMouseOut_=function(e){return _this76.handleMouseOut(e);};_this76.handleClick_=function(e){return _this76.handleClick(e);};_this76.handleKeyDown_=function(e){return _this76.handleKeyDown(e);};_this76.emitTapEvents();_this76.enable();return _this76;}/**
         * Create the `ClickableComponent`s DOM element.
         *
         * @param {string} [tag=div]
         *        The element's node type.
         *
         * @param {Object} [props={}]
         *        An object of properties that should be set on the element.
         *
         * @param {Object} [attributes={}]
         *        An object of attributes that should be set on the element.
         *
         * @return {Element}
         *         The element that gets created.
         */_createClass(ClickableComponent,[{key:"createEl",value:function createEl(){var tag=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'div';var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var attributes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};props=Object.assign({className:this.buildCSSClass(),tabIndex:0},props);if(tag==='button'){log$1.error("Creating a ClickableComponent with an HTML element of ".concat(tag," is not supported; use a Button instead."));}// Add ARIA attributes for clickable element which is not a native HTML button
attributes=Object.assign({role:'button'},attributes);this.tabIndex_=props.tabIndex;var el=_createEl(tag,props,attributes);if(!this.player_.options_.experimentalSvgIcons){el.appendChild(_createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));}this.createControlTextEl(el);return el;}},{key:"dispose",value:function dispose(){// remove controlTextEl_ on dispose
this.controlTextEl_=null;_get(_getPrototypeOf(ClickableComponent.prototype),"dispose",this).call(this);}/**
         * Create a control text element on this `ClickableComponent`
         *
         * @param {Element} [el]
         *        Parent element for the control text.
         *
         * @return {Element}
         *         The control text element that gets created.
         */},{key:"createControlTextEl",value:function createControlTextEl(el){this.controlTextEl_=_createEl('span',{className:'vjs-control-text'},{// let the screen reader user know that the text of the element may change
'aria-live':'polite'});if(el){el.appendChild(this.controlTextEl_);}this.controlText(this.controlText_,el);return this.controlTextEl_;}/**
         * Get or set the localize text to use for the controls on the `ClickableComponent`.
         *
         * @param {string} [text]
         *        Control text for element.
         *
         * @param {Element} [el=this.el()]
         *        Element to set the title on.
         *
         * @return {string}
         *         - The control text when getting
         */},{key:"controlText",value:function controlText(text){var el=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.el();if(text===undefined){return this.controlText_||'Need Text';}var localizedText=this.localize(text);/** @protected */this.controlText_=text;textContent(this.controlTextEl_,localizedText);if(!this.nonIconControl&&!this.player_.options_.noUITitleAttributes){// Set title attribute if only an icon is shown
el.setAttribute('title',localizedText);}}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */},{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-control vjs-button ".concat(_get(_getPrototypeOf(ClickableComponent.prototype),"buildCSSClass",this).call(this));}/**
         * Enable this `ClickableComponent`
         */},{key:"enable",value:function enable(){if(!this.enabled_){this.enabled_=true;this.removeClass('vjs-disabled');this.el_.setAttribute('aria-disabled','false');if(typeof this.tabIndex_!=='undefined'){this.el_.setAttribute('tabIndex',this.tabIndex_);}this.on(['tap','click'],this.handleClick_);this.on('keydown',this.handleKeyDown_);}}/**
         * Disable this `ClickableComponent`
         */},{key:"disable",value:function disable(){this.enabled_=false;this.addClass('vjs-disabled');this.el_.setAttribute('aria-disabled','true');if(typeof this.tabIndex_!=='undefined'){this.el_.removeAttribute('tabIndex');}this.off('mouseover',this.handleMouseOver_);this.off('mouseout',this.handleMouseOut_);this.off(['tap','click'],this.handleClick_);this.off('keydown',this.handleKeyDown_);}/**
         * Handles language change in ClickableComponent for the player in components
         *
         *
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.controlText(this.controlText_);}/**
         * Event handler that is called when a `ClickableComponent` receives a
         * `click` or `tap` event.
         *
         * @param {Event} event
         *        The `tap` or `click` event that caused this function to be called.
         *
         * @listens tap
         * @listens click
         * @abstract
         */},{key:"handleClick",value:function handleClick(event){if(this.options_.clickHandler){this.options_.clickHandler.call(this,arguments);}}/**
         * Event handler that is called when a `ClickableComponent` receives a
         * `keydown` event.
         *
         * By default, if the key is Space or Enter, it will trigger a `click` event.
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){// Support Space or Enter key operation to fire a click event. Also,
// prevent the event from propagating through the DOM and triggering
// Player hotkeys.
if(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.preventDefault();event.stopPropagation();this.trigger('click');}else{// Pass keypress handling up for unsupported keys
_get(_getPrototypeOf(ClickableComponent.prototype),"handleKeyDown",this).call(this,event);}}}]);return ClickableComponent;}(Component$1);Component$1.registerComponent('ClickableComponent',ClickableComponent);/**
       * @file poster-image.js
       */ /**
       * A `ClickableComponent` that handles showing the poster image for the player.
       *
       * @extends ClickableComponent
       */var PosterImage=/*#__PURE__*/function(_ClickableComponent){_inherits(PosterImage,_ClickableComponent);var _super27=_createSuper(PosterImage);/**
         * Create an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should attach to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function PosterImage(player,options){var _this77;_classCallCheck(this,PosterImage);_this77=_super27.call(this,player,options);_this77.update();_this77.update_=function(e){return _this77.update(e);};player.on('posterchange',_this77.update_);return _this77;}/**
         * Clean up and dispose of the `PosterImage`.
         */_createClass(PosterImage,[{key:"dispose",value:function dispose(){this.player().off('posterchange',this.update_);_get(_getPrototypeOf(PosterImage.prototype),"dispose",this).call(this);}/**
         * Create the `PosterImage`s DOM element.
         *
         * @return {Element}
         *         The element that gets created.
         */},{key:"createEl",value:function createEl(){// The el is an empty div to keep position in the DOM
// A picture and img el will be inserted when a source is set
return _createEl('div',{className:'vjs-poster'});}/**
         * Get or set the `PosterImage`'s crossOrigin option.
         *
         * @param {string|null} [value]
         *        The value to set the crossOrigin to. If an argument is
         *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.
         *
         * @return {string|null}
         *         - The current crossOrigin value of the `Player` when getting.
         *         - undefined when setting
         */},{key:"crossOrigin",value:function crossOrigin(value){// `null` can be set to unset a value
if(typeof value==='undefined'){if(this.$('img')){// If the poster's element exists, give its value
return this.$('img').crossOrigin;}else if(this.player_.tech_&&this.player_.tech_.isReady_){// If not but the tech is ready, query the tech
return this.player_.crossOrigin();}// Otherwise check options as the  poster is usually set before the state of crossorigin
// can be retrieved by the getter
return this.player_.options_.crossOrigin||this.player_.options_.crossorigin||null;}if(value!==null&&value!=='anonymous'&&value!=='use-credentials'){this.player_.log.warn("crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"".concat(value,"\""));return;}if(this.$('img')){this.$('img').crossOrigin=value;}return;}/**
         * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.
         *
         * @listens Player#posterchange
         *
         * @param {Event} [event]
         *        The `Player#posterchange` event that triggered this function.
         */},{key:"update",value:function update(event){var url=this.player().poster();this.setSrc(url);// If there's no poster source we should display:none on this component
// so it's not still clickable or right-clickable
if(url){this.show();}else{this.hide();}}/**
         * Set the source of the `PosterImage` depending on the display method. (Re)creates
         * the inner picture and img elementss when needed.
         *
         * @param {string} [url]
         *        The URL to the source for the `PosterImage`. If not specified or falsy,
         *        any source and ant inner picture/img are removed.
         */},{key:"setSrc",value:function setSrc(url){if(!url){this.el_.textContent='';return;}if(!this.$('img')){this.el_.appendChild(_createEl('picture',{className:'vjs-poster',// Don't want poster to be tabbable.
tabIndex:-1},{},_createEl('img',{loading:'lazy',crossOrigin:this.crossOrigin()},{alt:''})));}this.$('img').src=url;}/**
         * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See
         * {@link ClickableComponent#handleClick} for instances where this will be triggered.
         *
         * @listens tap
         * @listens click
         * @listens keydown
         *
         * @param {Event} event
         +        The `click`, `tap` or `keydown` event that caused this function to be called.
         */},{key:"handleClick",value:function handleClick(event){// We don't want a click to trigger playback when controls are disabled
if(!this.player_.controls()){return;}if(this.player_.tech(true)){this.player_.tech(true).focus();}if(this.player_.paused()){silencePromise(this.player_.play());}else{this.player_.pause();}}}]);return PosterImage;}(ClickableComponent);/**
       * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this
       * sets the `crossOrigin` property on the `<img>` tag to control the CORS
       * behavior.
       *
       * @param {string|null} [value]
       *        The value to set the `PosterImages`'s crossorigin to. If an argument is
       *        given, must be one of `anonymous` or `use-credentials`.
       *
       * @return {string|null|undefined}
       *         - The current crossorigin value of the `Player` when getting.
       *         - undefined when setting
       */PosterImage.prototype.crossorigin=PosterImage.prototype.crossOrigin;Component$1.registerComponent('PosterImage',PosterImage);/**
       * @file text-track-display.js
       */var darkGray='#222';var lightGray='#ccc';var fontMap={monospace:'monospace',sansSerif:'sans-serif',serif:'serif',monospaceSansSerif:'"Andale Mono", "Lucida Console", monospace',monospaceSerif:'"Courier New", monospace',proportionalSansSerif:'sans-serif',proportionalSerif:'serif',casual:'"Comic Sans MS", Impact, fantasy',script:'"Monotype Corsiva", cursive',smallcaps:'"Andale Mono", "Lucida Console", monospace, sans-serif'};/**
       * Construct an rgba color from a given hex color code.
       *
       * @param {number} color
       *        Hex number for color, like #f0e or #f604e2.
       *
       * @param {number} opacity
       *        Value for opacity, 0.0 - 1.0.
       *
       * @return {string}
       *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.
       */function constructColor(color,opacity){var hex;if(color.length===4){// color looks like "#f0e"
hex=color[1]+color[1]+color[2]+color[2]+color[3]+color[3];}else if(color.length===7){// color looks like "#f604e2"
hex=color.slice(1);}else{throw new Error('Invalid color code provided, '+color+'; must be formatted as e.g. #f0e or #f604e2.');}return'rgba('+parseInt(hex.slice(0,2),16)+','+parseInt(hex.slice(2,4),16)+','+parseInt(hex.slice(4,6),16)+','+opacity+')';}/**
       * Try to update the style of a DOM element. Some style changes will throw an error,
       * particularly in IE8. Those should be noops.
       *
       * @param {Element} el
       *        The DOM element to be styled.
       *
       * @param {string} style
       *        The CSS property on the element that should be styled.
       *
       * @param {string} rule
       *        The style rule that should be applied to the property.
       *
       * @private
       */function tryUpdateStyle(el,style,rule){try{el.style[style]=rule;}catch(e){// Satisfies linter.
return;}}/**
       * Converts the CSS top/right/bottom/left property numeric value to string in pixels.
       *
       * @param {number} position
       *        The CSS top/right/bottom/left property value.
       *
       * @return {string}
       *          The CSS property value that was created, like '10px'.
       *
       * @private
       */function getCSSPositionValue(position){return position?"".concat(position,"px"):'';}/**
       * The component for displaying text track cues.
       *
       * @extends Component
       */var TextTrackDisplay=/*#__PURE__*/function(_Component$5){_inherits(TextTrackDisplay,_Component$5);var _super28=_createSuper(TextTrackDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when `TextTrackDisplay` is ready.
         */function TextTrackDisplay(player,options,ready){var _this78;_classCallCheck(this,TextTrackDisplay);_this78=_super28.call(this,player,options,ready);var updateDisplayTextHandler=function updateDisplayTextHandler(e){return _this78.updateDisplay(e);};var updateDisplayHandler=function updateDisplayHandler(e){_this78.updateDisplayOverlay();_this78.updateDisplay(e);};player.on('loadstart',function(e){return _this78.toggleDisplay(e);});player.on('texttrackchange',updateDisplayTextHandler);player.on('loadedmetadata',function(e){_this78.updateDisplayOverlay();_this78.preselectTrack(e);});// This used to be called during player init, but was causing an error
// if a track should show by default and the display hadn't loaded yet.
// Should probably be moved to an external track loader when we support
// tracks that don't need a display.
player.ready(bind_(_assertThisInitialized2(_this78),function(){if(player.tech_&&player.tech_.featuresNativeTextTracks){this.hide();return;}player.on('fullscreenchange',updateDisplayHandler);player.on('playerresize',updateDisplayHandler);var screenOrientation=window_1.screen.orientation||window_1;var changeOrientationEvent=window_1.screen.orientation?'change':'orientationchange';screenOrientation.addEventListener(changeOrientationEvent,updateDisplayHandler);player.on('dispose',function(){return screenOrientation.removeEventListener(changeOrientationEvent,updateDisplayHandler);});var tracks=this.options_.playerOptions.tracks||[];for(var _i116=0;_i116<tracks.length;_i116++){this.player_.addRemoteTextTrack(tracks[_i116],true);}this.preselectTrack();}));return _this78;}/**
        * Preselect a track following this precedence:
        * - matches the previously selected {@link TextTrack}'s language and kind
        * - matches the previously selected {@link TextTrack}'s language only
        * - is the first default captions track
        * - is the first default descriptions track
        *
        * @listens Player#loadstart
        */_createClass(TextTrackDisplay,[{key:"preselectTrack",value:function preselectTrack(){var modes={captions:1,subtitles:1};var trackList=this.player_.textTracks();var userPref=this.player_.cache_.selectedLanguage;var firstDesc;var firstCaptions;var preferredTrack;for(var _i117=0;_i117<trackList.length;_i117++){var track=trackList[_i117];if(userPref&&userPref.enabled&&userPref.language&&userPref.language===track.language&&track.kind in modes){// Always choose the track that matches both language and kind
if(track.kind===userPref.kind){preferredTrack=track;// or choose the first track that matches language
}else if(!preferredTrack){preferredTrack=track;}// clear everything if offTextTrackMenuItem was clicked
}else if(userPref&&!userPref.enabled){preferredTrack=null;firstDesc=null;firstCaptions=null;}else if(track.default){if(track.kind==='descriptions'&&!firstDesc){firstDesc=track;}else if(track.kind in modes&&!firstCaptions){firstCaptions=track;}}}// The preferredTrack matches the user preference and takes
// precedence over all the other tracks.
// So, display the preferredTrack before the first default track
// and the subtitles/captions track before the descriptions track
if(preferredTrack){preferredTrack.mode='showing';}else if(firstCaptions){firstCaptions.mode='showing';}else if(firstDesc){firstDesc.mode='showing';}}/**
         * Turn display of {@link TextTrack}'s from the current state into the other state.
         * There are only two states:
         * - 'shown'
         * - 'hidden'
         *
         * @listens Player#loadstart
         */},{key:"toggleDisplay",value:function toggleDisplay(){if(this.player_.tech_&&this.player_.tech_.featuresNativeTextTracks){this.hide();}else{this.show();}}/**
         * Create the {@link Component}'s DOM element.
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(TextTrackDisplay.prototype),"createEl",this).call(this,'div',{className:'vjs-text-track-display'},{'translate':'yes','aria-live':'off','aria-atomic':'true'});}/**
         * Clear all displayed {@link TextTrack}s.
         */},{key:"clearDisplay",value:function clearDisplay(){if(typeof window_1.WebVTT==='function'){window_1.WebVTT.processCues(window_1,[],this.el_);}}/**
         * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or
         * a {@link Player#fullscreenchange} is fired.
         *
         * @listens Player#texttrackchange
         * @listens Player#fullscreenchange
         */},{key:"updateDisplay",value:function updateDisplay(){var tracks=this.player_.textTracks();var allowMultipleShowingTracks=this.options_.allowMultipleShowingTracks;this.clearDisplay();if(allowMultipleShowingTracks){var showingTracks=[];for(var _i118=0;_i118<tracks.length;++_i118){var track=tracks[_i118];if(track.mode!=='showing'){continue;}showingTracks.push(track);}this.updateForTrack(showingTracks);return;}//  Track display prioritization model: if multiple tracks are 'showing',
//  display the first 'subtitles' or 'captions' track which is 'showing',
//  otherwise display the first 'descriptions' track which is 'showing'
var descriptionsTrack=null;var captionsSubtitlesTrack=null;var i=tracks.length;while(i--){var _track=tracks[i];if(_track.mode==='showing'){if(_track.kind==='descriptions'){descriptionsTrack=_track;}else{captionsSubtitlesTrack=_track;}}}if(captionsSubtitlesTrack){if(this.getAttribute('aria-live')!=='off'){this.setAttribute('aria-live','off');}this.updateForTrack(captionsSubtitlesTrack);}else if(descriptionsTrack){if(this.getAttribute('aria-live')!=='assertive'){this.setAttribute('aria-live','assertive');}this.updateForTrack(descriptionsTrack);}}/**
         * Updates the displayed TextTrack to be sure it overlays the video when a either
         * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.
         */},{key:"updateDisplayOverlay",value:function updateDisplayOverlay(){// inset-inline and inset-block are not supprted on old chrome, but these are
// only likely to be used on TV devices
if(!this.player_.videoHeight()||!window_1.CSS.supports('inset-inline: 10px')){return;}var playerWidth=this.player_.currentWidth();var playerHeight=this.player_.currentHeight();var playerAspectRatio=playerWidth/playerHeight;var videoAspectRatio=this.player_.videoWidth()/this.player_.videoHeight();var insetInlineMatch=0;var insetBlockMatch=0;if(Math.abs(playerAspectRatio-videoAspectRatio)>0.1){if(playerAspectRatio>videoAspectRatio){insetInlineMatch=Math.round((playerWidth-playerHeight*videoAspectRatio)/2);}else{insetBlockMatch=Math.round((playerHeight-playerWidth/videoAspectRatio)/2);}}tryUpdateStyle(this.el_,'insetInline',getCSSPositionValue(insetInlineMatch));tryUpdateStyle(this.el_,'insetBlock',getCSSPositionValue(insetBlockMatch));}/**
         * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.
         *
         * @param {TextTrack} track
         *        Text track object containing active cues to style.
         */},{key:"updateDisplayState",value:function updateDisplayState(track){var overrides=this.player_.textTrackSettings.getValues();var cues=track.activeCues;var i=cues.length;while(i--){var cue=cues[i];if(!cue){continue;}var cueDiv=cue.displayState;if(overrides.color){cueDiv.firstChild.style.color=overrides.color;}if(overrides.textOpacity){tryUpdateStyle(cueDiv.firstChild,'color',constructColor(overrides.color||'#fff',overrides.textOpacity));}if(overrides.backgroundColor){cueDiv.firstChild.style.backgroundColor=overrides.backgroundColor;}if(overrides.backgroundOpacity){tryUpdateStyle(cueDiv.firstChild,'backgroundColor',constructColor(overrides.backgroundColor||'#000',overrides.backgroundOpacity));}if(overrides.windowColor){if(overrides.windowOpacity){tryUpdateStyle(cueDiv,'backgroundColor',constructColor(overrides.windowColor,overrides.windowOpacity));}else{cueDiv.style.backgroundColor=overrides.windowColor;}}if(overrides.edgeStyle){if(overrides.edgeStyle==='dropshadow'){cueDiv.firstChild.style.textShadow="2px 2px 3px ".concat(darkGray,", 2px 2px 4px ").concat(darkGray,", 2px 2px 5px ").concat(darkGray);}else if(overrides.edgeStyle==='raised'){cueDiv.firstChild.style.textShadow="1px 1px ".concat(darkGray,", 2px 2px ").concat(darkGray,", 3px 3px ").concat(darkGray);}else if(overrides.edgeStyle==='depressed'){cueDiv.firstChild.style.textShadow="1px 1px ".concat(lightGray,", 0 1px ").concat(lightGray,", -1px -1px ").concat(darkGray,", 0 -1px ").concat(darkGray);}else if(overrides.edgeStyle==='uniform'){cueDiv.firstChild.style.textShadow="0 0 4px ".concat(darkGray,", 0 0 4px ").concat(darkGray,", 0 0 4px ").concat(darkGray,", 0 0 4px ").concat(darkGray);}}if(overrides.fontPercent&&overrides.fontPercent!==1){var _fontSize=window_1.parseFloat(cueDiv.style.fontSize);cueDiv.style.fontSize=_fontSize*overrides.fontPercent+'px';cueDiv.style.height='auto';cueDiv.style.top='auto';}if(overrides.fontFamily&&overrides.fontFamily!=='default'){if(overrides.fontFamily==='small-caps'){cueDiv.firstChild.style.fontVariant='small-caps';}else{cueDiv.firstChild.style.fontFamily=fontMap[overrides.fontFamily];}}}}/**
         * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.
         *
         * @param {TextTrack|TextTrack[]} tracks
         *        Text track object or text track array to be added to the list.
         */},{key:"updateForTrack",value:function updateForTrack(tracks){if(!Array.isArray(tracks)){tracks=[tracks];}if(typeof window_1.WebVTT!=='function'||tracks.every(function(track){return!track.activeCues;})){return;}var cues=[];// push all active track cues
for(var _i119=0;_i119<tracks.length;++_i119){var track=tracks[_i119];for(var _j10=0;_j10<track.activeCues.length;++_j10){cues.push(track.activeCues[_j10]);}}// removes all cues before it processes new ones
window_1.WebVTT.processCues(window_1,cues,this.el_);// add unique class to each language text track & add settings styling if necessary
for(var _i120=0;_i120<tracks.length;++_i120){var _track2=tracks[_i120];for(var _j11=0;_j11<_track2.activeCues.length;++_j11){var cueEl=_track2.activeCues[_j11].displayState;_addClass(cueEl,'vjs-text-track-cue','vjs-text-track-cue-'+(_track2.language?_track2.language:_i120));if(_track2.language){_setAttribute(cueEl,'lang',_track2.language);}}if(this.player_.textTrackSettings){this.updateDisplayState(_track2);}}}}]);return TextTrackDisplay;}(Component$1);Component$1.registerComponent('TextTrackDisplay',TextTrackDisplay);/**
       * @file loading-spinner.js
       */ /**
       * A loading spinner for use during waiting/loading events.
       *
       * @extends Component
       */var LoadingSpinner=/*#__PURE__*/function(_Component$6){_inherits(LoadingSpinner,_Component$6);var _super29=_createSuper(LoadingSpinner);function LoadingSpinner(){_classCallCheck(this,LoadingSpinner);return _super29.apply(this,arguments);}_createClass(LoadingSpinner,[{key:"createEl",value:/**
         * Create the `LoadingSpinner`s DOM element.
         *
         * @return {Element}
         *         The dom element that gets created.
         */function createEl(){var isAudio=this.player_.isAudio();var playerType=this.localize(isAudio?'Audio Player':'Video Player');var controlText=_createEl('span',{className:'vjs-control-text',textContent:this.localize('{1} is loading.',[playerType])});var el=_get(_getPrototypeOf(LoadingSpinner.prototype),"createEl",this).call(this,'div',{className:'vjs-loading-spinner',dir:'ltr'});el.appendChild(controlText);return el;}/**
         * Update control text on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.$('.vjs-control-text').textContent=this.localize('{1} is loading.',[this.player_.isAudio()?'Audio Player':'Video Player']);}}]);return LoadingSpinner;}(Component$1);Component$1.registerComponent('LoadingSpinner',LoadingSpinner);/**
       * @file button.js
       */ /**
       * Base class for all buttons.
       *
       * @extends ClickableComponent
       */var Button=/*#__PURE__*/function(_ClickableComponent2){_inherits(Button,_ClickableComponent2);var _super30=_createSuper(Button);function Button(){_classCallCheck(this,Button);return _super30.apply(this,arguments);}_createClass(Button,[{key:"createEl",value:/**
         * Create the `Button`s DOM element.
         *
         * @param {string} [tag="button"]
         *        The element's node type. This argument is IGNORED: no matter what
         *        is passed, it will always create a `button` element.
         *
         * @param {Object} [props={}]
         *        An object of properties that should be set on the element.
         *
         * @param {Object} [attributes={}]
         *        An object of attributes that should be set on the element.
         *
         * @return {Element}
         *         The element that gets created.
         */function createEl(tag){var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var attributes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};tag='button';props=Object.assign({className:this.buildCSSClass()},props);// Add attributes for button element
attributes=Object.assign({// Necessary since the default button type is "submit"
type:'button'},attributes);var el=_createEl(tag,props,attributes);if(!this.player_.options_.experimentalSvgIcons){el.appendChild(_createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));}this.createControlTextEl(el);return el;}/**
         * Add a child `Component` inside of this `Button`.
         *
         * @param {string|Component} child
         *        The name or instance of a child to add.
         *
         * @param {Object} [options={}]
         *        The key/value store of options that will get passed to children of
         *        the child.
         *
         * @return {Component}
         *         The `Component` that gets added as a child. When using a string the
         *         `Component` will get created by this process.
         *
         * @deprecated since version 5
         */},{key:"addChild",value:function addChild(child){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var className=this.constructor.name;log$1.warn("Adding an actionable (user controllable) child to a Button (".concat(className,") is not supported; use a ClickableComponent instead."));// Avoid the error message generated by ClickableComponent's addChild method
return Component$1.prototype.addChild.call(this,child,options);}/**
         * Enable the `Button` element so that it can be activated or clicked. Use this with
         * {@link Button#disable}.
         */},{key:"enable",value:function enable(){_get(_getPrototypeOf(Button.prototype),"enable",this).call(this);this.el_.removeAttribute('disabled');}/**
         * Disable the `Button` element so that it cannot be activated or clicked. Use this with
         * {@link Button#enable}.
         */},{key:"disable",value:function disable(){_get(_getPrototypeOf(Button.prototype),"disable",this).call(this);this.el_.setAttribute('disabled','disabled');}/**
         * This gets called when a `Button` has focus and `keydown` is triggered via a key
         * press.
         *
         * @param {KeyboardEvent} event
         *        The event that caused this function to get called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){// Ignore Space or Enter key operation, which is handled by the browser for
// a button - though not for its super class, ClickableComponent. Also,
// prevent the event from propagating through the DOM and triggering Player
// hotkeys. We do not preventDefault here because we _want_ the browser to
// handle it.
if(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.stopPropagation();return;}// Pass keypress handling up for unsupported keys
_get(_getPrototypeOf(Button.prototype),"handleKeyDown",this).call(this,event);}}]);return Button;}(ClickableComponent);Component$1.registerComponent('Button',Button);/**
       * @file big-play-button.js
       */ /**
       * The initial play button that shows before the video has played. The hiding of the
       * `BigPlayButton` get done via CSS and `Player` states.
       *
       * @extends Button
       */var BigPlayButton=/*#__PURE__*/function(_Button){_inherits(BigPlayButton,_Button);var _super31=_createSuper(BigPlayButton);function BigPlayButton(player,options){var _this79;_classCallCheck(this,BigPlayButton);_this79=_super31.call(this,player,options);_this79.mouseused_=false;_this79.setIcon('play');_this79.on('mousedown',function(e){return _this79.handleMouseDown(e);});return _this79;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.
         */_createClass(BigPlayButton,[{key:"buildCSSClass",value:function buildCSSClass(){return'vjs-big-play-button';}/**
         * This gets called when a `BigPlayButton` "clicked". See {@link ClickableComponent}
         * for more detailed information on what a click can be.
         *
         * @param {KeyboardEvent|MouseEvent|TouchEvent} event
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){var playPromise=this.player_.play();// exit early if clicked via the mouse
if(this.mouseused_&&'clientX'in event&&'clientY'in event){silencePromise(playPromise);if(this.player_.tech(true)){this.player_.tech(true).focus();}return;}var cb=this.player_.getChild('controlBar');var playToggle=cb&&cb.getChild('playToggle');if(!playToggle){this.player_.tech(true).focus();return;}var playFocus=function playFocus(){return playToggle.focus();};if(isPromise(playPromise)){playPromise.then(playFocus,function(){});}else{this.setTimeout(playFocus,1);}}/**
         * Event handler that is called when a `BigPlayButton` receives a
         * `keydown` event.
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){this.mouseused_=false;_get(_getPrototypeOf(BigPlayButton.prototype),"handleKeyDown",this).call(this,event);}/**
         * Handle `mousedown` events on the `BigPlayButton`.
         *
         * @param {MouseEvent} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousedown
         */},{key:"handleMouseDown",value:function handleMouseDown(event){this.mouseused_=true;}}]);return BigPlayButton;}(Button);/**
       * The text that should display over the `BigPlayButton`s controls. Added to for localization.
       *
       * @type {string}
       * @protected
       */BigPlayButton.prototype.controlText_='Play Video';Component$1.registerComponent('BigPlayButton',BigPlayButton);/**
       * @file close-button.js
       */ /**
       * The `CloseButton` is a `{@link Button}` that fires a `close` event when
       * it gets clicked.
       *
       * @extends Button
       */var CloseButton=/*#__PURE__*/function(_Button2){_inherits(CloseButton,_Button2);var _super32=_createSuper(CloseButton);/**
        * Creates an instance of the this class.
        *
        * @param  { import('./player').default } player
        *         The `Player` that this class should be attached to.
        *
        * @param  {Object} [options]
        *         The key/value store of player options.
        */function CloseButton(player,options){var _this80;_classCallCheck(this,CloseButton);_this80=_super32.call(this,player,options);_this80.setIcon('cancel');_this80.controlText(options&&options.controlText||_this80.localize('Close'));return _this80;}/**
        * Builds the default DOM `className`.
        *
        * @return {string}
        *         The DOM `className` for this object.
        */_createClass(CloseButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-close-button ".concat(_get(_getPrototypeOf(CloseButton.prototype),"buildCSSClass",this).call(this));}/**
         * This gets called when a `CloseButton` gets clicked. See
         * {@link ClickableComponent#handleClick} for more information on when
         * this will be triggered
         *
         * @param {Event} event
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         * @fires CloseButton#close
         */},{key:"handleClick",value:function handleClick(event){/**
           * Triggered when the a `CloseButton` is clicked.
           *
           * @event CloseButton#close
           * @type {Event}
           *
           * @property {boolean} [bubbles=false]
           *           set to false so that the close event does not
           *           bubble up to parents if there is no listener
           */this.trigger({type:'close',bubbles:false});}/**
         * Event handler that is called when a `CloseButton` receives a
         * `keydown` event.
         *
         * By default, if the key is Esc, it will trigger a `click` event.
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){// Esc button will trigger `click` event
if(keycode.isEventKey(event,'Esc')){event.preventDefault();event.stopPropagation();this.trigger('click');}else{// Pass keypress handling up for unsupported keys
_get(_getPrototypeOf(CloseButton.prototype),"handleKeyDown",this).call(this,event);}}}]);return CloseButton;}(Button);Component$1.registerComponent('CloseButton',CloseButton);/**
       * @file play-toggle.js
       */ /**
       * Button to toggle between play and pause.
       *
       * @extends Button
       */var PlayToggle=/*#__PURE__*/function(_Button3){_inherits(PlayToggle,_Button3);var _super33=_createSuper(PlayToggle);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function PlayToggle(player){var _this81;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,PlayToggle);_this81=_super33.call(this,player,options);// show or hide replay icon
options.replay=options.replay===undefined||options.replay;_this81.setIcon('play');_this81.on(player,'play',function(e){return _this81.handlePlay(e);});_this81.on(player,'pause',function(e){return _this81.handlePause(e);});if(options.replay){_this81.on(player,'ended',function(e){return _this81.handleEnded(e);});}return _this81;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(PlayToggle,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-play-control ".concat(_get(_getPrototypeOf(PlayToggle.prototype),"buildCSSClass",this).call(this));}/**
         * This gets called when an `PlayToggle` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){if(this.player_.paused()){silencePromise(this.player_.play());}else{this.player_.pause();}}/**
         * This gets called once after the video has ended and the user seeks so that
         * we can change the replay button back to a play button.
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#seeked
         */},{key:"handleSeeked",value:function handleSeeked(event){this.removeClass('vjs-ended');if(this.player_.paused()){this.handlePause(event);}else{this.handlePlay(event);}}/**
         * Add the vjs-playing class to the element so it can change appearance.
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#play
         */},{key:"handlePlay",value:function handlePlay(event){this.removeClass('vjs-ended','vjs-paused');this.addClass('vjs-playing');// change the button text to "Pause"
this.setIcon('pause');this.controlText('Pause');}/**
         * Add the vjs-paused class to the element so it can change appearance.
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#pause
         */},{key:"handlePause",value:function handlePause(event){this.removeClass('vjs-playing');this.addClass('vjs-paused');// change the button text to "Play"
this.setIcon('play');this.controlText('Play');}/**
         * Add the vjs-ended class to the element so it can change appearance
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#ended
         */},{key:"handleEnded",value:function handleEnded(event){var _this82=this;this.removeClass('vjs-playing');this.addClass('vjs-ended');// change the button text to "Replay"
this.setIcon('replay');this.controlText('Replay');// on the next seek remove the replay button
this.one(this.player_,'seeked',function(e){return _this82.handleSeeked(e);});}}]);return PlayToggle;}(Button);/**
       * The text that should display over the `PlayToggle`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */PlayToggle.prototype.controlText_='Play';Component$1.registerComponent('PlayToggle',PlayToggle);/**
       * @file time-display.js
       */ /**
       * Displays time information about the video
       *
       * @extends Component
       */var TimeDisplay=/*#__PURE__*/function(_Component$7){_inherits(TimeDisplay,_Component$7);var _super34=_createSuper(TimeDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function TimeDisplay(player,options){var _this83;_classCallCheck(this,TimeDisplay);_this83=_super34.call(this,player,options);_this83.on(player,['timeupdate','ended','seeking'],function(e){return _this83.update(e);});_this83.updateTextNode_();return _this83;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(TimeDisplay,[{key:"createEl",value:function createEl(){var className=this.buildCSSClass();var el=_get(_getPrototypeOf(TimeDisplay.prototype),"createEl",this).call(this,'div',{className:"".concat(className," vjs-time-control vjs-control")});var span=_createEl('span',{className:'vjs-control-text',textContent:"".concat(this.localize(this.labelText_),"\xA0")},{role:'presentation'});el.appendChild(span);this.contentEl_=_createEl('span',{className:"".concat(className,"-display")},{// span elements have no implicit role, but some screen readers (notably VoiceOver)
// treat them as a break between items in the DOM when using arrow keys
// (or left-to-right swipes on iOS) to read contents of a page. Using
// role='presentation' causes VoiceOver to NOT treat this span as a break.
role:'presentation'});el.appendChild(this.contentEl_);return el;}},{key:"dispose",value:function dispose(){this.contentEl_=null;this.textNode_=null;_get(_getPrototypeOf(TimeDisplay.prototype),"dispose",this).call(this);}/**
         * Updates the displayed time according to the `updateContent` function which is defined in the child class.
         *
         * @param {Event} [event]
         *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.
         */},{key:"update",value:function update(event){if(!this.player_.options_.enableSmoothSeeking&&event.type==='seeking'){return;}this.updateContent(event);}/**
         * Updates the time display text node with a new time
         *
         * @param {number} [time=0] the time to update to
         *
         * @private
         */},{key:"updateTextNode_",value:function updateTextNode_(){var _this84=this;var time=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;time=formatTime(time);if(this.formattedTime_===time){return;}this.formattedTime_=time;this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_',function(){if(!_this84.contentEl_){return;}var oldNode=_this84.textNode_;if(oldNode&&_this84.contentEl_.firstChild!==oldNode){oldNode=null;log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');}_this84.textNode_=document_1.createTextNode(_this84.formattedTime_);if(!_this84.textNode_){return;}if(oldNode){_this84.contentEl_.replaceChild(_this84.textNode_,oldNode);}else{_this84.contentEl_.appendChild(_this84.textNode_);}});}/**
         * To be filled out in the child class, should update the displayed time
         * in accordance with the fact that the current time has changed.
         *
         * @param {Event} [event]
         *        The `timeupdate`  event that caused this to run.
         *
         * @listens Player#timeupdate
         */},{key:"updateContent",value:function updateContent(event){}}]);return TimeDisplay;}(Component$1);/**
       * The text that is added to the `TimeDisplay` for screen reader users.
       *
       * @type {string}
       * @private
       */TimeDisplay.prototype.labelText_='Time';/**
       * The text that should display over the `TimeDisplay`s controls. Added to for localization.
       *
       * @type {string}
       * @protected
       *
       * @deprecated in v7; controlText_ is not used in non-active display Components
       */TimeDisplay.prototype.controlText_='Time';Component$1.registerComponent('TimeDisplay',TimeDisplay);/**
       * @file current-time-display.js
       */ /**
       * Displays the current time
       *
       * @extends Component
       */var CurrentTimeDisplay=/*#__PURE__*/function(_TimeDisplay){_inherits(CurrentTimeDisplay,_TimeDisplay);var _super35=_createSuper(CurrentTimeDisplay);function CurrentTimeDisplay(){_classCallCheck(this,CurrentTimeDisplay);return _super35.apply(this,arguments);}_createClass(CurrentTimeDisplay,[{key:"buildCSSClass",value:/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */function buildCSSClass(){return'vjs-current-time';}/**
         * Update current time display
         *
         * @param {Event} [event]
         *        The `timeupdate` event that caused this function to run.
         *
         * @listens Player#timeupdate
         */},{key:"updateContent",value:function updateContent(event){// Allows for smooth scrubbing, when player can't keep up.
var time;if(this.player_.ended()){time=this.player_.duration();}else{time=this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();}this.updateTextNode_(time);}}]);return CurrentTimeDisplay;}(TimeDisplay);/**
       * The text that is added to the `CurrentTimeDisplay` for screen reader users.
       *
       * @type {string}
       * @private
       */CurrentTimeDisplay.prototype.labelText_='Current Time';/**
       * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.
       *
       * @type {string}
       * @protected
       *
       * @deprecated in v7; controlText_ is not used in non-active display Components
       */CurrentTimeDisplay.prototype.controlText_='Current Time';Component$1.registerComponent('CurrentTimeDisplay',CurrentTimeDisplay);/**
       * @file duration-display.js
       */ /**
       * Displays the duration
       *
       * @extends Component
       */var DurationDisplay=/*#__PURE__*/function(_TimeDisplay2){_inherits(DurationDisplay,_TimeDisplay2);var _super36=_createSuper(DurationDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function DurationDisplay(player,options){var _this85;_classCallCheck(this,DurationDisplay);_this85=_super36.call(this,player,options);var updateContent=function updateContent(e){return _this85.updateContent(e);};// we do not want to/need to throttle duration changes,
// as they should always display the changed duration as
// it has changed
_this85.on(player,'durationchange',updateContent);// Listen to loadstart because the player duration is reset when a new media element is loaded,
// but the durationchange on the user agent will not fire.
// @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}
_this85.on(player,'loadstart',updateContent);// Also listen for timeupdate (in the parent) and loadedmetadata because removing those
// listeners could have broken dependent applications/libraries. These
// can likely be removed for 7.0.
_this85.on(player,'loadedmetadata',updateContent);return _this85;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(DurationDisplay,[{key:"buildCSSClass",value:function buildCSSClass(){return'vjs-duration';}/**
         * Update duration time display.
         *
         * @param {Event} [event]
         *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused
         *        this function to be called.
         *
         * @listens Player#durationchange
         * @listens Player#timeupdate
         * @listens Player#loadedmetadata
         */},{key:"updateContent",value:function updateContent(event){var duration=this.player_.duration();this.updateTextNode_(duration);}}]);return DurationDisplay;}(TimeDisplay);/**
       * The text that is added to the `DurationDisplay` for screen reader users.
       *
       * @type {string}
       * @private
       */DurationDisplay.prototype.labelText_='Duration';/**
       * The text that should display over the `DurationDisplay`s controls. Added to for localization.
       *
       * @type {string}
       * @protected
       *
       * @deprecated in v7; controlText_ is not used in non-active display Components
       */DurationDisplay.prototype.controlText_='Duration';Component$1.registerComponent('DurationDisplay',DurationDisplay);/**
       * @file time-divider.js
       */ /**
       * The separator between the current time and duration.
       * Can be hidden if it's not needed in the design.
       *
       * @extends Component
       */var TimeDivider=/*#__PURE__*/function(_Component$8){_inherits(TimeDivider,_Component$8);var _super37=_createSuper(TimeDivider);function TimeDivider(){_classCallCheck(this,TimeDivider);return _super37.apply(this,arguments);}_createClass(TimeDivider,[{key:"createEl",value:/**
         * Create the component's DOM element
         *
         * @return {Element}
         *         The element that was created.
         */function createEl(){var el=_get(_getPrototypeOf(TimeDivider.prototype),"createEl",this).call(this,'div',{className:'vjs-time-control vjs-time-divider'},{// this element and its contents can be hidden from assistive techs since
// it is made extraneous by the announcement of the control text
// for the current time and duration displays
'aria-hidden':true});var div=_get(_getPrototypeOf(TimeDivider.prototype),"createEl",this).call(this,'div');var span=_get(_getPrototypeOf(TimeDivider.prototype),"createEl",this).call(this,'span',{textContent:'/'});div.appendChild(span);el.appendChild(div);return el;}}]);return TimeDivider;}(Component$1);Component$1.registerComponent('TimeDivider',TimeDivider);/**
       * @file remaining-time-display.js
       */ /**
       * Displays the time left in the video
       *
       * @extends Component
       */var RemainingTimeDisplay=/*#__PURE__*/function(_TimeDisplay3){_inherits(RemainingTimeDisplay,_TimeDisplay3);var _super38=_createSuper(RemainingTimeDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function RemainingTimeDisplay(player,options){var _this86;_classCallCheck(this,RemainingTimeDisplay);_this86=_super38.call(this,player,options);_this86.on(player,'durationchange',function(e){return _this86.updateContent(e);});return _this86;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(RemainingTimeDisplay,[{key:"buildCSSClass",value:function buildCSSClass(){return'vjs-remaining-time';}/**
         * Create the `Component`'s DOM element with the "minus" character prepend to the time
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){var el=_get(_getPrototypeOf(RemainingTimeDisplay.prototype),"createEl",this).call(this);if(this.options_.displayNegative!==false){el.insertBefore(_createEl('span',{},{'aria-hidden':true},'-'),this.contentEl_);}return el;}/**
         * Update remaining time display.
         *
         * @param {Event} [event]
         *        The `timeupdate` or `durationchange` event that caused this to run.
         *
         * @listens Player#timeupdate
         * @listens Player#durationchange
         */},{key:"updateContent",value:function updateContent(event){if(typeof this.player_.duration()!=='number'){return;}var time;// @deprecated We should only use remainingTimeDisplay
// as of video.js 7
if(this.player_.ended()){time=0;}else if(this.player_.remainingTimeDisplay){time=this.player_.remainingTimeDisplay();}else{time=this.player_.remainingTime();}this.updateTextNode_(time);}}]);return RemainingTimeDisplay;}(TimeDisplay);/**
       * The text that is added to the `RemainingTimeDisplay` for screen reader users.
       *
       * @type {string}
       * @private
       */RemainingTimeDisplay.prototype.labelText_='Remaining Time';/**
       * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.
       *
       * @type {string}
       * @protected
       *
       * @deprecated in v7; controlText_ is not used in non-active display Components
       */RemainingTimeDisplay.prototype.controlText_='Remaining Time';Component$1.registerComponent('RemainingTimeDisplay',RemainingTimeDisplay);/**
       * @file live-display.js
       */ // TODO - Future make it click to snap to live
/**
       * Displays the live indicator when duration is Infinity.
       *
       * @extends Component
       */var LiveDisplay=/*#__PURE__*/function(_Component$9){_inherits(LiveDisplay,_Component$9);var _super39=_createSuper(LiveDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function LiveDisplay(player,options){var _this87;_classCallCheck(this,LiveDisplay);_this87=_super39.call(this,player,options);_this87.updateShowing();_this87.on(_this87.player(),'durationchange',function(e){return _this87.updateShowing(e);});return _this87;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(LiveDisplay,[{key:"createEl",value:function createEl(){var el=_get(_getPrototypeOf(LiveDisplay.prototype),"createEl",this).call(this,'div',{className:'vjs-live-control vjs-control'});this.contentEl_=_createEl('div',{className:'vjs-live-display'},{'aria-live':'off'});this.contentEl_.appendChild(_createEl('span',{className:'vjs-control-text',textContent:"".concat(this.localize('Stream Type'),"\xA0")}));this.contentEl_.appendChild(document_1.createTextNode(this.localize('LIVE')));el.appendChild(this.contentEl_);return el;}},{key:"dispose",value:function dispose(){this.contentEl_=null;_get(_getPrototypeOf(LiveDisplay.prototype),"dispose",this).call(this);}/**
         * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide
         * it accordingly
         *
         * @param {Event} [event]
         *        The {@link Player#durationchange} event that caused this function to run.
         *
         * @listens Player#durationchange
         */},{key:"updateShowing",value:function updateShowing(event){if(this.player().duration()===Infinity){this.show();}else{this.hide();}}}]);return LiveDisplay;}(Component$1);Component$1.registerComponent('LiveDisplay',LiveDisplay);/**
       * @file seek-to-live.js
       */ /**
       * Displays the live indicator when duration is Infinity.
       *
       * @extends Component
       */var SeekToLive=/*#__PURE__*/function(_Button4){_inherits(SeekToLive,_Button4);var _super40=_createSuper(SeekToLive);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function SeekToLive(player,options){var _this88;_classCallCheck(this,SeekToLive);_this88=_super40.call(this,player,options);_this88.updateLiveEdgeStatus();if(_this88.player_.liveTracker){_this88.updateLiveEdgeStatusHandler_=function(e){return _this88.updateLiveEdgeStatus(e);};_this88.on(_this88.player_.liveTracker,'liveedgechange',_this88.updateLiveEdgeStatusHandler_);}return _this88;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(SeekToLive,[{key:"createEl",value:function createEl(){var el=_get(_getPrototypeOf(SeekToLive.prototype),"createEl",this).call(this,'button',{className:'vjs-seek-to-live-control vjs-control'});this.setIcon('circle',el);this.textEl_=_createEl('span',{className:'vjs-seek-to-live-text',textContent:this.localize('LIVE')},{'aria-hidden':'true'});el.appendChild(this.textEl_);return el;}/**
         * Update the state of this button if we are at the live edge
         * or not
         */},{key:"updateLiveEdgeStatus",value:function updateLiveEdgeStatus(){// default to live edge
if(!this.player_.liveTracker||this.player_.liveTracker.atLiveEdge()){this.setAttribute('aria-disabled',true);this.addClass('vjs-at-live-edge');this.controlText('Seek to live, currently playing live');}else{this.setAttribute('aria-disabled',false);this.removeClass('vjs-at-live-edge');this.controlText('Seek to live, currently behind live');}}/**
         * On click bring us as near to the live point as possible.
         * This requires that we wait for the next `live-seekable-change`
         * event which will happen every segment length seconds.
         */},{key:"handleClick",value:function handleClick(){this.player_.liveTracker.seekToLiveEdge();}/**
         * Dispose of the element and stop tracking
         */},{key:"dispose",value:function dispose(){if(this.player_.liveTracker){this.off(this.player_.liveTracker,'liveedgechange',this.updateLiveEdgeStatusHandler_);}this.textEl_=null;_get(_getPrototypeOf(SeekToLive.prototype),"dispose",this).call(this);}}]);return SeekToLive;}(Button);/**
       * The text that should display over the `SeekToLive`s control. Added for localization.
       *
       * @type {string}
       * @protected
       */SeekToLive.prototype.controlText_='Seek to live, currently playing live';Component$1.registerComponent('SeekToLive',SeekToLive);/**
       * @file num.js
       * @module num
       */ /**
       * Keep a number between a min and a max value
       *
       * @param {number} number
       *        The number to clamp
       *
       * @param {number} min
       *        The minimum value
       * @param {number} max
       *        The maximum value
       *
       * @return {number}
       *         the clamped number
       */function clamp(number,min,max){number=Number(number);return Math.min(max,Math.max(min,isNaN(number)?min:number));}var Num=/*#__PURE__*/Object.freeze({__proto__:null,clamp:clamp});/**
       * @file slider.js
       */ /**
       * The base functionality for a slider. Can be vertical or horizontal.
       * For instance the volume bar or the seek bar on a video is a slider.
       *
       * @extends Component
       */var Slider=/*#__PURE__*/function(_Component$10){_inherits(Slider,_Component$10);var _super41=_createSuper(Slider);/**
        * Create an instance of this class
        *
        * @param { import('../player').default } player
        *        The `Player` that this class should be attached to.
        *
        * @param {Object} [options]
        *        The key/value store of player options.
        */function Slider(player,options){var _this89;_classCallCheck(this,Slider);_this89=_super41.call(this,player,options);_this89.handleMouseDown_=function(e){return _this89.handleMouseDown(e);};_this89.handleMouseUp_=function(e){return _this89.handleMouseUp(e);};_this89.handleKeyDown_=function(e){return _this89.handleKeyDown(e);};_this89.handleClick_=function(e){return _this89.handleClick(e);};_this89.handleMouseMove_=function(e){return _this89.handleMouseMove(e);};_this89.update_=function(e){return _this89.update(e);};// Set property names to bar to match with the child Slider class is looking for
_this89.bar=_this89.getChild(_this89.options_.barName);// Set a horizontal or vertical class on the slider depending on the slider type
_this89.vertical(!!_this89.options_.vertical);_this89.enable();return _this89;}/**
         * Are controls are currently enabled for this slider or not.
         *
         * @return {boolean}
         *         true if controls are enabled, false otherwise
         */_createClass(Slider,[{key:"enabled",value:function enabled(){return this.enabled_;}/**
         * Enable controls for this slider if they are disabled
         */},{key:"enable",value:function enable(){if(this.enabled()){return;}this.on('mousedown',this.handleMouseDown_);this.on('touchstart',this.handleMouseDown_);this.on('keydown',this.handleKeyDown_);this.on('click',this.handleClick_);// TODO: deprecated, controlsvisible does not seem to be fired
this.on(this.player_,'controlsvisible',this.update);if(this.playerEvent){this.on(this.player_,this.playerEvent,this.update);}this.removeClass('disabled');this.setAttribute('tabindex',0);this.enabled_=true;}/**
         * Disable controls for this slider if they are enabled
         */},{key:"disable",value:function disable(){if(!this.enabled()){return;}var doc=this.bar.el_.ownerDocument;this.off('mousedown',this.handleMouseDown_);this.off('touchstart',this.handleMouseDown_);this.off('keydown',this.handleKeyDown_);this.off('click',this.handleClick_);this.off(this.player_,'controlsvisible',this.update_);this.off(doc,'mousemove',this.handleMouseMove_);this.off(doc,'mouseup',this.handleMouseUp_);this.off(doc,'touchmove',this.handleMouseMove_);this.off(doc,'touchend',this.handleMouseUp_);this.removeAttribute('tabindex');this.addClass('disabled');if(this.playerEvent){this.off(this.player_,this.playerEvent,this.update);}this.enabled_=false;}/**
         * Create the `Slider`s DOM element.
         *
         * @param {string} type
         *        Type of element to create.
         *
         * @param {Object} [props={}]
         *        List of properties in Object form.
         *
         * @param {Object} [attributes={}]
         *        list of attributes in Object form.
         *
         * @return {Element}
         *         The element that gets created.
         */},{key:"createEl",value:function createEl(type){var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var attributes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// Add the slider element class to all sub classes
props.className=props.className+' vjs-slider';props=Object.assign({tabIndex:0},props);attributes=Object.assign({'role':'slider','aria-valuenow':0,'aria-valuemin':0,'aria-valuemax':100},attributes);return _get(_getPrototypeOf(Slider.prototype),"createEl",this).call(this,type,props,attributes);}/**
         * Handle `mousedown` or `touchstart` events on the `Slider`.
         *
         * @param {MouseEvent} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousedown
         * @listens touchstart
         * @fires Slider#slideractive
         */},{key:"handleMouseDown",value:function handleMouseDown(event){var doc=this.bar.el_.ownerDocument;if(event.type==='mousedown'){event.preventDefault();}// Do not call preventDefault() on touchstart in Chrome
// to avoid console warnings. Use a 'touch-action: none' style
// instead to prevent unintended scrolling.
// https://developers.google.com/web/updates/2017/01/scrolling-intervention
if(event.type==='touchstart'&&!IS_CHROME){event.preventDefault();}blockTextSelection();this.addClass('vjs-sliding');/**
           * Triggered when the slider is in an active state
           *
           * @event Slider#slideractive
           * @type {MouseEvent}
           */this.trigger('slideractive');this.on(doc,'mousemove',this.handleMouseMove_);this.on(doc,'mouseup',this.handleMouseUp_);this.on(doc,'touchmove',this.handleMouseMove_);this.on(doc,'touchend',this.handleMouseUp_);this.handleMouseMove(event,true);}/**
         * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.
         * The `mousemove` and `touchmove` events will only only trigger this function during
         * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and
         * {@link Slider#handleMouseUp}.
         *
         * @param {MouseEvent} event
         *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered
         *        this function
         * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.
         *
         * @listens mousemove
         * @listens touchmove
         */},{key:"handleMouseMove",value:function handleMouseMove(event){}/**
         * Handle `mouseup` or `touchend` events on the `Slider`.
         *
         * @param {MouseEvent} event
         *        `mouseup` or `touchend` event that triggered this function.
         *
         * @listens touchend
         * @listens mouseup
         * @fires Slider#sliderinactive
         */},{key:"handleMouseUp",value:function handleMouseUp(event){var doc=this.bar.el_.ownerDocument;unblockTextSelection();this.removeClass('vjs-sliding');/**
           * Triggered when the slider is no longer in an active state.
           *
           * @event Slider#sliderinactive
           * @type {Event}
           */this.trigger('sliderinactive');this.off(doc,'mousemove',this.handleMouseMove_);this.off(doc,'mouseup',this.handleMouseUp_);this.off(doc,'touchmove',this.handleMouseMove_);this.off(doc,'touchend',this.handleMouseUp_);this.update();}/**
         * Update the progress bar of the `Slider`.
         *
         * @return {number}
         *          The percentage of progress the progress bar represents as a
         *          number from 0 to 1.
         */},{key:"update",value:function update(){var _this90=this;// In VolumeBar init we have a setTimeout for update that pops and update
// to the end of the execution stack. The player is destroyed before then
// update will cause an error
// If there's no bar...
if(!this.el_||!this.bar){return;}// clamp progress between 0 and 1
// and only round to four decimal places, as we round to two below
var progress=this.getProgress();if(progress===this.progress_){return progress;}this.progress_=progress;this.requestNamedAnimationFrame('Slider#update',function(){// Set the new bar width or height
var sizeKey=_this90.vertical()?'height':'width';// Convert to a percentage for css value
_this90.bar.el().style[sizeKey]=(progress*100).toFixed(2)+'%';});return progress;}/**
         * Get the percentage of the bar that should be filled
         * but clamped and rounded.
         *
         * @return {number}
         *         percentage filled that the slider is
         */},{key:"getProgress",value:function getProgress(){return Number(clamp(this.getPercent(),0,1).toFixed(4));}/**
         * Calculate distance for slider
         *
         * @param {Event} event
         *        The event that caused this function to run.
         *
         * @return {number}
         *         The current position of the Slider.
         *         - position.x for vertical `Slider`s
         *         - position.y for horizontal `Slider`s
         */},{key:"calculateDistance",value:function calculateDistance(event){var position=getPointerPosition(this.el_,event);if(this.vertical()){return position.y;}return position.x;}/**
         * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down
         * arrow keys. This function will only be called when the slider has focus. See
         * {@link Slider#handleFocus} and {@link Slider#handleBlur}.
         *
         * @param {KeyboardEvent} event
         *        the `keydown` event that caused this function to run.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){var spatialNavOptions=this.options_.playerOptions.spatialNavigation;var spatialNavEnabled=spatialNavOptions&&spatialNavOptions.enabled;var horizontalSeek=spatialNavOptions&&spatialNavOptions.horizontalSeek;if(spatialNavEnabled){if(horizontalSeek&&keycode.isEventKey(event,'Left')||!horizontalSeek&&keycode.isEventKey(event,'Down')){event.preventDefault();event.stopPropagation();this.stepBack();}else if(horizontalSeek&&keycode.isEventKey(event,'Right')||!horizontalSeek&&keycode.isEventKey(event,'Up')){event.preventDefault();event.stopPropagation();this.stepForward();}else{_get(_getPrototypeOf(Slider.prototype),"handleKeyDown",this).call(this,event);}// Left and Down Arrows
}else if(keycode.isEventKey(event,'Left')||keycode.isEventKey(event,'Down')){event.preventDefault();event.stopPropagation();this.stepBack();// Up and Right Arrows
}else if(keycode.isEventKey(event,'Right')||keycode.isEventKey(event,'Up')){event.preventDefault();event.stopPropagation();this.stepForward();}else{// Pass keydown handling up for unsupported keys
_get(_getPrototypeOf(Slider.prototype),"handleKeyDown",this).call(this,event);}}/**
         * Listener for click events on slider, used to prevent clicks
         *   from bubbling up to parent elements like button menus.
         *
         * @param {Object} event
         *        Event that caused this object to run
         */},{key:"handleClick",value:function handleClick(event){event.stopPropagation();event.preventDefault();}/**
         * Get/set if slider is horizontal for vertical
         *
         * @param {boolean} [bool]
         *        - true if slider is vertical,
         *        - false is horizontal
         *
         * @return {boolean}
         *         - true if slider is vertical, and getting
         *         - false if the slider is horizontal, and getting
         */},{key:"vertical",value:function vertical(bool){if(bool===undefined){return this.vertical_||false;}this.vertical_=!!bool;if(this.vertical_){this.addClass('vjs-slider-vertical');}else{this.addClass('vjs-slider-horizontal');}}}]);return Slider;}(Component$1);Component$1.registerComponent('Slider',Slider);/**
       * @file load-progress-bar.js
       */ // get the percent width of a time compared to the total end
var percentify=function percentify(time,end){return clamp(time/end*100,0,100).toFixed(2)+'%';};/**
       * Shows loading progress
       *
       * @extends Component
       */var LoadProgressBar=/*#__PURE__*/function(_Component$11){_inherits(LoadProgressBar,_Component$11);var _super42=_createSuper(LoadProgressBar);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function LoadProgressBar(player,options){var _this91;_classCallCheck(this,LoadProgressBar);_this91=_super42.call(this,player,options);_this91.partEls_=[];_this91.on(player,'progress',function(e){return _this91.update(e);});return _this91;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(LoadProgressBar,[{key:"createEl",value:function createEl(){var el=_get(_getPrototypeOf(LoadProgressBar.prototype),"createEl",this).call(this,'div',{className:'vjs-load-progress'});var wrapper=_createEl('span',{className:'vjs-control-text'});var loadedText=_createEl('span',{textContent:this.localize('Loaded')});var separator=document_1.createTextNode(': ');this.percentageEl_=_createEl('span',{className:'vjs-control-text-loaded-percentage',textContent:'0%'});el.appendChild(wrapper);wrapper.appendChild(loadedText);wrapper.appendChild(separator);wrapper.appendChild(this.percentageEl_);return el;}},{key:"dispose",value:function dispose(){this.partEls_=null;this.percentageEl_=null;_get(_getPrototypeOf(LoadProgressBar.prototype),"dispose",this).call(this);}/**
         * Update progress bar
         *
         * @param {Event} [event]
         *        The `progress` event that caused this function to run.
         *
         * @listens Player#progress
         */},{key:"update",value:function update(event){var _this92=this;this.requestNamedAnimationFrame('LoadProgressBar#update',function(){var liveTracker=_this92.player_.liveTracker;var buffered=_this92.player_.buffered();var duration=liveTracker&&liveTracker.isLive()?liveTracker.seekableEnd():_this92.player_.duration();var bufferedEnd=_this92.player_.bufferedEnd();var children=_this92.partEls_;var percent=percentify(bufferedEnd,duration);if(_this92.percent_!==percent){// update the width of the progress bar
_this92.el_.style.width=percent;// update the control-text
textContent(_this92.percentageEl_,percent);_this92.percent_=percent;}// add child elements to represent the individual buffered time ranges
for(var _i121=0;_i121<buffered.length;_i121++){var start=buffered.start(_i121);var _end4=buffered.end(_i121);var part=children[_i121];if(!part){part=_this92.el_.appendChild(_createEl());children[_i121]=part;}//  only update if changed
if(part.dataset.start===start&&part.dataset.end===_end4){continue;}part.dataset.start=start;part.dataset.end=_end4;// set the percent based on the width of the progress bar (bufferedEnd)
part.style.left=percentify(start,bufferedEnd);part.style.width=percentify(_end4-start,bufferedEnd);}// remove unused buffered range elements
for(var _i122=children.length;_i122>buffered.length;_i122--){_this92.el_.removeChild(children[_i122-1]);}children.length=buffered.length;});}}]);return LoadProgressBar;}(Component$1);Component$1.registerComponent('LoadProgressBar',LoadProgressBar);/**
       * @file time-tooltip.js
       */ /**
       * Time tooltips display a time above the progress bar.
       *
       * @extends Component
       */var TimeTooltip=/*#__PURE__*/function(_Component$12){_inherits(TimeTooltip,_Component$12);var _super43=_createSuper(TimeTooltip);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The {@link Player} that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function TimeTooltip(player,options){var _this93;_classCallCheck(this,TimeTooltip);_this93=_super43.call(this,player,options);_this93.update=throttle(bind_(_assertThisInitialized2(_this93),_this93.update),UPDATE_REFRESH_INTERVAL);return _this93;}/**
         * Create the time tooltip DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(TimeTooltip,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(TimeTooltip.prototype),"createEl",this).call(this,'div',{className:'vjs-time-tooltip'},{'aria-hidden':'true'});}/**
         * Updates the position of the time tooltip relative to the `SeekBar`.
         *
         * @param {Object} seekBarRect
         *        The `ClientRect` for the {@link SeekBar} element.
         *
         * @param {number} seekBarPoint
         *        A number from 0 to 1, representing a horizontal reference point
         *        from the left edge of the {@link SeekBar}
         */},{key:"update",value:function update(seekBarRect,seekBarPoint,content){var tooltipRect=findPosition(this.el_);var playerRect=getBoundingClientRect(this.player_.el());var seekBarPointPx=seekBarRect.width*seekBarPoint;// do nothing if either rect isn't available
// for example, if the player isn't in the DOM for testing
if(!playerRect||!tooltipRect){return;}// This is the space left of the `seekBarPoint` available within the bounds
// of the player. We calculate any gap between the left edge of the player
// and the left edge of the `SeekBar` and add the number of pixels in the
// `SeekBar` before hitting the `seekBarPoint`
var spaceLeftOfPoint=seekBarRect.left-playerRect.left+seekBarPointPx;// This is the space right of the `seekBarPoint` available within the bounds
// of the player. We calculate the number of pixels from the `seekBarPoint`
// to the right edge of the `SeekBar` and add to that any gap between the
// right edge of the `SeekBar` and the player.
var spaceRightOfPoint=seekBarRect.width-seekBarPointPx+(playerRect.right-seekBarRect.right);// spaceRightOfPoint is always NaN for mouse time display
// because the seekbarRect does not have a right property. This causes
// the mouse tool tip to be truncated when it's close to the right edge of the player.
// In such cases, we ignore the `playerRect.right - seekBarRect.right` value when calculating.
// For the sake of consistency, we ignore seekBarRect.left - playerRect.left for the left edge.
if(!spaceRightOfPoint){spaceRightOfPoint=seekBarRect.width-seekBarPointPx;spaceLeftOfPoint=seekBarPointPx;}// This is the number of pixels by which the tooltip will need to be pulled
// further to the right to center it over the `seekBarPoint`.
var pullTooltipBy=tooltipRect.width/2;// Adjust the `pullTooltipBy` distance to the left or right depending on
// the results of the space calculations above.
if(spaceLeftOfPoint<pullTooltipBy){pullTooltipBy+=pullTooltipBy-spaceLeftOfPoint;}else if(spaceRightOfPoint<pullTooltipBy){pullTooltipBy=spaceRightOfPoint;}// Due to the imprecision of decimal/ratio based calculations and varying
// rounding behaviors, there are cases where the spacing adjustment is off
// by a pixel or two. This adds insurance to these calculations.
if(pullTooltipBy<0){pullTooltipBy=0;}else if(pullTooltipBy>tooltipRect.width){pullTooltipBy=tooltipRect.width;}// prevent small width fluctuations within 0.4px from
// changing the value below.
// This really helps for live to prevent the play
// progress time tooltip from jittering
pullTooltipBy=Math.round(pullTooltipBy);this.el_.style.right="-".concat(pullTooltipBy,"px");this.write(content);}/**
         * Write the time to the tooltip DOM element.
         *
         * @param {string} content
         *        The formatted time for the tooltip.
         */},{key:"write",value:function write(content){textContent(this.el_,content);}/**
         * Updates the position of the time tooltip relative to the `SeekBar`.
         *
         * @param {Object} seekBarRect
         *        The `ClientRect` for the {@link SeekBar} element.
         *
         * @param {number} seekBarPoint
         *        A number from 0 to 1, representing a horizontal reference point
         *        from the left edge of the {@link SeekBar}
         *
         * @param {number} time
         *        The time to update the tooltip to, not used during live playback
         *
         * @param {Function} cb
         *        A function that will be called during the request animation frame
         *        for tooltips that need to do additional animations from the default
         */},{key:"updateTime",value:function updateTime(seekBarRect,seekBarPoint,time,cb){var _this94=this;this.requestNamedAnimationFrame('TimeTooltip#updateTime',function(){var content;var duration=_this94.player_.duration();if(_this94.player_.liveTracker&&_this94.player_.liveTracker.isLive()){var liveWindow=_this94.player_.liveTracker.liveWindow();var secondsBehind=liveWindow-seekBarPoint*liveWindow;content=(secondsBehind<1?'':'-')+formatTime(secondsBehind,liveWindow);}else{content=formatTime(time,duration);}_this94.update(seekBarRect,seekBarPoint,content);if(cb){cb();}});}}]);return TimeTooltip;}(Component$1);Component$1.registerComponent('TimeTooltip',TimeTooltip);/**
       * @file play-progress-bar.js
       */ /**
       * Used by {@link SeekBar} to display media playback progress as part of the
       * {@link ProgressControl}.
       *
       * @extends Component
       */var PlayProgressBar=/*#__PURE__*/function(_Component$13){_inherits(PlayProgressBar,_Component$13);var _super44=_createSuper(PlayProgressBar);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The {@link Player} that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function PlayProgressBar(player,options){var _this95;_classCallCheck(this,PlayProgressBar);_this95=_super44.call(this,player,options);_this95.setIcon('circle');_this95.update=throttle(bind_(_assertThisInitialized2(_this95),_this95.update),UPDATE_REFRESH_INTERVAL);return _this95;}/**
         * Create the the DOM element for this class.
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(PlayProgressBar,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(PlayProgressBar.prototype),"createEl",this).call(this,'div',{className:'vjs-play-progress vjs-slider-bar'},{'aria-hidden':'true'});}/**
         * Enqueues updates to its own DOM as well as the DOM of its
         * {@link TimeTooltip} child.
         *
         * @param {Object} seekBarRect
         *        The `ClientRect` for the {@link SeekBar} element.
         *
         * @param {number} seekBarPoint
         *        A number from 0 to 1, representing a horizontal reference point
         *        from the left edge of the {@link SeekBar}
         */},{key:"update",value:function update(seekBarRect,seekBarPoint){var timeTooltip=this.getChild('timeTooltip');if(!timeTooltip){return;}var time=this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();timeTooltip.updateTime(seekBarRect,seekBarPoint,time);}}]);return PlayProgressBar;}(Component$1);/**
       * Default options for {@link PlayProgressBar}.
       *
       * @type {Object}
       * @private
       */PlayProgressBar.prototype.options_={children:[]};// Time tooltips should not be added to a player on mobile devices
if(!IS_IOS&&!IS_ANDROID){PlayProgressBar.prototype.options_.children.push('timeTooltip');}Component$1.registerComponent('PlayProgressBar',PlayProgressBar);/**
       * @file mouse-time-display.js
       */ /**
       * The {@link MouseTimeDisplay} component tracks mouse movement over the
       * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}
       * indicating the time which is represented by a given point in the
       * {@link ProgressControl}.
       *
       * @extends Component
       */var MouseTimeDisplay=/*#__PURE__*/function(_Component$14){_inherits(MouseTimeDisplay,_Component$14);var _super45=_createSuper(MouseTimeDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The {@link Player} that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function MouseTimeDisplay(player,options){var _this96;_classCallCheck(this,MouseTimeDisplay);_this96=_super45.call(this,player,options);_this96.update=throttle(bind_(_assertThisInitialized2(_this96),_this96.update),UPDATE_REFRESH_INTERVAL);return _this96;}/**
         * Create the DOM element for this class.
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(MouseTimeDisplay,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(MouseTimeDisplay.prototype),"createEl",this).call(this,'div',{className:'vjs-mouse-display'});}/**
         * Enqueues updates to its own DOM as well as the DOM of its
         * {@link TimeTooltip} child.
         *
         * @param {Object} seekBarRect
         *        The `ClientRect` for the {@link SeekBar} element.
         *
         * @param {number} seekBarPoint
         *        A number from 0 to 1, representing a horizontal reference point
         *        from the left edge of the {@link SeekBar}
         */},{key:"update",value:function update(seekBarRect,seekBarPoint){var _this97=this;var time=seekBarPoint*this.player_.duration();this.getChild('timeTooltip').updateTime(seekBarRect,seekBarPoint,time,function(){_this97.el_.style.left="".concat(seekBarRect.width*seekBarPoint,"px");});}}]);return MouseTimeDisplay;}(Component$1);/**
       * Default options for `MouseTimeDisplay`
       *
       * @type {Object}
       * @private
       */MouseTimeDisplay.prototype.options_={children:['timeTooltip']};Component$1.registerComponent('MouseTimeDisplay',MouseTimeDisplay);/**
       * @file seek-bar.js
       */ // The number of seconds the `step*` functions move the timeline.
var STEP_SECONDS=5;// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.
var PAGE_KEY_MULTIPLIER=12;/**
       * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}
       * as its `bar`.
       *
       * @extends Slider
       */var SeekBar=/*#__PURE__*/function(_Slider){_inherits(SeekBar,_Slider);var _super46=_createSuper(SeekBar);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function SeekBar(player,options){var _this98;_classCallCheck(this,SeekBar);_this98=_super46.call(this,player,options);_this98.setEventHandlers_();return _this98;}/**
         * Sets the event handlers
         *
         * @private
         */_createClass(SeekBar,[{key:"setEventHandlers_",value:function setEventHandlers_(){var _this99=this;this.update_=bind_(this,this.update);this.update=throttle(this.update_,UPDATE_REFRESH_INTERVAL);this.on(this.player_,['ended','durationchange','timeupdate'],this.update);if(this.player_.liveTracker){this.on(this.player_.liveTracker,'liveedgechange',this.update);}// when playing, let's ensure we smoothly update the play progress bar
// via an interval
this.updateInterval=null;this.enableIntervalHandler_=function(e){return _this99.enableInterval_(e);};this.disableIntervalHandler_=function(e){return _this99.disableInterval_(e);};this.on(this.player_,['playing'],this.enableIntervalHandler_);this.on(this.player_,['ended','pause','waiting'],this.disableIntervalHandler_);// we don't need to update the play progress if the document is hidden,
// also, this causes the CPU to spike and eventually crash the page on IE11.
if('hidden'in document_1&&'visibilityState'in document_1){this.on(document_1,'visibilitychange',this.toggleVisibility_);}}},{key:"toggleVisibility_",value:function toggleVisibility_(e){if(document_1.visibilityState==='hidden'){this.cancelNamedAnimationFrame('SeekBar#update');this.cancelNamedAnimationFrame('Slider#update');this.disableInterval_(e);}else{if(!this.player_.ended()&&!this.player_.paused()){this.enableInterval_();}// we just switched back to the page and someone may be looking, so, update ASAP
this.update();}}},{key:"enableInterval_",value:function enableInterval_(){if(this.updateInterval){return;}this.updateInterval=this.setInterval(this.update,UPDATE_REFRESH_INTERVAL);}},{key:"disableInterval_",value:function disableInterval_(e){if(this.player_.liveTracker&&this.player_.liveTracker.isLive()&&e&&e.type!=='ended'){return;}if(!this.updateInterval){return;}this.clearInterval(this.updateInterval);this.updateInterval=null;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(SeekBar.prototype),"createEl",this).call(this,'div',{className:'vjs-progress-holder'},{'aria-label':this.localize('Progress Bar')});}/**
         * This function updates the play progress bar and accessibility
         * attributes to whatever is passed in.
         *
         * @param {Event} [event]
         *        The `timeupdate` or `ended` event that caused this to run.
         *
         * @listens Player#timeupdate
         *
         * @return {number}
         *          The current percent at a number from 0-1
         */},{key:"update",value:function update(event){var _this100=this;// ignore updates while the tab is hidden
if(document_1.visibilityState==='hidden'){return;}var percent=_get(_getPrototypeOf(SeekBar.prototype),"update",this).call(this);this.requestNamedAnimationFrame('SeekBar#update',function(){var currentTime=_this100.player_.ended()?_this100.player_.duration():_this100.getCurrentTime_();var liveTracker=_this100.player_.liveTracker;var duration=_this100.player_.duration();if(liveTracker&&liveTracker.isLive()){duration=_this100.player_.liveTracker.liveCurrentTime();}if(_this100.percent_!==percent){// machine readable value of progress bar (percentage complete)
_this100.el_.setAttribute('aria-valuenow',(percent*100).toFixed(2));_this100.percent_=percent;}if(_this100.currentTime_!==currentTime||_this100.duration_!==duration){// human readable value of progress bar (time complete)
_this100.el_.setAttribute('aria-valuetext',_this100.localize('progress bar timing: currentTime={1} duration={2}',[formatTime(currentTime,duration),formatTime(duration,duration)],'{1} of {2}'));_this100.currentTime_=currentTime;_this100.duration_=duration;}// update the progress bar time tooltip with the current time
if(_this100.bar){_this100.bar.update(getBoundingClientRect(_this100.el()),_this100.getProgress());}});return percent;}/**
         * Prevent liveThreshold from causing seeks to seem like they
         * are not happening from a user perspective.
         *
         * @param {number} ct
         *        current time to seek to
         */},{key:"userSeek_",value:function userSeek_(ct){if(this.player_.liveTracker&&this.player_.liveTracker.isLive()){this.player_.liveTracker.nextSeekedFromUser();}this.player_.currentTime(ct);}/**
         * Get the value of current time but allows for smooth scrubbing,
         * when player can't keep up.
         *
         * @return {number}
         *         The current time value to display
         *
         * @private
         */},{key:"getCurrentTime_",value:function getCurrentTime_(){return this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();}/**
         * Get the percentage of media played so far.
         *
         * @return {number}
         *         The percentage of media played so far (0 to 1).
         */},{key:"getPercent",value:function getPercent(){var currentTime=this.getCurrentTime_();var percent;var liveTracker=this.player_.liveTracker;if(liveTracker&&liveTracker.isLive()){percent=(currentTime-liveTracker.seekableStart())/liveTracker.liveWindow();// prevent the percent from changing at the live edge
if(liveTracker.atLiveEdge()){percent=1;}}else{percent=currentTime/this.player_.duration();}return percent;}/**
         * Handle mouse down on seek bar
         *
         * @param {MouseEvent} event
         *        The `mousedown` event that caused this to run.
         *
         * @listens mousedown
         */},{key:"handleMouseDown",value:function handleMouseDown(event){if(!isSingleLeftClick(event)){return;}// Stop event propagation to prevent double fire in progress-control.js
event.stopPropagation();this.videoWasPlaying=!this.player_.paused();this.player_.pause();_get(_getPrototypeOf(SeekBar.prototype),"handleMouseDown",this).call(this,event);}/**
         * Handle mouse move on seek bar
         *
         * @param {MouseEvent} event
         *        The `mousemove` event that caused this to run.
         * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false
         *
         * @listens mousemove
         */},{key:"handleMouseMove",value:function handleMouseMove(event){var mouseDown=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!isSingleLeftClick(event)||isNaN(this.player_.duration())){return;}if(!mouseDown&&!this.player_.scrubbing()){this.player_.scrubbing(true);}var newTime;var distance=this.calculateDistance(event);var liveTracker=this.player_.liveTracker;if(!liveTracker||!liveTracker.isLive()){newTime=distance*this.player_.duration();// Don't let video end while scrubbing.
if(newTime===this.player_.duration()){newTime=newTime-0.1;}}else{if(distance>=0.99){liveTracker.seekToLiveEdge();return;}var seekableStart=liveTracker.seekableStart();var seekableEnd=liveTracker.liveCurrentTime();newTime=seekableStart+distance*liveTracker.liveWindow();// Don't let video end while scrubbing.
if(newTime>=seekableEnd){newTime=seekableEnd;}// Compensate for precision differences so that currentTime is not less
// than seekable start
if(newTime<=seekableStart){newTime=seekableStart+0.1;}// On android seekableEnd can be Infinity sometimes,
// this will cause newTime to be Infinity, which is
// not a valid currentTime.
if(newTime===Infinity){return;}}// Set new time (tell player to seek to new time)
this.userSeek_(newTime);if(this.player_.options_.enableSmoothSeeking){this.update();}}},{key:"enable",value:function enable(){_get(_getPrototypeOf(SeekBar.prototype),"enable",this).call(this);var mouseTimeDisplay=this.getChild('mouseTimeDisplay');if(!mouseTimeDisplay){return;}mouseTimeDisplay.show();}},{key:"disable",value:function disable(){_get(_getPrototypeOf(SeekBar.prototype),"disable",this).call(this);var mouseTimeDisplay=this.getChild('mouseTimeDisplay');if(!mouseTimeDisplay){return;}mouseTimeDisplay.hide();}/**
         * Handle mouse up on seek bar
         *
         * @param {MouseEvent} event
         *        The `mouseup` event that caused this to run.
         *
         * @listens mouseup
         */},{key:"handleMouseUp",value:function handleMouseUp(event){_get(_getPrototypeOf(SeekBar.prototype),"handleMouseUp",this).call(this,event);// Stop event propagation to prevent double fire in progress-control.js
if(event){event.stopPropagation();}this.player_.scrubbing(false);/**
           * Trigger timeupdate because we're done seeking and the time has changed.
           * This is particularly useful for if the player is paused to time the time displays.
           *
           * @event Tech#timeupdate
           * @type {Event}
           */this.player_.trigger({type:'timeupdate',target:this,manuallyTriggered:true});if(this.videoWasPlaying){silencePromise(this.player_.play());}else{// We're done seeking and the time has changed.
// If the player is paused, make sure we display the correct time on the seek bar.
this.update_();}}/**
         * Move more quickly fast forward for keyboard-only users
         */},{key:"stepForward",value:function stepForward(){this.userSeek_(this.player_.currentTime()+STEP_SECONDS);}/**
         * Move more quickly rewind for keyboard-only users
         */},{key:"stepBack",value:function stepBack(){this.userSeek_(this.player_.currentTime()-STEP_SECONDS);}/**
         * Toggles the playback state of the player
         * This gets called when enter or space is used on the seekbar
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called
         *
         */},{key:"handleAction",value:function handleAction(event){if(this.player_.paused()){this.player_.play();}else{this.player_.pause();}}/**
         * Called when this SeekBar has focus and a key gets pressed down.
         * Supports the following keys:
         *
         *   Space or Enter key fire a click event
         *   Home key moves to start of the timeline
         *   End key moves to end of the timeline
         *   Digit "0" through "9" keys move to 0%, 10% ... 80%, 90% of the timeline
         *   PageDown key moves back a larger step than ArrowDown
         *   PageUp key moves forward a large step
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){var liveTracker=this.player_.liveTracker;if(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.preventDefault();event.stopPropagation();this.handleAction(event);}else if(keycode.isEventKey(event,'Home')){event.preventDefault();event.stopPropagation();this.userSeek_(0);}else if(keycode.isEventKey(event,'End')){event.preventDefault();event.stopPropagation();if(liveTracker&&liveTracker.isLive()){this.userSeek_(liveTracker.liveCurrentTime());}else{this.userSeek_(this.player_.duration());}}else if(/^[0-9]$/.test(keycode(event))){event.preventDefault();event.stopPropagation();var gotoFraction=(keycode.codes[keycode(event)]-keycode.codes['0'])*10.0/100.0;if(liveTracker&&liveTracker.isLive()){this.userSeek_(liveTracker.seekableStart()+liveTracker.liveWindow()*gotoFraction);}else{this.userSeek_(this.player_.duration()*gotoFraction);}}else if(keycode.isEventKey(event,'PgDn')){event.preventDefault();event.stopPropagation();this.userSeek_(this.player_.currentTime()-STEP_SECONDS*PAGE_KEY_MULTIPLIER);}else if(keycode.isEventKey(event,'PgUp')){event.preventDefault();event.stopPropagation();this.userSeek_(this.player_.currentTime()+STEP_SECONDS*PAGE_KEY_MULTIPLIER);}else{// Pass keydown handling up for unsupported keys
_get(_getPrototypeOf(SeekBar.prototype),"handleKeyDown",this).call(this,event);}}},{key:"dispose",value:function dispose(){this.disableInterval_();this.off(this.player_,['ended','durationchange','timeupdate'],this.update);if(this.player_.liveTracker){this.off(this.player_.liveTracker,'liveedgechange',this.update);}this.off(this.player_,['playing'],this.enableIntervalHandler_);this.off(this.player_,['ended','pause','waiting'],this.disableIntervalHandler_);// we don't need to update the play progress if the document is hidden,
// also, this causes the CPU to spike and eventually crash the page on IE11.
if('hidden'in document_1&&'visibilityState'in document_1){this.off(document_1,'visibilitychange',this.toggleVisibility_);}_get(_getPrototypeOf(SeekBar.prototype),"dispose",this).call(this);}}]);return SeekBar;}(Slider);/**
       * Default options for the `SeekBar`
       *
       * @type {Object}
       * @private
       */SeekBar.prototype.options_={children:['loadProgressBar','playProgressBar'],barName:'playProgressBar'};// MouseTimeDisplay tooltips should not be added to a player on mobile devices
if(!IS_IOS&&!IS_ANDROID){SeekBar.prototype.options_.children.splice(1,0,'mouseTimeDisplay');}Component$1.registerComponent('SeekBar',SeekBar);/**
       * @file progress-control.js
       */ /**
       * The Progress Control component contains the seek bar, load progress,
       * and play progress.
       *
       * @extends Component
       */var ProgressControl=/*#__PURE__*/function(_Component$15){_inherits(ProgressControl,_Component$15);var _super47=_createSuper(ProgressControl);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function ProgressControl(player,options){var _this101;_classCallCheck(this,ProgressControl);_this101=_super47.call(this,player,options);_this101.handleMouseMove=throttle(bind_(_assertThisInitialized2(_this101),_this101.handleMouseMove),UPDATE_REFRESH_INTERVAL);_this101.throttledHandleMouseSeek=throttle(bind_(_assertThisInitialized2(_this101),_this101.handleMouseSeek),UPDATE_REFRESH_INTERVAL);_this101.handleMouseUpHandler_=function(e){return _this101.handleMouseUp(e);};_this101.handleMouseDownHandler_=function(e){return _this101.handleMouseDown(e);};_this101.enable();return _this101;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(ProgressControl,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(ProgressControl.prototype),"createEl",this).call(this,'div',{className:'vjs-progress-control vjs-control'});}/**
         * When the mouse moves over the `ProgressControl`, the pointer position
         * gets passed down to the `MouseTimeDisplay` component.
         *
         * @param {Event} event
         *        The `mousemove` event that caused this function to run.
         *
         * @listen mousemove
         */},{key:"handleMouseMove",value:function handleMouseMove(event){var seekBar=this.getChild('seekBar');if(!seekBar){return;}var playProgressBar=seekBar.getChild('playProgressBar');var mouseTimeDisplay=seekBar.getChild('mouseTimeDisplay');if(!playProgressBar&&!mouseTimeDisplay){return;}var seekBarEl=seekBar.el();var seekBarRect=findPosition(seekBarEl);var seekBarPoint=getPointerPosition(seekBarEl,event).x;// The default skin has a gap on either side of the `SeekBar`. This means
// that it's possible to trigger this behavior outside the boundaries of
// the `SeekBar`. This ensures we stay within it at all times.
seekBarPoint=clamp(seekBarPoint,0,1);if(mouseTimeDisplay){mouseTimeDisplay.update(seekBarRect,seekBarPoint);}if(playProgressBar){playProgressBar.update(seekBarRect,seekBar.getProgress());}}/**
         * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.
         *
         * @method ProgressControl#throttledHandleMouseSeek
         * @param {Event} event
         *        The `mousemove` event that caused this function to run.
         *
         * @listen mousemove
         * @listen touchmove
         */ /**
         * Handle `mousemove` or `touchmove` events on the `ProgressControl`.
         *
         * @param {Event} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousemove
         * @listens touchmove
         */},{key:"handleMouseSeek",value:function handleMouseSeek(event){var seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseMove(event);}}/**
         * Are controls are currently enabled for this progress control.
         *
         * @return {boolean}
         *         true if controls are enabled, false otherwise
         */},{key:"enabled",value:function enabled(){return this.enabled_;}/**
         * Disable all controls on the progress control and its children
         */},{key:"disable",value:function disable(){this.children().forEach(function(child){return child.disable&&child.disable();});if(!this.enabled()){return;}this.off(['mousedown','touchstart'],this.handleMouseDownHandler_);this.off(this.el_,'mousemove',this.handleMouseMove);this.removeListenersAddedOnMousedownAndTouchstart();this.addClass('disabled');this.enabled_=false;// Restore normal playback state if controls are disabled while scrubbing
if(this.player_.scrubbing()){var seekBar=this.getChild('seekBar');this.player_.scrubbing(false);if(seekBar.videoWasPlaying){silencePromise(this.player_.play());}}}/**
         * Enable all controls on the progress control and its children
         */},{key:"enable",value:function enable(){this.children().forEach(function(child){return child.enable&&child.enable();});if(this.enabled()){return;}this.on(['mousedown','touchstart'],this.handleMouseDownHandler_);this.on(this.el_,'mousemove',this.handleMouseMove);this.removeClass('disabled');this.enabled_=true;}/**
         * Cleanup listeners after the user finishes interacting with the progress controls
         */},{key:"removeListenersAddedOnMousedownAndTouchstart",value:function removeListenersAddedOnMousedownAndTouchstart(){var doc=this.el_.ownerDocument;this.off(doc,'mousemove',this.throttledHandleMouseSeek);this.off(doc,'touchmove',this.throttledHandleMouseSeek);this.off(doc,'mouseup',this.handleMouseUpHandler_);this.off(doc,'touchend',this.handleMouseUpHandler_);}/**
         * Handle `mousedown` or `touchstart` events on the `ProgressControl`.
         *
         * @param {Event} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousedown
         * @listens touchstart
         */},{key:"handleMouseDown",value:function handleMouseDown(event){var doc=this.el_.ownerDocument;var seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseDown(event);}this.on(doc,'mousemove',this.throttledHandleMouseSeek);this.on(doc,'touchmove',this.throttledHandleMouseSeek);this.on(doc,'mouseup',this.handleMouseUpHandler_);this.on(doc,'touchend',this.handleMouseUpHandler_);}/**
         * Handle `mouseup` or `touchend` events on the `ProgressControl`.
         *
         * @param {Event} event
         *        `mouseup` or `touchend` event that triggered this function.
         *
         * @listens touchend
         * @listens mouseup
         */},{key:"handleMouseUp",value:function handleMouseUp(event){var seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseUp(event);}this.removeListenersAddedOnMousedownAndTouchstart();}}]);return ProgressControl;}(Component$1);/**
       * Default options for `ProgressControl`
       *
       * @type {Object}
       * @private
       */ProgressControl.prototype.options_={children:['seekBar']};Component$1.registerComponent('ProgressControl',ProgressControl);/**
       * @file picture-in-picture-toggle.js
       */ /**
       * Toggle Picture-in-Picture mode
       *
       * @extends Button
       */var PictureInPictureToggle=/*#__PURE__*/function(_Button5){_inherits(PictureInPictureToggle,_Button5);var _super48=_createSuper(PictureInPictureToggle);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @listens Player#enterpictureinpicture
         * @listens Player#leavepictureinpicture
         */function PictureInPictureToggle(player,options){var _this102;_classCallCheck(this,PictureInPictureToggle);_this102=_super48.call(this,player,options);_this102.setIcon('picture-in-picture-enter');_this102.on(player,['enterpictureinpicture','leavepictureinpicture'],function(e){return _this102.handlePictureInPictureChange(e);});_this102.on(player,['disablepictureinpicturechanged','loadedmetadata'],function(e){return _this102.handlePictureInPictureEnabledChange(e);});_this102.on(player,['loadedmetadata','audioonlymodechange','audiopostermodechange'],function(){return _this102.handlePictureInPictureAudioModeChange();});// TODO: Deactivate button on player emptied event.
_this102.disable();return _this102;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(PictureInPictureToggle,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-picture-in-picture-control vjs-hidden ".concat(_get(_getPrototypeOf(PictureInPictureToggle.prototype),"buildCSSClass",this).call(this));}/**
         * Displays or hides the button depending on the audio mode detection.
         * Exits picture-in-picture if it is enabled when switching to audio mode.
         */},{key:"handlePictureInPictureAudioModeChange",value:function handlePictureInPictureAudioModeChange(){// This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time
var isSourceAudio=this.player_.currentType().substring(0,5)==='audio';var isAudioMode=isSourceAudio||this.player_.audioPosterMode()||this.player_.audioOnlyMode();if(!isAudioMode){this.show();return;}if(this.player_.isInPictureInPicture()){this.player_.exitPictureInPicture();}this.hide();}/**
         * Enables or disables button based on availability of a Picture-In-Picture mode.
         *
         * Enabled if
         * - `player.options().enableDocumentPictureInPicture` is true and
         *   window.documentPictureInPicture is available; or
         * - `player.disablePictureInPicture()` is false and
         *   element.requestPictureInPicture is available
         */},{key:"handlePictureInPictureEnabledChange",value:function handlePictureInPictureEnabledChange(){if(document_1.pictureInPictureEnabled&&this.player_.disablePictureInPicture()===false||this.player_.options_.enableDocumentPictureInPicture&&'documentPictureInPicture'in window_1){this.enable();}else{this.disable();}}/**
         * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.
         *
         * @param {Event} [event]
         *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be
         *        called.
         *
         * @listens Player#enterpictureinpicture
         * @listens Player#leavepictureinpicture
         */},{key:"handlePictureInPictureChange",value:function handlePictureInPictureChange(event){if(this.player_.isInPictureInPicture()){this.setIcon('picture-in-picture-exit');this.controlText('Exit Picture-in-Picture');}else{this.setIcon('picture-in-picture-enter');this.controlText('Picture-in-Picture');}this.handlePictureInPictureEnabledChange();}/**
         * This gets called when an `PictureInPictureToggle` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){if(!this.player_.isInPictureInPicture()){this.player_.requestPictureInPicture();}else{this.player_.exitPictureInPicture();}}/**
         * Show the `Component`s element if it is hidden by removing the
         * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.
         */},{key:"show",value:function show(){// Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.
if(typeof document_1.exitPictureInPicture!=='function'){return;}_get(_getPrototypeOf(PictureInPictureToggle.prototype),"show",this).call(this);}}]);return PictureInPictureToggle;}(Button);/**
       * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */PictureInPictureToggle.prototype.controlText_='Picture-in-Picture';Component$1.registerComponent('PictureInPictureToggle',PictureInPictureToggle);/**
       * @file fullscreen-toggle.js
       */ /**
       * Toggle fullscreen video
       *
       * @extends Button
       */var FullscreenToggle=/*#__PURE__*/function(_Button6){_inherits(FullscreenToggle,_Button6);var _super49=_createSuper(FullscreenToggle);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function FullscreenToggle(player,options){var _this103;_classCallCheck(this,FullscreenToggle);_this103=_super49.call(this,player,options);_this103.setIcon('fullscreen-enter');_this103.on(player,'fullscreenchange',function(e){return _this103.handleFullscreenChange(e);});if(document_1[player.fsApi_.fullscreenEnabled]===false){_this103.disable();}return _this103;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(FullscreenToggle,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-fullscreen-control ".concat(_get(_getPrototypeOf(FullscreenToggle.prototype),"buildCSSClass",this).call(this));}/**
         * Handles fullscreenchange on the player and change control text accordingly.
         *
         * @param {Event} [event]
         *        The {@link Player#fullscreenchange} event that caused this function to be
         *        called.
         *
         * @listens Player#fullscreenchange
         */},{key:"handleFullscreenChange",value:function handleFullscreenChange(event){if(this.player_.isFullscreen()){this.controlText('Exit Fullscreen');this.setIcon('fullscreen-exit');}else{this.controlText('Fullscreen');this.setIcon('fullscreen-enter');}}/**
         * This gets called when an `FullscreenToggle` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){if(!this.player_.isFullscreen()){this.player_.requestFullscreen();}else{this.player_.exitFullscreen();}}}]);return FullscreenToggle;}(Button);/**
       * The text that should display over the `FullscreenToggle`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */FullscreenToggle.prototype.controlText_='Fullscreen';Component$1.registerComponent('FullscreenToggle',FullscreenToggle);/**
       * Check if volume control is supported and if it isn't hide the
       * `Component` that was passed  using the `vjs-hidden` class.
       *
       * @param { import('../../component').default } self
       *        The component that should be hidden if volume is unsupported
       *
       * @param { import('../../player').default } player
       *        A reference to the player
       *
       * @private
       */var checkVolumeSupport=function checkVolumeSupport(self,player){// hide volume controls when they're not supported by the current tech
if(player.tech_&&!player.tech_.featuresVolumeControl){self.addClass('vjs-hidden');}self.on(player,'loadstart',function(){if(!player.tech_.featuresVolumeControl){self.addClass('vjs-hidden');}else{self.removeClass('vjs-hidden');}});};/**
       * @file volume-level.js
       */ /**
       * Shows volume level
       *
       * @extends Component
       */var VolumeLevel=/*#__PURE__*/function(_Component$16){_inherits(VolumeLevel,_Component$16);var _super50=_createSuper(VolumeLevel);function VolumeLevel(){_classCallCheck(this,VolumeLevel);return _super50.apply(this,arguments);}_createClass(VolumeLevel,[{key:"createEl",value:/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */function createEl(){var el=_get(_getPrototypeOf(VolumeLevel.prototype),"createEl",this).call(this,'div',{className:'vjs-volume-level'});this.setIcon('circle',el);el.appendChild(_get(_getPrototypeOf(VolumeLevel.prototype),"createEl",this).call(this,'span',{className:'vjs-control-text'}));return el;}}]);return VolumeLevel;}(Component$1);Component$1.registerComponent('VolumeLevel',VolumeLevel);/**
       * @file volume-level-tooltip.js
       */ /**
       * Volume level tooltips display a volume above or side by side the volume bar.
       *
       * @extends Component
       */var VolumeLevelTooltip=/*#__PURE__*/function(_Component$17){_inherits(VolumeLevelTooltip,_Component$17);var _super51=_createSuper(VolumeLevelTooltip);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The {@link Player} that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function VolumeLevelTooltip(player,options){var _this104;_classCallCheck(this,VolumeLevelTooltip);_this104=_super51.call(this,player,options);_this104.update=throttle(bind_(_assertThisInitialized2(_this104),_this104.update),UPDATE_REFRESH_INTERVAL);return _this104;}/**
         * Create the volume tooltip DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(VolumeLevelTooltip,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(VolumeLevelTooltip.prototype),"createEl",this).call(this,'div',{className:'vjs-volume-tooltip'},{'aria-hidden':'true'});}/**
         * Updates the position of the tooltip relative to the `VolumeBar` and
         * its content text.
         *
         * @param {Object} rangeBarRect
         *        The `ClientRect` for the {@link VolumeBar} element.
         *
         * @param {number} rangeBarPoint
         *        A number from 0 to 1, representing a horizontal/vertical reference point
         *        from the left edge of the {@link VolumeBar}
         *
         * @param {boolean} vertical
         *        Referees to the Volume control position
         *        in the control bar{@link VolumeControl}
         *
         */},{key:"update",value:function update(rangeBarRect,rangeBarPoint,vertical,content){if(!vertical){var tooltipRect=getBoundingClientRect(this.el_);var playerRect=getBoundingClientRect(this.player_.el());var volumeBarPointPx=rangeBarRect.width*rangeBarPoint;if(!playerRect||!tooltipRect){return;}var spaceLeftOfPoint=rangeBarRect.left-playerRect.left+volumeBarPointPx;var spaceRightOfPoint=rangeBarRect.width-volumeBarPointPx+(playerRect.right-rangeBarRect.right);var pullTooltipBy=tooltipRect.width/2;if(spaceLeftOfPoint<pullTooltipBy){pullTooltipBy+=pullTooltipBy-spaceLeftOfPoint;}else if(spaceRightOfPoint<pullTooltipBy){pullTooltipBy=spaceRightOfPoint;}if(pullTooltipBy<0){pullTooltipBy=0;}else if(pullTooltipBy>tooltipRect.width){pullTooltipBy=tooltipRect.width;}this.el_.style.right="-".concat(pullTooltipBy,"px");}this.write("".concat(content,"%"));}/**
         * Write the volume to the tooltip DOM element.
         *
         * @param {string} content
         *        The formatted volume for the tooltip.
         */},{key:"write",value:function write(content){textContent(this.el_,content);}/**
         * Updates the position of the volume tooltip relative to the `VolumeBar`.
         *
         * @param {Object} rangeBarRect
         *        The `ClientRect` for the {@link VolumeBar} element.
         *
         * @param {number} rangeBarPoint
         *        A number from 0 to 1, representing a horizontal/vertical reference point
         *        from the left edge of the {@link VolumeBar}
         *
         * @param {boolean} vertical
         *        Referees to the Volume control position
         *        in the control bar{@link VolumeControl}
         *
         * @param {number} volume
         *        The volume level to update the tooltip to
         *
         * @param {Function} cb
         *        A function that will be called during the request animation frame
         *        for tooltips that need to do additional animations from the default
         */},{key:"updateVolume",value:function updateVolume(rangeBarRect,rangeBarPoint,vertical,volume,cb){var _this105=this;this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume',function(){_this105.update(rangeBarRect,rangeBarPoint,vertical,volume.toFixed(0));if(cb){cb();}});}}]);return VolumeLevelTooltip;}(Component$1);Component$1.registerComponent('VolumeLevelTooltip',VolumeLevelTooltip);/**
       * @file mouse-volume-level-display.js
       */ /**
       * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the
       * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}
       * indicating the volume level which is represented by a given point in the
       * {@link VolumeBar}.
       *
       * @extends Component
       */var MouseVolumeLevelDisplay=/*#__PURE__*/function(_Component$18){_inherits(MouseVolumeLevelDisplay,_Component$18);var _super52=_createSuper(MouseVolumeLevelDisplay);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The {@link Player} that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function MouseVolumeLevelDisplay(player,options){var _this106;_classCallCheck(this,MouseVolumeLevelDisplay);_this106=_super52.call(this,player,options);_this106.update=throttle(bind_(_assertThisInitialized2(_this106),_this106.update),UPDATE_REFRESH_INTERVAL);return _this106;}/**
         * Create the DOM element for this class.
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(MouseVolumeLevelDisplay,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(MouseVolumeLevelDisplay.prototype),"createEl",this).call(this,'div',{className:'vjs-mouse-display'});}/**
         * Enquires updates to its own DOM as well as the DOM of its
         * {@link VolumeLevelTooltip} child.
         *
         * @param {Object} rangeBarRect
         *        The `ClientRect` for the {@link VolumeBar} element.
         *
         * @param {number} rangeBarPoint
         *        A number from 0 to 1, representing a horizontal/vertical reference point
         *        from the left edge of the {@link VolumeBar}
         *
         * @param {boolean} vertical
         *        Referees to the Volume control position
         *        in the control bar{@link VolumeControl}
         *
         */},{key:"update",value:function update(rangeBarRect,rangeBarPoint,vertical){var _this107=this;var volume=100*rangeBarPoint;this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect,rangeBarPoint,vertical,volume,function(){if(vertical){_this107.el_.style.bottom="".concat(rangeBarRect.height*rangeBarPoint,"px");}else{_this107.el_.style.left="".concat(rangeBarRect.width*rangeBarPoint,"px");}});}}]);return MouseVolumeLevelDisplay;}(Component$1);/**
       * Default options for `MouseVolumeLevelDisplay`
       *
       * @type {Object}
       * @private
       */MouseVolumeLevelDisplay.prototype.options_={children:['volumeLevelTooltip']};Component$1.registerComponent('MouseVolumeLevelDisplay',MouseVolumeLevelDisplay);/**
       * @file volume-bar.js
       */ /**
       * The bar that contains the volume level and can be clicked on to adjust the level
       *
       * @extends Slider
       */var VolumeBar=/*#__PURE__*/function(_Slider2){_inherits(VolumeBar,_Slider2);var _super53=_createSuper(VolumeBar);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function VolumeBar(player,options){var _this108;_classCallCheck(this,VolumeBar);_this108=_super53.call(this,player,options);_this108.on('slideractive',function(e){return _this108.updateLastVolume_(e);});_this108.on(player,'volumechange',function(e){return _this108.updateARIAAttributes(e);});player.ready(function(){return _this108.updateARIAAttributes();});return _this108;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(VolumeBar,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(VolumeBar.prototype),"createEl",this).call(this,'div',{className:'vjs-volume-bar vjs-slider-bar'},{'aria-label':this.localize('Volume Level'),'aria-live':'polite'});}/**
         * Handle mouse down on volume bar
         *
         * @param {Event} event
         *        The `mousedown` event that caused this to run.
         *
         * @listens mousedown
         */},{key:"handleMouseDown",value:function handleMouseDown(event){if(!isSingleLeftClick(event)){return;}_get(_getPrototypeOf(VolumeBar.prototype),"handleMouseDown",this).call(this,event);}/**
         * Handle movement events on the {@link VolumeMenuButton}.
         *
         * @param {Event} event
         *        The event that caused this function to run.
         *
         * @listens mousemove
         */},{key:"handleMouseMove",value:function handleMouseMove(event){var mouseVolumeLevelDisplay=this.getChild('mouseVolumeLevelDisplay');if(mouseVolumeLevelDisplay){var volumeBarEl=this.el();var volumeBarRect=getBoundingClientRect(volumeBarEl);var vertical=this.vertical();var volumeBarPoint=getPointerPosition(volumeBarEl,event);volumeBarPoint=vertical?volumeBarPoint.y:volumeBarPoint.x;// The default skin has a gap on either side of the `VolumeBar`. This means
// that it's possible to trigger this behavior outside the boundaries of
// the `VolumeBar`. This ensures we stay within it at all times.
volumeBarPoint=clamp(volumeBarPoint,0,1);mouseVolumeLevelDisplay.update(volumeBarRect,volumeBarPoint,vertical);}if(!isSingleLeftClick(event)){return;}this.checkMuted();this.player_.volume(this.calculateDistance(event));}/**
         * If the player is muted unmute it.
         */},{key:"checkMuted",value:function checkMuted(){if(this.player_.muted()){this.player_.muted(false);}}/**
         * Get percent of volume level
         *
         * @return {number}
         *         Volume level percent as a decimal number.
         */},{key:"getPercent",value:function getPercent(){if(this.player_.muted()){return 0;}return this.player_.volume();}/**
         * Increase volume level for keyboard users
         */},{key:"stepForward",value:function stepForward(){this.checkMuted();this.player_.volume(this.player_.volume()+0.1);}/**
         * Decrease volume level for keyboard users
         */},{key:"stepBack",value:function stepBack(){this.checkMuted();this.player_.volume(this.player_.volume()-0.1);}/**
         * Update ARIA accessibility attributes
         *
         * @param {Event} [event]
         *        The `volumechange` event that caused this function to run.
         *
         * @listens Player#volumechange
         */},{key:"updateARIAAttributes",value:function updateARIAAttributes(event){var ariaValue=this.player_.muted()?0:this.volumeAsPercentage_();this.el_.setAttribute('aria-valuenow',ariaValue);this.el_.setAttribute('aria-valuetext',ariaValue+'%');}/**
         * Returns the current value of the player volume as a percentage
         *
         * @private
         */},{key:"volumeAsPercentage_",value:function volumeAsPercentage_(){return Math.round(this.player_.volume()*100);}/**
         * When user starts dragging the VolumeBar, store the volume and listen for
         * the end of the drag. When the drag ends, if the volume was set to zero,
         * set lastVolume to the stored volume.
         *
         * @listens slideractive
         * @private
         */},{key:"updateLastVolume_",value:function updateLastVolume_(){var _this109=this;var volumeBeforeDrag=this.player_.volume();this.one('sliderinactive',function(){if(_this109.player_.volume()===0){_this109.player_.lastVolume_(volumeBeforeDrag);}});}}]);return VolumeBar;}(Slider);/**
       * Default options for the `VolumeBar`
       *
       * @type {Object}
       * @private
       */VolumeBar.prototype.options_={children:['volumeLevel'],barName:'volumeLevel'};// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices
if(!IS_IOS&&!IS_ANDROID){VolumeBar.prototype.options_.children.splice(0,0,'mouseVolumeLevelDisplay');}/**
       * Call the update event for this Slider when this event happens on the player.
       *
       * @type {string}
       */VolumeBar.prototype.playerEvent='volumechange';Component$1.registerComponent('VolumeBar',VolumeBar);/**
       * @file volume-control.js
       */ /**
       * The component for controlling the volume level
       *
       * @extends Component
       */var VolumeControl=/*#__PURE__*/function(_Component$19){_inherits(VolumeControl,_Component$19);var _super54=_createSuper(VolumeControl);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function VolumeControl(player){var _this110;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,VolumeControl);options.vertical=options.vertical||false;// Pass the vertical option down to the VolumeBar if
// the VolumeBar is turned on.
if(typeof options.volumeBar==='undefined'||isPlain(options.volumeBar)){options.volumeBar=options.volumeBar||{};options.volumeBar.vertical=options.vertical;}_this110=_super54.call(this,player,options);// hide this control if volume support is missing
checkVolumeSupport(_assertThisInitialized2(_this110),player);_this110.throttledHandleMouseMove=throttle(bind_(_assertThisInitialized2(_this110),_this110.handleMouseMove),UPDATE_REFRESH_INTERVAL);_this110.handleMouseUpHandler_=function(e){return _this110.handleMouseUp(e);};_this110.on('mousedown',function(e){return _this110.handleMouseDown(e);});_this110.on('touchstart',function(e){return _this110.handleMouseDown(e);});_this110.on('mousemove',function(e){return _this110.handleMouseMove(e);});// while the slider is active (the mouse has been pressed down and
// is dragging) or in focus we do not want to hide the VolumeBar
_this110.on(_this110.volumeBar,['focus','slideractive'],function(){_this110.volumeBar.addClass('vjs-slider-active');_this110.addClass('vjs-slider-active');_this110.trigger('slideractive');});_this110.on(_this110.volumeBar,['blur','sliderinactive'],function(){_this110.volumeBar.removeClass('vjs-slider-active');_this110.removeClass('vjs-slider-active');_this110.trigger('sliderinactive');});return _this110;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(VolumeControl,[{key:"createEl",value:function createEl(){var orientationClass='vjs-volume-horizontal';if(this.options_.vertical){orientationClass='vjs-volume-vertical';}return _get(_getPrototypeOf(VolumeControl.prototype),"createEl",this).call(this,'div',{className:"vjs-volume-control vjs-control ".concat(orientationClass)});}/**
         * Handle `mousedown` or `touchstart` events on the `VolumeControl`.
         *
         * @param {Event} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousedown
         * @listens touchstart
         */},{key:"handleMouseDown",value:function handleMouseDown(event){var doc=this.el_.ownerDocument;this.on(doc,'mousemove',this.throttledHandleMouseMove);this.on(doc,'touchmove',this.throttledHandleMouseMove);this.on(doc,'mouseup',this.handleMouseUpHandler_);this.on(doc,'touchend',this.handleMouseUpHandler_);}/**
         * Handle `mouseup` or `touchend` events on the `VolumeControl`.
         *
         * @param {Event} event
         *        `mouseup` or `touchend` event that triggered this function.
         *
         * @listens touchend
         * @listens mouseup
         */},{key:"handleMouseUp",value:function handleMouseUp(event){var doc=this.el_.ownerDocument;this.off(doc,'mousemove',this.throttledHandleMouseMove);this.off(doc,'touchmove',this.throttledHandleMouseMove);this.off(doc,'mouseup',this.handleMouseUpHandler_);this.off(doc,'touchend',this.handleMouseUpHandler_);}/**
         * Handle `mousedown` or `touchstart` events on the `VolumeControl`.
         *
         * @param {Event} event
         *        `mousedown` or `touchstart` event that triggered this function
         *
         * @listens mousedown
         * @listens touchstart
         */},{key:"handleMouseMove",value:function handleMouseMove(event){this.volumeBar.handleMouseMove(event);}}]);return VolumeControl;}(Component$1);/**
       * Default options for the `VolumeControl`
       *
       * @type {Object}
       * @private
       */VolumeControl.prototype.options_={children:['volumeBar']};Component$1.registerComponent('VolumeControl',VolumeControl);/**
       * Check if muting volume is supported and if it isn't hide the mute toggle
       * button.
       *
       * @param { import('../../component').default } self
       *        A reference to the mute toggle button
       *
       * @param { import('../../player').default } player
       *        A reference to the player
       *
       * @private
       */var checkMuteSupport=function checkMuteSupport(self,player){// hide mute toggle button if it's not supported by the current tech
if(player.tech_&&!player.tech_.featuresMuteControl){self.addClass('vjs-hidden');}self.on(player,'loadstart',function(){if(!player.tech_.featuresMuteControl){self.addClass('vjs-hidden');}else{self.removeClass('vjs-hidden');}});};/**
       * @file mute-toggle.js
       */ /**
       * A button component for muting the audio.
       *
       * @extends Button
       */var MuteToggle=/*#__PURE__*/function(_Button7){_inherits(MuteToggle,_Button7);var _super55=_createSuper(MuteToggle);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function MuteToggle(player,options){var _this111;_classCallCheck(this,MuteToggle);_this111=_super55.call(this,player,options);// hide this control if volume support is missing
checkMuteSupport(_assertThisInitialized2(_this111),player);_this111.on(player,['loadstart','volumechange'],function(e){return _this111.update(e);});return _this111;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(MuteToggle,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-mute-control ".concat(_get(_getPrototypeOf(MuteToggle.prototype),"buildCSSClass",this).call(this));}/**
         * This gets called when an `MuteToggle` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){var vol=this.player_.volume();var lastVolume=this.player_.lastVolume_();if(vol===0){var volumeToSet=lastVolume<0.1?0.1:lastVolume;this.player_.volume(volumeToSet);this.player_.muted(false);}else{this.player_.muted(this.player_.muted()?false:true);}}/**
         * Update the `MuteToggle` button based on the state of `volume` and `muted`
         * on the player.
         *
         * @param {Event} [event]
         *        The {@link Player#loadstart} event if this function was called
         *        through an event.
         *
         * @listens Player#loadstart
         * @listens Player#volumechange
         */},{key:"update",value:function update(event){this.updateIcon_();this.updateControlText_();}/**
         * Update the appearance of the `MuteToggle` icon.
         *
         * Possible states (given `level` variable below):
         * - 0: crossed out
         * - 1: zero bars of volume
         * - 2: one bar of volume
         * - 3: two bars of volume
         *
         * @private
         */},{key:"updateIcon_",value:function updateIcon_(){var vol=this.player_.volume();var level=3;this.setIcon('volume-high');// in iOS when a player is loaded with muted attribute
// and volume is changed with a native mute button
// we want to make sure muted state is updated
if(IS_IOS&&this.player_.tech_&&this.player_.tech_.el_){this.player_.muted(this.player_.tech_.el_.muted);}if(vol===0||this.player_.muted()){this.setIcon('volume-mute');level=0;}else if(vol<0.33){this.setIcon('volume-low');level=1;}else if(vol<0.67){this.setIcon('volume-medium');level=2;}_removeClass(this.el_,[0,1,2,3].reduce(function(str,i){return str+"".concat(i?' ':'',"vjs-vol-").concat(i);},''));_addClass(this.el_,"vjs-vol-".concat(level));}/**
         * If `muted` has changed on the player, update the control text
         * (`title` attribute on `vjs-mute-control` element and content of
         * `vjs-control-text` element).
         *
         * @private
         */},{key:"updateControlText_",value:function updateControlText_(){var soundOff=this.player_.muted()||this.player_.volume()===0;var text=soundOff?'Unmute':'Mute';if(this.controlText()!==text){this.controlText(text);}}}]);return MuteToggle;}(Button);/**
       * The text that should display over the `MuteToggle`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */MuteToggle.prototype.controlText_='Mute';Component$1.registerComponent('MuteToggle',MuteToggle);/**
       * @file volume-control.js
       */ /**
       * A Component to contain the MuteToggle and VolumeControl so that
       * they can work together.
       *
       * @extends Component
       */var VolumePanel=/*#__PURE__*/function(_Component$20){_inherits(VolumePanel,_Component$20);var _super56=_createSuper(VolumePanel);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function VolumePanel(player){var _this112;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,VolumePanel);if(typeof options.inline!=='undefined'){options.inline=options.inline;}else{options.inline=true;}// pass the inline option down to the VolumeControl as vertical if
// the VolumeControl is on.
if(typeof options.volumeControl==='undefined'||isPlain(options.volumeControl)){options.volumeControl=options.volumeControl||{};options.volumeControl.vertical=!options.inline;}_this112=_super56.call(this,player,options);// this handler is used by mouse handler methods below
_this112.handleKeyPressHandler_=function(e){return _this112.handleKeyPress(e);};_this112.on(player,['loadstart'],function(e){return _this112.volumePanelState_(e);});_this112.on(_this112.muteToggle,'keyup',function(e){return _this112.handleKeyPress(e);});_this112.on(_this112.volumeControl,'keyup',function(e){return _this112.handleVolumeControlKeyUp(e);});_this112.on('keydown',function(e){return _this112.handleKeyPress(e);});_this112.on('mouseover',function(e){return _this112.handleMouseOver(e);});_this112.on('mouseout',function(e){return _this112.handleMouseOut(e);});// while the slider is active (the mouse has been pressed down and
// is dragging) we do not want to hide the VolumeBar
_this112.on(_this112.volumeControl,['slideractive'],_this112.sliderActive_);_this112.on(_this112.volumeControl,['sliderinactive'],_this112.sliderInactive_);return _this112;}/**
         * Add vjs-slider-active class to the VolumePanel
         *
         * @listens VolumeControl#slideractive
         * @private
         */_createClass(VolumePanel,[{key:"sliderActive_",value:function sliderActive_(){this.addClass('vjs-slider-active');}/**
         * Removes vjs-slider-active class to the VolumePanel
         *
         * @listens VolumeControl#sliderinactive
         * @private
         */},{key:"sliderInactive_",value:function sliderInactive_(){this.removeClass('vjs-slider-active');}/**
         * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel
         * depending on MuteToggle and VolumeControl state
         *
         * @listens Player#loadstart
         * @private
         */},{key:"volumePanelState_",value:function volumePanelState_(){// hide volume panel if neither volume control or mute toggle
// are displayed
if(this.volumeControl.hasClass('vjs-hidden')&&this.muteToggle.hasClass('vjs-hidden')){this.addClass('vjs-hidden');}// if only mute toggle is visible we don't want
// volume panel expanding when hovered or active
if(this.volumeControl.hasClass('vjs-hidden')&&!this.muteToggle.hasClass('vjs-hidden')){this.addClass('vjs-mute-toggle-only');}}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){var orientationClass='vjs-volume-panel-horizontal';if(!this.options_.inline){orientationClass='vjs-volume-panel-vertical';}return _get(_getPrototypeOf(VolumePanel.prototype),"createEl",this).call(this,'div',{className:"vjs-volume-panel vjs-control ".concat(orientationClass)});}/**
         * Dispose of the `volume-panel` and all child components.
         */},{key:"dispose",value:function dispose(){this.handleMouseOut();_get(_getPrototypeOf(VolumePanel.prototype),"dispose",this).call(this);}/**
         * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes
         * the volume panel and sets focus on `MuteToggle`.
         *
         * @param {Event} event
         *        The `keyup` event that caused this function to be called.
         *
         * @listens keyup
         */},{key:"handleVolumeControlKeyUp",value:function handleVolumeControlKeyUp(event){if(keycode.isEventKey(event,'Esc')){this.muteToggle.focus();}}/**
         * This gets called when a `VolumePanel` gains hover via a `mouseover` event.
         * Turns on listening for `mouseover` event. When they happen it
         * calls `this.handleMouseOver`.
         *
         * @param {Event} event
         *        The `mouseover` event that caused this function to be called.
         *
         * @listens mouseover
         */},{key:"handleMouseOver",value:function handleMouseOver(event){this.addClass('vjs-hover');_on(document_1,'keyup',this.handleKeyPressHandler_);}/**
         * This gets called when a `VolumePanel` gains hover via a `mouseout` event.
         * Turns on listening for `mouseout` event. When they happen it
         * calls `this.handleMouseOut`.
         *
         * @param {Event} event
         *        The `mouseout` event that caused this function to be called.
         *
         * @listens mouseout
         */},{key:"handleMouseOut",value:function handleMouseOut(event){this.removeClass('vjs-hover');_off(document_1,'keyup',this.handleKeyPressHandler_);}/**
         * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,
         * looking for ESC, which hides the `VolumeControl`.
         *
         * @param {Event} event
         *        The keypress that triggered this event.
         *
         * @listens keydown | keyup
         */},{key:"handleKeyPress",value:function handleKeyPress(event){if(keycode.isEventKey(event,'Esc')){this.handleMouseOut();}}}]);return VolumePanel;}(Component$1);/**
       * Default options for the `VolumeControl`
       *
       * @type {Object}
       * @private
       */VolumePanel.prototype.options_={children:['muteToggle','volumeControl']};Component$1.registerComponent('VolumePanel',VolumePanel);/**
       * Button to skip forward a configurable amount of time
       * through a video. Renders in the control bar.
       *
       * e.g. options: {controlBar: {skipButtons: forward: 5}}
       *
       * @extends Button
       */var SkipForward=/*#__PURE__*/function(_Button8){_inherits(SkipForward,_Button8);var _super57=_createSuper(SkipForward);function SkipForward(player,options){var _this113;_classCallCheck(this,SkipForward);_this113=_super57.call(this,player,options);_this113.validOptions=[5,10,30];_this113.skipTime=_this113.getSkipForwardTime();if(_this113.skipTime&&_this113.validOptions.includes(_this113.skipTime)){_this113.setIcon("forward-".concat(_this113.skipTime));_this113.controlText(_this113.localize('Skip forward {1} seconds',[_this113.skipTime.toLocaleString(player.language())]));_this113.show();}else{_this113.hide();}return _this113;}_createClass(SkipForward,[{key:"getSkipForwardTime",value:function getSkipForwardTime(){var playerOptions=this.options_.playerOptions;return playerOptions.controlBar&&playerOptions.controlBar.skipButtons&&playerOptions.controlBar.skipButtons.forward;}},{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-skip-forward-".concat(this.getSkipForwardTime()," ").concat(_get(_getPrototypeOf(SkipForward.prototype),"buildCSSClass",this).call(this));}/**
         * On click, skips forward in the duration/seekable range by a configurable amount of seconds.
         * If the time left in the duration/seekable range is less than the configured 'skip forward' time,
         * skips to end of duration/seekable range.
         *
         * Handle a click on a `SkipForward` button
         *
         * @param {EventTarget~Event} event
         *        The `click` event that caused this function
         *        to be called
         */},{key:"handleClick",value:function handleClick(event){if(isNaN(this.player_.duration())){return;}var currentVideoTime=this.player_.currentTime();var liveTracker=this.player_.liveTracker;var duration=liveTracker&&liveTracker.isLive()?liveTracker.seekableEnd():this.player_.duration();var newTime;if(currentVideoTime+this.skipTime<=duration){newTime=currentVideoTime+this.skipTime;}else{newTime=duration;}this.player_.currentTime(newTime);}/**
         * Update control text on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.controlText(this.localize('Skip forward {1} seconds',[this.skipTime]));}}]);return SkipForward;}(Button);SkipForward.prototype.controlText_='Skip Forward';Component$1.registerComponent('SkipForward',SkipForward);/**
       * Button to skip backward a configurable amount of time
       * through a video. Renders in the control bar.
       *
       *  * e.g. options: {controlBar: {skipButtons: backward: 5}}
       *
       * @extends Button
       */var SkipBackward=/*#__PURE__*/function(_Button9){_inherits(SkipBackward,_Button9);var _super58=_createSuper(SkipBackward);function SkipBackward(player,options){var _this114;_classCallCheck(this,SkipBackward);_this114=_super58.call(this,player,options);_this114.validOptions=[5,10,30];_this114.skipTime=_this114.getSkipBackwardTime();if(_this114.skipTime&&_this114.validOptions.includes(_this114.skipTime)){_this114.setIcon("replay-".concat(_this114.skipTime));_this114.controlText(_this114.localize('Skip backward {1} seconds',[_this114.skipTime.toLocaleString(player.language())]));_this114.show();}else{_this114.hide();}return _this114;}_createClass(SkipBackward,[{key:"getSkipBackwardTime",value:function getSkipBackwardTime(){var playerOptions=this.options_.playerOptions;return playerOptions.controlBar&&playerOptions.controlBar.skipButtons&&playerOptions.controlBar.skipButtons.backward;}},{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-skip-backward-".concat(this.getSkipBackwardTime()," ").concat(_get(_getPrototypeOf(SkipBackward.prototype),"buildCSSClass",this).call(this));}/**
         * On click, skips backward in the video by a configurable amount of seconds.
         * If the current time in the video is less than the configured 'skip backward' time,
         * skips to beginning of video or seekable range.
         *
         * Handle a click on a `SkipBackward` button
         *
         * @param {EventTarget~Event} event
         *        The `click` event that caused this function
         *        to be called
         */},{key:"handleClick",value:function handleClick(event){var currentVideoTime=this.player_.currentTime();var liveTracker=this.player_.liveTracker;var seekableStart=liveTracker&&liveTracker.isLive()&&liveTracker.seekableStart();var newTime;if(seekableStart&&currentVideoTime-this.skipTime<=seekableStart){newTime=seekableStart;}else if(currentVideoTime>=this.skipTime){newTime=currentVideoTime-this.skipTime;}else{newTime=0;}this.player_.currentTime(newTime);}/**
         * Update control text on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.controlText(this.localize('Skip backward {1} seconds',[this.skipTime]));}}]);return SkipBackward;}(Button);SkipBackward.prototype.controlText_='Skip Backward';Component$1.registerComponent('SkipBackward',SkipBackward);/**
       * @file menu.js
       */ /**
       * The Menu component is used to build popup menus, including subtitle and
       * captions selection menus.
       *
       * @extends Component
       */var Menu=/*#__PURE__*/function(_Component$21){_inherits(Menu,_Component$21);var _super59=_createSuper(Menu);/**
         * Create an instance of this class.
         *
         * @param { import('../player').default } player
         *        the player that this component should attach to
         *
         * @param {Object} [options]
         *        Object of option names and values
         *
         */function Menu(player,options){var _this115;_classCallCheck(this,Menu);_this115=_super59.call(this,player,options);if(options){_this115.menuButton_=options.menuButton;}_this115.focusedChild_=-1;_this115.on('keydown',function(e){return _this115.handleKeyDown(e);});// All the menu item instances share the same blur handler provided by the menu container.
_this115.boundHandleBlur_=function(e){return _this115.handleBlur(e);};_this115.boundHandleTapClick_=function(e){return _this115.handleTapClick(e);};return _this115;}/**
         * Add event listeners to the {@link MenuItem}.
         *
         * @param {Object} component
         *        The instance of the `MenuItem` to add listeners to.
         *
         */_createClass(Menu,[{key:"addEventListenerForItem",value:function addEventListenerForItem(component){if(!(component instanceof Component$1)){return;}this.on(component,'blur',this.boundHandleBlur_);this.on(component,['tap','click'],this.boundHandleTapClick_);}/**
         * Remove event listeners from the {@link MenuItem}.
         *
         * @param {Object} component
         *        The instance of the `MenuItem` to remove listeners.
         *
         */},{key:"removeEventListenerForItem",value:function removeEventListenerForItem(component){if(!(component instanceof Component$1)){return;}this.off(component,'blur',this.boundHandleBlur_);this.off(component,['tap','click'],this.boundHandleTapClick_);}/**
         * This method will be called indirectly when the component has been added
         * before the component adds to the new menu instance by `addItem`.
         * In this case, the original menu instance will remove the component
         * by calling `removeChild`.
         *
         * @param {Object} component
         *        The instance of the `MenuItem`
         */},{key:"removeChild",value:function removeChild(component){if(typeof component==='string'){component=this.getChild(component);}this.removeEventListenerForItem(component);_get(_getPrototypeOf(Menu.prototype),"removeChild",this).call(this,component);}/**
         * Add a {@link MenuItem} to the menu.
         *
         * @param {Object|string} component
         *        The name or instance of the `MenuItem` to add.
         *
         */},{key:"addItem",value:function addItem(component){var childComponent=this.addChild(component);if(childComponent){this.addEventListenerForItem(childComponent);}}/**
         * Create the `Menu`s DOM element.
         *
         * @return {Element}
         *         the element that was created
         */},{key:"createEl",value:function createEl(){var contentElType=this.options_.contentElType||'ul';this.contentEl_=_createEl(contentElType,{className:'vjs-menu-content'});this.contentEl_.setAttribute('role','menu');var el=_get(_getPrototypeOf(Menu.prototype),"createEl",this).call(this,'div',{append:this.contentEl_,className:'vjs-menu'});el.appendChild(this.contentEl_);// Prevent clicks from bubbling up. Needed for Menu Buttons,
// where a click on the parent is significant
_on(el,'click',function(event){event.preventDefault();event.stopImmediatePropagation();});return el;}},{key:"dispose",value:function dispose(){this.contentEl_=null;this.boundHandleBlur_=null;this.boundHandleTapClick_=null;_get(_getPrototypeOf(Menu.prototype),"dispose",this).call(this);}/**
         * Called when a `MenuItem` loses focus.
         *
         * @param {Event} event
         *        The `blur` event that caused this function to be called.
         *
         * @listens blur
         */},{key:"handleBlur",value:function handleBlur(event){var relatedTarget=event.relatedTarget||document_1.activeElement;// Close menu popup when a user clicks outside the menu
if(!this.children().some(function(element){return element.el()===relatedTarget;})){var btn=this.menuButton_;if(btn&&btn.buttonPressed_&&relatedTarget!==btn.el().firstChild){btn.unpressButton();}}}/**
         * Called when a `MenuItem` gets clicked or tapped.
         *
         * @param {Event} event
         *        The `click` or `tap` event that caused this function to be called.
         *
         * @listens click,tap
         */},{key:"handleTapClick",value:function handleTapClick(event){// Unpress the associated MenuButton, and move focus back to it
if(this.menuButton_){this.menuButton_.unpressButton();var childComponents=this.children();if(!Array.isArray(childComponents)){return;}var foundComponent=childComponents.filter(function(component){return component.el()===event.target;})[0];if(!foundComponent){return;}// don't focus menu button if item is a caption settings item
// because focus will move elsewhere
if(foundComponent.name()!=='CaptionSettingsMenuItem'){this.menuButton_.focus();}}}/**
         * Handle a `keydown` event on this menu. This listener is added in the constructor.
         *
         * @param {KeyboardEvent} event
         *        A `keydown` event that happened on the menu.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){// Left and Down Arrows
if(keycode.isEventKey(event,'Left')||keycode.isEventKey(event,'Down')){event.preventDefault();event.stopPropagation();this.stepForward();// Up and Right Arrows
}else if(keycode.isEventKey(event,'Right')||keycode.isEventKey(event,'Up')){event.preventDefault();event.stopPropagation();this.stepBack();}}/**
         * Move to next (lower) menu item for keyboard users.
         */},{key:"stepForward",value:function stepForward(){var stepChild=0;if(this.focusedChild_!==undefined){stepChild=this.focusedChild_+1;}this.focus(stepChild);}/**
         * Move to previous (higher) menu item for keyboard users.
         */},{key:"stepBack",value:function stepBack(){var stepChild=0;if(this.focusedChild_!==undefined){stepChild=this.focusedChild_-1;}this.focus(stepChild);}/**
         * Set focus on a {@link MenuItem} in the `Menu`.
         *
         * @param {Object|string} [item=0]
         *        Index of child item set focus on.
         */},{key:"focus",value:function focus(){var item=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var children=this.children().slice();var haveTitle=children.length&&children[0].hasClass('vjs-menu-title');if(haveTitle){children.shift();}if(children.length>0){if(item<0){item=0;}else if(item>=children.length){item=children.length-1;}this.focusedChild_=item;children[item].el_.focus();}}}]);return Menu;}(Component$1);Component$1.registerComponent('Menu',Menu);/**
       * @file menu-button.js
       */ /**
       * A `MenuButton` class for any popup {@link Menu}.
       *
       * @extends Component
       */var MenuButton=/*#__PURE__*/function(_Component$22){_inherits(MenuButton,_Component$22);var _super60=_createSuper(MenuButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function MenuButton(player){var _this116;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,MenuButton);_this116=_super60.call(this,player,options);_this116.menuButton_=new Button(player,options);_this116.menuButton_.controlText(_this116.controlText_);_this116.menuButton_.el_.setAttribute('aria-haspopup','true');// Add buildCSSClass values to the button, not the wrapper
var buttonClass=Button.prototype.buildCSSClass();_this116.menuButton_.el_.className=_this116.buildCSSClass()+' '+buttonClass;_this116.menuButton_.removeClass('vjs-control');_this116.addChild(_this116.menuButton_);_this116.update();_this116.enabled_=true;var handleClick=function handleClick(e){return _this116.handleClick(e);};_this116.handleMenuKeyUp_=function(e){return _this116.handleMenuKeyUp(e);};_this116.on(_this116.menuButton_,'tap',handleClick);_this116.on(_this116.menuButton_,'click',handleClick);_this116.on(_this116.menuButton_,'keydown',function(e){return _this116.handleKeyDown(e);});_this116.on(_this116.menuButton_,'mouseenter',function(){_this116.addClass('vjs-hover');_this116.menu.show();_on(document_1,'keyup',_this116.handleMenuKeyUp_);});_this116.on('mouseleave',function(e){return _this116.handleMouseLeave(e);});_this116.on('keydown',function(e){return _this116.handleSubmenuKeyDown(e);});return _this116;}/**
         * Update the menu based on the current state of its items.
         */_createClass(MenuButton,[{key:"update",value:function update(){var menu=this.createMenu();if(this.menu){this.menu.dispose();this.removeChild(this.menu);}this.menu=menu;this.addChild(menu);/**
           * Track the state of the menu button
           *
           * @type {Boolean}
           * @private
           */this.buttonPressed_=false;this.menuButton_.el_.setAttribute('aria-expanded','false');if(this.items&&this.items.length<=this.hideThreshold_){this.hide();this.menu.contentEl_.removeAttribute('role');}else{this.show();this.menu.contentEl_.setAttribute('role','menu');}}/**
         * Create the menu and add all items to it.
         *
         * @return {Menu}
         *         The constructed menu
         */},{key:"createMenu",value:function createMenu(){var menu=new Menu(this.player_,{menuButton:this});/**
           * Hide the menu if the number of items is less than or equal to this threshold. This defaults
           * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list
           * it here because every time we run `createMenu` we need to reset the value.
           *
           * @protected
           * @type {Number}
           */this.hideThreshold_=0;// Add a title list item to the top
if(this.options_.title){var titleEl=_createEl('li',{className:'vjs-menu-title',textContent:toTitleCase$1(this.options_.title),tabIndex:-1});var titleComponent=new Component$1(this.player_,{el:titleEl});menu.addItem(titleComponent);}this.items=this.createItems();if(this.items){// Add menu items to the menu
for(var _i123=0;_i123<this.items.length;_i123++){menu.addItem(this.items[_i123]);}}return menu;}/**
         * Create the list of menu items. Specific to each subclass.
         *
         * @abstract
         */},{key:"createItems",value:function createItems(){}/**
         * Create the `MenuButtons`s DOM element.
         *
         * @return {Element}
         *         The element that gets created.
         */},{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(MenuButton.prototype),"createEl",this).call(this,'div',{className:this.buildWrapperCSSClass()},{});}/**
         * Overwrites the `setIcon` method from `Component`.
         * In this case, we want the icon to be appended to the menuButton.
         *
         * @param {string} name
         *         The icon name to be added.
         */},{key:"setIcon",value:function setIcon(name){_get(_getPrototypeOf(MenuButton.prototype),"setIcon",this).call(this,name,this.menuButton_.el_);}/**
         * Allow sub components to stack CSS class names for the wrapper element
         *
         * @return {string}
         *         The constructed wrapper DOM `className`
         */},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){var menuButtonClass='vjs-menu-button';// If the inline option is passed, we want to use different styles altogether.
if(this.options_.inline===true){menuButtonClass+='-inline';}else{menuButtonClass+='-popup';}// TODO: Fix the CSS so that this isn't necessary
var buttonClass=Button.prototype.buildCSSClass();return"vjs-menu-button ".concat(menuButtonClass," ").concat(buttonClass," ").concat(_get(_getPrototypeOf(MenuButton.prototype),"buildCSSClass",this).call(this));}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */},{key:"buildCSSClass",value:function buildCSSClass(){var menuButtonClass='vjs-menu-button';// If the inline option is passed, we want to use different styles altogether.
if(this.options_.inline===true){menuButtonClass+='-inline';}else{menuButtonClass+='-popup';}return"vjs-menu-button ".concat(menuButtonClass," ").concat(_get(_getPrototypeOf(MenuButton.prototype),"buildCSSClass",this).call(this));}/**
         * Get or set the localized control text that will be used for accessibility.
         *
         * > NOTE: This will come from the internal `menuButton_` element.
         *
         * @param {string} [text]
         *        Control text for element.
         *
         * @param {Element} [el=this.menuButton_.el()]
         *        Element to set the title on.
         *
         * @return {string}
         *         - The control text when getting
         */},{key:"controlText",value:function controlText(text){var el=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.menuButton_.el();return this.menuButton_.controlText(text,el);}/**
         * Dispose of the `menu-button` and all child components.
         */},{key:"dispose",value:function dispose(){this.handleMouseLeave();_get(_getPrototypeOf(MenuButton.prototype),"dispose",this).call(this);}/**
         * Handle a click on a `MenuButton`.
         * See {@link ClickableComponent#handleClick} for instances where this is called.
         *
         * @param {Event} event
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){if(this.buttonPressed_){this.unpressButton();}else{this.pressButton();}}/**
         * Handle `mouseleave` for `MenuButton`.
         *
         * @param {Event} event
         *        The `mouseleave` event that caused this function to be called.
         *
         * @listens mouseleave
         */},{key:"handleMouseLeave",value:function handleMouseLeave(event){this.removeClass('vjs-hover');_off(document_1,'keyup',this.handleMenuKeyUp_);}/**
         * Set the focus to the actual button, not to this element
         */},{key:"focus",value:function focus(){this.menuButton_.focus();}/**
         * Remove the focus from the actual button, not this element
         */},{key:"blur",value:function blur(){this.menuButton_.blur();}/**
         * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See
         * {@link ClickableComponent#handleKeyDown} for instances where this is called.
         *
         * @param {Event} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){// Escape or Tab unpress the 'button'
if(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){if(this.buttonPressed_){this.unpressButton();}// Don't preventDefault for Tab key - we still want to lose focus
if(!keycode.isEventKey(event,'Tab')){event.preventDefault();// Set focus back to the menu button's button
this.menuButton_.focus();}// Up Arrow or Down Arrow also 'press' the button to open the menu
}else if((keycode.isEventKey(event,'Up')||keycode.isEventKey(event,'Down'))&&!(this.player_.options_.playerOptions.spatialNavigation&&this.player_.options_.playerOptions.spatialNavigation.enabled)){if(!this.buttonPressed_){event.preventDefault();this.pressButton();}}}/**
         * Handle a `keyup` event on a `MenuButton`. The listener for this is added in
         * the constructor.
         *
         * @param {Event} event
         *        Key press event
         *
         * @listens keyup
         */},{key:"handleMenuKeyUp",value:function handleMenuKeyUp(event){// Escape hides popup menu
if(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){this.removeClass('vjs-hover');}}/**
         * This method name now delegates to `handleSubmenuKeyDown`. This means
         * anyone calling `handleSubmenuKeyPress` will not see their method calls
         * stop working.
         *
         * @param {Event} event
         *        The event that caused this function to be called.
         */},{key:"handleSubmenuKeyPress",value:function handleSubmenuKeyPress(event){this.handleSubmenuKeyDown(event);}/**
         * Handle a `keydown` event on a sub-menu. The listener for this is added in
         * the constructor.
         *
         * @param {Event} event
         *        Key press event
         *
         * @listens keydown
         */},{key:"handleSubmenuKeyDown",value:function handleSubmenuKeyDown(event){// Escape or Tab unpress the 'button'
if(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){if(this.buttonPressed_){this.unpressButton();}// Don't preventDefault for Tab key - we still want to lose focus
if(!keycode.isEventKey(event,'Tab')){event.preventDefault();// Set focus back to the menu button's button
this.menuButton_.focus();}}}/**
         * Put the current `MenuButton` into a pressed state.
         */},{key:"pressButton",value:function pressButton(){if(this.enabled_){this.buttonPressed_=true;this.menu.show();this.menu.lockShowing();this.menuButton_.el_.setAttribute('aria-expanded','true');// set the focus into the submenu, except on iOS where it is resulting in
// undesired scrolling behavior when the player is in an iframe
if(IS_IOS&&isInFrame()){// Return early so that the menu isn't focused
return;}this.menu.focus();}}/**
         * Take the current `MenuButton` out of a pressed state.
         */},{key:"unpressButton",value:function unpressButton(){if(this.enabled_){this.buttonPressed_=false;this.menu.unlockShowing();this.menu.hide();this.menuButton_.el_.setAttribute('aria-expanded','false');}}/**
         * Disable the `MenuButton`. Don't allow it to be clicked.
         */},{key:"disable",value:function disable(){this.unpressButton();this.enabled_=false;this.addClass('vjs-disabled');this.menuButton_.disable();}/**
         * Enable the `MenuButton`. Allow it to be clicked.
         */},{key:"enable",value:function enable(){this.enabled_=true;this.removeClass('vjs-disabled');this.menuButton_.enable();}}]);return MenuButton;}(Component$1);Component$1.registerComponent('MenuButton',MenuButton);/**
       * @file track-button.js
       */ /**
       * The base class for buttons that toggle specific  track types (e.g. subtitles).
       *
       * @extends MenuButton
       */var TrackButton=/*#__PURE__*/function(_MenuButton){_inherits(TrackButton,_MenuButton);var _super61=_createSuper(TrackButton);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function TrackButton(player,options){var _this117;_classCallCheck(this,TrackButton);var tracks=options.tracks;_this117=_super61.call(this,player,options);if(_this117.items.length<=1){_this117.hide();}if(!tracks){return _possibleConstructorReturn(_this117);}var updateHandler=bind_(_assertThisInitialized2(_this117),_this117.update);tracks.addEventListener('removetrack',updateHandler);tracks.addEventListener('addtrack',updateHandler);tracks.addEventListener('labelchange',updateHandler);_this117.player_.on('ready',updateHandler);_this117.player_.on('dispose',function(){tracks.removeEventListener('removetrack',updateHandler);tracks.removeEventListener('addtrack',updateHandler);tracks.removeEventListener('labelchange',updateHandler);});return _this117;}return _createClass(TrackButton);}(MenuButton);Component$1.registerComponent('TrackButton',TrackButton);/**
       * @file menu-keys.js
       */ /**
        * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)
        * Note that 'Enter' and 'Space' are not included here (otherwise they would
        * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)
       *
        * @typedef MenuKeys
        * @array
        */var MenuKeys=['Tab','Esc','Up','Down','Right','Left'];/**
       * @file menu-item.js
       */ /**
       * The component for a menu item. `<li>`
       *
       * @extends ClickableComponent
       */var MenuItem=/*#__PURE__*/function(_ClickableComponent3){_inherits(MenuItem,_ClickableComponent3);var _super62=_createSuper(MenuItem);/**
         * Creates an instance of the this class.
         *
         * @param { import('../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         *
         */function MenuItem(player,options){var _this118;_classCallCheck(this,MenuItem);_this118=_super62.call(this,player,options);_this118.selectable=options.selectable;_this118.isSelected_=options.selected||false;_this118.multiSelectable=options.multiSelectable;_this118.selected(_this118.isSelected_);if(_this118.selectable){if(_this118.multiSelectable){_this118.el_.setAttribute('role','menuitemcheckbox');}else{_this118.el_.setAttribute('role','menuitemradio');}}else{_this118.el_.setAttribute('role','menuitem');}return _this118;}/**
         * Create the `MenuItem's DOM element
         *
         * @param {string} [type=li]
         *        Element's node type, not actually used, always set to `li`.
         *
         * @param {Object} [props={}]
         *        An object of properties that should be set on the element
         *
         * @param {Object} [attrs={}]
         *        An object of attributes that should be set on the element
         *
         * @return {Element}
         *         The element that gets created.
         */_createClass(MenuItem,[{key:"createEl",value:function createEl(type,props,attrs){// The control is textual, not just an icon
this.nonIconControl=true;var el=_get(_getPrototypeOf(MenuItem.prototype),"createEl",this).call(this,'li',Object.assign({className:'vjs-menu-item',tabIndex:-1},props),attrs);// swap icon with menu item text.
var menuItemEl=_createEl('span',{className:'vjs-menu-item-text',textContent:this.localize(this.options_.label)});// If using SVG icons, the element with vjs-icon-placeholder will be added separately.
if(this.player_.options_.experimentalSvgIcons){el.appendChild(menuItemEl);}else{el.replaceChild(menuItemEl,el.querySelector('.vjs-icon-placeholder'));}return el;}/**
         * Ignore keys which are used by the menu, but pass any other ones up. See
         * {@link ClickableComponent#handleKeyDown} for instances where this is called.
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){if(!MenuKeys.some(function(key){return keycode.isEventKey(event,key);})){// Pass keydown handling up for unused keys
_get(_getPrototypeOf(MenuItem.prototype),"handleKeyDown",this).call(this,event);}}/**
         * Any click on a `MenuItem` puts it into the selected state.
         * See {@link ClickableComponent#handleClick} for instances where this is called.
         *
         * @param {Event} event
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){this.selected(true);}/**
         * Set the state for this menu item as selected or not.
         *
         * @param {boolean} selected
         *        if the menu item is selected or not
         */},{key:"selected",value:function selected(_selected){if(this.selectable){if(_selected){this.addClass('vjs-selected');this.el_.setAttribute('aria-checked','true');// aria-checked isn't fully supported by browsers/screen readers,
// so indicate selected state to screen reader in the control text.
this.controlText(', selected');this.isSelected_=true;}else{this.removeClass('vjs-selected');this.el_.setAttribute('aria-checked','false');// Indicate un-selected state to screen reader
this.controlText('');this.isSelected_=false;}}}}]);return MenuItem;}(ClickableComponent);Component$1.registerComponent('MenuItem',MenuItem);/**
       * @file text-track-menu-item.js
       */ /**
       * The specific menu item type for selecting a language within a text track kind
       *
       * @extends MenuItem
       */var TextTrackMenuItem=/*#__PURE__*/function(_MenuItem){_inherits(TextTrackMenuItem,_MenuItem);var _super63=_createSuper(TextTrackMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function TextTrackMenuItem(player,options){var _this119;_classCallCheck(this,TextTrackMenuItem);var track=options.track;var tracks=player.textTracks();// Modify options for parent MenuItem class's init.
options.label=track.label||track.language||'Unknown';options.selected=track.mode==='showing';_this119=_super63.call(this,player,options);_this119.track=track;// Determine the relevant kind(s) of tracks for this component and filter
// out empty kinds.
_this119.kinds=(options.kinds||[options.kind||_this119.track.kind]).filter(Boolean);var changeHandler=function changeHandler(){for(var _len34=arguments.length,args=new Array(_len34),_key35=0;_key35<_len34;_key35++){args[_key35]=arguments[_key35];}_this119.handleTracksChange.apply(_assertThisInitialized2(_this119),args);};var selectedLanguageChangeHandler=function selectedLanguageChangeHandler(){for(var _len35=arguments.length,args=new Array(_len35),_key36=0;_key36<_len35;_key36++){args[_key36]=arguments[_key36];}_this119.handleSelectedLanguageChange.apply(_assertThisInitialized2(_this119),args);};player.on(['loadstart','texttrackchange'],changeHandler);tracks.addEventListener('change',changeHandler);tracks.addEventListener('selectedlanguagechange',selectedLanguageChangeHandler);_this119.on('dispose',function(){player.off(['loadstart','texttrackchange'],changeHandler);tracks.removeEventListener('change',changeHandler);tracks.removeEventListener('selectedlanguagechange',selectedLanguageChangeHandler);});// iOS7 doesn't dispatch change events to TextTrackLists when an
// associated track's mode changes. Without something like
// Object.observe() (also not present on iOS7), it's not
// possible to detect changes to the mode attribute and polyfill
// the change event. As a poor substitute, we manually dispatch
// change events whenever the controls modify the mode.
if(tracks.onchange===undefined){var _event;_this119.on(['tap','click'],function(){if(_typeof(window_1.Event)!=='object'){// Android 2.3 throws an Illegal Constructor error for window.Event
try{_event=new window_1.Event('change');}catch(err){// continue regardless of error
}}if(!_event){_event=document_1.createEvent('Event');_event.initEvent('change',true,true);}tracks.dispatchEvent(_event);});}// set the default state based on current tracks
_this119.handleTracksChange();return _this119;}/**
         * This gets called when an `TextTrackMenuItem` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} event
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */_createClass(TextTrackMenuItem,[{key:"handleClick",value:function handleClick(event){var referenceTrack=this.track;var tracks=this.player_.textTracks();_get(_getPrototypeOf(TextTrackMenuItem.prototype),"handleClick",this).call(this,event);if(!tracks){return;}for(var _i124=0;_i124<tracks.length;_i124++){var track=tracks[_i124];// If the track from the text tracks list is not of the right kind,
// skip it. We do not want to affect tracks of incompatible kind(s).
if(this.kinds.indexOf(track.kind)===-1){continue;}// If this text track is the component's track and it is not showing,
// set it to showing.
if(track===referenceTrack){if(track.mode!=='showing'){track.mode='showing';}// If this text track is not the component's track and it is not
// disabled, set it to disabled.
}else if(track.mode!=='disabled'){track.mode='disabled';}}}/**
         * Handle text track list change
         *
         * @param {Event} event
         *        The `change` event that caused this function to be called.
         *
         * @listens TextTrackList#change
         */},{key:"handleTracksChange",value:function handleTracksChange(event){var shouldBeSelected=this.track.mode==='showing';// Prevent redundant selected() calls because they may cause
// screen readers to read the appended control text unnecessarily
if(shouldBeSelected!==this.isSelected_){this.selected(shouldBeSelected);}}},{key:"handleSelectedLanguageChange",value:function handleSelectedLanguageChange(event){if(this.track.mode==='showing'){var selectedLanguage=this.player_.cache_.selectedLanguage;// Don't replace the kind of track across the same language
if(selectedLanguage&&selectedLanguage.enabled&&selectedLanguage.language===this.track.language&&selectedLanguage.kind!==this.track.kind){return;}this.player_.cache_.selectedLanguage={enabled:true,language:this.track.language,kind:this.track.kind};}}},{key:"dispose",value:function dispose(){// remove reference to track object on dispose
this.track=null;_get(_getPrototypeOf(TextTrackMenuItem.prototype),"dispose",this).call(this);}}]);return TextTrackMenuItem;}(MenuItem);Component$1.registerComponent('TextTrackMenuItem',TextTrackMenuItem);/**
       * @file off-text-track-menu-item.js
       */ /**
       * A special menu item for turning off a specific type of text track
       *
       * @extends TextTrackMenuItem
       */var OffTextTrackMenuItem=/*#__PURE__*/function(_TextTrackMenuItem){_inherits(OffTextTrackMenuItem,_TextTrackMenuItem);var _super64=_createSuper(OffTextTrackMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function OffTextTrackMenuItem(player,options){_classCallCheck(this,OffTextTrackMenuItem);// Create pseudo track info
// Requires options['kind']
options.track={player:player,// it is no longer necessary to store `kind` or `kinds` on the track itself
// since they are now stored in the `kinds` property of all instances of
// TextTrackMenuItem, but this will remain for backwards compatibility
kind:options.kind,kinds:options.kinds,default:false,mode:'disabled'};if(!options.kinds){options.kinds=[options.kind];}if(options.label){options.track.label=options.label;}else{options.track.label=options.kinds.join(' and ')+' off';}// MenuItem is selectable
options.selectable=true;// MenuItem is NOT multiSelectable (i.e. only one can be marked "selected" at a time)
options.multiSelectable=false;return _super64.call(this,player,options);}/**
         * Handle text track change
         *
         * @param {Event} event
         *        The event that caused this function to run
         */_createClass(OffTextTrackMenuItem,[{key:"handleTracksChange",value:function handleTracksChange(event){var tracks=this.player().textTracks();var shouldBeSelected=true;for(var _i125=0,_l5=tracks.length;_i125<_l5;_i125++){var track=tracks[_i125];if(this.options_.kinds.indexOf(track.kind)>-1&&track.mode==='showing'){shouldBeSelected=false;break;}}// Prevent redundant selected() calls because they may cause
// screen readers to read the appended control text unnecessarily
if(shouldBeSelected!==this.isSelected_){this.selected(shouldBeSelected);}}},{key:"handleSelectedLanguageChange",value:function handleSelectedLanguageChange(event){var tracks=this.player().textTracks();var allHidden=true;for(var _i126=0,_l6=tracks.length;_i126<_l6;_i126++){var track=tracks[_i126];if(['captions','descriptions','subtitles'].indexOf(track.kind)>-1&&track.mode==='showing'){allHidden=false;break;}}if(allHidden){this.player_.cache_.selectedLanguage={enabled:false};}}/**
         * Update control text and label on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.$('.vjs-menu-item-text').textContent=this.player_.localize(this.options_.label);_get(_getPrototypeOf(OffTextTrackMenuItem.prototype),"handleLanguagechange",this).call(this);}}]);return OffTextTrackMenuItem;}(TextTrackMenuItem);Component$1.registerComponent('OffTextTrackMenuItem',OffTextTrackMenuItem);/**
       * @file text-track-button.js
       */ /**
       * The base class for buttons that toggle specific text track types (e.g. subtitles)
       *
       * @extends MenuButton
       */var TextTrackButton=/*#__PURE__*/function(_TrackButton){_inherits(TextTrackButton,_TrackButton);var _super65=_createSuper(TextTrackButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function TextTrackButton(player){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TextTrackButton);options.tracks=player.textTracks();return _super65.call(this,player,options);}/**
         * Create a menu item for each text track
         *
         * @param {TextTrackMenuItem[]} [items=[]]
         *        Existing array of items to use during creation
         *
         * @return {TextTrackMenuItem[]}
         *         Array of menu items that were created
         */_createClass(TextTrackButton,[{key:"createItems",value:function createItems(){var items=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var TrackMenuItem=arguments.length>1&&arguments[1]!==undefined?arguments[1]:TextTrackMenuItem;// Label is an override for the [track] off label
// USed to localise captions/subtitles
var label;if(this.label_){label="".concat(this.label_," off");}// Add an OFF menu item to turn all tracks off
items.push(new OffTextTrackMenuItem(this.player_,{kinds:this.kinds_,kind:this.kind_,label:label}));this.hideThreshold_+=1;var tracks=this.player_.textTracks();if(!Array.isArray(this.kinds_)){this.kinds_=[this.kind_];}for(var _i127=0;_i127<tracks.length;_i127++){var track=tracks[_i127];// only add tracks that are of an appropriate kind and have a label
if(this.kinds_.indexOf(track.kind)>-1){var item=new TrackMenuItem(this.player_,{track:track,kinds:this.kinds_,kind:this.kind_,// MenuItem is selectable
selectable:true,// MenuItem is NOT multiSelectable (i.e. only one can be marked "selected" at a time)
multiSelectable:false});item.addClass("vjs-".concat(track.kind,"-menu-item"));items.push(item);}}return items;}}]);return TextTrackButton;}(TrackButton);Component$1.registerComponent('TextTrackButton',TextTrackButton);/**
       * @file chapters-track-menu-item.js
       */ /**
       * The chapter track menu item
       *
       * @extends MenuItem
       */var ChaptersTrackMenuItem=/*#__PURE__*/function(_MenuItem2){_inherits(ChaptersTrackMenuItem,_MenuItem2);var _super66=_createSuper(ChaptersTrackMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function ChaptersTrackMenuItem(player,options){var _this120;_classCallCheck(this,ChaptersTrackMenuItem);var track=options.track;var cue=options.cue;var currentTime=player.currentTime();// Modify options for parent MenuItem class's init.
options.selectable=true;options.multiSelectable=false;options.label=cue.text;options.selected=cue.startTime<=currentTime&&currentTime<cue.endTime;_this120=_super66.call(this,player,options);_this120.track=track;_this120.cue=cue;return _this120;}/**
         * This gets called when an `ChaptersTrackMenuItem` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */_createClass(ChaptersTrackMenuItem,[{key:"handleClick",value:function handleClick(event){_get(_getPrototypeOf(ChaptersTrackMenuItem.prototype),"handleClick",this).call(this);this.player_.currentTime(this.cue.startTime);}}]);return ChaptersTrackMenuItem;}(MenuItem);Component$1.registerComponent('ChaptersTrackMenuItem',ChaptersTrackMenuItem);/**
       * @file chapters-button.js
       */ /**
       * The button component for toggling and selecting chapters
       * Chapters act much differently than other text tracks
       * Cues are navigation vs. other tracks of alternative languages
       *
       * @extends TextTrackButton
       */var ChaptersButton=/*#__PURE__*/function(_TextTrackButton){_inherits(ChaptersButton,_TextTrackButton);var _super67=_createSuper(ChaptersButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when this function is ready.
         */function ChaptersButton(player,options,ready){var _this121;_classCallCheck(this,ChaptersButton);_this121=_super67.call(this,player,options,ready);_this121.setIcon('chapters');_this121.selectCurrentItem_=function(){_this121.items.forEach(function(item){item.selected(_this121.track_.activeCues[0]===item.cue);});};return _this121;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(ChaptersButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-chapters-button ".concat(_get(_getPrototypeOf(ChaptersButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-chapters-button ".concat(_get(_getPrototypeOf(ChaptersButton.prototype),"buildWrapperCSSClass",this).call(this));}/**
         * Update the menu based on the current state of its items.
         *
         * @param {Event} [event]
         *        An event that triggered this function to run.
         *
         * @listens TextTrackList#addtrack
         * @listens TextTrackList#removetrack
         * @listens TextTrackList#change
         */},{key:"update",value:function update(event){if(event&&event.track&&event.track.kind!=='chapters'){return;}var track=this.findChaptersTrack();if(track!==this.track_){this.setTrack(track);_get(_getPrototypeOf(ChaptersButton.prototype),"update",this).call(this);}else if(!this.items||track&&track.cues&&track.cues.length!==this.items.length){// Update the menu initially or if the number of cues has changed since set
_get(_getPrototypeOf(ChaptersButton.prototype),"update",this).call(this);}}/**
         * Set the currently selected track for the chapters button.
         *
         * @param {TextTrack} track
         *        The new track to select. Nothing will change if this is the currently selected
         *        track.
         */},{key:"setTrack",value:function setTrack(track){if(this.track_===track){return;}if(!this.updateHandler_){this.updateHandler_=this.update.bind(this);}// here this.track_ refers to the old track instance
if(this.track_){var remoteTextTrackEl=this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);if(remoteTextTrackEl){remoteTextTrackEl.removeEventListener('load',this.updateHandler_);}this.track_.removeEventListener('cuechange',this.selectCurrentItem_);this.track_=null;}this.track_=track;// here this.track_ refers to the new track instance
if(this.track_){this.track_.mode='hidden';var _remoteTextTrackEl=this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);if(_remoteTextTrackEl){_remoteTextTrackEl.addEventListener('load',this.updateHandler_);}this.track_.addEventListener('cuechange',this.selectCurrentItem_);}}/**
         * Find the track object that is currently in use by this ChaptersButton
         *
         * @return {TextTrack|undefined}
         *         The current track or undefined if none was found.
         */},{key:"findChaptersTrack",value:function findChaptersTrack(){var tracks=this.player_.textTracks()||[];for(var _i128=tracks.length-1;_i128>=0;_i128--){// We will always choose the last track as our chaptersTrack
var track=tracks[_i128];if(track.kind===this.kind_){return track;}}}/**
         * Get the caption for the ChaptersButton based on the track label. This will also
         * use the current tracks localized kind as a fallback if a label does not exist.
         *
         * @return {string}
         *         The tracks current label or the localized track kind.
         */},{key:"getMenuCaption",value:function getMenuCaption(){if(this.track_&&this.track_.label){return this.track_.label;}return this.localize(toTitleCase$1(this.kind_));}/**
         * Create menu from chapter track
         *
         * @return { import('../../menu/menu').default }
         *         New menu for the chapter buttons
         */},{key:"createMenu",value:function createMenu(){this.options_.title=this.getMenuCaption();return _get(_getPrototypeOf(ChaptersButton.prototype),"createMenu",this).call(this);}/**
         * Create a menu item for each text track
         *
         * @return  { import('./text-track-menu-item').default[] }
         *         Array of menu items
         */},{key:"createItems",value:function createItems(){var items=[];if(!this.track_){return items;}var cues=this.track_.cues;if(!cues){return items;}for(var _i129=0,_l7=cues.length;_i129<_l7;_i129++){var cue=cues[_i129];var mi=new ChaptersTrackMenuItem(this.player_,{track:this.track_,cue:cue});items.push(mi);}return items;}}]);return ChaptersButton;}(TextTrackButton);/**
       * `kind` of TextTrack to look for to associate it with this menu.
       *
       * @type {string}
       * @private
       */ChaptersButton.prototype.kind_='chapters';/**
       * The text that should display over the `ChaptersButton`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */ChaptersButton.prototype.controlText_='Chapters';Component$1.registerComponent('ChaptersButton',ChaptersButton);/**
       * @file descriptions-button.js
       */ /**
       * The button component for toggling and selecting descriptions
       *
       * @extends TextTrackButton
       */var DescriptionsButton=/*#__PURE__*/function(_TextTrackButton2){_inherits(DescriptionsButton,_TextTrackButton2);var _super68=_createSuper(DescriptionsButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when this component is ready.
         */function DescriptionsButton(player,options,ready){var _this122;_classCallCheck(this,DescriptionsButton);_this122=_super68.call(this,player,options,ready);_this122.setIcon('audio-description');var tracks=player.textTracks();var changeHandler=bind_(_assertThisInitialized2(_this122),_this122.handleTracksChange);tracks.addEventListener('change',changeHandler);_this122.on('dispose',function(){tracks.removeEventListener('change',changeHandler);});return _this122;}/**
         * Handle text track change
         *
         * @param {Event} event
         *        The event that caused this function to run
         *
         * @listens TextTrackList#change
         */_createClass(DescriptionsButton,[{key:"handleTracksChange",value:function handleTracksChange(event){var tracks=this.player().textTracks();var disabled=false;// Check whether a track of a different kind is showing
for(var _i130=0,_l8=tracks.length;_i130<_l8;_i130++){var track=tracks[_i130];if(track.kind!==this.kind_&&track.mode==='showing'){disabled=true;break;}}// If another track is showing, disable this menu button
if(disabled){this.disable();}else{this.enable();}}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */},{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-descriptions-button ".concat(_get(_getPrototypeOf(DescriptionsButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-descriptions-button ".concat(_get(_getPrototypeOf(DescriptionsButton.prototype),"buildWrapperCSSClass",this).call(this));}}]);return DescriptionsButton;}(TextTrackButton);/**
       * `kind` of TextTrack to look for to associate it with this menu.
       *
       * @type {string}
       * @private
       */DescriptionsButton.prototype.kind_='descriptions';/**
       * The text that should display over the `DescriptionsButton`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */DescriptionsButton.prototype.controlText_='Descriptions';Component$1.registerComponent('DescriptionsButton',DescriptionsButton);/**
       * @file subtitles-button.js
       */ /**
       * The button component for toggling and selecting subtitles
       *
       * @extends TextTrackButton
       */var SubtitlesButton=/*#__PURE__*/function(_TextTrackButton3){_inherits(SubtitlesButton,_TextTrackButton3);var _super69=_createSuper(SubtitlesButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when this component is ready.
         */function SubtitlesButton(player,options,ready){var _this123;_classCallCheck(this,SubtitlesButton);_this123=_super69.call(this,player,options,ready);_this123.setIcon('subtitles');return _this123;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(SubtitlesButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-subtitles-button ".concat(_get(_getPrototypeOf(SubtitlesButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-subtitles-button ".concat(_get(_getPrototypeOf(SubtitlesButton.prototype),"buildWrapperCSSClass",this).call(this));}}]);return SubtitlesButton;}(TextTrackButton);/**
       * `kind` of TextTrack to look for to associate it with this menu.
       *
       * @type {string}
       * @private
       */SubtitlesButton.prototype.kind_='subtitles';/**
       * The text that should display over the `SubtitlesButton`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */SubtitlesButton.prototype.controlText_='Subtitles';Component$1.registerComponent('SubtitlesButton',SubtitlesButton);/**
       * @file caption-settings-menu-item.js
       */ /**
       * The menu item for caption track settings menu
       *
       * @extends TextTrackMenuItem
       */var CaptionSettingsMenuItem=/*#__PURE__*/function(_TextTrackMenuItem2){_inherits(CaptionSettingsMenuItem,_TextTrackMenuItem2);var _super70=_createSuper(CaptionSettingsMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function CaptionSettingsMenuItem(player,options){var _this124;_classCallCheck(this,CaptionSettingsMenuItem);options.track={player:player,kind:options.kind,label:options.kind+' settings',selectable:false,default:false,mode:'disabled'};// CaptionSettingsMenuItem has no concept of 'selected'
options.selectable=false;options.name='CaptionSettingsMenuItem';_this124=_super70.call(this,player,options);_this124.addClass('vjs-texttrack-settings');_this124.controlText(', opens '+options.kind+' settings dialog');return _this124;}/**
         * This gets called when an `CaptionSettingsMenuItem` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */_createClass(CaptionSettingsMenuItem,[{key:"handleClick",value:function handleClick(event){this.player().getChild('textTrackSettings').open();}/**
         * Update control text and label on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.$('.vjs-menu-item-text').textContent=this.player_.localize(this.options_.kind+' settings');_get(_getPrototypeOf(CaptionSettingsMenuItem.prototype),"handleLanguagechange",this).call(this);}}]);return CaptionSettingsMenuItem;}(TextTrackMenuItem);Component$1.registerComponent('CaptionSettingsMenuItem',CaptionSettingsMenuItem);/**
       * @file captions-button.js
       */ /**
       * The button component for toggling and selecting captions
       *
       * @extends TextTrackButton
       */var CaptionsButton=/*#__PURE__*/function(_TextTrackButton4){_inherits(CaptionsButton,_TextTrackButton4);var _super71=_createSuper(CaptionsButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when this component is ready.
         */function CaptionsButton(player,options,ready){var _this125;_classCallCheck(this,CaptionsButton);_this125=_super71.call(this,player,options,ready);_this125.setIcon('captions');return _this125;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(CaptionsButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-captions-button ".concat(_get(_getPrototypeOf(CaptionsButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-captions-button ".concat(_get(_getPrototypeOf(CaptionsButton.prototype),"buildWrapperCSSClass",this).call(this));}/**
         * Create caption menu items
         *
         * @return {CaptionSettingsMenuItem[]}
         *         The array of current menu items.
         */},{key:"createItems",value:function createItems(){var items=[];if(!(this.player().tech_&&this.player().tech_.featuresNativeTextTracks)&&this.player().getChild('textTrackSettings')){items.push(new CaptionSettingsMenuItem(this.player_,{kind:this.kind_}));this.hideThreshold_+=1;}return _get(_getPrototypeOf(CaptionsButton.prototype),"createItems",this).call(this,items);}}]);return CaptionsButton;}(TextTrackButton);/**
       * `kind` of TextTrack to look for to associate it with this menu.
       *
       * @type {string}
       * @private
       */CaptionsButton.prototype.kind_='captions';/**
       * The text that should display over the `CaptionsButton`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */CaptionsButton.prototype.controlText_='Captions';Component$1.registerComponent('CaptionsButton',CaptionsButton);/**
       * @file subs-caps-menu-item.js
       */ /**
       * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles
       * in the SubsCapsMenu.
       *
       * @extends TextTrackMenuItem
       */var SubsCapsMenuItem=/*#__PURE__*/function(_TextTrackMenuItem3){_inherits(SubsCapsMenuItem,_TextTrackMenuItem3);var _super72=_createSuper(SubsCapsMenuItem);function SubsCapsMenuItem(){_classCallCheck(this,SubsCapsMenuItem);return _super72.apply(this,arguments);}_createClass(SubsCapsMenuItem,[{key:"createEl",value:function createEl(type,props,attrs){var el=_get(_getPrototypeOf(SubsCapsMenuItem.prototype),"createEl",this).call(this,type,props,attrs);var parentSpan=el.querySelector('.vjs-menu-item-text');if(this.options_.track.kind==='captions'){if(this.player_.options_.experimentalSvgIcons){this.setIcon('captions',el);}else{parentSpan.appendChild(_createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));}parentSpan.appendChild(_createEl('span',{className:'vjs-control-text',// space added as the text will visually flow with the
// label
textContent:" ".concat(this.localize('Captions'))}));}return el;}}]);return SubsCapsMenuItem;}(TextTrackMenuItem);Component$1.registerComponent('SubsCapsMenuItem',SubsCapsMenuItem);/**
       * @file sub-caps-button.js
       */ /**
       * The button component for toggling and selecting captions and/or subtitles
       *
       * @extends TextTrackButton
       */var SubsCapsButton=/*#__PURE__*/function(_TextTrackButton5){_inherits(SubsCapsButton,_TextTrackButton5);var _super73=_createSuper(SubsCapsButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {Function} [ready]
         *        The function to call when this component is ready.
         */function SubsCapsButton(player){var _this126;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,SubsCapsButton);_this126=_super73.call(this,player,options);// Although North America uses "captions" in most cases for
// "captions and subtitles" other locales use "subtitles"
_this126.label_='subtitles';_this126.setIcon('subtitles');if(['en','en-us','en-ca','fr-ca'].indexOf(_this126.player_.language_)>-1){_this126.label_='captions';_this126.setIcon('captions');}_this126.menuButton_.controlText(toTitleCase$1(_this126.label_));return _this126;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(SubsCapsButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-subs-caps-button ".concat(_get(_getPrototypeOf(SubsCapsButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-subs-caps-button ".concat(_get(_getPrototypeOf(SubsCapsButton.prototype),"buildWrapperCSSClass",this).call(this));}/**
         * Create caption/subtitles menu items
         *
         * @return {CaptionSettingsMenuItem[]}
         *         The array of current menu items.
         */},{key:"createItems",value:function createItems(){var items=[];if(!(this.player().tech_&&this.player().tech_.featuresNativeTextTracks)&&this.player().getChild('textTrackSettings')){items.push(new CaptionSettingsMenuItem(this.player_,{kind:this.label_}));this.hideThreshold_+=1;}items=_get(_getPrototypeOf(SubsCapsButton.prototype),"createItems",this).call(this,items,SubsCapsMenuItem);return items;}}]);return SubsCapsButton;}(TextTrackButton);/**
       * `kind`s of TextTrack to look for to associate it with this menu.
       *
       * @type {array}
       * @private
       */SubsCapsButton.prototype.kinds_=['captions','subtitles'];/**
       * The text that should display over the `SubsCapsButton`s controls.
       *
       *
       * @type {string}
       * @protected
       */SubsCapsButton.prototype.controlText_='Subtitles';Component$1.registerComponent('SubsCapsButton',SubsCapsButton);/**
       * @file audio-track-menu-item.js
       */ /**
       * An {@link AudioTrack} {@link MenuItem}
       *
       * @extends MenuItem
       */var AudioTrackMenuItem=/*#__PURE__*/function(_MenuItem3){_inherits(AudioTrackMenuItem,_MenuItem3);var _super74=_createSuper(AudioTrackMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function AudioTrackMenuItem(player,options){var _this127;_classCallCheck(this,AudioTrackMenuItem);var track=options.track;var tracks=player.audioTracks();// Modify options for parent MenuItem class's init.
options.label=track.label||track.language||'Unknown';options.selected=track.enabled;_this127=_super74.call(this,player,options);_this127.track=track;_this127.addClass("vjs-".concat(track.kind,"-menu-item"));var changeHandler=function changeHandler(){for(var _len36=arguments.length,args=new Array(_len36),_key37=0;_key37<_len36;_key37++){args[_key37]=arguments[_key37];}_this127.handleTracksChange.apply(_assertThisInitialized2(_this127),args);};tracks.addEventListener('change',changeHandler);_this127.on('dispose',function(){tracks.removeEventListener('change',changeHandler);});return _this127;}_createClass(AudioTrackMenuItem,[{key:"createEl",value:function createEl(type,props,attrs){var el=_get(_getPrototypeOf(AudioTrackMenuItem.prototype),"createEl",this).call(this,type,props,attrs);var parentSpan=el.querySelector('.vjs-menu-item-text');if(['main-desc','description'].indexOf(this.options_.track.kind)>=0){parentSpan.appendChild(_createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));parentSpan.appendChild(_createEl('span',{className:'vjs-control-text',textContent:' '+this.localize('Descriptions')}));}return el;}/**
         * This gets called when an `AudioTrackMenuItem is "clicked". See {@link ClickableComponent}
         * for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */},{key:"handleClick",value:function handleClick(event){_get(_getPrototypeOf(AudioTrackMenuItem.prototype),"handleClick",this).call(this,event);// the audio track list will automatically toggle other tracks
// off for us.
this.track.enabled=true;// when native audio tracks are used, we want to make sure that other tracks are turned off
if(this.player_.tech_.featuresNativeAudioTracks){var tracks=this.player_.audioTracks();for(var _i131=0;_i131<tracks.length;_i131++){var track=tracks[_i131];// skip the current track since we enabled it above
if(track===this.track){continue;}track.enabled=track===this.track;}}}/**
         * Handle any {@link AudioTrack} change.
         *
         * @param {Event} [event]
         *        The {@link AudioTrackList#change} event that caused this to run.
         *
         * @listens AudioTrackList#change
         */},{key:"handleTracksChange",value:function handleTracksChange(event){this.selected(this.track.enabled);}}]);return AudioTrackMenuItem;}(MenuItem);Component$1.registerComponent('AudioTrackMenuItem',AudioTrackMenuItem);/**
       * @file audio-track-button.js
       */ /**
       * The base class for buttons that toggle specific {@link AudioTrack} types.
       *
       * @extends TrackButton
       */var AudioTrackButton=/*#__PURE__*/function(_TrackButton2){_inherits(AudioTrackButton,_TrackButton2);var _super75=_createSuper(AudioTrackButton);/**
         * Creates an instance of this class.
         *
         * @param {Player} player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options={}]
         *        The key/value store of player options.
         */function AudioTrackButton(player){var _this128;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,AudioTrackButton);options.tracks=player.audioTracks();_this128=_super75.call(this,player,options);_this128.setIcon('audio');return _this128;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */_createClass(AudioTrackButton,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-audio-button ".concat(_get(_getPrototypeOf(AudioTrackButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-audio-button ".concat(_get(_getPrototypeOf(AudioTrackButton.prototype),"buildWrapperCSSClass",this).call(this));}/**
         * Create a menu item for each audio track
         *
         * @param {AudioTrackMenuItem[]} [items=[]]
         *        An array of existing menu items to use.
         *
         * @return {AudioTrackMenuItem[]}
         *         An array of menu items
         */},{key:"createItems",value:function createItems(){var items=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];// if there's only one audio track, there no point in showing it
this.hideThreshold_=1;var tracks=this.player_.audioTracks();for(var _i132=0;_i132<tracks.length;_i132++){var track=tracks[_i132];items.push(new AudioTrackMenuItem(this.player_,{track:track,// MenuItem is selectable
selectable:true,// MenuItem is NOT multiSelectable (i.e. only one can be marked "selected" at a time)
multiSelectable:false}));}return items;}}]);return AudioTrackButton;}(TrackButton);/**
       * The text that should display over the `AudioTrackButton`s controls. Added for localization.
       *
       * @type {string}
       * @protected
       */AudioTrackButton.prototype.controlText_='Audio Track';Component$1.registerComponent('AudioTrackButton',AudioTrackButton);/**
       * @file playback-rate-menu-item.js
       */ /**
       * The specific menu item type for selecting a playback rate.
       *
       * @extends MenuItem
       */var PlaybackRateMenuItem=/*#__PURE__*/function(_MenuItem4){_inherits(PlaybackRateMenuItem,_MenuItem4);var _super76=_createSuper(PlaybackRateMenuItem);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function PlaybackRateMenuItem(player,options){var _this129;_classCallCheck(this,PlaybackRateMenuItem);var label=options.rate;var rate=parseFloat(label,10);// Modify options for parent MenuItem class's init.
options.label=label;options.selected=rate===player.playbackRate();options.selectable=true;options.multiSelectable=false;_this129=_super76.call(this,player,options);_this129.label=label;_this129.rate=rate;_this129.on(player,'ratechange',function(e){return _this129.update(e);});return _this129;}/**
         * This gets called when an `PlaybackRateMenuItem` is "clicked". See
         * {@link ClickableComponent} for more detailed information on what a click can be.
         *
         * @param {Event} [event]
         *        The `keydown`, `tap`, or `click` event that caused this function to be
         *        called.
         *
         * @listens tap
         * @listens click
         */_createClass(PlaybackRateMenuItem,[{key:"handleClick",value:function handleClick(event){_get(_getPrototypeOf(PlaybackRateMenuItem.prototype),"handleClick",this).call(this);this.player().playbackRate(this.rate);}/**
         * Update the PlaybackRateMenuItem when the playbackrate changes.
         *
         * @param {Event} [event]
         *        The `ratechange` event that caused this function to run.
         *
         * @listens Player#ratechange
         */},{key:"update",value:function update(event){this.selected(this.player().playbackRate()===this.rate);}}]);return PlaybackRateMenuItem;}(MenuItem);/**
       * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.
       *
       * @type {string}
       * @private
       */PlaybackRateMenuItem.prototype.contentElType='button';Component$1.registerComponent('PlaybackRateMenuItem',PlaybackRateMenuItem);/**
       * @file playback-rate-menu-button.js
       */ /**
       * The component for controlling the playback rate.
       *
       * @extends MenuButton
       */var PlaybackRateMenuButton=/*#__PURE__*/function(_MenuButton2){_inherits(PlaybackRateMenuButton,_MenuButton2);var _super77=_createSuper(PlaybackRateMenuButton);/**
         * Creates an instance of this class.
         *
         * @param { import('../../player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         */function PlaybackRateMenuButton(player,options){var _this130;_classCallCheck(this,PlaybackRateMenuButton);_this130=_super77.call(this,player,options);_this130.menuButton_.el_.setAttribute('aria-describedby',_this130.labelElId_);_this130.updateVisibility();_this130.updateLabel();_this130.on(player,'loadstart',function(e){return _this130.updateVisibility(e);});_this130.on(player,'ratechange',function(e){return _this130.updateLabel(e);});_this130.on(player,'playbackrateschange',function(e){return _this130.handlePlaybackRateschange(e);});return _this130;}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(PlaybackRateMenuButton,[{key:"createEl",value:function createEl(){var el=_get(_getPrototypeOf(PlaybackRateMenuButton.prototype),"createEl",this).call(this);this.labelElId_='vjs-playback-rate-value-label-'+this.id_;this.labelEl_=_createEl('div',{className:'vjs-playback-rate-value',id:this.labelElId_,textContent:'1x'});el.appendChild(this.labelEl_);return el;}},{key:"dispose",value:function dispose(){this.labelEl_=null;_get(_getPrototypeOf(PlaybackRateMenuButton.prototype),"dispose",this).call(this);}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */},{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-playback-rate ".concat(_get(_getPrototypeOf(PlaybackRateMenuButton.prototype),"buildCSSClass",this).call(this));}},{key:"buildWrapperCSSClass",value:function buildWrapperCSSClass(){return"vjs-playback-rate ".concat(_get(_getPrototypeOf(PlaybackRateMenuButton.prototype),"buildWrapperCSSClass",this).call(this));}/**
         * Create the list of menu items. Specific to each subclass.
         *
         */},{key:"createItems",value:function createItems(){var rates=this.playbackRates();var items=[];for(var _i133=rates.length-1;_i133>=0;_i133--){items.push(new PlaybackRateMenuItem(this.player(),{rate:rates[_i133]+'x'}));}return items;}/**
         * On playbackrateschange, update the menu to account for the new items.
         *
         * @listens Player#playbackrateschange
         */},{key:"handlePlaybackRateschange",value:function handlePlaybackRateschange(event){this.update();}/**
         * Get possible playback rates
         *
         * @return {Array}
         *         All possible playback rates
         */},{key:"playbackRates",value:function playbackRates(){var player=this.player();return player.playbackRates&&player.playbackRates()||[];}/**
         * Get whether playback rates is supported by the tech
         * and an array of playback rates exists
         *
         * @return {boolean}
         *         Whether changing playback rate is supported
         */},{key:"playbackRateSupported",value:function playbackRateSupported(){return this.player().tech_&&this.player().tech_.featuresPlaybackRate&&this.playbackRates()&&this.playbackRates().length>0;}/**
         * Hide playback rate controls when they're no playback rate options to select
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#loadstart
         */},{key:"updateVisibility",value:function updateVisibility(event){if(this.playbackRateSupported()){this.removeClass('vjs-hidden');}else{this.addClass('vjs-hidden');}}/**
         * Update button label when rate changed
         *
         * @param {Event} [event]
         *        The event that caused this function to run.
         *
         * @listens Player#ratechange
         */},{key:"updateLabel",value:function updateLabel(event){if(this.playbackRateSupported()){this.labelEl_.textContent=this.player().playbackRate()+'x';}}}]);return PlaybackRateMenuButton;}(MenuButton);/**
       * The text that should display over the `PlaybackRateMenuButton`s controls.
       *
       * Added for localization.
       *
       * @type {string}
       * @protected
       */PlaybackRateMenuButton.prototype.controlText_='Playback Rate';Component$1.registerComponent('PlaybackRateMenuButton',PlaybackRateMenuButton);/**
       * @file spacer.js
       */ /**
       * Just an empty spacer element that can be used as an append point for plugins, etc.
       * Also can be used to create space between elements when necessary.
       *
       * @extends Component
       */var Spacer=/*#__PURE__*/function(_Component$23){_inherits(Spacer,_Component$23);var _super78=_createSuper(Spacer);function Spacer(){_classCallCheck(this,Spacer);return _super78.apply(this,arguments);}_createClass(Spacer,[{key:"buildCSSClass",value:/**
        * Builds the default DOM `className`.
        *
        * @return {string}
        *         The DOM `className` for this object.
        */function buildCSSClass(){return"vjs-spacer ".concat(_get(_getPrototypeOf(Spacer.prototype),"buildCSSClass",this).call(this));}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){var tag=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'div';var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var attributes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!props.className){props.className=this.buildCSSClass();}return _get(_getPrototypeOf(Spacer.prototype),"createEl",this).call(this,tag,props,attributes);}}]);return Spacer;}(Component$1);Component$1.registerComponent('Spacer',Spacer);/**
       * @file custom-control-spacer.js
       */ /**
       * Spacer specifically meant to be used as an insertion point for new plugins, etc.
       *
       * @extends Spacer
       */var CustomControlSpacer=/*#__PURE__*/function(_Spacer){_inherits(CustomControlSpacer,_Spacer);var _super79=_createSuper(CustomControlSpacer);function CustomControlSpacer(){_classCallCheck(this,CustomControlSpacer);return _super79.apply(this,arguments);}_createClass(CustomControlSpacer,[{key:"buildCSSClass",value:/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         */function buildCSSClass(){return"vjs-custom-control-spacer ".concat(_get(_getPrototypeOf(CustomControlSpacer.prototype),"buildCSSClass",this).call(this));}/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */},{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(CustomControlSpacer.prototype),"createEl",this).call(this,'div',{className:this.buildCSSClass(),// No-flex/table-cell mode requires there be some content
// in the cell to fill the remaining space of the table.
textContent:"\xA0"});}}]);return CustomControlSpacer;}(Spacer);Component$1.registerComponent('CustomControlSpacer',CustomControlSpacer);/**
       * @file control-bar.js
       */ /**
       * Container of main controls.
       *
       * @extends Component
       */var ControlBar=/*#__PURE__*/function(_Component$24){_inherits(ControlBar,_Component$24);var _super80=_createSuper(ControlBar);function ControlBar(){_classCallCheck(this,ControlBar);return _super80.apply(this,arguments);}_createClass(ControlBar,[{key:"createEl",value:/**
         * Create the `Component`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */function createEl(){return _get(_getPrototypeOf(ControlBar.prototype),"createEl",this).call(this,'div',{className:'vjs-control-bar',dir:'ltr'});}}]);return ControlBar;}(Component$1);/**
       * Default options for `ControlBar`
       *
       * @type {Object}
       * @private
       */ControlBar.prototype.options_={children:['playToggle','skipBackward','skipForward','volumePanel','currentTimeDisplay','timeDivider','durationDisplay','progressControl','liveDisplay','seekToLive','remainingTimeDisplay','customControlSpacer','playbackRateMenuButton','chaptersButton','descriptionsButton','subsCapsButton','audioTrackButton','pictureInPictureToggle','fullscreenToggle']};Component$1.registerComponent('ControlBar',ControlBar);/**
       * @file error-display.js
       */ /**
       * A display that indicates an error has occurred. This means that the video
       * is unplayable.
       *
       * @extends ModalDialog
       */var ErrorDisplay=/*#__PURE__*/function(_ModalDialog){_inherits(ErrorDisplay,_ModalDialog);var _super81=_createSuper(ErrorDisplay);/**
         * Creates an instance of this class.
         *
         * @param  { import('./player').default } player
         *         The `Player` that this class should be attached to.
         *
         * @param  {Object} [options]
         *         The key/value store of player options.
         */function ErrorDisplay(player,options){var _this131;_classCallCheck(this,ErrorDisplay);_this131=_super81.call(this,player,options);_this131.on(player,'error',function(e){_this131.open(e);});return _this131;}/**
         * Builds the default DOM `className`.
         *
         * @return {string}
         *         The DOM `className` for this object.
         *
         * @deprecated Since version 5.
         */_createClass(ErrorDisplay,[{key:"buildCSSClass",value:function buildCSSClass(){return"vjs-error-display ".concat(_get(_getPrototypeOf(ErrorDisplay.prototype),"buildCSSClass",this).call(this));}/**
         * Gets the localized error message based on the `Player`s error.
         *
         * @return {string}
         *         The `Player`s error message localized or an empty string.
         */},{key:"content",value:function content(){var error=this.player().error();return error?this.localize(error.message):'';}}]);return ErrorDisplay;}(ModalDialog);/**
       * The default options for an `ErrorDisplay`.
       *
       * @private
       */ErrorDisplay.prototype.options_=Object.assign({},ModalDialog.prototype.options_,{pauseOnOpen:false,fillAlways:true,temporary:false,uncloseable:true});Component$1.registerComponent('ErrorDisplay',ErrorDisplay);/**
       * Creates DOM element of 'select' & its options.
       *
       * @extends Component
       */var TextTrackSelect=/*#__PURE__*/function(_Component$25){_inherits(TextTrackSelect,_Component$25);var _super82=_createSuper(TextTrackSelect);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param { import('../utils/dom').ContentDescriptor} [options.content=undefined]
         *        Provide customized content for this modal.
         *
         * @param {string} [options.legendId]
         *        A text with part of an string to create atribute of aria-labelledby.
         *
         * @param {string} [options.id]
         *        A text with part of an string to create atribute of aria-labelledby.
         *
         * @param {array} [options.SelectOptions]
         *        Array that contains the value & textContent of for each of the
         *        options elements.
         */function TextTrackSelect(player){var _this132;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TextTrackSelect);_this132=_super82.call(this,player,options);_this132.el_.setAttribute('aria-labelledby',_this132.selectLabelledbyIds);return _this132;}/**
         * Create the `TextTrackSelect`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(TextTrackSelect,[{key:"createEl",value:function createEl(){var _this133=this;this.selectLabelledbyIds=[this.options_.legendId,this.options_.labelId].join(' ').trim();// Create select & inner options
var selectoptions=_createEl('select',{id:this.options_.id},{},this.options_.SelectOptions.map(function(optionText){var optionId=_this133.options_.labelId+'-'+optionText[1].replace(/\W+/g,'');var option=_createEl('option',{id:optionId,value:_this133.localize(optionText[0]),textContent:optionText[1]});option.setAttribute('aria-labelledby',"".concat(_this133.selectLabelledbyIds," ").concat(optionId));return option;}));return selectoptions;}}]);return TextTrackSelect;}(Component$1);Component$1.registerComponent('TextTrackSelect',TextTrackSelect);/**
       * Creates fieldset section of 'TextTrackSettings'.
       * Manganes two versions of fieldsets, one for type of 'colors'
       * & the other for 'font', Component adds diferent DOM elements
       * to that fieldset  depending on the type.
       *
       * @extends Component
       */var TextTrackFieldset=/*#__PURE__*/function(_Component$26){_inherits(TextTrackFieldset,_Component$26);var _super83=_createSuper(TextTrackFieldset);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param { import('../utils/dom').ContentDescriptor} [options.content=undefined]
         *        Provide customized content for this modal.
         *
         * @param {string} [options.legendId]
         *        A text with part of an string to create atribute of aria-labelledby.
         *        It passes to 'TextTrackSelect'.
         *
         * @param {string} [options.id]
         *        A text with part of an string to create atribute of aria-labelledby.
         *        It passes to 'TextTrackSelect'.
         *
         * @param {string} [options.legendText]
         *        A text to use as the text content of the legend element.
         *
         * @param {array} [options.selects]
         *        Array that contains the selects that are use to create 'selects'
         *        components.
         *
         * @param {array} [options.SelectOptions]
         *        Array that contains the value & textContent of for each of the
         *        options elements, it passes to 'TextTrackSelect'.
         *
         * @param {string} [options.type]
         *        Conditions if some DOM elements will be added to the fieldset
         *        component.
         *
         * @param {Object} [options.selectConfigs]
         *        Object with the following properties that are the selects configurations:
         *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,
         *        fontPercent, textOpacity, windowColor, windowOpacity.
         *        These properties are use to configure the 'TextTrackSelect' Component.
         */function TextTrackFieldset(player){var _this134;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TextTrackFieldset);_this134=_super83.call(this,player,options);// Add Components & DOM Elements
var legendElement=_createEl('legend',{textContent:_this134.localize(_this134.options_.legendText),id:_this134.options_.legendId});_this134.el().appendChild(legendElement);var selects=_this134.options_.selects;// Iterate array of selects to create 'selects' components
var _iterator14=_createForOfIteratorHelper(selects),_step14;try{for(_iterator14.s();!(_step14=_iterator14.n()).done;){var _i134=_step14.value;var selectConfig=_this134.options_.selectConfigs[_i134];var selectClassName=selectConfig.className;var id=selectConfig.id.replace('%s',_this134.options_.id_);var span=null;var guid="vjs_select_".concat(newGUID());// Conditionally create span to add on the component
if(_this134.options_.type==='colors'){span=_createEl('span',{className:selectClassName});var label=_createEl('label',{id:id,className:'vjs-label',textContent:selectConfig.label});label.setAttribute('for',guid);span.appendChild(label);}var textTrackSelect=new TextTrackSelect(player,{SelectOptions:selectConfig.options,legendId:_this134.options_.legendId,id:guid,labelId:id});_this134.addChild(textTrackSelect);// Conditionally append to 'select' component to conditionally created span
if(_this134.options_.type==='colors'){span.appendChild(textTrackSelect.el());_this134.el().appendChild(span);}}}catch(err){_iterator14.e(err);}finally{_iterator14.f();}return _this134;}/**
         * Create the `TextTrackFieldset`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(TextTrackFieldset,[{key:"createEl",value:function createEl(){var el=_createEl('fieldset',{// Prefixing classes of elements within a player with "vjs-"
// is a convention used in Video.js.
className:this.options_.className});return el;}}]);return TextTrackFieldset;}(Component$1);Component$1.registerComponent('TextTrackFieldset',TextTrackFieldset);/**
       * The component 'TextTrackSettingsColors' displays a set of 'fieldsets'
       * using the component 'TextTrackFieldset'.
       *
       * @extends Component
       */var TextTrackSettingsColors=/*#__PURE__*/function(_Component$27){_inherits(TextTrackSettingsColors,_Component$27);var _super84=_createSuper(TextTrackSettingsColors);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param { import('../utils/dom').ContentDescriptor} [options.content=undefined]
         *        Provide customized content for this modal.
         *
         * @param {Array} [options.fieldSets]
         *        Array that contains the configurations for the selects.
         *
         * @param {Object} [options.selectConfigs]
         *        Object with the following properties that are the select confugations:
         *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,
         *        fontPercent, textOpacity, windowColor, windowOpacity.
         *        it passes to 'TextTrackFieldset'.
         */function TextTrackSettingsColors(player){var _this135;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TextTrackSettingsColors);_this135=_super84.call(this,player,options);var id_=_this135.options_.textTrackComponentid;// createElFgColor_
var ElFgColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-text-legend-".concat(id_),legendText:_this135.localize('Text'),className:'vjs-fg vjs-track-setting',selects:_this135.options_.fieldSets[0],selectConfigs:_this135.options_.selectConfigs,type:'colors'});_this135.addChild(ElFgColorFieldset);// createElBgColor_
var ElBgColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-background-".concat(id_),legendText:_this135.localize('Text Background'),className:'vjs-bg vjs-track-setting',selects:_this135.options_.fieldSets[1],selectConfigs:_this135.options_.selectConfigs,type:'colors'});_this135.addChild(ElBgColorFieldset);// createElWinColor_
var ElWinColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-window-".concat(id_),legendText:_this135.localize('Caption Area Background'),className:'vjs-window vjs-track-setting',selects:_this135.options_.fieldSets[2],selectConfigs:_this135.options_.selectConfigs,type:'colors'});_this135.addChild(ElWinColorFieldset);return _this135;}/**
         * Create the `TextTrackSettingsColors`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(TextTrackSettingsColors,[{key:"createEl",value:function createEl(){var el=_createEl('div',{className:'vjs-track-settings-colors'});return el;}}]);return TextTrackSettingsColors;}(Component$1);Component$1.registerComponent('TextTrackSettingsColors',TextTrackSettingsColors);/**
       * The component 'TextTrackSettingsFont' displays a set of 'fieldsets'
       * using the component 'TextTrackFieldset'.
       *
       * @extends Component
       */var TextTrackSettingsFont=/*#__PURE__*/function(_Component$28){_inherits(TextTrackSettingsFont,_Component$28);var _super85=_createSuper(TextTrackSettingsFont);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param { import('../utils/dom').ContentDescriptor} [options.content=undefined]
         *        Provide customized content for this modal.
         *
         * @param {Array} [options.fieldSets]
         *        Array that contains the configurations for the selects.
         *
         * @param {Object} [options.selectConfigs]
         *        Object with the following properties that are the select confugations:
         *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,
         *        fontPercent, textOpacity, windowColor, windowOpacity.
         *        it passes to 'TextTrackFieldset'.
         */function TextTrackSettingsFont(player){var _this136;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TextTrackSettingsFont);_this136=_super85.call(this,player,options);var id_=_this136.options_.textTrackComponentid;var ElFgColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-font-size-".concat(id_),legendText:'Font Size',className:'vjs-font-percent vjs-track-setting',selects:_this136.options_.fieldSets[0],selectConfigs:_this136.options_.selectConfigs,type:'font'});_this136.addChild(ElFgColorFieldset);var ElBgColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-background-".concat(id_),legendText:_this136.localize('Text Edge Style'),className:'vjs-edge-style vjs-track-setting',selects:_this136.options_.fieldSets[1],selectConfigs:_this136.options_.selectConfigs,type:'font'});_this136.addChild(ElBgColorFieldset);var ElWinColorFieldset=new TextTrackFieldset(player,{id_:id_,legendId:"captions-font-family-".concat(id_),legendText:_this136.localize('Font Family'),className:'vjs-font-family vjs-track-setting',selects:_this136.options_.fieldSets[2],selectConfigs:_this136.options_.selectConfigs,type:'font'});_this136.addChild(ElWinColorFieldset);return _this136;}/**
         * Create the `TextTrackSettingsFont`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(TextTrackSettingsFont,[{key:"createEl",value:function createEl(){var el=_createEl('div',{className:'vjs-track-settings-font'});return el;}}]);return TextTrackSettingsFont;}(Component$1);Component$1.registerComponent('TextTrackSettingsFont',TextTrackSettingsFont);/**
       * Buttons of reset & done that modal 'TextTrackSettings'
       * uses as part of its content.
       *
       * 'Reset': Resets all settings on 'TextTrackSettings'.
       * 'Done': Closes 'TextTrackSettings' modal.
       *
       * @extends Component
       */var TrackSettingsControls=/*#__PURE__*/function(_Component$29){_inherits(TrackSettingsControls,_Component$29);var _super86=_createSuper(TrackSettingsControls);function TrackSettingsControls(player){var _this137;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TrackSettingsControls);_this137=_super86.call(this,player,options);// Create DOM elements
var defaultsDescription=_this137.localize('restore all settings to the default values');var resetButton=new Button(player,{controlText:defaultsDescription,className:'vjs-default-button'});resetButton.el().classList.remove('vjs-control','vjs-button');resetButton.el().textContent=_this137.localize('Reset');_this137.addChild(resetButton);var doneButton=new Button(player,{controlText:defaultsDescription,className:'vjs-done-button'});// Remove unrequired style classes
doneButton.el().classList.remove('vjs-control','vjs-button');doneButton.el().textContent=_this137.localize('Done');_this137.addChild(doneButton);return _this137;}/**
         * Create the `TrackSettingsControls`'s DOM element
         *
         * @return {Element}
         *         The DOM element that gets created.
         */_createClass(TrackSettingsControls,[{key:"createEl",value:function createEl(){var el=_createEl('div',{className:'vjs-track-settings-controls'});return el;}}]);return TrackSettingsControls;}(Component$1);Component$1.registerComponent('TrackSettingsControls',TrackSettingsControls);/**
       * @file text-track-settings.js
       */var LOCAL_STORAGE_KEY$1='vjs-text-track-settings';var COLOR_BLACK=['#000','Black'];var COLOR_BLUE=['#00F','Blue'];var COLOR_CYAN=['#0FF','Cyan'];var COLOR_GREEN=['#0F0','Green'];var COLOR_MAGENTA=['#F0F','Magenta'];var COLOR_RED=['#F00','Red'];var COLOR_WHITE=['#FFF','White'];var COLOR_YELLOW=['#FF0','Yellow'];var OPACITY_OPAQUE=['1','Opaque'];var OPACITY_SEMI=['0.5','Semi-Transparent'];var OPACITY_TRANS=['0','Transparent'];// Configuration for the various <select> elements in the DOM of this component.
//
// Possible keys include:
//
// `default`:
//   The default option index. Only needs to be provided if not zero.
// `parser`:
//   A function which is used to parse the value from the selected option in
//   a customized way.
// `selector`:
//   The selector used to find the associated <select> element.
var selectConfigs={backgroundColor:{selector:'.vjs-bg-color > select',id:'captions-background-color-%s',label:'Color',options:[COLOR_BLACK,COLOR_WHITE,COLOR_RED,COLOR_GREEN,COLOR_BLUE,COLOR_YELLOW,COLOR_MAGENTA,COLOR_CYAN],className:'vjs-bg-color'},backgroundOpacity:{selector:'.vjs-bg-opacity > select',id:'captions-background-opacity-%s',label:'Opacity',options:[OPACITY_OPAQUE,OPACITY_SEMI,OPACITY_TRANS],className:'vjs-bg-opacity vjs-opacity'},color:{selector:'.vjs-text-color > select',id:'captions-foreground-color-%s',label:'Color',options:[COLOR_WHITE,COLOR_BLACK,COLOR_RED,COLOR_GREEN,COLOR_BLUE,COLOR_YELLOW,COLOR_MAGENTA,COLOR_CYAN],className:'vjs-text-color'},edgeStyle:{selector:'.vjs-edge-style > select',id:'%s',label:'Text Edge Style',options:[['none','None'],['raised','Raised'],['depressed','Depressed'],['uniform','Uniform'],['dropshadow','Drop shadow']]},fontFamily:{selector:'.vjs-font-family > select',id:'captions-font-family-%s',label:'Font Family',options:[['proportionalSansSerif','Proportional Sans-Serif'],['monospaceSansSerif','Monospace Sans-Serif'],['proportionalSerif','Proportional Serif'],['monospaceSerif','Monospace Serif'],['casual','Casual'],['script','Script'],['small-caps','Small Caps']]},fontPercent:{selector:'.vjs-font-percent > select',id:'captions-font-size-%s',label:'Font Size',options:[['0.50','50%'],['0.75','75%'],['1.00','100%'],['1.25','125%'],['1.50','150%'],['1.75','175%'],['2.00','200%'],['3.00','300%'],['4.00','400%']],default:2,parser:function parser(v){return v==='1.00'?null:Number(v);}},textOpacity:{selector:'.vjs-text-opacity > select',id:'captions-foreground-opacity-%s',label:'Opacity',options:[OPACITY_OPAQUE,OPACITY_SEMI],className:'vjs-text-opacity vjs-opacity'},// Options for this object are defined below.
windowColor:{selector:'.vjs-window-color > select',id:'captions-window-color-%s',label:'Color',className:'vjs-window-color'},// Options for this object are defined below.
windowOpacity:{selector:'.vjs-window-opacity > select',id:'captions-window-opacity-%s',label:'Opacity',options:[OPACITY_TRANS,OPACITY_SEMI,OPACITY_OPAQUE],className:'vjs-window-opacity vjs-opacity'}};selectConfigs.windowColor.options=selectConfigs.backgroundColor.options;/**
       * Get the actual value of an option.
       *
       * @param  {string} value
       *         The value to get
       *
       * @param  {Function} [parser]
       *         Optional function to adjust the value.
       *
       * @return {*}
       *         - Will be `undefined` if no value exists
       *         - Will be `undefined` if the given value is "none".
       *         - Will be the actual value otherwise.
       *
       * @private
       */function parseOptionValue(value,parser){if(parser){value=parser(value);}if(value&&value!=='none'){return value;}}/**
       * Gets the value of the selected <option> element within a <select> element.
       *
       * @param  {Element} el
       *         the element to look in
       *
       * @param  {Function} [parser]
       *         Optional function to adjust the value.
       *
       * @return {*}
       *         - Will be `undefined` if no value exists
       *         - Will be `undefined` if the given value is "none".
       *         - Will be the actual value otherwise.
       *
       * @private
       */function getSelectedOptionValue(el,parser){var value=el.options[el.options.selectedIndex].value;return parseOptionValue(value,parser);}/**
       * Sets the selected <option> element within a <select> element based on a
       * given value.
       *
       * @param {Element} el
       *        The element to look in.
       *
       * @param {string} value
       *        the property to look on.
       *
       * @param {Function} [parser]
       *        Optional function to adjust the value before comparing.
       *
       * @private
       */function setSelectedOption(el,value,parser){if(!value){return;}for(var _i135=0;_i135<el.options.length;_i135++){if(parseOptionValue(el.options[_i135].value,parser)===value){el.selectedIndex=_i135;break;}}}/**
       * Manipulate Text Tracks settings.
       *
       * @extends ModalDialog
       */var TextTrackSettings=/*#__PURE__*/function(_ModalDialog2){_inherits(TextTrackSettings,_ModalDialog2);var _super87=_createSuper(TextTrackSettings);/**
         * Creates an instance of this class.
         *
         * @param { import('../player').default } player
         *         The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *         The key/value store of player options.
         */function TextTrackSettings(player,options){var _this138;_classCallCheck(this,TextTrackSettings);options.temporary=false;_this138=_super87.call(this,player,options);_this138.updateDisplay=_this138.updateDisplay.bind(_assertThisInitialized2(_this138));// fill the modal and pretend we have opened it
_this138.fill();_this138.hasBeenOpened_=_this138.hasBeenFilled_=true;_this138.renderModalComponents(player);_this138.endDialog=_createEl('p',{className:'vjs-control-text',textContent:_this138.localize('End of dialog window.')});_this138.el().appendChild(_this138.endDialog);_this138.setDefaults();// Grab `persistTextTrackSettings` from the player options if not passed in child options
if(options.persistTextTrackSettings===undefined){_this138.options_.persistTextTrackSettings=_this138.options_.playerOptions.persistTextTrackSettings;}_this138.bindFunctionsToSelectsAndButtons();if(_this138.options_.persistTextTrackSettings){_this138.restoreSettings();}return _this138;}_createClass(TextTrackSettings,[{key:"renderModalComponents",value:function renderModalComponents(player){var textTrackSettingsColors=new TextTrackSettingsColors(player,{textTrackComponentid:this.id_,selectConfigs:selectConfigs,fieldSets:[['color','textOpacity'],['backgroundColor','backgroundOpacity'],['windowColor','windowOpacity']]});this.addChild(textTrackSettingsColors);var textTrackSettingsFont=new TextTrackSettingsFont(player,{textTrackComponentid:this.id_,selectConfigs:selectConfigs,fieldSets:[['fontPercent'],['edgeStyle'],['fontFamily']]});this.addChild(textTrackSettingsFont);var trackSettingsControls=new TrackSettingsControls(player);this.addChild(trackSettingsControls);}},{key:"bindFunctionsToSelectsAndButtons",value:function bindFunctionsToSelectsAndButtons(){var _this139=this;this.on(this.$('.vjs-done-button'),'click',function(){_this139.saveSettings();_this139.close();});this.on(this.$('.vjs-default-button'),'click',function(){_this139.setDefaults();_this139.updateDisplay();});each(selectConfigs,function(config){_this139.on(_this139.$(config.selector),'change',_this139.updateDisplay);});}},{key:"dispose",value:function dispose(){this.endDialog=null;_get(_getPrototypeOf(TextTrackSettings.prototype),"dispose",this).call(this);}},{key:"label",value:function label(){return this.localize('Caption Settings Dialog');}},{key:"description",value:function description(){return this.localize('Beginning of dialog window. Escape will cancel and close the window.');}},{key:"buildCSSClass",value:function buildCSSClass(){return _get(_getPrototypeOf(TextTrackSettings.prototype),"buildCSSClass",this).call(this)+' vjs-text-track-settings';}/**
         * Gets an object of text track settings (or null).
         *
         * @return {Object}
         *         An object with config values parsed from the DOM or localStorage.
         */},{key:"getValues",value:function getValues(){var _this140=this;return reduce(selectConfigs,function(accum,config,key){var value=getSelectedOptionValue(_this140.$(config.selector),config.parser);if(value!==undefined){accum[key]=value;}return accum;},{});}/**
         * Sets text track settings from an object of values.
         *
         * @param {Object} values
         *        An object with config values parsed from the DOM or localStorage.
         */},{key:"setValues",value:function setValues(values){var _this141=this;each(selectConfigs,function(config,key){setSelectedOption(_this141.$(config.selector),values[key],config.parser);});}/**
         * Sets all `<select>` elements to their default values.
         */},{key:"setDefaults",value:function setDefaults(){var _this142=this;each(selectConfigs,function(config){var index=config.hasOwnProperty('default')?config.default:0;_this142.$(config.selector).selectedIndex=index;});}/**
         * Restore texttrack settings from localStorage
         */},{key:"restoreSettings",value:function restoreSettings(){var values;try{values=JSON.parse(window_1.localStorage.getItem(LOCAL_STORAGE_KEY$1));}catch(err){log$1.warn(err);}if(values){this.setValues(values);}}/**
         * Save text track settings to localStorage
         */},{key:"saveSettings",value:function saveSettings(){if(!this.options_.persistTextTrackSettings){return;}var values=this.getValues();try{if(Object.keys(values).length){window_1.localStorage.setItem(LOCAL_STORAGE_KEY$1,JSON.stringify(values));}else{window_1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);}}catch(err){log$1.warn(err);}}/**
         * Update display of text track settings
         */},{key:"updateDisplay",value:function updateDisplay(){var ttDisplay=this.player_.getChild('textTrackDisplay');if(ttDisplay){ttDisplay.updateDisplay();}}/**
         * Repopulate dialog with new localizations on languagechange
         */},{key:"handleLanguagechange",value:function handleLanguagechange(){this.fill();this.renderModalComponents(this.player_);this.bindFunctionsToSelectsAndButtons();}}]);return TextTrackSettings;}(ModalDialog);Component$1.registerComponent('TextTrackSettings',TextTrackSettings);/**
       * @file resize-manager.js
       */ /**
       * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.
       *
       * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.
       *
       * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.
       * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.
       *
       * @example <caption>How to disable the resize manager</caption>
       * const player = videojs('#vid', {
       *   resizeManager: false
       * });
       *
       * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}
       *
       * @extends Component
       */var ResizeManager=/*#__PURE__*/function(_Component$30){_inherits(ResizeManager,_Component$30);var _super88=_createSuper(ResizeManager);/**
         * Create the ResizeManager.
         *
         * @param {Object} player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of ResizeManager options.
         *
         * @param {Object} [options.ResizeObserver]
         *        A polyfill for ResizeObserver can be passed in here.
         *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.
         */function ResizeManager(player,options){var _this143;_classCallCheck(this,ResizeManager);var RESIZE_OBSERVER_AVAILABLE=options.ResizeObserver||window_1.ResizeObserver;// if `null` was passed, we want to disable the ResizeObserver
if(options.ResizeObserver===null){RESIZE_OBSERVER_AVAILABLE=false;}// Only create an element when ResizeObserver isn't available
var options_=merge$1({createEl:!RESIZE_OBSERVER_AVAILABLE,reportTouchActivity:false},options);_this143=_super88.call(this,player,options_);_this143.ResizeObserver=options.ResizeObserver||window_1.ResizeObserver;_this143.loadListener_=null;_this143.resizeObserver_=null;_this143.debouncedHandler_=debounce(function(){_this143.resizeHandler();},100,false,_assertThisInitialized2(_this143));if(RESIZE_OBSERVER_AVAILABLE){_this143.resizeObserver_=new _this143.ResizeObserver(_this143.debouncedHandler_);_this143.resizeObserver_.observe(player.el());}else{_this143.loadListener_=function(){if(!_this143.el_||!_this143.el_.contentWindow){return;}var debouncedHandler_=_this143.debouncedHandler_;var unloadListener_=_this143.unloadListener_=function(){_off(this,'resize',debouncedHandler_);_off(this,'unload',unloadListener_);unloadListener_=null;};// safari and edge can unload the iframe before resizemanager dispose
// we have to dispose of event handlers correctly before that happens
_on(_this143.el_.contentWindow,'unload',unloadListener_);_on(_this143.el_.contentWindow,'resize',debouncedHandler_);};_this143.one('load',_this143.loadListener_);}return _this143;}_createClass(ResizeManager,[{key:"createEl",value:function createEl(){return _get(_getPrototypeOf(ResizeManager.prototype),"createEl",this).call(this,'iframe',{className:'vjs-resize-manager',tabIndex:-1,title:this.localize('No content')},{'aria-hidden':'true'});}/**
         * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver
         *
         * @fires Player#playerresize
         */},{key:"resizeHandler",value:function resizeHandler(){/**
           * Called when the player size has changed
           *
           * @event Player#playerresize
           * @type {Event}
           */ // make sure player is still around to trigger
// prevents this from causing an error after dispose
if(!this.player_||!this.player_.trigger){return;}this.player_.trigger('playerresize');}},{key:"dispose",value:function dispose(){if(this.debouncedHandler_){this.debouncedHandler_.cancel();}if(this.resizeObserver_){if(this.player_.el()){this.resizeObserver_.unobserve(this.player_.el());}this.resizeObserver_.disconnect();}if(this.loadListener_){this.off('load',this.loadListener_);}if(this.el_&&this.el_.contentWindow&&this.unloadListener_){this.unloadListener_.call(this.el_.contentWindow);}this.ResizeObserver=null;this.resizeObserver=null;this.debouncedHandler_=null;this.loadListener_=null;_get(_getPrototypeOf(ResizeManager.prototype),"dispose",this).call(this);}}]);return ResizeManager;}(Component$1);Component$1.registerComponent('ResizeManager',ResizeManager);var defaults={trackingThreshold:20,liveTolerance:15};/*
        track when we are at the live edge, and other helpers for live playback */ /**
       * A class for checking live current time and determining when the player
       * is at or behind the live edge.
       */var LiveTracker=/*#__PURE__*/function(_Component$31){_inherits(LiveTracker,_Component$31);var _super89=_createSuper(LiveTracker);/**
         * Creates an instance of this class.
         *
         * @param { import('./player').default } player
         *        The `Player` that this class should be attached to.
         *
         * @param {Object} [options]
         *        The key/value store of player options.
         *
         * @param {number} [options.trackingThreshold=20]
         *        Number of seconds of live window (seekableEnd - seekableStart) that
         *        media needs to have before the liveui will be shown.
         *
         * @param {number} [options.liveTolerance=15]
         *        Number of seconds behind live that we have to be
         *        before we will be considered non-live. Note that this will only
         *        be used when playing at the live edge. This allows large seekable end
         *        changes to not effect whether we are live or not.
         */function LiveTracker(player,options){var _this144;_classCallCheck(this,LiveTracker);// LiveTracker does not need an element
var options_=merge$1(defaults,options,{createEl:false});_this144=_super89.call(this,player,options_);_this144.trackLiveHandler_=function(){return _this144.trackLive_();};_this144.handlePlay_=function(e){return _this144.handlePlay(e);};_this144.handleFirstTimeupdate_=function(e){return _this144.handleFirstTimeupdate(e);};_this144.handleSeeked_=function(e){return _this144.handleSeeked(e);};_this144.seekToLiveEdge_=function(e){return _this144.seekToLiveEdge(e);};_this144.reset_();_this144.on(_this144.player_,'durationchange',function(e){return _this144.handleDurationchange(e);});// we should try to toggle tracking on canplay as native playback engines, like Safari
// may not have the proper values for things like seekableEnd until then
_this144.on(_this144.player_,'canplay',function(){return _this144.toggleTracking();});return _this144;}/**
         * all the functionality for tracking when seek end changes
         * and for tracking how far past seek end we should be
         */_createClass(LiveTracker,[{key:"trackLive_",value:function trackLive_(){var seekable=this.player_.seekable();// skip undefined seekable
if(!seekable||!seekable.length){return;}var newTime=Number(window_1.performance.now().toFixed(4));var deltaTime=this.lastTime_===-1?0:(newTime-this.lastTime_)/1000;this.lastTime_=newTime;this.pastSeekEnd_=this.pastSeekEnd()+deltaTime;var liveCurrentTime=this.liveCurrentTime();var currentTime=this.player_.currentTime();// we are behind live if any are true
// 1. the player is paused
// 2. the user seeked to a location 2 seconds away from live
// 3. the difference between live and current time is greater
//    liveTolerance which defaults to 15s
var isBehind=this.player_.paused()||this.seekedBehindLive_||Math.abs(liveCurrentTime-currentTime)>this.options_.liveTolerance;// we cannot be behind if
// 1. until we have not seen a timeupdate yet
// 2. liveCurrentTime is Infinity, which happens on Android and Native Safari
if(!this.timeupdateSeen_||liveCurrentTime===Infinity){isBehind=false;}if(isBehind!==this.behindLiveEdge_){this.behindLiveEdge_=isBehind;this.trigger('liveedgechange');}}/**
         * handle a durationchange event on the player
         * and start/stop tracking accordingly.
         */},{key:"handleDurationchange",value:function handleDurationchange(){this.toggleTracking();}/**
         * start/stop tracking
         */},{key:"toggleTracking",value:function toggleTracking(){if(this.player_.duration()===Infinity&&this.liveWindow()>=this.options_.trackingThreshold){if(this.player_.options_.liveui){this.player_.addClass('vjs-liveui');}this.startTracking();}else{this.player_.removeClass('vjs-liveui');this.stopTracking();}}/**
         * start tracking live playback
         */},{key:"startTracking",value:function startTracking(){if(this.isTracking()){return;}// If we haven't seen a timeupdate, we need to check whether playback
// began before this component started tracking. This can happen commonly
// when using autoplay.
if(!this.timeupdateSeen_){this.timeupdateSeen_=this.player_.hasStarted();}this.trackingInterval_=this.setInterval(this.trackLiveHandler_,UPDATE_REFRESH_INTERVAL);this.trackLive_();this.on(this.player_,['play','pause'],this.trackLiveHandler_);if(!this.timeupdateSeen_){this.one(this.player_,'play',this.handlePlay_);this.one(this.player_,'timeupdate',this.handleFirstTimeupdate_);}else{this.on(this.player_,'seeked',this.handleSeeked_);}}/**
         * handle the first timeupdate on the player if it wasn't already playing
         * when live tracker started tracking.
         */},{key:"handleFirstTimeupdate",value:function handleFirstTimeupdate(){this.timeupdateSeen_=true;this.on(this.player_,'seeked',this.handleSeeked_);}/**
         * Keep track of what time a seek starts, and listen for seeked
         * to find where a seek ends.
         */},{key:"handleSeeked",value:function handleSeeked(){var timeDiff=Math.abs(this.liveCurrentTime()-this.player_.currentTime());this.seekedBehindLive_=this.nextSeekedFromUser_&&timeDiff>2;this.nextSeekedFromUser_=false;this.trackLive_();}/**
         * handle the first play on the player, and make sure that we seek
         * right to the live edge.
         */},{key:"handlePlay",value:function handlePlay(){this.one(this.player_,'timeupdate',this.seekToLiveEdge_);}/**
         * Stop tracking, and set all internal variables to
         * their initial value.
         */},{key:"reset_",value:function reset_(){this.lastTime_=-1;this.pastSeekEnd_=0;this.lastSeekEnd_=-1;this.behindLiveEdge_=true;this.timeupdateSeen_=false;this.seekedBehindLive_=false;this.nextSeekedFromUser_=false;this.clearInterval(this.trackingInterval_);this.trackingInterval_=null;this.off(this.player_,['play','pause'],this.trackLiveHandler_);this.off(this.player_,'seeked',this.handleSeeked_);this.off(this.player_,'play',this.handlePlay_);this.off(this.player_,'timeupdate',this.handleFirstTimeupdate_);this.off(this.player_,'timeupdate',this.seekToLiveEdge_);}/**
         * The next seeked event is from the user. Meaning that any seek
         * > 2s behind live will be considered behind live for real and
         * liveTolerance will be ignored.
         */},{key:"nextSeekedFromUser",value:function nextSeekedFromUser(){this.nextSeekedFromUser_=true;}/**
         * stop tracking live playback
         */},{key:"stopTracking",value:function stopTracking(){if(!this.isTracking()){return;}this.reset_();this.trigger('liveedgechange');}/**
         * A helper to get the player seekable end
         * so that we don't have to null check everywhere
         *
         * @return {number}
         *         The furthest seekable end or Infinity.
         */},{key:"seekableEnd",value:function seekableEnd(){var seekable=this.player_.seekable();var seekableEnds=[];var i=seekable?seekable.length:0;while(i--){seekableEnds.push(seekable.end(i));}// grab the furthest seekable end after sorting, or if there are none
// default to Infinity
return seekableEnds.length?seekableEnds.sort()[seekableEnds.length-1]:Infinity;}/**
         * A helper to get the player seekable start
         * so that we don't have to null check everywhere
         *
         * @return {number}
         *         The earliest seekable start or 0.
         */},{key:"seekableStart",value:function seekableStart(){var seekable=this.player_.seekable();var seekableStarts=[];var i=seekable?seekable.length:0;while(i--){seekableStarts.push(seekable.start(i));}// grab the first seekable start after sorting, or if there are none
// default to 0
return seekableStarts.length?seekableStarts.sort()[0]:0;}/**
         * Get the live time window aka
         * the amount of time between seekable start and
         * live current time.
         *
         * @return {number}
         *         The amount of seconds that are seekable in
         *         the live video.
         */},{key:"liveWindow",value:function liveWindow(){var liveCurrentTime=this.liveCurrentTime();// if liveCurrenTime is Infinity then we don't have a liveWindow at all
if(liveCurrentTime===Infinity){return 0;}return liveCurrentTime-this.seekableStart();}/**
         * Determines if the player is live, only checks if this component
         * is tracking live playback or not
         *
         * @return {boolean}
         *         Whether liveTracker is tracking
         */},{key:"isLive",value:function isLive(){return this.isTracking();}/**
         * Determines if currentTime is at the live edge and won't fall behind
         * on each seekableendchange
         *
         * @return {boolean}
         *         Whether playback is at the live edge
         */},{key:"atLiveEdge",value:function atLiveEdge(){return!this.behindLiveEdge();}/**
         * get what we expect the live current time to be
         *
         * @return {number}
         *         The expected live current time
         */},{key:"liveCurrentTime",value:function liveCurrentTime(){return this.pastSeekEnd()+this.seekableEnd();}/**
         * The number of seconds that have occurred after seekable end
         * changed. This will be reset to 0 once seekable end changes.
         *
         * @return {number}
         *         Seconds past the current seekable end
         */},{key:"pastSeekEnd",value:function pastSeekEnd(){var seekableEnd=this.seekableEnd();if(this.lastSeekEnd_!==-1&&seekableEnd!==this.lastSeekEnd_){this.pastSeekEnd_=0;}this.lastSeekEnd_=seekableEnd;return this.pastSeekEnd_;}/**
         * If we are currently behind the live edge, aka currentTime will be
         * behind on a seekableendchange
         *
         * @return {boolean}
         *         If we are behind the live edge
         */},{key:"behindLiveEdge",value:function behindLiveEdge(){return this.behindLiveEdge_;}/**
         * Whether live tracker is currently tracking or not.
         */},{key:"isTracking",value:function isTracking(){return typeof this.trackingInterval_==='number';}/**
         * Seek to the live edge if we are behind the live edge
         */},{key:"seekToLiveEdge",value:function seekToLiveEdge(){this.seekedBehindLive_=false;if(this.atLiveEdge()){return;}this.nextSeekedFromUser_=false;this.player_.currentTime(this.liveCurrentTime());}/**
         * Dispose of liveTracker
         */},{key:"dispose",value:function dispose(){this.stopTracking();_get(_getPrototypeOf(LiveTracker.prototype),"dispose",this).call(this);}}]);return LiveTracker;}(Component$1);Component$1.registerComponent('LiveTracker',LiveTracker);/**
       * Displays an element over the player which contains an optional title and
       * description for the current content.
       *
       * Much of the code for this component originated in the now obsolete
       * videojs-dock plugin: https://github.com/brightcove/videojs-dock/
       *
       * @extends Component
       */var TitleBar=/*#__PURE__*/function(_Component$32){_inherits(TitleBar,_Component$32);var _super90=_createSuper(TitleBar);function TitleBar(player,options){var _this145;_classCallCheck(this,TitleBar);_this145=_super90.call(this,player,options);_this145.on('statechanged',function(e){return _this145.updateDom_();});_this145.updateDom_();return _this145;}/**
         * Create the `TitleBar`'s DOM element
         *
         * @return {Element}
         *         The element that was created.
         */_createClass(TitleBar,[{key:"createEl",value:function createEl(){this.els={title:_createEl('div',{className:'vjs-title-bar-title',id:"vjs-title-bar-title-".concat(newGUID())}),description:_createEl('div',{className:'vjs-title-bar-description',id:"vjs-title-bar-description-".concat(newGUID())})};return _createEl('div',{className:'vjs-title-bar'},{},values(this.els));}/**
         * Updates the DOM based on the component's state object.
         */},{key:"updateDom_",value:function updateDom_(){var _this146=this;var tech=this.player_.tech_;var techEl=tech&&tech.el_;var techAriaAttrs={title:'aria-labelledby',description:'aria-describedby'};['title','description'].forEach(function(k){var value=_this146.state[k];var el=_this146.els[k];var techAriaAttr=techAriaAttrs[k];emptyEl(el);if(value){textContent(el,value);}// If there is a tech element available, update its ARIA attributes
// according to whether a title and/or description have been provided.
if(techEl){techEl.removeAttribute(techAriaAttr);if(value){techEl.setAttribute(techAriaAttr,el.id);}}});if(this.state.title||this.state.description){this.show();}else{this.hide();}}/**
         * Update the contents of the title bar component with new title and
         * description text.
         *
         * If both title and description are missing, the title bar will be hidden.
         *
         * If either title or description are present, the title bar will be visible.
         *
         * NOTE: Any previously set value will be preserved. To unset a previously
         * set value, you must pass an empty string or null.
         *
         * For example:
         *
         * ```
         * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'
         * update({description: 'bar2'}) // title: 'foo', description: 'bar2'
         * update({title: ''}) // title: '', description: 'bar2'
         * update({title: 'foo', description: null}) // title: 'foo', description: null
         * ```
         *
         * @param  {Object} [options={}]
         *         An options object. When empty, the title bar will be hidden.
         *
         * @param  {string} [options.title]
         *         A title to display in the title bar.
         *
         * @param  {string} [options.description]
         *         A description to display in the title bar.
         */},{key:"update",value:function update(options){this.setState(options);}/**
         * Dispose the component.
         */},{key:"dispose",value:function dispose(){var tech=this.player_.tech_;var techEl=tech&&tech.el_;if(techEl){techEl.removeAttribute('aria-labelledby');techEl.removeAttribute('aria-describedby');}_get(_getPrototypeOf(TitleBar.prototype),"dispose",this).call(this);this.els=null;}}]);return TitleBar;}(Component$1);Component$1.registerComponent('TitleBar',TitleBar);/**
       * This function is used to fire a sourceset when there is something
       * similar to `mediaEl.load()` being called. It will try to find the source via
       * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`
       * with the source that was found or empty string if we cannot know. If it cannot
       * find a source then `sourceset` will not be fired.
       *
       * @param { import('./html5').default } tech
       *        The tech object that sourceset was setup on
       *
       * @return {boolean}
       *         returns false if the sourceset was not fired and true otherwise.
       */var sourcesetLoad=function sourcesetLoad(tech){var el=tech.el();// if `el.src` is set, that source will be loaded.
if(el.hasAttribute('src')){tech.triggerSourceset(el.src);return true;}/**
         * Since there isn't a src property on the media element, source elements will be used for
         * implementing the source selection algorithm. This happens asynchronously and
         * for most cases were there is more than one source we cannot tell what source will
         * be loaded, without re-implementing the source selection algorithm. At this time we are not
         * going to do that. There are three special cases that we do handle here though:
         *
         * 1. If there are no sources, do not fire `sourceset`.
         * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`
         * 3. If there is more than one `<source>` but all of them have the same `src` url.
         *    That will be our src.
         */var sources=tech.$$('source');var srcUrls=[];var src='';// if there are no sources, do not fire sourceset
if(!sources.length){return false;}// only count valid/non-duplicate source elements
for(var _i136=0;_i136<sources.length;_i136++){var url=sources[_i136].src;if(url&&srcUrls.indexOf(url)===-1){srcUrls.push(url);}}// there were no valid sources
if(!srcUrls.length){return false;}// there is only one valid source element url
// use that
if(srcUrls.length===1){src=srcUrls[0];}tech.triggerSourceset(src);return true;};/**
       * our implementation of an `innerHTML` descriptor for browsers
       * that do not have one.
       */var innerHTMLDescriptorPolyfill=Object.defineProperty({},'innerHTML',{get:function get(){return this.cloneNode(true).innerHTML;},set:function set(v){// make a dummy node to use innerHTML on
var dummy=document_1.createElement(this.nodeName.toLowerCase());// set innerHTML to the value provided
dummy.innerHTML=v;// make a document fragment to hold the nodes from dummy
var docFrag=document_1.createDocumentFragment();// copy all of the nodes created by the innerHTML on dummy
// to the document fragment
while(dummy.childNodes.length){docFrag.appendChild(dummy.childNodes[0]);}// remove content
this.innerText='';// now we add all of that html in one by appending the
// document fragment. This is how innerHTML does it.
window_1.Element.prototype.appendChild.call(this,docFrag);// then return the result that innerHTML's setter would
return this.innerHTML;}});/**
       * Get a property descriptor given a list of priorities and the
       * property to get.
       */var getDescriptor=function getDescriptor(priority,prop){var descriptor={};for(var _i137=0;_i137<priority.length;_i137++){descriptor=Object.getOwnPropertyDescriptor(priority[_i137],prop);if(descriptor&&descriptor.set&&descriptor.get){break;}}descriptor.enumerable=true;descriptor.configurable=true;return descriptor;};var getInnerHTMLDescriptor=function getInnerHTMLDescriptor(tech){return getDescriptor([tech.el(),window_1.HTMLMediaElement.prototype,window_1.Element.prototype,innerHTMLDescriptorPolyfill],'innerHTML');};/**
       * Patches browser internal functions so that we can tell synchronously
       * if a `<source>` was appended to the media element. For some reason this
       * causes a `sourceset` if the the media element is ready and has no source.
       * This happens when:
       * - The page has just loaded and the media element does not have a source.
       * - The media element was emptied of all sources, then `load()` was called.
       *
       * It does this by patching the following functions/properties when they are supported:
       *
       * - `append()` - can be used to add a `<source>` element to the media element
       * - `appendChild()` - can be used to add a `<source>` element to the media element
       * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element
       * - `innerHTML` -  can be used to add a `<source>` element to the media element
       *
       * @param {Html5} tech
       *        The tech object that sourceset is being setup on.
       */var firstSourceWatch=function firstSourceWatch(tech){var el=tech.el();// make sure firstSourceWatch isn't setup twice.
if(el.resetSourceWatch_){return;}var old={};var innerDescriptor=getInnerHTMLDescriptor(tech);var appendWrapper=function appendWrapper(appendFn){return function(){for(var _len37=arguments.length,args=new Array(_len37),_key38=0;_key38<_len37;_key38++){args[_key38]=arguments[_key38];}var retval=appendFn.apply(el,args);sourcesetLoad(tech);return retval;};};['append','appendChild','insertAdjacentHTML'].forEach(function(k){if(!el[k]){return;}// store the old function
old[k]=el[k];// call the old function with a sourceset if a source
// was loaded
el[k]=appendWrapper(old[k]);});Object.defineProperty(el,'innerHTML',merge$1(innerDescriptor,{set:appendWrapper(innerDescriptor.set)}));el.resetSourceWatch_=function(){el.resetSourceWatch_=null;Object.keys(old).forEach(function(k){el[k]=old[k];});Object.defineProperty(el,'innerHTML',innerDescriptor);};// on the first sourceset, we need to revert our changes
tech.one('sourceset',el.resetSourceWatch_);};/**
       * our implementation of a `src` descriptor for browsers
       * that do not have one
       */var srcDescriptorPolyfill=Object.defineProperty({},'src',{get:function get(){if(this.hasAttribute('src')){return getAbsoluteURL(window_1.Element.prototype.getAttribute.call(this,'src'));}return'';},set:function set(v){window_1.Element.prototype.setAttribute.call(this,'src',v);return v;}});var getSrcDescriptor=function getSrcDescriptor(tech){return getDescriptor([tech.el(),window_1.HTMLMediaElement.prototype,srcDescriptorPolyfill],'src');};/**
       * setup `sourceset` handling on the `Html5` tech. This function
       * patches the following element properties/functions:
       *
       * - `src` - to determine when `src` is set
       * - `setAttribute()` - to determine when `src` is set
       * - `load()` - this re-triggers the source selection algorithm, and can
       *              cause a sourceset.
       *
       * If there is no source when we are adding `sourceset` support or during a `load()`
       * we also patch the functions listed in `firstSourceWatch`.
       *
       * @param {Html5} tech
       *        The tech to patch
       */var setupSourceset=function setupSourceset(tech){if(!tech.featuresSourceset){return;}var el=tech.el();// make sure sourceset isn't setup twice.
if(el.resetSourceset_){return;}var srcDescriptor=getSrcDescriptor(tech);var oldSetAttribute=el.setAttribute;var oldLoad=el.load;Object.defineProperty(el,'src',merge$1(srcDescriptor,{set:function set(v){var retval=srcDescriptor.set.call(el,v);// we use the getter here to get the actual value set on src
tech.triggerSourceset(el.src);return retval;}}));el.setAttribute=function(n,v){var retval=oldSetAttribute.call(el,n,v);if(/src/i.test(n)){tech.triggerSourceset(el.src);}return retval;};el.load=function(){var retval=oldLoad.call(el);// if load was called, but there was no source to fire
// sourceset on. We have to watch for a source append
// as that can trigger a `sourceset` when the media element
// has no source
if(!sourcesetLoad(tech)){tech.triggerSourceset('');firstSourceWatch(tech);}return retval;};if(el.currentSrc){tech.triggerSourceset(el.currentSrc);}else if(!sourcesetLoad(tech)){firstSourceWatch(tech);}el.resetSourceset_=function(){el.resetSourceset_=null;el.load=oldLoad;el.setAttribute=oldSetAttribute;Object.defineProperty(el,'src',srcDescriptor);if(el.resetSourceWatch_){el.resetSourceWatch_();}};};/**
       * @file html5.js
       */ /**
       * HTML5 Media Controller - Wrapper for HTML5 Media API
       *
       * @mixes Tech~SourceHandlerAdditions
       * @extends Tech
       */var Html5=/*#__PURE__*/function(_Tech3){_inherits(Html5,_Tech3);var _super91=_createSuper(Html5);/**
        * Create an instance of this Tech.
        *
        * @param {Object} [options]
        *        The key/value store of player options.
        *
        * @param {Function} [ready]
        *        Callback function to call when the `HTML5` Tech is ready.
        */function Html5(options,ready){var _this147;_classCallCheck(this,Html5);_this147=_super91.call(this,options,ready);var source=options.source;var crossoriginTracks=false;_this147.featuresVideoFrameCallback=_this147.featuresVideoFrameCallback&&_this147.el_.tagName==='VIDEO';// Set the source if one is provided
// 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)
// 2) Check to see if the network state of the tag was failed at init, and if so, reset the source
// anyway so the error gets fired.
if(source&&(_this147.el_.currentSrc!==source.src||options.tag&&options.tag.initNetworkState_===3)){_this147.setSource(source);}else{_this147.handleLateInit_(_this147.el_);}// setup sourceset after late sourceset/init
if(options.enableSourceset){_this147.setupSourcesetHandling_();}_this147.isScrubbing_=false;if(_this147.el_.hasChildNodes()){var nodes=_this147.el_.childNodes;var nodesLength=nodes.length;var removeNodes=[];while(nodesLength--){var _node11=nodes[nodesLength];var nodeName=_node11.nodeName.toLowerCase();if(nodeName==='track'){if(!_this147.featuresNativeTextTracks){// Empty video tag tracks so the built-in player doesn't use them also.
// This may not be fast enough to stop HTML5 browsers from reading the tags
// so we'll need to turn off any default tracks if we're manually doing
// captions and subtitles. videoElement.textTracks
removeNodes.push(_node11);}else{// store HTMLTrackElement and TextTrack to remote list
_this147.remoteTextTrackEls().addTrackElement_(_node11);_this147.remoteTextTracks().addTrack(_node11.track);_this147.textTracks().addTrack(_node11.track);if(!crossoriginTracks&&!_this147.el_.hasAttribute('crossorigin')&&isCrossOrigin(_node11.src)){crossoriginTracks=true;}}}}for(var _i138=0;_i138<removeNodes.length;_i138++){_this147.el_.removeChild(removeNodes[_i138]);}}_this147.proxyNativeTracks_();if(_this147.featuresNativeTextTracks&&crossoriginTracks){log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\'t used.\n'+'This may prevent text tracks from loading.');}// prevent iOS Safari from disabling metadata text tracks during native playback
_this147.restoreMetadataTracksInIOSNativePlayer_();// Determine if native controls should be used
// Our goal should be to get the custom controls on mobile solid everywhere
// so we can remove this all together. Right now this will block custom
// controls on touch enabled laptops like the Chrome Pixel
if((TOUCH_ENABLED||IS_IPHONE)&&options.nativeControlsForTouch===true){_this147.setControls(true);}// on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`
// into a `fullscreenchange` event
_this147.proxyWebkitFullscreen_();_this147.triggerReady();return _this147;}/**
         * Dispose of `HTML5` media element and remove all tracks.
         */_createClass(Html5,[{key:"dispose",value:function dispose(){if(this.el_&&this.el_.resetSourceset_){this.el_.resetSourceset_();}Html5.disposeMediaElement(this.el_);this.options_=null;// tech will handle clearing of the emulated track list
_get(_getPrototypeOf(Html5.prototype),"dispose",this).call(this);}/**
         * Modify the media element so that we can detect when
         * the source is changed. Fires `sourceset` just after the source has changed
         */},{key:"setupSourcesetHandling_",value:function setupSourcesetHandling_(){setupSourceset(this);}/**
         * When a captions track is enabled in the iOS Safari native player, all other
         * tracks are disabled (including metadata tracks), which nulls all of their
         * associated cue points. This will restore metadata tracks to their pre-fullscreen
         * state in those cases so that cue points are not needlessly lost.
         *
         * @private
         */},{key:"restoreMetadataTracksInIOSNativePlayer_",value:function restoreMetadataTracksInIOSNativePlayer_(){var textTracks=this.textTracks();var metadataTracksPreFullscreenState;// captures a snapshot of every metadata track's current state
var takeMetadataTrackSnapshot=function takeMetadataTrackSnapshot(){metadataTracksPreFullscreenState=[];for(var _i139=0;_i139<textTracks.length;_i139++){var track=textTracks[_i139];if(track.kind==='metadata'){metadataTracksPreFullscreenState.push({track:track,storedMode:track.mode});}}};// snapshot each metadata track's initial state, and update the snapshot
// each time there is a track 'change' event
takeMetadataTrackSnapshot();textTracks.addEventListener('change',takeMetadataTrackSnapshot);this.on('dispose',function(){return textTracks.removeEventListener('change',takeMetadataTrackSnapshot);});var restoreTrackMode=function restoreTrackMode(){for(var _i140=0;_i140<metadataTracksPreFullscreenState.length;_i140++){var storedTrack=metadataTracksPreFullscreenState[_i140];if(storedTrack.track.mode==='disabled'&&storedTrack.track.mode!==storedTrack.storedMode){storedTrack.track.mode=storedTrack.storedMode;}}// we only want this handler to be executed on the first 'change' event
textTracks.removeEventListener('change',restoreTrackMode);};// when we enter fullscreen playback, stop updating the snapshot and
// restore all track modes to their pre-fullscreen state
this.on('webkitbeginfullscreen',function(){textTracks.removeEventListener('change',takeMetadataTrackSnapshot);// remove the listener before adding it just in case it wasn't previously removed
textTracks.removeEventListener('change',restoreTrackMode);textTracks.addEventListener('change',restoreTrackMode);});// start updating the snapshot again after leaving fullscreen
this.on('webkitendfullscreen',function(){// remove the listener before adding it just in case it wasn't previously removed
textTracks.removeEventListener('change',takeMetadataTrackSnapshot);textTracks.addEventListener('change',takeMetadataTrackSnapshot);// remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback
textTracks.removeEventListener('change',restoreTrackMode);});}/**
         * Attempt to force override of tracks for the given type
         *
         * @param {string} type - Track type to override, possible values include 'Audio',
         * 'Video', and 'Text'.
         * @param {boolean} override - If set to true native audio/video will be overridden,
         * otherwise native audio/video will potentially be used.
         * @private
         */},{key:"overrideNative_",value:function overrideNative_(type,override){var _this148=this;// If there is no behavioral change don't add/remove listeners
if(override!==this["featuresNative".concat(type,"Tracks")]){return;}var lowerCaseType=type.toLowerCase();if(this["".concat(lowerCaseType,"TracksListeners_")]){Object.keys(this["".concat(lowerCaseType,"TracksListeners_")]).forEach(function(eventName){var elTracks=_this148.el()["".concat(lowerCaseType,"Tracks")];elTracks.removeEventListener(eventName,_this148["".concat(lowerCaseType,"TracksListeners_")][eventName]);});}this["featuresNative".concat(type,"Tracks")]=!override;this["".concat(lowerCaseType,"TracksListeners_")]=null;this.proxyNativeTracksForType_(lowerCaseType);}/**
         * Attempt to force override of native audio tracks.
         *
         * @param {boolean} override - If set to true native audio will be overridden,
         * otherwise native audio will potentially be used.
         */},{key:"overrideNativeAudioTracks",value:function overrideNativeAudioTracks(override){this.overrideNative_('Audio',override);}/**
         * Attempt to force override of native video tracks.
         *
         * @param {boolean} override - If set to true native video will be overridden,
         * otherwise native video will potentially be used.
         */},{key:"overrideNativeVideoTracks",value:function overrideNativeVideoTracks(override){this.overrideNative_('Video',override);}/**
         * Proxy native track list events for the given type to our track
         * lists if the browser we are playing in supports that type of track list.
         *
         * @param {string} name - Track type; values include 'audio', 'video', and 'text'
         * @private
         */},{key:"proxyNativeTracksForType_",value:function proxyNativeTracksForType_(name){var _this149=this;var props=NORMAL[name];var elTracks=this.el()[props.getterName];var techTracks=this[props.getterName]();if(!this["featuresNative".concat(props.capitalName,"Tracks")]||!elTracks||!elTracks.addEventListener){return;}var listeners={change:function change(e){var event={type:'change',target:techTracks,currentTarget:techTracks,srcElement:techTracks};techTracks.trigger(event);// if we are a text track change event, we should also notify the
// remote text track list. This can potentially cause a false positive
// if we were to get a change event on a non-remote track and
// we triggered the event on the remote text track list which doesn't
// contain that track. However, best practices mean looping through the
// list of tracks and searching for the appropriate mode value, so,
// this shouldn't pose an issue
if(name==='text'){_this149[REMOTE.remoteText.getterName]().trigger(event);}},addtrack:function addtrack(e){techTracks.addTrack(e.track);},removetrack:function removetrack(e){techTracks.removeTrack(e.track);}};var removeOldTracks=function removeOldTracks(){var removeTracks=[];for(var _i141=0;_i141<techTracks.length;_i141++){var found=false;for(var _j12=0;_j12<elTracks.length;_j12++){if(elTracks[_j12]===techTracks[_i141]){found=true;break;}}if(!found){removeTracks.push(techTracks[_i141]);}}while(removeTracks.length){techTracks.removeTrack(removeTracks.shift());}};this[props.getterName+'Listeners_']=listeners;Object.keys(listeners).forEach(function(eventName){var listener=listeners[eventName];elTracks.addEventListener(eventName,listener);_this149.on('dispose',function(e){return elTracks.removeEventListener(eventName,listener);});});// Remove (native) tracks that are not used anymore
this.on('loadstart',removeOldTracks);this.on('dispose',function(e){return _this149.off('loadstart',removeOldTracks);});}/**
         * Proxy all native track list events to our track lists if the browser we are playing
         * in supports that type of track list.
         *
         * @private
         */},{key:"proxyNativeTracks_",value:function proxyNativeTracks_(){var _this150=this;NORMAL.names.forEach(function(name){_this150.proxyNativeTracksForType_(name);});}/**
         * Create the `Html5` Tech's DOM element.
         *
         * @return {Element}
         *         The element that gets created.
         */},{key:"createEl",value:function createEl(){var el=this.options_.tag;// Check if this browser supports moving the element into the box.
// On the iPhone video will break if you move the element,
// So we have to create a brand new element.
// If we ingested the player div, we do not need to move the media element.
if(!el||!(this.options_.playerElIngest||this.movingMediaElementInDOM)){// If the original tag is still there, clone and remove it.
if(el){var _clone4=el.cloneNode(true);if(el.parentNode){el.parentNode.insertBefore(_clone4,el);}Html5.disposeMediaElement(el);el=_clone4;}else{el=document_1.createElement('video');// determine if native controls should be used
var tagAttributes=this.options_.tag&&getAttributes(this.options_.tag);var _attributes5=merge$1({},tagAttributes);if(!TOUCH_ENABLED||this.options_.nativeControlsForTouch!==true){delete _attributes5.controls;}setAttributes(el,Object.assign(_attributes5,{id:this.options_.techId,class:'vjs-tech'}));}el.playerId=this.options_.playerId;}if(typeof this.options_.preload!=='undefined'){_setAttribute(el,'preload',this.options_.preload);}if(this.options_.disablePictureInPicture!==undefined){el.disablePictureInPicture=this.options_.disablePictureInPicture;}// Update specific tag settings, in case they were overridden
// `autoplay` has to be *last* so that `muted` and `playsinline` are present
// when iOS/Safari or other browsers attempt to autoplay.
var settingsAttrs=['loop','muted','playsinline','autoplay'];for(var _i142=0;_i142<settingsAttrs.length;_i142++){var _attr2=settingsAttrs[_i142];var value=this.options_[_attr2];if(typeof value!=='undefined'){if(value){_setAttribute(el,_attr2,_attr2);}else{_removeAttribute(el,_attr2);}el[_attr2]=value;}}return el;}/**
         * This will be triggered if the loadstart event has already fired, before videojs was
         * ready. Two known examples of when this can happen are:
         * 1. If we're loading the playback object after it has started loading
         * 2. The media is already playing the (often with autoplay on) then
         *
         * This function will fire another loadstart so that videojs can catchup.
         *
         * @fires Tech#loadstart
         *
         * @return {undefined}
         *         returns nothing.
         */},{key:"handleLateInit_",value:function handleLateInit_(el){if(el.networkState===0||el.networkState===3){// The video element hasn't started loading the source yet
// or didn't find a source
return;}if(el.readyState===0){// NetworkState is set synchronously BUT loadstart is fired at the
// end of the current stack, usually before setInterval(fn, 0).
// So at this point we know loadstart may have already fired or is
// about to fire, and either way the player hasn't seen it yet.
// We don't want to fire loadstart prematurely here and cause a
// double loadstart so we'll wait and see if it happens between now
// and the next loop, and fire it if not.
// HOWEVER, we also want to make sure it fires before loadedmetadata
// which could also happen between now and the next loop, so we'll
// watch for that also.
var loadstartFired=false;var setLoadstartFired=function setLoadstartFired(){loadstartFired=true;};this.on('loadstart',setLoadstartFired);var triggerLoadstart=function triggerLoadstart(){// We did miss the original loadstart. Make sure the player
// sees loadstart before loadedmetadata
if(!loadstartFired){this.trigger('loadstart');}};this.on('loadedmetadata',triggerLoadstart);this.ready(function(){this.off('loadstart',setLoadstartFired);this.off('loadedmetadata',triggerLoadstart);if(!loadstartFired){// We did miss the original native loadstart. Fire it now.
this.trigger('loadstart');}});return;}// From here on we know that loadstart already fired and we missed it.
// The other readyState events aren't as much of a problem if we double
// them, so not going to go to as much trouble as loadstart to prevent
// that unless we find reason to.
var eventsToTrigger=['loadstart'];// loadedmetadata: newly equal to HAVE_METADATA (1) or greater
eventsToTrigger.push('loadedmetadata');// loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater
if(el.readyState>=2){eventsToTrigger.push('loadeddata');}// canplay: newly increased to HAVE_FUTURE_DATA (3) or greater
if(el.readyState>=3){eventsToTrigger.push('canplay');}// canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)
if(el.readyState>=4){eventsToTrigger.push('canplaythrough');}// We still need to give the player time to add event listeners
this.ready(function(){eventsToTrigger.forEach(function(type){this.trigger(type);},this);});}/**
         * Set whether we are scrubbing or not.
         * This is used to decide whether we should use `fastSeek` or not.
         * `fastSeek` is used to provide trick play on Safari browsers.
         *
         * @param {boolean} isScrubbing
         *                  - true for we are currently scrubbing
         *                  - false for we are no longer scrubbing
         */},{key:"setScrubbing",value:function setScrubbing(isScrubbing){this.isScrubbing_=isScrubbing;}/**
         * Get whether we are scrubbing or not.
         *
         * @return {boolean} isScrubbing
         *                  - true for we are currently scrubbing
         *                  - false for we are no longer scrubbing
         */},{key:"scrubbing",value:function scrubbing(){return this.isScrubbing_;}/**
         * Set current time for the `HTML5` tech.
         *
         * @param {number} seconds
         *        Set the current time of the media to this.
         */},{key:"setCurrentTime",value:function setCurrentTime(seconds){try{if(this.isScrubbing_&&this.el_.fastSeek&&IS_ANY_SAFARI){this.el_.fastSeek(seconds);}else{this.el_.currentTime=seconds;}}catch(e){log$1(e,'Video is not ready. (Video.js)');// this.warning(VideoJS.warnings.videoNotReady);
}}/**
         * Get the current duration of the HTML5 media element.
         *
         * @return {number}
         *         The duration of the media or 0 if there is no duration.
         */},{key:"duration",value:function duration(){var _this151=this;// Android Chrome will report duration as Infinity for VOD HLS until after
// playback has started, which triggers the live display erroneously.
// Return NaN if playback has not started and trigger a durationupdate once
// the duration can be reliably known.
if(this.el_.duration===Infinity&&IS_ANDROID&&IS_CHROME&&this.el_.currentTime===0){// Wait for the first `timeupdate` with currentTime > 0 - there may be
// several with 0
var checkProgress=function checkProgress(){if(_this151.el_.currentTime>0){// Trigger durationchange for genuinely live video
if(_this151.el_.duration===Infinity){_this151.trigger('durationchange');}_this151.off('timeupdate',checkProgress);}};this.on('timeupdate',checkProgress);return NaN;}return this.el_.duration||NaN;}/**
         * Get the current width of the HTML5 media element.
         *
         * @return {number}
         *         The width of the HTML5 media element.
         */},{key:"width",value:function width(){return this.el_.offsetWidth;}/**
         * Get the current height of the HTML5 media element.
         *
         * @return {number}
         *         The height of the HTML5 media element.
         */},{key:"height",value:function height(){return this.el_.offsetHeight;}/**
         * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into
         * `fullscreenchange` event.
         *
         * @private
         * @fires fullscreenchange
         * @listens webkitendfullscreen
         * @listens webkitbeginfullscreen
         * @listens webkitbeginfullscreen
         */},{key:"proxyWebkitFullscreen_",value:function proxyWebkitFullscreen_(){var _this152=this;if(!('webkitDisplayingFullscreen'in this.el_)){return;}var endFn=function endFn(){this.trigger('fullscreenchange',{isFullscreen:false});// Safari will sometimes set controls on the videoelement when existing fullscreen.
if(this.el_.controls&&!this.options_.nativeControlsForTouch&&this.controls()){this.el_.controls=false;}};var beginFn=function beginFn(){if('webkitPresentationMode'in this.el_&&this.el_.webkitPresentationMode!=='picture-in-picture'){this.one('webkitendfullscreen',endFn);this.trigger('fullscreenchange',{isFullscreen:true,// set a flag in case another tech triggers fullscreenchange
nativeIOSFullscreen:true});}};this.on('webkitbeginfullscreen',beginFn);this.on('dispose',function(){_this152.off('webkitbeginfullscreen',beginFn);_this152.off('webkitendfullscreen',endFn);});}/**
         * Check if fullscreen is supported on the video el.
         *
         * @return {boolean}
         *         - True if fullscreen is supported.
         *         - False if fullscreen is not supported.
         */},{key:"supportsFullScreen",value:function supportsFullScreen(){return typeof this.el_.webkitEnterFullScreen==='function';}/**
         * Request that the `HTML5` Tech enter fullscreen.
         */},{key:"enterFullScreen",value:function enterFullScreen(){var video=this.el_;if(video.paused&&video.networkState<=video.HAVE_METADATA){// attempt to prime the video element for programmatic access
// this isn't necessary on the desktop but shouldn't hurt
silencePromise(this.el_.play());// playing and pausing synchronously during the transition to fullscreen
// can get iOS ~6.1 devices into a play/pause loop
this.setTimeout(function(){video.pause();try{video.webkitEnterFullScreen();}catch(e){this.trigger('fullscreenerror',e);}},0);}else{try{video.webkitEnterFullScreen();}catch(e){this.trigger('fullscreenerror',e);}}}/**
         * Request that the `HTML5` Tech exit fullscreen.
         */},{key:"exitFullScreen",value:function exitFullScreen(){if(!this.el_.webkitDisplayingFullscreen){this.trigger('fullscreenerror',new Error('The video is not fullscreen'));return;}this.el_.webkitExitFullScreen();}/**
         * Create a floating video window always on top of other windows so that users may
         * continue consuming media while they interact with other content sites, or
         * applications on their device.
         *
         * @see [Spec]{@link https://wicg.github.io/picture-in-picture}
         *
         * @return {Promise}
         *         A promise with a Picture-in-Picture window.
         */},{key:"requestPictureInPicture",value:function requestPictureInPicture(){return this.el_.requestPictureInPicture();}/**
         * Native requestVideoFrameCallback if supported by browser/tech, or fallback
         * Don't use rVCF on Safari when DRM is playing, as it doesn't fire
         * Needs to be checked later than the constructor
         * This will be a false positive for clear sources loaded after a Fairplay source
         *
         * @param {function} cb function to call
         * @return {number} id of request
         */},{key:"requestVideoFrameCallback",value:function requestVideoFrameCallback(cb){if(this.featuresVideoFrameCallback&&!this.el_.webkitKeys){return this.el_.requestVideoFrameCallback(cb);}return _get(_getPrototypeOf(Html5.prototype),"requestVideoFrameCallback",this).call(this,cb);}/**
         * Native or fallback requestVideoFrameCallback
         *
         * @param {number} id request id to cancel
         */},{key:"cancelVideoFrameCallback",value:function cancelVideoFrameCallback(id){if(this.featuresVideoFrameCallback&&!this.el_.webkitKeys){this.el_.cancelVideoFrameCallback(id);}else{_get(_getPrototypeOf(Html5.prototype),"cancelVideoFrameCallback",this).call(this,id);}}/**
         * A getter/setter for the `Html5` Tech's source object.
         * > Note: Please use {@link Html5#setSource}
         *
         * @param {Tech~SourceObject} [src]
         *        The source object you want to set on the `HTML5` techs element.
         *
         * @return {Tech~SourceObject|undefined}
         *         - The current source object when a source is not passed in.
         *         - undefined when setting
         *
         * @deprecated Since version 5.
         */},{key:"src",value:function src(_src2){if(_src2===undefined){return this.el_.src;}// Setting src through `src` instead of `setSrc` will be deprecated
this.setSrc(_src2);}/**
         * Reset the tech by removing all sources and then calling
         * {@link Html5.resetMediaElement}.
         */},{key:"reset",value:function reset(){Html5.resetMediaElement(this.el_);}/**
         * Get the current source on the `HTML5` Tech. Falls back to returning the source from
         * the HTML5 media element.
         *
         * @return {Tech~SourceObject}
         *         The current source object from the HTML5 tech. With a fallback to the
         *         elements source.
         */},{key:"currentSrc",value:function currentSrc(){if(this.currentSource_){return this.currentSource_.src;}return this.el_.currentSrc;}/**
         * Set controls attribute for the HTML5 media Element.
         *
         * @param {string} val
         *        Value to set the controls attribute to
         */},{key:"setControls",value:function setControls(val){this.el_.controls=!!val;}/**
         * Create and returns a remote {@link TextTrack} object.
         *
         * @param {string} kind
         *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)
         *
         * @param {string} [label]
         *        Label to identify the text track
         *
         * @param {string} [language]
         *        Two letter language abbreviation
         *
         * @return {TextTrack}
         *         The TextTrack that gets created.
         */},{key:"addTextTrack",value:function addTextTrack(kind,label,language){if(!this.featuresNativeTextTracks){return _get(_getPrototypeOf(Html5.prototype),"addTextTrack",this).call(this,kind,label,language);}return this.el_.addTextTrack(kind,label,language);}/**
         * Creates either native TextTrack or an emulated TextTrack depending
         * on the value of `featuresNativeTextTracks`
         *
         * @param {Object} options
         *        The object should contain the options to initialize the TextTrack with.
         *
         * @param {string} [options.kind]
         *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).
         *
         * @param {string} [options.label]
         *        Label to identify the text track
         *
         * @param {string} [options.language]
         *        Two letter language abbreviation.
         *
         * @param {boolean} [options.default]
         *        Default this track to on.
         *
         * @param {string} [options.id]
         *        The internal id to assign this track.
         *
         * @param {string} [options.src]
         *        A source url for the track.
         *
         * @return {HTMLTrackElement}
         *         The track element that gets created.
         */},{key:"createRemoteTextTrack",value:function createRemoteTextTrack(options){if(!this.featuresNativeTextTracks){return _get(_getPrototypeOf(Html5.prototype),"createRemoteTextTrack",this).call(this,options);}var htmlTrackElement=document_1.createElement('track');if(options.kind){htmlTrackElement.kind=options.kind;}if(options.label){htmlTrackElement.label=options.label;}if(options.language||options.srclang){htmlTrackElement.srclang=options.language||options.srclang;}if(options.default){htmlTrackElement.default=options.default;}if(options.id){htmlTrackElement.id=options.id;}if(options.src){htmlTrackElement.src=options.src;}return htmlTrackElement;}/**
         * Creates a remote text track object and returns an html track element.
         *
         * @param {Object} options The object should contain values for
         * kind, language, label, and src (location of the WebVTT file)
         * @param {boolean} [manualCleanup=false] if set to true, the TextTrack
         * will not be removed from the TextTrackList and HtmlTrackElementList
         * after a source change
         * @return {HTMLTrackElement} An Html Track Element.
         * This can be an emulated {@link HTMLTrackElement} or a native one.
         *
         */},{key:"addRemoteTextTrack",value:function addRemoteTextTrack(options,manualCleanup){var htmlTrackElement=_get(_getPrototypeOf(Html5.prototype),"addRemoteTextTrack",this).call(this,options,manualCleanup);if(this.featuresNativeTextTracks){this.el().appendChild(htmlTrackElement);}return htmlTrackElement;}/**
         * Remove remote `TextTrack` from `TextTrackList` object
         *
         * @param {TextTrack} track
         *        `TextTrack` object to remove
         */},{key:"removeRemoteTextTrack",value:function removeRemoteTextTrack(track){_get(_getPrototypeOf(Html5.prototype),"removeRemoteTextTrack",this).call(this,track);if(this.featuresNativeTextTracks){var tracks=this.$$('track');var _i143=tracks.length;while(_i143--){if(track===tracks[_i143]||track===tracks[_i143].track){this.el().removeChild(tracks[_i143]);}}}}/**
         * Gets available media playback quality metrics as specified by the W3C's Media
         * Playback Quality API.
         *
         * @see [Spec]{@link https://wicg.github.io/media-playback-quality}
         *
         * @return {Object}
         *         An object with supported media playback quality metrics
         */},{key:"getVideoPlaybackQuality",value:function getVideoPlaybackQuality(){if(typeof this.el().getVideoPlaybackQuality==='function'){return this.el().getVideoPlaybackQuality();}var videoPlaybackQuality={};if(typeof this.el().webkitDroppedFrameCount!=='undefined'&&typeof this.el().webkitDecodedFrameCount!=='undefined'){videoPlaybackQuality.droppedVideoFrames=this.el().webkitDroppedFrameCount;videoPlaybackQuality.totalVideoFrames=this.el().webkitDecodedFrameCount;}if(window_1.performance){videoPlaybackQuality.creationTime=window_1.performance.now();}return videoPlaybackQuality;}}]);return Html5;}(Tech);/* HTML5 Support Testing ---------------------------------------------------- */ /**
       * Element for testing browser HTML5 media capabilities
       *
       * @type {Element}
       * @constant
       * @private
       */defineLazyProperty(Html5,'TEST_VID',function(){if(!isReal()){return;}var video=document_1.createElement('video');var track=document_1.createElement('track');track.kind='captions';track.srclang='en';track.label='English';video.appendChild(track);return video;});/**
       * Check if HTML5 media is supported by this browser/device.
       *
       * @return {boolean}
       *         - True if HTML5 media is supported.
       *         - False if HTML5 media is not supported.
       */Html5.isSupported=function(){// IE with no Media Player is a LIAR! (#984)
try{Html5.TEST_VID.volume=0.5;}catch(e){return false;}return!!(Html5.TEST_VID&&Html5.TEST_VID.canPlayType);};/**
       * Check if the tech can support the given type
       *
       * @param {string} type
       *        The mimetype to check
       * @return {string} 'probably', 'maybe', or '' (empty string)
       */Html5.canPlayType=function(type){return Html5.TEST_VID.canPlayType(type);};/**
       * Check if the tech can support the given source
       *
       * @param {Object} srcObj
       *        The source object
       * @param {Object} options
       *        The options passed to the tech
       * @return {string} 'probably', 'maybe', or '' (empty string)
       */Html5.canPlaySource=function(srcObj,options){return Html5.canPlayType(srcObj.type);};/**
       * Check if the volume can be changed in this browser/device.
       * Volume cannot be changed in a lot of mobile devices.
       * Specifically, it can't be changed from 1 on iOS.
       *
       * @return {boolean}
       *         - True if volume can be controlled
       *         - False otherwise
       */Html5.canControlVolume=function(){// IE will error if Windows Media Player not installed #3315
try{var volume=Html5.TEST_VID.volume;Html5.TEST_VID.volume=volume/2+0.1;var canControl=volume!==Html5.TEST_VID.volume;// With the introduction of iOS 15, there are cases where the volume is read as
// changed but reverts back to its original state at the start of the next tick.
// To determine whether volume can be controlled on iOS,
// a timeout is set and the volume is checked asynchronously.
// Since `features` doesn't currently work asynchronously, the value is manually set.
if(canControl&&IS_IOS){window_1.setTimeout(function(){if(Html5&&Html5.prototype){Html5.prototype.featuresVolumeControl=volume!==Html5.TEST_VID.volume;}});// default iOS to false, which will be updated in the timeout above.
return false;}return canControl;}catch(e){return false;}};/**
       * Check if the volume can be muted in this browser/device.
       * Some devices, e.g. iOS, don't allow changing volume
       * but permits muting/unmuting.
       *
       * @return {boolean}
       *      - True if volume can be muted
       *      - False otherwise
       */Html5.canMuteVolume=function(){try{var muted=Html5.TEST_VID.muted;// in some versions of iOS muted property doesn't always
// work, so we want to set both property and attribute
Html5.TEST_VID.muted=!muted;if(Html5.TEST_VID.muted){_setAttribute(Html5.TEST_VID,'muted','muted');}else{_removeAttribute(Html5.TEST_VID,'muted','muted');}return muted!==Html5.TEST_VID.muted;}catch(e){return false;}};/**
       * Check if the playback rate can be changed in this browser/device.
       *
       * @return {boolean}
       *         - True if playback rate can be controlled
       *         - False otherwise
       */Html5.canControlPlaybackRate=function(){// Playback rate API is implemented in Android Chrome, but doesn't do anything
// https://github.com/videojs/video.js/issues/3180
if(IS_ANDROID&&IS_CHROME&&CHROME_VERSION<58){return false;}// IE will error if Windows Media Player not installed #3315
try{var playbackRate=Html5.TEST_VID.playbackRate;Html5.TEST_VID.playbackRate=playbackRate/2+0.1;return playbackRate!==Html5.TEST_VID.playbackRate;}catch(e){return false;}};/**
       * Check if we can override a video/audio elements attributes, with
       * Object.defineProperty.
       *
       * @return {boolean}
       *         - True if builtin attributes can be overridden
       *         - False otherwise
       */Html5.canOverrideAttributes=function(){// if we cannot overwrite the src/innerHTML property, there is no support
// iOS 7 safari for instance cannot do this.
try{var _noop=function _noop(){};Object.defineProperty(document_1.createElement('video'),'src',{get:_noop,set:_noop});Object.defineProperty(document_1.createElement('audio'),'src',{get:_noop,set:_noop});Object.defineProperty(document_1.createElement('video'),'innerHTML',{get:_noop,set:_noop});Object.defineProperty(document_1.createElement('audio'),'innerHTML',{get:_noop,set:_noop});}catch(e){return false;}return true;};/**
       * Check to see if native `TextTrack`s are supported by this browser/device.
       *
       * @return {boolean}
       *         - True if native `TextTrack`s are supported.
       *         - False otherwise
       */Html5.supportsNativeTextTracks=function(){return IS_ANY_SAFARI||IS_IOS&&IS_CHROME;};/**
       * Check to see if native `VideoTrack`s are supported by this browser/device
       *
       * @return {boolean}
       *        - True if native `VideoTrack`s are supported.
       *        - False otherwise
       */Html5.supportsNativeVideoTracks=function(){return!!(Html5.TEST_VID&&Html5.TEST_VID.videoTracks);};/**
       * Check to see if native `AudioTrack`s are supported by this browser/device
       *
       * @return {boolean}
       *        - True if native `AudioTrack`s are supported.
       *        - False otherwise
       */Html5.supportsNativeAudioTracks=function(){return!!(Html5.TEST_VID&&Html5.TEST_VID.audioTracks);};/**
       * An array of events available on the Html5 tech.
       *
       * @private
       * @type {Array}
       */Html5.Events=['loadstart','suspend','abort','error','emptied','stalled','loadedmetadata','loadeddata','canplay','canplaythrough','playing','waiting','seeking','seeked','ended','durationchange','timeupdate','progress','play','pause','ratechange','resize','volumechange'];/**
       * Boolean indicating whether the `Tech` supports volume control.
       *
       * @type {boolean}
       * @default {@link Html5.canControlVolume}
       */ /**
       * Boolean indicating whether the `Tech` supports muting volume.
       *
       * @type {boolean}
       * @default {@link Html5.canMuteVolume}
       */ /**
       * Boolean indicating whether the `Tech` supports changing the speed at which the media
       * plays. Examples:
       *   - Set player to play 2x (twice) as fast
       *   - Set player to play 0.5x (half) as fast
       *
       * @type {boolean}
       * @default {@link Html5.canControlPlaybackRate}
       */ /**
       * Boolean indicating whether the `Tech` supports the `sourceset` event.
       *
       * @type {boolean}
       * @default
       */ /**
       * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.
       *
       * @type {boolean}
       * @default {@link Html5.supportsNativeTextTracks}
       */ /**
       * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.
       *
       * @type {boolean}
       * @default {@link Html5.supportsNativeVideoTracks}
       */ /**
       * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.
       *
       * @type {boolean}
       * @default {@link Html5.supportsNativeAudioTracks}
       */[['featuresMuteControl','canMuteVolume'],['featuresPlaybackRate','canControlPlaybackRate'],['featuresSourceset','canOverrideAttributes'],['featuresNativeTextTracks','supportsNativeTextTracks'],['featuresNativeVideoTracks','supportsNativeVideoTracks'],['featuresNativeAudioTracks','supportsNativeAudioTracks']].forEach(function(_ref154){var _ref155=_slicedToArray(_ref154,2),key=_ref155[0],fn=_ref155[1];defineLazyProperty(Html5.prototype,key,function(){return Html5[fn]();},true);});Html5.prototype.featuresVolumeControl=Html5.canControlVolume();/**
       * Boolean indicating whether the `HTML5` tech currently supports the media element
       * moving in the DOM. iOS breaks if you move the media element, so this is set this to
       * false there. Everywhere else this should be true.
       *
       * @type {boolean}
       * @default
       */Html5.prototype.movingMediaElementInDOM=!IS_IOS;// TODO: Previous comment: No longer appears to be used. Can probably be removed.
//       Is this true?
/**
       * Boolean indicating whether the `HTML5` tech currently supports automatic media resize
       * when going into fullscreen.
       *
       * @type {boolean}
       * @default
       */Html5.prototype.featuresFullscreenResize=true;/**
       * Boolean indicating whether the `HTML5` tech currently supports the progress event.
       * If this is false, manual `progress` events will be triggered instead.
       *
       * @type {boolean}
       * @default
       */Html5.prototype.featuresProgressEvents=true;/**
       * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.
       * If this is false, manual `timeupdate` events will be triggered instead.
       *
       * @default
       */Html5.prototype.featuresTimeupdateEvents=true;/**
       * Whether the HTML5 el supports `requestVideoFrameCallback`
       *
       * @type {boolean}
       */Html5.prototype.featuresVideoFrameCallback=!!(Html5.TEST_VID&&Html5.TEST_VID.requestVideoFrameCallback);Html5.disposeMediaElement=function(el){if(!el){return;}if(el.parentNode){el.parentNode.removeChild(el);}// remove any child track or source nodes to prevent their loading
while(el.hasChildNodes()){el.removeChild(el.firstChild);}// remove any src reference. not setting `src=''` because that causes a warning
// in firefox
el.removeAttribute('src');// force the media element to update its loading state by calling load()
// however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)
if(typeof el.load==='function'){// wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
(function(){try{el.load();}catch(e){// not supported
}})();}};Html5.resetMediaElement=function(el){if(!el){return;}var sources=el.querySelectorAll('source');var i=sources.length;while(i--){el.removeChild(sources[i]);}// remove any src reference.
// not setting `src=''` because that throws an error
el.removeAttribute('src');if(typeof el.load==='function'){// wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
(function(){try{el.load();}catch(e){// satisfy linter
}})();}};/* Native HTML5 element property wrapping ----------------------------------- */ // Wrap native boolean attributes with getters that check both property and attribute
// The list is as followed:
// muted, defaultMuted, autoplay, controls, loop, playsinline
[/**
       * Get the value of `muted` from the media element. `muted` indicates
       * that the volume for the media should be set to silent. This does not actually change
       * the `volume` attribute.
       *
       * @method Html5#muted
       * @return {boolean}
       *         - True if the value of `volume` should be ignored and the audio set to silent.
       *         - False if the value of `volume` should be used.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}
       */'muted',/**
       * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates
       * whether the media should start muted or not. Only changes the default state of the
       * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the
       * current state.
       *
       * @method Html5#defaultMuted
       * @return {boolean}
       *         - The value of `defaultMuted` from the media element.
       *         - True indicates that the media should start muted.
       *         - False indicates that the media should not start muted
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}
       */'defaultMuted',/**
       * Get the value of `autoplay` from the media element. `autoplay` indicates
       * that the media should start to play as soon as the page is ready.
       *
       * @method Html5#autoplay
       * @return {boolean}
       *         - The value of `autoplay` from the media element.
       *         - True indicates that the media should start as soon as the page loads.
       *         - False indicates that the media should not start as soon as the page loads.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}
       */'autoplay',/**
       * Get the value of `controls` from the media element. `controls` indicates
       * whether the native media controls should be shown or hidden.
       *
       * @method Html5#controls
       * @return {boolean}
       *         - The value of `controls` from the media element.
       *         - True indicates that native controls should be showing.
       *         - False indicates that native controls should be hidden.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}
       */'controls',/**
       * Get the value of `loop` from the media element. `loop` indicates
       * that the media should return to the start of the media and continue playing once
       * it reaches the end.
       *
       * @method Html5#loop
       * @return {boolean}
       *         - The value of `loop` from the media element.
       *         - True indicates that playback should seek back to start once
       *           the end of a media is reached.
       *         - False indicates that playback should not loop back to the start when the
       *           end of the media is reached.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}
       */'loop',/**
       * Get the value of `playsinline` from the media element. `playsinline` indicates
       * to the browser that non-fullscreen playback is preferred when fullscreen
       * playback is the native default, such as in iOS Safari.
       *
       * @method Html5#playsinline
       * @return {boolean}
       *         - The value of `playsinline` from the media element.
       *         - True indicates that the media should play inline.
       *         - False indicates that the media should not play inline.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}
       */'playsinline'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop]||this.el_.hasAttribute(prop);};});// Wrap native boolean attributes with setters that set both property and attribute
// The list is as followed:
// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline
// setControls is special-cased above
[/**
       * Set the value of `muted` on the media element. `muted` indicates that the current
       * audio level should be silent.
       *
       * @method Html5#setMuted
       * @param {boolean} muted
       *        - True if the audio should be set to silent
       *        - False otherwise
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}
       */'muted',/**
       * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current
       * audio level should be silent, but will only effect the muted level on initial playback..
       *
       * @method Html5.prototype.setDefaultMuted
       * @param {boolean} defaultMuted
       *        - True if the audio should be set to silent
       *        - False otherwise
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}
       */'defaultMuted',/**
       * Set the value of `autoplay` on the media element. `autoplay` indicates
       * that the media should start to play as soon as the page is ready.
       *
       * @method Html5#setAutoplay
       * @param {boolean} autoplay
       *         - True indicates that the media should start as soon as the page loads.
       *         - False indicates that the media should not start as soon as the page loads.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}
       */'autoplay',/**
       * Set the value of `loop` on the media element. `loop` indicates
       * that the media should return to the start of the media and continue playing once
       * it reaches the end.
       *
       * @method Html5#setLoop
       * @param {boolean} loop
       *         - True indicates that playback should seek back to start once
       *           the end of a media is reached.
       *         - False indicates that playback should not loop back to the start when the
       *           end of the media is reached.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}
       */'loop',/**
       * Set the value of `playsinline` from the media element. `playsinline` indicates
       * to the browser that non-fullscreen playback is preferred when fullscreen
       * playback is the native default, such as in iOS Safari.
       *
       * @method Html5#setPlaysinline
       * @param {boolean} playsinline
       *         - True indicates that the media should play inline.
       *         - False indicates that the media should not play inline.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}
       */'playsinline'].forEach(function(prop){Html5.prototype['set'+toTitleCase$1(prop)]=function(v){this.el_[prop]=v;if(v){this.el_.setAttribute(prop,prop);}else{this.el_.removeAttribute(prop);}};});// Wrap native properties with a getter
// The list is as followed
// paused, currentTime, buffered, volume, poster, preload, error, seeking
// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture
// played, networkState, readyState, videoWidth, videoHeight, crossOrigin
[/**
       * Get the value of `paused` from the media element. `paused` indicates whether the media element
       * is currently paused or not.
       *
       * @method Html5#paused
       * @return {boolean}
       *         The value of `paused` from the media element.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}
       */'paused',/**
       * Get the value of `currentTime` from the media element. `currentTime` indicates
       * the current second that the media is at in playback.
       *
       * @method Html5#currentTime
       * @return {number}
       *         The value of `currentTime` from the media element.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}
       */'currentTime',/**
       * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`
       * object that represents the parts of the media that are already downloaded and
       * available for playback.
       *
       * @method Html5#buffered
       * @return {TimeRange}
       *         The value of `buffered` from the media element.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}
       */'buffered',/**
       * Get the value of `volume` from the media element. `volume` indicates
       * the current playback volume of audio for a media. `volume` will be a value from 0
       * (silent) to 1 (loudest and default).
       *
       * @method Html5#volume
       * @return {number}
       *         The value of `volume` from the media element. Value will be between 0-1.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}
       */'volume',/**
       * Get the value of `poster` from the media element. `poster` indicates
       * that the url of an image file that can/will be shown when no media data is available.
       *
       * @method Html5#poster
       * @return {string}
       *         The value of `poster` from the media element. Value will be a url to an
       *         image.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}
       */'poster',/**
       * Get the value of `preload` from the media element. `preload` indicates
       * what should download before the media is interacted with. It can have the following
       * values:
       * - none: nothing should be downloaded
       * - metadata: poster and the first few frames of the media may be downloaded to get
       *   media dimensions and other metadata
       * - auto: allow the media and metadata for the media to be downloaded before
       *    interaction
       *
       * @method Html5#preload
       * @return {string}
       *         The value of `preload` from the media element. Will be 'none', 'metadata',
       *         or 'auto'.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}
       */'preload',/**
       * Get the value of the `error` from the media element. `error` indicates any
       * MediaError that may have occurred during playback. If error returns null there is no
       * current error.
       *
       * @method Html5#error
       * @return {MediaError|null}
       *         The value of `error` from the media element. Will be `MediaError` if there
       *         is a current error and null otherwise.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}
       */'error',/**
       * Get the value of `seeking` from the media element. `seeking` indicates whether the
       * media is currently seeking to a new position or not.
       *
       * @method Html5#seeking
       * @return {boolean}
       *         - The value of `seeking` from the media element.
       *         - True indicates that the media is currently seeking to a new position.
       *         - False indicates that the media is not seeking to a new position at this time.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}
       */'seeking',/**
       * Get the value of `seekable` from the media element. `seekable` returns a
       * `TimeRange` object indicating ranges of time that can currently be `seeked` to.
       *
       * @method Html5#seekable
       * @return {TimeRange}
       *         The value of `seekable` from the media element. A `TimeRange` object
       *         indicating the current ranges of time that can be seeked to.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}
       */'seekable',/**
       * Get the value of `ended` from the media element. `ended` indicates whether
       * the media has reached the end or not.
       *
       * @method Html5#ended
       * @return {boolean}
       *         - The value of `ended` from the media element.
       *         - True indicates that the media has ended.
       *         - False indicates that the media has not ended.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}
       */'ended',/**
       * Get the value of `playbackRate` from the media element. `playbackRate` indicates
       * the rate at which the media is currently playing back. Examples:
       *   - if playbackRate is set to 2, media will play twice as fast.
       *   - if playbackRate is set to 0.5, media will play half as fast.
       *
       * @method Html5#playbackRate
       * @return {number}
       *         The value of `playbackRate` from the media element. A number indicating
       *         the current playback speed of the media, where 1 is normal speed.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}
       */'playbackRate',/**
       * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates
       * the rate at which the media is currently playing back. This value will not indicate the current
       * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.
       *
       * Examples:
       *   - if defaultPlaybackRate is set to 2, media will play twice as fast.
       *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.
       *
       * @method Html5.prototype.defaultPlaybackRate
       * @return {number}
       *         The value of `defaultPlaybackRate` from the media element. A number indicating
       *         the current playback speed of the media, where 1 is normal speed.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}
       */'defaultPlaybackRate',/**
       * Get the value of 'disablePictureInPicture' from the video element.
       *
       * @method Html5#disablePictureInPicture
       * @return {boolean} value
       *         - The value of `disablePictureInPicture` from the video element.
       *         - True indicates that the video can't be played in Picture-In-Picture mode
       *         - False indicates that the video can be played in Picture-In-Picture mode
       *
       * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}
       */'disablePictureInPicture',/**
       * Get the value of `played` from the media element. `played` returns a `TimeRange`
       * object representing points in the media timeline that have been played.
       *
       * @method Html5#played
       * @return {TimeRange}
       *         The value of `played` from the media element. A `TimeRange` object indicating
       *         the ranges of time that have been played.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}
       */'played',/**
       * Get the value of `networkState` from the media element. `networkState` indicates
       * the current network state. It returns an enumeration from the following list:
       * - 0: NETWORK_EMPTY
       * - 1: NETWORK_IDLE
       * - 2: NETWORK_LOADING
       * - 3: NETWORK_NO_SOURCE
       *
       * @method Html5#networkState
       * @return {number}
       *         The value of `networkState` from the media element. This will be a number
       *         from the list in the description.
       *
       * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}
       */'networkState',/**
       * Get the value of `readyState` from the media element. `readyState` indicates
       * the current state of the media element. It returns an enumeration from the
       * following list:
       * - 0: HAVE_NOTHING
       * - 1: HAVE_METADATA
       * - 2: HAVE_CURRENT_DATA
       * - 3: HAVE_FUTURE_DATA
       * - 4: HAVE_ENOUGH_DATA
       *
       * @method Html5#readyState
       * @return {number}
       *         The value of `readyState` from the media element. This will be a number
       *         from the list in the description.
       *
       * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}
       */'readyState',/**
       * Get the value of `videoWidth` from the video element. `videoWidth` indicates
       * the current width of the video in css pixels.
       *
       * @method Html5#videoWidth
       * @return {number}
       *         The value of `videoWidth` from the video element. This will be a number
       *         in css pixels.
       *
       * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}
       */'videoWidth',/**
       * Get the value of `videoHeight` from the video element. `videoHeight` indicates
       * the current height of the video in css pixels.
       *
       * @method Html5#videoHeight
       * @return {number}
       *         The value of `videoHeight` from the video element. This will be a number
       *         in css pixels.
       *
       * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}
       */'videoHeight',/**
       * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates
       * to the browser that should sent the cookies along with the requests for the
       * different assets/playlists
       *
       * @method Html5#crossOrigin
       * @return {string}
       *         - anonymous indicates that the media should not sent cookies.
       *         - use-credentials indicates that the media should sent cookies along the requests.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}
       */'crossOrigin'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop];};});// Wrap native properties with a setter in this format:
// set + toTitleCase(name)
// The list is as follows:
// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,
// setDisablePictureInPicture, setCrossOrigin
[/**
       * Set the value of `volume` on the media element. `volume` indicates the current
       * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and
       * so on.
       *
       * @method Html5#setVolume
       * @param {number} percentAsDecimal
       *        The volume percent as a decimal. Valid range is from 0-1.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}
       */'volume',/**
       * Set the value of `src` on the media element. `src` indicates the current
       * {@link Tech~SourceObject} for the media.
       *
       * @method Html5#setSrc
       * @param {Tech~SourceObject} src
       *        The source object to set as the current source.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}
       */'src',/**
       * Set the value of `poster` on the media element. `poster` is the url to
       * an image file that can/will be shown when no media data is available.
       *
       * @method Html5#setPoster
       * @param {string} poster
       *        The url to an image that should be used as the `poster` for the media
       *        element.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}
       */'poster',/**
       * Set the value of `preload` on the media element. `preload` indicates
       * what should download before the media is interacted with. It can have the following
       * values:
       * - none: nothing should be downloaded
       * - metadata: poster and the first few frames of the media may be downloaded to get
       *   media dimensions and other metadata
       * - auto: allow the media and metadata for the media to be downloaded before
       *    interaction
       *
       * @method Html5#setPreload
       * @param {string} preload
       *         The value of `preload` to set on the media element. Must be 'none', 'metadata',
       *         or 'auto'.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}
       */'preload',/**
       * Set the value of `playbackRate` on the media element. `playbackRate` indicates
       * the rate at which the media should play back. Examples:
       *   - if playbackRate is set to 2, media will play twice as fast.
       *   - if playbackRate is set to 0.5, media will play half as fast.
       *
       * @method Html5#setPlaybackRate
       * @return {number}
       *         The value of `playbackRate` from the media element. A number indicating
       *         the current playback speed of the media, where 1 is normal speed.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}
       */'playbackRate',/**
       * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates
       * the rate at which the media should play back upon initial startup. Changing this value
       * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.
       *
       * Example Values:
       *   - if playbackRate is set to 2, media will play twice as fast.
       *   - if playbackRate is set to 0.5, media will play half as fast.
       *
       * @method Html5.prototype.setDefaultPlaybackRate
       * @return {number}
       *         The value of `defaultPlaybackRate` from the media element. A number indicating
       *         the current playback speed of the media, where 1 is normal speed.
       *
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}
       */'defaultPlaybackRate',/**
       * Prevents the browser from suggesting a Picture-in-Picture context menu
       * or to request Picture-in-Picture automatically in some cases.
       *
       * @method Html5#setDisablePictureInPicture
       * @param {boolean} value
       *         The true value will disable Picture-in-Picture mode.
       *
       * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}
       */'disablePictureInPicture',/**
       * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates
       * to the browser that should sent the cookies along with the requests for the
       * different assets/playlists
       *
       * @method Html5#setCrossOrigin
       * @param {string} crossOrigin
       *         - anonymous indicates that the media should not sent cookies.
       *         - use-credentials indicates that the media should sent cookies along the requests.
       *
       * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}
       */'crossOrigin'].forEach(function(prop){Html5.prototype['set'+toTitleCase$1(prop)]=function(v){this.el_[prop]=v;};});// wrap native functions with a function
// The list is as follows:
// pause, load, play
[/**
       * A wrapper around the media elements `pause` function. This will call the `HTML5`
       * media elements `pause` function.
       *
       * @method Html5#pause
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}
       */'pause',/**
       * A wrapper around the media elements `load` function. This will call the `HTML5`s
       * media element `load` function.
       *
       * @method Html5#load
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}
       */'load',/**
       * A wrapper around the media elements `play` function. This will call the `HTML5`s
       * media element `play` function.
       *
       * @method Html5#play
       * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}
       */'play'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop]();};});Tech.withSourceHandlers(Html5);/**
       * Native source handler for Html5, simply passes the source to the media element.
       *
       * @property {Tech~SourceObject} source
       *        The source object
       *
       * @property {Html5} tech
       *        The instance of the HTML5 tech.
       */Html5.nativeSourceHandler={};/**
       * Check if the media element can play the given mime type.
       *
       * @param {string} type
       *        The mimetype to check
       *
       * @return {string}
       *         'probably', 'maybe', or '' (empty string)
       */Html5.nativeSourceHandler.canPlayType=function(type){// IE without MediaPlayer throws an error (#519)
try{return Html5.TEST_VID.canPlayType(type);}catch(e){return'';}};/**
       * Check if the media element can handle a source natively.
       *
       * @param {Tech~SourceObject} source
       *         The source object
       *
       * @param {Object} [options]
       *         Options to be passed to the tech.
       *
       * @return {string}
       *         'probably', 'maybe', or '' (empty string).
       */Html5.nativeSourceHandler.canHandleSource=function(source,options){// If a type was provided we should rely on that
if(source.type){return Html5.nativeSourceHandler.canPlayType(source.type);// If no type, fall back to checking 'video/[EXTENSION]'
}else if(source.src){var ext=getFileExtension(source.src);return Html5.nativeSourceHandler.canPlayType("video/".concat(ext));}return'';};/**
       * Pass the source to the native media element.
       *
       * @param {Tech~SourceObject} source
       *        The source object
       *
       * @param {Html5} tech
       *        The instance of the Html5 tech
       *
       * @param {Object} [options]
       *        The options to pass to the source
       */Html5.nativeSourceHandler.handleSource=function(source,tech,options){tech.setSrc(source.src);};/**
       * A noop for the native dispose function, as cleanup is not needed.
       */Html5.nativeSourceHandler.dispose=function(){};// Register the native source handler
Html5.registerSourceHandler(Html5.nativeSourceHandler);Tech.registerTech('Html5',Html5);/**
       * @file player.js
       */ // The following tech events are simply re-triggered
// on the player when they happen
var TECH_EVENTS_RETRIGGER=[/**
       * Fired while the user agent is downloading media data.
       *
       * @event Player#progress
       * @type {Event}
       */ /**
       * Retrigger the `progress` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechProgress_
       * @fires Player#progress
       * @listens Tech#progress
       */'progress',/**
       * Fires when the loading of an audio/video is aborted.
       *
       * @event Player#abort
       * @type {Event}
       */ /**
       * Retrigger the `abort` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechAbort_
       * @fires Player#abort
       * @listens Tech#abort
       */'abort',/**
       * Fires when the browser is intentionally not getting media data.
       *
       * @event Player#suspend
       * @type {Event}
       */ /**
       * Retrigger the `suspend` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechSuspend_
       * @fires Player#suspend
       * @listens Tech#suspend
       */'suspend',/**
       * Fires when the current playlist is empty.
       *
       * @event Player#emptied
       * @type {Event}
       */ /**
       * Retrigger the `emptied` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechEmptied_
       * @fires Player#emptied
       * @listens Tech#emptied
       */'emptied',/**
       * Fires when the browser is trying to get media data, but data is not available.
       *
       * @event Player#stalled
       * @type {Event}
       */ /**
       * Retrigger the `stalled` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechStalled_
       * @fires Player#stalled
       * @listens Tech#stalled
       */'stalled',/**
       * Fires when the browser has loaded meta data for the audio/video.
       *
       * @event Player#loadedmetadata
       * @type {Event}
       */ /**
       * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechLoadedmetadata_
       * @fires Player#loadedmetadata
       * @listens Tech#loadedmetadata
       */'loadedmetadata',/**
       * Fires when the browser has loaded the current frame of the audio/video.
       *
       * @event Player#loadeddata
       * @type {event}
       */ /**
       * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechLoaddeddata_
       * @fires Player#loadeddata
       * @listens Tech#loadeddata
       */'loadeddata',/**
       * Fires when the current playback position has changed.
       *
       * @event Player#timeupdate
       * @type {event}
       */ /**
       * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechTimeUpdate_
       * @fires Player#timeupdate
       * @listens Tech#timeupdate
       */'timeupdate',/**
       * Fires when the video's intrinsic dimensions change
       *
       * @event Player#resize
       * @type {event}
       */ /**
       * Retrigger the `resize` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechResize_
       * @fires Player#resize
       * @listens Tech#resize
       */'resize',/**
       * Fires when the volume has been changed
       *
       * @event Player#volumechange
       * @type {event}
       */ /**
       * Retrigger the `volumechange` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechVolumechange_
       * @fires Player#volumechange
       * @listens Tech#volumechange
       */'volumechange',/**
       * Fires when the text track has been changed
       *
       * @event Player#texttrackchange
       * @type {event}
       */ /**
       * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.
       *
       * @private
       * @method Player#handleTechTexttrackchange_
       * @fires Player#texttrackchange
       * @listens Tech#texttrackchange
       */'texttrackchange'];// events to queue when playback rate is zero
// this is a hash for the sole purpose of mapping non-camel-cased event names
// to camel-cased function names
var TECH_EVENTS_QUEUE={canplay:'CanPlay',canplaythrough:'CanPlayThrough',playing:'Playing',seeked:'Seeked'};var BREAKPOINT_ORDER=['tiny','xsmall','small','medium','large','xlarge','huge'];var BREAKPOINT_CLASSES={};// grep: vjs-layout-tiny
// grep: vjs-layout-x-small
// grep: vjs-layout-small
// grep: vjs-layout-medium
// grep: vjs-layout-large
// grep: vjs-layout-x-large
// grep: vjs-layout-huge
BREAKPOINT_ORDER.forEach(function(k){var v=k.charAt(0)==='x'?"x-".concat(k.substring(1)):k;BREAKPOINT_CLASSES[k]="vjs-layout-".concat(v);});var DEFAULT_BREAKPOINTS={tiny:210,xsmall:320,small:425,medium:768,large:1440,xlarge:2560,huge:Infinity};/**
       * An instance of the `Player` class is created when any of the Video.js setup methods
       * are used to initialize a video.
       *
       * After an instance has been created it can be accessed globally in three ways:
       * 1. By calling `videojs.getPlayer('example_video_1');`
       * 2. By calling `videojs('example_video_1');` (not recommended)
       * 2. By using it directly via `videojs.players.example_video_1;`
       *
       * @extends Component
       * @global
       */var Player=/*#__PURE__*/function(_Component$33){_inherits(Player,_Component$33);var _super92=_createSuper(Player);/**
         * Create an instance of this class.
         *
         * @param {Element} tag
         *        The original video DOM element used for configuring options.
         *
         * @param {Object} [options]
         *        Object of option names and values.
         *
         * @param {Function} [ready]
         *        Ready callback function.
         */function Player(tag,options,ready){var _this153;_classCallCheck(this,Player);// Make sure tag ID exists
// also here.. probably better
tag.id=tag.id||options.id||"vjs_video_".concat(newGUID());// Set Options
// The options argument overrides options set in the video tag
// which overrides globally set options.
// This latter part coincides with the load order
// (tag must exist before Player)
options=Object.assign(Player.getTagSettings(tag),options);// Delay the initialization of children because we need to set up
// player properties first, and can't use `this` before `super()`
options.initChildren=false;// Same with creating the element
options.createEl=false;// don't auto mixin the evented mixin
options.evented=false;// we don't want the player to report touch activity on itself
// see enableTouchActivity in Component
options.reportTouchActivity=false;// If language is not set, get the closest lang attribute
if(!options.language){var _closest=tag.closest('[lang]');if(_closest){options.language=_closest.getAttribute('lang');}}// Run base component initializing with new options
_this153=_super92.call(this,null,options,ready);// Create bound methods for document listeners.
_this153.boundDocumentFullscreenChange_=function(e){return _this153.documentFullscreenChange_(e);};_this153.boundFullWindowOnEscKey_=function(e){return _this153.fullWindowOnEscKey(e);};_this153.boundUpdateStyleEl_=function(e){return _this153.updateStyleEl_(e);};_this153.boundApplyInitTime_=function(e){return _this153.applyInitTime_(e);};_this153.boundUpdateCurrentBreakpoint_=function(e){return _this153.updateCurrentBreakpoint_(e);};_this153.boundHandleTechClick_=function(e){return _this153.handleTechClick_(e);};_this153.boundHandleTechDoubleClick_=function(e){return _this153.handleTechDoubleClick_(e);};_this153.boundHandleTechTouchStart_=function(e){return _this153.handleTechTouchStart_(e);};_this153.boundHandleTechTouchMove_=function(e){return _this153.handleTechTouchMove_(e);};_this153.boundHandleTechTouchEnd_=function(e){return _this153.handleTechTouchEnd_(e);};_this153.boundHandleTechTap_=function(e){return _this153.handleTechTap_(e);};// default isFullscreen_ to false
_this153.isFullscreen_=false;// create logger
_this153.log=createLogger(_this153.id_);// Hold our own reference to fullscreen api so it can be mocked in tests
_this153.fsApi_=FullscreenApi;// Tracks when a tech changes the poster
_this153.isPosterFromTech_=false;// Holds callback info that gets queued when playback rate is zero
// and a seek is happening
_this153.queuedCallbacks_=[];// Turn off API access because we're loading a new tech that might load asynchronously
_this153.isReady_=false;// Init state hasStarted_
_this153.hasStarted_=false;// Init state userActive_
_this153.userActive_=false;// Init debugEnabled_
_this153.debugEnabled_=false;// Init state audioOnlyMode_
_this153.audioOnlyMode_=false;// Init state audioPosterMode_
_this153.audioPosterMode_=false;// Init state audioOnlyCache_
_this153.audioOnlyCache_={playerHeight:null,hiddenChildren:[]};// if the global option object was accidentally blown away by
// someone, bail early with an informative error
if(!_this153.options_||!_this153.options_.techOrder||!_this153.options_.techOrder.length){throw new Error('No techOrder specified. Did you overwrite '+'videojs.options instead of just changing the '+'properties you want to override?');}// Store the original tag used to set options
_this153.tag=tag;// Store the tag attributes used to restore html5 element
_this153.tagAttributes=tag&&getAttributes(tag);// Update current language
_this153.language(_this153.options_.language);// Update Supported Languages
if(options.languages){// Normalise player option languages to lowercase
var languagesToLower={};Object.getOwnPropertyNames(options.languages).forEach(function(name){languagesToLower[name.toLowerCase()]=options.languages[name];});_this153.languages_=languagesToLower;}else{_this153.languages_=Player.prototype.options_.languages;}_this153.resetCache_();// Set poster
/** @type string */_this153.poster_=options.poster||'';// Set controls
/** @type {boolean} */_this153.controls_=!!options.controls;// Original tag settings stored in options
// now remove immediately so native controls don't flash.
// May be turned back on by HTML5 tech if nativeControlsForTouch is true
tag.controls=false;tag.removeAttribute('controls');_this153.changingSrc_=false;_this153.playCallbacks_=[];_this153.playTerminatedQueue_=[];// the attribute overrides the option
if(tag.hasAttribute('autoplay')){_this153.autoplay(true);}else{// otherwise use the setter to validate and
// set the correct value.
_this153.autoplay(_this153.options_.autoplay);}// check plugins
if(options.plugins){Object.keys(options.plugins).forEach(function(name){if(typeof _this153[name]!=='function'){throw new Error("plugin \"".concat(name,"\" does not exist"));}});}/*
           * Store the internal state of scrubbing
           *
           * @private
           * @return {Boolean} True if the user is scrubbing
           */_this153.scrubbing_=false;_this153.el_=_this153.createEl();// Make this an evented object and use `el_` as its event bus.
evented(_assertThisInitialized2(_this153),{eventBusKey:'el_'});// listen to document and player fullscreenchange handlers so we receive those events
// before a user can receive them so we can update isFullscreen appropriately.
// make sure that we listen to fullscreenchange events before everything else to make sure that
// our isFullscreen method is updated properly for internal components as well as external.
if(_this153.fsApi_.requestFullscreen){_on(document_1,_this153.fsApi_.fullscreenchange,_this153.boundDocumentFullscreenChange_);_this153.on(_this153.fsApi_.fullscreenchange,_this153.boundDocumentFullscreenChange_);}if(_this153.fluid_){_this153.on(['playerreset','resize'],_this153.boundUpdateStyleEl_);}// We also want to pass the original player options to each component and plugin
// as well so they don't need to reach back into the player for options later.
// We also need to do another copy of this.options_ so we don't end up with
// an infinite loop.
var playerOptionsCopy=merge$1(_this153.options_);// Load plugins
if(options.plugins){Object.keys(options.plugins).forEach(function(name){_this153[name](options.plugins[name]);});}// Enable debug mode to fire debugon event for all plugins.
if(options.debug){_this153.debug(true);}_this153.options_.playerOptions=playerOptionsCopy;_this153.middleware_=[];_this153.playbackRates(options.playbackRates);if(options.experimentalSvgIcons){// Add SVG Sprite to the DOM
var parser=new window_1.DOMParser();var parsedSVG=parser.parseFromString(icons,'image/svg+xml');var errorNode=parsedSVG.querySelector('parsererror');if(errorNode){log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');_this153.options_.experimentalSvgIcons=null;}else{var sprite=parsedSVG.documentElement;sprite.style.display='none';_this153.el_.appendChild(sprite);_this153.addClass('vjs-svg-icons-enabled');}}_this153.initChildren();// Set isAudio based on whether or not an audio tag was used
_this153.isAudio(tag.nodeName.toLowerCase()==='audio');// Update controls className. Can't do this when the controls are initially
// set because the element doesn't exist yet.
if(_this153.controls()){_this153.addClass('vjs-controls-enabled');}else{_this153.addClass('vjs-controls-disabled');}// Set ARIA label and region role depending on player type
_this153.el_.setAttribute('role','region');if(_this153.isAudio()){_this153.el_.setAttribute('aria-label',_this153.localize('Audio Player'));}else{_this153.el_.setAttribute('aria-label',_this153.localize('Video Player'));}if(_this153.isAudio()){_this153.addClass('vjs-audio');}// Check if spatial navigation is enabled in the options.
// If enabled, instantiate the SpatialNavigation class.
if(options.spatialNavigation&&options.spatialNavigation.enabled){_this153.spatialNavigation=new SpatialNavigation(_assertThisInitialized2(_this153));_this153.addClass('vjs-spatial-navigation-enabled');}// TODO: Make this smarter. Toggle user state between touching/mousing
// using events, since devices can have both touch and mouse events.
// TODO: Make this check be performed again when the window switches between monitors
// (See https://github.com/videojs/video.js/issues/5683)
if(TOUCH_ENABLED){_this153.addClass('vjs-touch-enabled');}// iOS Safari has broken hover handling
if(!IS_IOS){_this153.addClass('vjs-workinghover');}// Make player easily findable by ID
Player.players[_this153.id_]=_assertThisInitialized2(_this153);// Add a major version class to aid css in plugins
var majorVersion=version$6.split('.')[0];_this153.addClass("vjs-v".concat(majorVersion));// When the player is first initialized, trigger activity so components
// like the control bar show themselves if needed
_this153.userActive(true);_this153.reportUserActivity();_this153.one('play',function(e){return _this153.listenForUserActivity_(e);});_this153.on('keydown',function(e){return _this153.handleKeyDown(e);});_this153.on('languagechange',function(e){return _this153.handleLanguagechange(e);});_this153.breakpoints(_this153.options_.breakpoints);_this153.responsive(_this153.options_.responsive);// Calling both the audio mode methods after the player is fully
// setup to be able to listen to the events triggered by them
_this153.on('ready',function(){// Calling the audioPosterMode method first so that
// the audioOnlyMode can take precedence when both options are set to true
_this153.audioPosterMode(_this153.options_.audioPosterMode);_this153.audioOnlyMode(_this153.options_.audioOnlyMode);});return _this153;}/**
         * Destroys the video player and does any necessary cleanup.
         *
         * This is especially helpful if you are dynamically adding and removing videos
         * to/from the DOM.
         *
         * @fires Player#dispose
         */_createClass(Player,[{key:"dispose",value:function dispose(){var _this154=this;/**
           * Called when the player is being disposed of.
           *
           * @event Player#dispose
           * @type {Event}
           */this.trigger('dispose');// prevent dispose from being called twice
this.off('dispose');// Make sure all player-specific document listeners are unbound. This is
_off(document_1,this.fsApi_.fullscreenchange,this.boundDocumentFullscreenChange_);_off(document_1,'keydown',this.boundFullWindowOnEscKey_);if(this.styleEl_&&this.styleEl_.parentNode){this.styleEl_.parentNode.removeChild(this.styleEl_);this.styleEl_=null;}// Kill reference to this player
Player.players[this.id_]=null;if(this.tag&&this.tag.player){this.tag.player=null;}if(this.el_&&this.el_.player){this.el_.player=null;}if(this.tech_){this.tech_.dispose();this.isPosterFromTech_=false;this.poster_='';}if(this.playerElIngest_){this.playerElIngest_=null;}if(this.tag){this.tag=null;}clearCacheForPlayer(this);// remove all event handlers for track lists
// all tracks and track listeners are removed on
// tech dispose
ALL.names.forEach(function(name){var props=ALL[name];var list=_this154[props.getterName]();// if it is not a native list
// we have to manually remove event listeners
if(list&&list.off){list.off();}});// the actual .el_ is removed here, or replaced if
_get(_getPrototypeOf(Player.prototype),"dispose",this).call(this,{restoreEl:this.options_.restoreEl});}/**
         * Create the `Player`'s DOM element.
         *
         * @return {Element}
         *         The DOM element that gets created.
         */},{key:"createEl",value:function createEl(){var tag=this.tag;var el;var playerElIngest=this.playerElIngest_=tag.parentNode&&tag.parentNode.hasAttribute&&tag.parentNode.hasAttribute('data-vjs-player');var divEmbed=this.tag.tagName.toLowerCase()==='video-js';if(playerElIngest){el=this.el_=tag.parentNode;}else if(!divEmbed){el=this.el_=_get(_getPrototypeOf(Player.prototype),"createEl",this).call(this,'div');}// Copy over all the attributes from the tag, including ID and class
// ID will now reference player box, not the video tag
var attrs=getAttributes(tag);if(divEmbed){el=this.el_=tag;tag=this.tag=document_1.createElement('video');while(el.children.length){tag.appendChild(el.firstChild);}if(!_hasClass(el,'video-js')){_addClass(el,'video-js');}el.appendChild(tag);playerElIngest=this.playerElIngest_=el;// move properties over from our custom `video-js` element
// to our new `video` element. This will move things like
// `src` or `controls` that were set via js before the player
// was initialized.
Object.keys(el).forEach(function(k){try{tag[k]=el[k];}catch(e){// we got a a property like outerHTML which we can't actually copy, ignore it
}});}// set tabindex to -1 to remove the video element from the focus order
tag.setAttribute('tabindex','-1');attrs.tabindex='-1';// Workaround for #4583 on Chrome (on Windows) with JAWS.
// See https://github.com/FreedomScientific/VFO-standards-support/issues/78
// Note that we can't detect if JAWS is being used, but this ARIA attribute
// doesn't change behavior of Chrome if JAWS is not being used
if(IS_CHROME&&IS_WINDOWS){tag.setAttribute('role','application');attrs.role='application';}// Remove width/height attrs from tag so CSS can make it 100% width/height
tag.removeAttribute('width');tag.removeAttribute('height');if('width'in attrs){delete attrs.width;}if('height'in attrs){delete attrs.height;}Object.getOwnPropertyNames(attrs).forEach(function(attr){// don't copy over the class attribute to the player element when we're in a div embed
// the class is already set up properly in the divEmbed case
// and we want to make sure that the `video-js` class doesn't get lost
if(!(divEmbed&&attr==='class')){el.setAttribute(attr,attrs[attr]);}if(divEmbed){tag.setAttribute(attr,attrs[attr]);}});// Update tag id/class for use as HTML5 playback tech
// Might think we should do this after embedding in container so .vjs-tech class
// doesn't flash 100% width/height, but class only applies with .video-js parent
tag.playerId=tag.id;tag.id+='_html5_api';tag.className='vjs-tech';// Make player findable on elements
tag.player=el.player=this;// Default state of video is paused
this.addClass('vjs-paused');var deviceClassNames=['IS_SMART_TV','IS_TIZEN','IS_WEBOS','IS_ANDROID','IS_IPAD','IS_IPHONE'].filter(function(key){return browser[key];}).map(function(key){return'vjs-device-'+key.substring(3).toLowerCase().replace(/\_/g,'-');});this.addClass.apply(this,_toConsumableArray(deviceClassNames));// Add a style element in the player that we'll use to set the width/height
// of the player in a way that's still overridable by CSS, just like the
// video element
if(window_1.VIDEOJS_NO_DYNAMIC_STYLE!==true){this.styleEl_=createStyleElement('vjs-styles-dimensions');var defaultsStyleEl=_$('.vjs-styles-defaults');var head=_$('head');head.insertBefore(this.styleEl_,defaultsStyleEl?defaultsStyleEl.nextSibling:head.firstChild);}this.fill_=false;this.fluid_=false;// Pass in the width/height/aspectRatio options which will update the style el
this.width(this.options_.width);this.height(this.options_.height);this.fill(this.options_.fill);this.fluid(this.options_.fluid);this.aspectRatio(this.options_.aspectRatio);// support both crossOrigin and crossorigin to reduce confusion and issues around the name
this.crossOrigin(this.options_.crossOrigin||this.options_.crossorigin);// Hide any links within the video/audio tag,
// because IE doesn't hide them completely from screen readers.
var links=tag.getElementsByTagName('a');for(var _i144=0;_i144<links.length;_i144++){var linkEl=links.item(_i144);_addClass(linkEl,'vjs-hidden');linkEl.setAttribute('hidden','hidden');}// insertElFirst seems to cause the networkState to flicker from 3 to 2, so
// keep track of the original for later so we can know if the source originally failed
tag.initNetworkState_=tag.networkState;// Wrap video tag in div (el/box) container
if(tag.parentNode&&!playerElIngest){tag.parentNode.insertBefore(el,tag);}// insert the tag as the first child of the player element
// then manually add it to the children array so that this.addChild
// will work properly for other components
//
// Breaks iPhone, fixed in HTML5 setup.
prependTo(tag,el);this.children_.unshift(tag);// Set lang attr on player to ensure CSS :lang() in consistent with player
// if it's been set to something different to the doc
this.el_.setAttribute('lang',this.language_);this.el_.setAttribute('translate','no');this.el_=el;return el;}/**
         * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this
         * sets the `crossOrigin` property on the `<video>` tag to control the CORS
         * behavior.
         *
         * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}
         *
         * @param {string|null} [value]
         *        The value to set the `Player`'s crossOrigin to. If an argument is
         *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.
         *
         * @return {string|null|undefined}
         *         - The current crossOrigin value of the `Player` when getting.
         *         - undefined when setting
         */},{key:"crossOrigin",value:function crossOrigin(value){// `null` can be set to unset a value
if(typeof value==='undefined'){return this.techGet_('crossOrigin');}if(value!==null&&value!=='anonymous'&&value!=='use-credentials'){log$1.warn("crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"".concat(value,"\""));return;}this.techCall_('setCrossOrigin',value);if(this.posterImage){this.posterImage.crossOrigin(value);}return;}/**
         * A getter/setter for the `Player`'s width. Returns the player's configured value.
         * To get the current width use `currentWidth()`.
         *
         * @param {number|string} [value]
         *        CSS value to set the `Player`'s width to.
         *
         * @return {number|undefined}
         *         - The current width of the `Player` when getting.
         *         - Nothing when setting
         */},{key:"width",value:function width(value){return this.dimension('width',value);}/**
         * A getter/setter for the `Player`'s height. Returns the player's configured value.
         * To get the current height use `currentheight()`.
         *
         * @param {number|string} [value]
         *        CSS value to set the `Player`'s height to.
         *
         * @return {number|undefined}
         *         - The current height of the `Player` when getting.
         *         - Nothing when setting
         */},{key:"height",value:function height(value){return this.dimension('height',value);}/**
         * A getter/setter for the `Player`'s width & height.
         *
         * @param {string} dimension
         *        This string can be:
         *        - 'width'
         *        - 'height'
         *
         * @param {number|string} [value]
         *        Value for dimension specified in the first argument.
         *
         * @return {number}
         *         The dimension arguments value when getting (width/height).
         */},{key:"dimension",value:function dimension(_dimension,value){var privDimension=_dimension+'_';if(value===undefined){return this[privDimension]||0;}if(value===''||value==='auto'){// If an empty string is given, reset the dimension to be automatic
this[privDimension]=undefined;this.updateStyleEl_();return;}var parsedVal=parseFloat(value);if(isNaN(parsedVal)){log$1.error("Improper value \"".concat(value,"\" supplied for for ").concat(_dimension));return;}this[privDimension]=parsedVal;this.updateStyleEl_();}/**
         * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.
         *
         * Turning this on will turn off fill mode.
         *
         * @param {boolean} [bool]
         *        - A value of true adds the class.
         *        - A value of false removes the class.
         *        - No value will be a getter.
         *
         * @return {boolean|undefined}
         *         - The value of fluid when getting.
         *         - `undefined` when setting.
         */},{key:"fluid",value:function fluid(bool){var _this155=this;if(bool===undefined){return!!this.fluid_;}this.fluid_=!!bool;if(isEvented(this)){this.off(['playerreset','resize'],this.boundUpdateStyleEl_);}if(bool){this.addClass('vjs-fluid');this.fill(false);addEventedCallback(this,function(){_this155.on(['playerreset','resize'],_this155.boundUpdateStyleEl_);});}else{this.removeClass('vjs-fluid');}this.updateStyleEl_();}/**
         * A getter/setter/toggler for the vjs-fill `className` on the `Player`.
         *
         * Turning this on will turn off fluid mode.
         *
         * @param {boolean} [bool]
         *        - A value of true adds the class.
         *        - A value of false removes the class.
         *        - No value will be a getter.
         *
         * @return {boolean|undefined}
         *         - The value of fluid when getting.
         *         - `undefined` when setting.
         */},{key:"fill",value:function fill(bool){if(bool===undefined){return!!this.fill_;}this.fill_=!!bool;if(bool){this.addClass('vjs-fill');this.fluid(false);}else{this.removeClass('vjs-fill');}}/**
         * Get/Set the aspect ratio
         *
         * @param {string} [ratio]
         *        Aspect ratio for player
         *
         * @return {string|undefined}
         *         returns the current aspect ratio when getting
         */ /**
         * A getter/setter for the `Player`'s aspect ratio.
         *
         * @param {string} [ratio]
         *        The value to set the `Player`'s aspect ratio to.
         *
         * @return {string|undefined}
         *         - The current aspect ratio of the `Player` when getting.
         *         - undefined when setting
         */},{key:"aspectRatio",value:function aspectRatio(ratio){if(ratio===undefined){return this.aspectRatio_;}// Check for width:height format
if(!/^\d+\:\d+$/.test(ratio)){throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');}this.aspectRatio_=ratio;// We're assuming if you set an aspect ratio you want fluid mode,
// because in fixed mode you could calculate width and height yourself.
this.fluid(true);this.updateStyleEl_();}/**
         * Update styles of the `Player` element (height, width and aspect ratio).
         *
         * @private
         * @listens Tech#loadedmetadata
         */},{key:"updateStyleEl_",value:function updateStyleEl_(){if(window_1.VIDEOJS_NO_DYNAMIC_STYLE===true){var _width2=typeof this.width_==='number'?this.width_:this.options_.width;var _height=typeof this.height_==='number'?this.height_:this.options_.height;var techEl=this.tech_&&this.tech_.el();if(techEl){if(_width2>=0){techEl.width=_width2;}if(_height>=0){techEl.height=_height;}}return;}var width;var height;var aspectRatio;var idClass;// The aspect ratio is either used directly or to calculate width and height.
if(this.aspectRatio_!==undefined&&this.aspectRatio_!=='auto'){// Use any aspectRatio that's been specifically set
aspectRatio=this.aspectRatio_;}else if(this.videoWidth()>0){// Otherwise try to get the aspect ratio from the video metadata
aspectRatio=this.videoWidth()+':'+this.videoHeight();}else{// Or use a default. The video element's is 2:1, but 16:9 is more common.
aspectRatio='16:9';}// Get the ratio as a decimal we can use to calculate dimensions
var ratioParts=aspectRatio.split(':');var ratioMultiplier=ratioParts[1]/ratioParts[0];if(this.width_!==undefined){// Use any width that's been specifically set
width=this.width_;}else if(this.height_!==undefined){// Or calculate the width from the aspect ratio if a height has been set
width=this.height_/ratioMultiplier;}else{// Or use the video's metadata, or use the video el's default of 300
width=this.videoWidth()||300;}if(this.height_!==undefined){// Use any height that's been specifically set
height=this.height_;}else{// Otherwise calculate the height from the ratio and the width
height=width*ratioMultiplier;}// Ensure the CSS class is valid by starting with an alpha character
if(/^[^a-zA-Z]/.test(this.id())){idClass='dimensions-'+this.id();}else{idClass=this.id()+'-dimensions';}// Ensure the right class is still on the player for the style element
this.addClass(idClass);setTextContent(this.styleEl_,"\n      .".concat(idClass," {\n        width: ").concat(width,"px;\n        height: ").concat(height,"px;\n      }\n\n      .").concat(idClass,".vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ").concat(ratioMultiplier*100,"%;\n      }\n    "));}/**
         * Load/Create an instance of playback {@link Tech} including element
         * and API methods. Then append the `Tech` element in `Player` as a child.
         *
         * @param {string} techName
         *        name of the playback technology
         *
         * @param {string} source
         *        video source
         *
         * @private
         */},{key:"loadTech_",value:function loadTech_(techName,source){var _this156=this;// Pause and remove current playback technology
if(this.tech_){this.unloadTech_();}var titleTechName=toTitleCase$1(techName);var camelTechName=techName.charAt(0).toLowerCase()+techName.slice(1);// get rid of the HTML5 video tag as soon as we are using another tech
if(titleTechName!=='Html5'&&this.tag){Tech.getTech('Html5').disposeMediaElement(this.tag);this.tag.player=null;this.tag=null;}this.techName_=titleTechName;// Turn off API access because we're loading a new tech that might load asynchronously
this.isReady_=false;var autoplay=this.autoplay();// if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech
// because the player is going to handle autoplay on `loadstart`
if(typeof this.autoplay()==='string'||this.autoplay()===true&&this.options_.normalizeAutoplay){autoplay=false;}// Grab tech-specific options from player options and add source and parent element to use.
var techOptions={source:source,autoplay:autoplay,'nativeControlsForTouch':this.options_.nativeControlsForTouch,'playerId':this.id(),'techId':"".concat(this.id(),"_").concat(camelTechName,"_api"),'playsinline':this.options_.playsinline,'preload':this.options_.preload,'loop':this.options_.loop,'disablePictureInPicture':this.options_.disablePictureInPicture,'muted':this.options_.muted,'poster':this.poster(),'language':this.language(),'playerElIngest':this.playerElIngest_||false,'vtt.js':this.options_['vtt.js'],'canOverridePoster':!!this.options_.techCanOverridePoster,'enableSourceset':this.options_.enableSourceset};ALL.names.forEach(function(name){var props=ALL[name];techOptions[props.getterName]=_this156[props.privateName];});Object.assign(techOptions,this.options_[titleTechName]);Object.assign(techOptions,this.options_[camelTechName]);Object.assign(techOptions,this.options_[techName.toLowerCase()]);if(this.tag){techOptions.tag=this.tag;}if(source&&source.src===this.cache_.src&&this.cache_.currentTime>0){techOptions.startTime=this.cache_.currentTime;}// Initialize tech instance
var TechClass=Tech.getTech(techName);if(!TechClass){throw new Error("No Tech named '".concat(titleTechName,"' exists! '").concat(titleTechName,"' should be registered using videojs.registerTech()'"));}this.tech_=new TechClass(techOptions);// player.triggerReady is always async, so don't need this to be async
this.tech_.ready(bind_(this,this.handleTechReady_),true);textTrackConverter.jsonToTextTracks(this.textTracksJson_||[],this.tech_);// Listen to all HTML5-defined events and trigger them on the player
TECH_EVENTS_RETRIGGER.forEach(function(event){_this156.on(_this156.tech_,event,function(e){return _this156["handleTech".concat(toTitleCase$1(event),"_")](e);});});Object.keys(TECH_EVENTS_QUEUE).forEach(function(event){_this156.on(_this156.tech_,event,function(eventObj){if(_this156.tech_.playbackRate()===0&&_this156.tech_.seeking()){_this156.queuedCallbacks_.push({callback:_this156["handleTech".concat(TECH_EVENTS_QUEUE[event],"_")].bind(_this156),event:eventObj});return;}_this156["handleTech".concat(TECH_EVENTS_QUEUE[event],"_")](eventObj);});});this.on(this.tech_,'loadstart',function(e){return _this156.handleTechLoadStart_(e);});this.on(this.tech_,'sourceset',function(e){return _this156.handleTechSourceset_(e);});this.on(this.tech_,'waiting',function(e){return _this156.handleTechWaiting_(e);});this.on(this.tech_,'ended',function(e){return _this156.handleTechEnded_(e);});this.on(this.tech_,'seeking',function(e){return _this156.handleTechSeeking_(e);});this.on(this.tech_,'play',function(e){return _this156.handleTechPlay_(e);});this.on(this.tech_,'pause',function(e){return _this156.handleTechPause_(e);});this.on(this.tech_,'durationchange',function(e){return _this156.handleTechDurationChange_(e);});this.on(this.tech_,'fullscreenchange',function(e,data){return _this156.handleTechFullscreenChange_(e,data);});this.on(this.tech_,'fullscreenerror',function(e,err){return _this156.handleTechFullscreenError_(e,err);});this.on(this.tech_,'enterpictureinpicture',function(e){return _this156.handleTechEnterPictureInPicture_(e);});this.on(this.tech_,'leavepictureinpicture',function(e){return _this156.handleTechLeavePictureInPicture_(e);});this.on(this.tech_,'error',function(e){return _this156.handleTechError_(e);});this.on(this.tech_,'posterchange',function(e){return _this156.handleTechPosterChange_(e);});this.on(this.tech_,'textdata',function(e){return _this156.handleTechTextData_(e);});this.on(this.tech_,'ratechange',function(e){return _this156.handleTechRateChange_(e);});this.on(this.tech_,'loadedmetadata',this.boundUpdateStyleEl_);this.usingNativeControls(this.techGet_('controls'));if(this.controls()&&!this.usingNativeControls()){this.addTechControlsListeners_();}// Add the tech element in the DOM if it was not already there
// Make sure to not insert the original video element if using Html5
if(this.tech_.el().parentNode!==this.el()&&(titleTechName!=='Html5'||!this.tag)){prependTo(this.tech_.el(),this.el());}// Get rid of the original video tag reference after the first tech is loaded
if(this.tag){this.tag.player=null;this.tag=null;}}/**
         * Unload and dispose of the current playback {@link Tech}.
         *
         * @private
         */},{key:"unloadTech_",value:function unloadTech_(){var _this157=this;// Save the current text tracks so that we can reuse the same text tracks with the next tech
ALL.names.forEach(function(name){var props=ALL[name];_this157[props.privateName]=_this157[props.getterName]();});this.textTracksJson_=textTrackConverter.textTracksToJson(this.tech_);this.isReady_=false;this.tech_.dispose();this.tech_=false;if(this.isPosterFromTech_){this.poster_='';this.trigger('posterchange');}this.isPosterFromTech_=false;}/**
         * Return a reference to the current {@link Tech}.
         * It will print a warning by default about the danger of using the tech directly
         * but any argument that is passed in will silence the warning.
         *
         * @param {*} [safety]
         *        Anything passed in to silence the warning
         *
         * @return {Tech}
         *         The Tech
         */},{key:"tech",value:function tech(safety){if(safety===undefined){log$1.warn('Using the tech directly can be dangerous. I hope you know what you\'re doing.\n'+'See https://github.com/videojs/video.js/issues/2617 for more info.\n');}return this.tech_;}/**
         * An object that contains Video.js version.
         *
         * @typedef {Object} PlayerVersion
         *
         * @property {string} 'video.js' - Video.js version
         */ /**
         * Returns an object with Video.js version.
         *
         * @return {PlayerVersion}
         *          An object with Video.js version.
         */},{key:"version",value:function version(){return{'video.js':version$6};}/**
         * Set up click and touch listeners for the playback element
         *
         * - On desktops: a click on the video itself will toggle playback
         * - On mobile devices: a click on the video toggles controls
         *   which is done by toggling the user state between active and
         *   inactive
         * - A tap can signal that a user has become active or has become inactive
         *   e.g. a quick tap on an iPhone movie should reveal the controls. Another
         *   quick tap should hide them again (signaling the user is in an inactive
         *   viewing state)
         * - In addition to this, we still want the user to be considered inactive after
         *   a few seconds of inactivity.
         *
         * > Note: the only part of iOS interaction we can't mimic with this setup
         * is a touch and hold on the video element counting as activity in order to
         * keep the controls showing, but that shouldn't be an issue. A touch and hold
         * on any controls will still keep the user active
         *
         * @private
         */},{key:"addTechControlsListeners_",value:function addTechControlsListeners_(){// Make sure to remove all the previous listeners in case we are called multiple times.
this.removeTechControlsListeners_();this.on(this.tech_,'click',this.boundHandleTechClick_);this.on(this.tech_,'dblclick',this.boundHandleTechDoubleClick_);// If the controls were hidden we don't want that to change without a tap event
// so we'll check if the controls were already showing before reporting user
// activity
this.on(this.tech_,'touchstart',this.boundHandleTechTouchStart_);this.on(this.tech_,'touchmove',this.boundHandleTechTouchMove_);this.on(this.tech_,'touchend',this.boundHandleTechTouchEnd_);// The tap listener needs to come after the touchend listener because the tap
// listener cancels out any reportedUserActivity when setting userActive(false)
this.on(this.tech_,'tap',this.boundHandleTechTap_);}/**
         * Remove the listeners used for click and tap controls. This is needed for
         * toggling to controls disabled, where a tap/touch should do nothing.
         *
         * @private
         */},{key:"removeTechControlsListeners_",value:function removeTechControlsListeners_(){// We don't want to just use `this.off()` because there might be other needed
// listeners added by techs that extend this.
this.off(this.tech_,'tap',this.boundHandleTechTap_);this.off(this.tech_,'touchstart',this.boundHandleTechTouchStart_);this.off(this.tech_,'touchmove',this.boundHandleTechTouchMove_);this.off(this.tech_,'touchend',this.boundHandleTechTouchEnd_);this.off(this.tech_,'click',this.boundHandleTechClick_);this.off(this.tech_,'dblclick',this.boundHandleTechDoubleClick_);}/**
         * Player waits for the tech to be ready
         *
         * @private
         */},{key:"handleTechReady_",value:function handleTechReady_(){this.triggerReady();// Keep the same volume as before
if(this.cache_.volume){this.techCall_('setVolume',this.cache_.volume);}// Look if the tech found a higher resolution poster while loading
this.handleTechPosterChange_();// Update the duration if available
this.handleTechDurationChange_();}/**
         * Retrigger the `loadstart` event that was triggered by the {@link Tech}.
         *
         * @fires Player#loadstart
         * @listens Tech#loadstart
         * @private
         */},{key:"handleTechLoadStart_",value:function handleTechLoadStart_(){// TODO: Update to use `emptied` event instead. See #1277.
this.removeClass('vjs-ended','vjs-seeking');// reset the error state
this.error(null);// Update the duration
this.handleTechDurationChange_();if(!this.paused()){/**
             * Fired when the user agent begins looking for media data
             *
             * @event Player#loadstart
             * @type {Event}
             */this.trigger('loadstart');}else{// reset the hasStarted state
this.hasStarted(false);this.trigger('loadstart');}// autoplay happens after loadstart for the browser,
// so we mimic that behavior
this.manualAutoplay_(this.autoplay()===true&&this.options_.normalizeAutoplay?'play':this.autoplay());}/**
         * Handle autoplay string values, rather than the typical boolean
         * values that should be handled by the tech. Note that this is not
         * part of any specification. Valid values and what they do can be
         * found on the autoplay getter at Player#autoplay()
         */},{key:"manualAutoplay_",value:function manualAutoplay_(type){var _this158=this;if(!this.tech_||typeof type!=='string'){return;}// Save original muted() value, set muted to true, and attempt to play().
// On promise rejection, restore muted from saved value
var resolveMuted=function resolveMuted(){var previouslyMuted=_this158.muted();_this158.muted(true);var restoreMuted=function restoreMuted(){_this158.muted(previouslyMuted);};// restore muted on play terminatation
_this158.playTerminatedQueue_.push(restoreMuted);var mutedPromise=_this158.play();if(!isPromise(mutedPromise)){return;}return mutedPromise.catch(function(err){restoreMuted();throw new Error("Rejection at manualAutoplay. Restoring muted value. ".concat(err?err:''));});};var promise;// if muted defaults to true
// the only thing we can do is call play
if(type==='any'&&!this.muted()){promise=this.play();if(isPromise(promise)){promise=promise.catch(resolveMuted);}}else if(type==='muted'&&!this.muted()){promise=resolveMuted();}else{promise=this.play();}if(!isPromise(promise)){return;}return promise.then(function(){_this158.trigger({type:'autoplay-success',autoplay:type});}).catch(function(){_this158.trigger({type:'autoplay-failure',autoplay:type});});}/**
         * Update the internal source caches so that we return the correct source from
         * `src()`, `currentSource()`, and `currentSources()`.
         *
         * > Note: `currentSources` will not be updated if the source that is passed in exists
         *         in the current `currentSources` cache.
         *
         *
         * @param {Tech~SourceObject} srcObj
         *        A string or object source to update our caches to.
         */},{key:"updateSourceCaches_",value:function updateSourceCaches_(){var srcObj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var src=srcObj;var type='';if(typeof src!=='string'){src=srcObj.src;type=srcObj.type;}// make sure all the caches are set to default values
// to prevent null checking
this.cache_.source=this.cache_.source||{};this.cache_.sources=this.cache_.sources||[];// try to get the type of the src that was passed in
if(src&&!type){type=findMimetype(this,src);}// update `currentSource` cache always
this.cache_.source=merge$1({},srcObj,{src:src,type:type});var matchingSources=this.cache_.sources.filter(function(s){return s.src&&s.src===src;});var sourceElSources=[];var sourceEls=this.$$('source');var matchingSourceEls=[];for(var _i145=0;_i145<sourceEls.length;_i145++){var sourceObj=getAttributes(sourceEls[_i145]);sourceElSources.push(sourceObj);if(sourceObj.src&&sourceObj.src===src){matchingSourceEls.push(sourceObj.src);}}// if we have matching source els but not matching sources
// the current source cache is not up to date
if(matchingSourceEls.length&&!matchingSources.length){this.cache_.sources=sourceElSources;// if we don't have matching source or source els set the
// sources cache to the `currentSource` cache
}else if(!matchingSources.length){this.cache_.sources=[this.cache_.source];}// update the tech `src` cache
this.cache_.src=src;}/**
         * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}
         * causing the media element to reload.
         *
         * It will fire for the initial source and each subsequent source.
         * This event is a custom event from Video.js and is triggered by the {@link Tech}.
         *
         * The event object for this event contains a `src` property that will contain the source
         * that was available when the event was triggered. This is generally only necessary if Video.js
         * is switching techs while the source was being changed.
         *
         * It is also fired when `load` is called on the player (or media element)
         * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}
         * says that the resource selection algorithm needs to be aborted and restarted.
         * In this case, it is very likely that the `src` property will be set to the
         * empty string `""` to indicate we do not know what the source will be but
         * that it is changing.
         *
         * *This event is currently still experimental and may change in minor releases.*
         * __To use this, pass `enableSourceset` option to the player.__
         *
         * @event Player#sourceset
         * @type {Event}
         * @prop {string} src
         *                The source url available when the `sourceset` was triggered.
         *                It will be an empty string if we cannot know what the source is
         *                but know that the source will change.
         */ /**
         * Retrigger the `sourceset` event that was triggered by the {@link Tech}.
         *
         * @fires Player#sourceset
         * @listens Tech#sourceset
         * @private
         */},{key:"handleTechSourceset_",value:function handleTechSourceset_(event){var _this159=this;// only update the source cache when the source
// was not updated using the player api
if(!this.changingSrc_){var updateSourceCaches=function updateSourceCaches(src){return _this159.updateSourceCaches_(src);};var playerSrc=this.currentSource().src;var eventSrc=event.src;// if we have a playerSrc that is not a blob, and a tech src that is a blob
if(playerSrc&&!/^blob:/.test(playerSrc)&&/^blob:/.test(eventSrc)){// if both the tech source and the player source were updated we assume
// something like @videojs/http-streaming did the sourceset and skip updating the source cache.
if(!this.lastSource_||this.lastSource_.tech!==eventSrc&&this.lastSource_.player!==playerSrc){updateSourceCaches=function updateSourceCaches(){};}}// update the source to the initial source right away
// in some cases this will be empty string
updateSourceCaches(eventSrc);// if the `sourceset` `src` was an empty string
// wait for a `loadstart` to update the cache to `currentSrc`.
// If a sourceset happens before a `loadstart`, we reset the state
if(!event.src){this.tech_.any(['sourceset','loadstart'],function(e){// if a sourceset happens before a `loadstart` there
// is nothing to do as this `handleTechSourceset_`
// will be called again and this will be handled there.
if(e.type==='sourceset'){return;}var techSrc=_this159.techGet_('currentSrc');_this159.lastSource_.tech=techSrc;_this159.updateSourceCaches_(techSrc);});}}this.lastSource_={player:this.currentSource().src,tech:event.src};this.trigger({src:event.src,type:'sourceset'});}/**
         * Add/remove the vjs-has-started class
         *
         *
         * @param {boolean} request
         *        - true: adds the class
         *        - false: remove the class
         *
         * @return {boolean}
         *         the boolean value of hasStarted_
         */},{key:"hasStarted",value:function hasStarted(request){if(request===undefined){// act as getter, if we have no request to change
return this.hasStarted_;}if(request===this.hasStarted_){return;}this.hasStarted_=request;if(this.hasStarted_){this.addClass('vjs-has-started');}else{this.removeClass('vjs-has-started');}}/**
         * Fired whenever the media begins or resumes playback
         *
         * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}
         * @fires Player#play
         * @listens Tech#play
         * @private
         */},{key:"handleTechPlay_",value:function handleTechPlay_(){this.removeClass('vjs-ended','vjs-paused');this.addClass('vjs-playing');// hide the poster when the user hits play
this.hasStarted(true);/**
           * Triggered whenever an {@link Tech#play} event happens. Indicates that
           * playback has started or resumed.
           *
           * @event Player#play
           * @type {Event}
           */this.trigger('play');}/**
         * Retrigger the `ratechange` event that was triggered by the {@link Tech}.
         *
         * If there were any events queued while the playback rate was zero, fire
         * those events now.
         *
         * @private
         * @method Player#handleTechRateChange_
         * @fires Player#ratechange
         * @listens Tech#ratechange
         */},{key:"handleTechRateChange_",value:function handleTechRateChange_(){if(this.tech_.playbackRate()>0&&this.cache_.lastPlaybackRate===0){this.queuedCallbacks_.forEach(function(queued){return queued.callback(queued.event);});this.queuedCallbacks_=[];}this.cache_.lastPlaybackRate=this.tech_.playbackRate();/**
           * Fires when the playing speed of the audio/video is changed
           *
           * @event Player#ratechange
           * @type {event}
           */this.trigger('ratechange');}/**
         * Retrigger the `waiting` event that was triggered by the {@link Tech}.
         *
         * @fires Player#waiting
         * @listens Tech#waiting
         * @private
         */},{key:"handleTechWaiting_",value:function handleTechWaiting_(){var _this160=this;this.addClass('vjs-waiting');/**
           * A readyState change on the DOM element has caused playback to stop.
           *
           * @event Player#waiting
           * @type {Event}
           */this.trigger('waiting');// Browsers may emit a timeupdate event after a waiting event. In order to prevent
// premature removal of the waiting class, wait for the time to change.
var timeWhenWaiting=this.currentTime();var timeUpdateListener=function timeUpdateListener(){if(timeWhenWaiting!==_this160.currentTime()){_this160.removeClass('vjs-waiting');_this160.off('timeupdate',timeUpdateListener);}};this.on('timeupdate',timeUpdateListener);}/**
         * Retrigger the `canplay` event that was triggered by the {@link Tech}.
         * > Note: This is not consistent between browsers. See #1351
         *
         * @fires Player#canplay
         * @listens Tech#canplay
         * @private
         */},{key:"handleTechCanPlay_",value:function handleTechCanPlay_(){this.removeClass('vjs-waiting');/**
           * The media has a readyState of HAVE_FUTURE_DATA or greater.
           *
           * @event Player#canplay
           * @type {Event}
           */this.trigger('canplay');}/**
         * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.
         *
         * @fires Player#canplaythrough
         * @listens Tech#canplaythrough
         * @private
         */},{key:"handleTechCanPlayThrough_",value:function handleTechCanPlayThrough_(){this.removeClass('vjs-waiting');/**
           * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the
           * entire media file can be played without buffering.
           *
           * @event Player#canplaythrough
           * @type {Event}
           */this.trigger('canplaythrough');}/**
         * Retrigger the `playing` event that was triggered by the {@link Tech}.
         *
         * @fires Player#playing
         * @listens Tech#playing
         * @private
         */},{key:"handleTechPlaying_",value:function handleTechPlaying_(){this.removeClass('vjs-waiting');/**
           * The media is no longer blocked from playback, and has started playing.
           *
           * @event Player#playing
           * @type {Event}
           */this.trigger('playing');}/**
         * Retrigger the `seeking` event that was triggered by the {@link Tech}.
         *
         * @fires Player#seeking
         * @listens Tech#seeking
         * @private
         */},{key:"handleTechSeeking_",value:function handleTechSeeking_(){this.addClass('vjs-seeking');/**
           * Fired whenever the player is jumping to a new time
           *
           * @event Player#seeking
           * @type {Event}
           */this.trigger('seeking');}/**
         * Retrigger the `seeked` event that was triggered by the {@link Tech}.
         *
         * @fires Player#seeked
         * @listens Tech#seeked
         * @private
         */},{key:"handleTechSeeked_",value:function handleTechSeeked_(){this.removeClass('vjs-seeking','vjs-ended');/**
           * Fired when the player has finished jumping to a new time
           *
           * @event Player#seeked
           * @type {Event}
           */this.trigger('seeked');}/**
         * Retrigger the `pause` event that was triggered by the {@link Tech}.
         *
         * @fires Player#pause
         * @listens Tech#pause
         * @private
         */},{key:"handleTechPause_",value:function handleTechPause_(){this.removeClass('vjs-playing');this.addClass('vjs-paused');/**
           * Fired whenever the media has been paused
           *
           * @event Player#pause
           * @type {Event}
           */this.trigger('pause');}/**
         * Retrigger the `ended` event that was triggered by the {@link Tech}.
         *
         * @fires Player#ended
         * @listens Tech#ended
         * @private
         */},{key:"handleTechEnded_",value:function handleTechEnded_(){this.addClass('vjs-ended');this.removeClass('vjs-waiting');if(this.options_.loop){this.currentTime(0);this.play();}else if(!this.paused()){this.pause();}/**
           * Fired when the end of the media resource is reached (currentTime == duration)
           *
           * @event Player#ended
           * @type {Event}
           */this.trigger('ended');}/**
         * Fired when the duration of the media resource is first known or changed
         *
         * @listens Tech#durationchange
         * @private
         */},{key:"handleTechDurationChange_",value:function handleTechDurationChange_(){this.duration(this.techGet_('duration'));}/**
         * Handle a click on the media element to play/pause
         *
         * @param {Event} event
         *        the event that caused this function to trigger
         *
         * @listens Tech#click
         * @private
         */},{key:"handleTechClick_",value:function handleTechClick_(event){// When controls are disabled a click should not toggle playback because
// the click is considered a control
if(!this.controls_){return;}if(this.options_===undefined||this.options_.userActions===undefined||this.options_.userActions.click===undefined||this.options_.userActions.click!==false){if(this.options_!==undefined&&this.options_.userActions!==undefined&&typeof this.options_.userActions.click==='function'){this.options_.userActions.click.call(this,event);}else if(this.paused()){silencePromise(this.play());}else{this.pause();}}}/**
         * Handle a double-click on the media element to enter/exit fullscreen
         *
         * @param {Event} event
         *        the event that caused this function to trigger
         *
         * @listens Tech#dblclick
         * @private
         */},{key:"handleTechDoubleClick_",value:function handleTechDoubleClick_(event){if(!this.controls_){return;}// we do not want to toggle fullscreen state
// when double-clicking inside a control bar or a modal
var inAllowedEls=Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'),function(el){return el.contains(event.target);});if(!inAllowedEls){/*
             * options.userActions.doubleClick
             *
             * If `undefined` or `true`, double-click toggles fullscreen if controls are present
             * Set to `false` to disable double-click handling
             * Set to a function to substitute an external double-click handler
             */if(this.options_===undefined||this.options_.userActions===undefined||this.options_.userActions.doubleClick===undefined||this.options_.userActions.doubleClick!==false){if(this.options_!==undefined&&this.options_.userActions!==undefined&&typeof this.options_.userActions.doubleClick==='function'){this.options_.userActions.doubleClick.call(this,event);}else if(this.isFullscreen()){this.exitFullscreen();}else{this.requestFullscreen();}}}}/**
         * Handle a tap on the media element. It will toggle the user
         * activity state, which hides and shows the controls.
         *
         * @listens Tech#tap
         * @private
         */},{key:"handleTechTap_",value:function handleTechTap_(){this.userActive(!this.userActive());}/**
         * Handle touch to start
         *
         * @listens Tech#touchstart
         * @private
         */},{key:"handleTechTouchStart_",value:function handleTechTouchStart_(){this.userWasActive=this.userActive();}/**
         * Handle touch to move
         *
         * @listens Tech#touchmove
         * @private
         */},{key:"handleTechTouchMove_",value:function handleTechTouchMove_(){if(this.userWasActive){this.reportUserActivity();}}/**
         * Handle touch to end
         *
         * @param {Event} event
         *        the touchend event that triggered
         *        this function
         *
         * @listens Tech#touchend
         * @private
         */},{key:"handleTechTouchEnd_",value:function handleTechTouchEnd_(event){// Stop the mouse events from also happening
if(event.cancelable){event.preventDefault();}}/**
         * @private
         */},{key:"toggleFullscreenClass_",value:function toggleFullscreenClass_(){if(this.isFullscreen()){this.addClass('vjs-fullscreen');}else{this.removeClass('vjs-fullscreen');}}/**
         * when the document fschange event triggers it calls this
         */},{key:"documentFullscreenChange_",value:function documentFullscreenChange_(e){var targetPlayer=e.target.player;// if another player was fullscreen
// do a null check for targetPlayer because older firefox's would put document as e.target
if(targetPlayer&&targetPlayer!==this){return;}var el=this.el();var isFs=document_1[this.fsApi_.fullscreenElement]===el;if(!isFs&&el.matches){isFs=el.matches(':'+this.fsApi_.fullscreen);}this.isFullscreen(isFs);}/**
         * Handle Tech Fullscreen Change
         *
         * @param {Event} event
         *        the fullscreenchange event that triggered this function
         *
         * @param {Object} data
         *        the data that was sent with the event
         *
         * @private
         * @listens Tech#fullscreenchange
         * @fires Player#fullscreenchange
         */},{key:"handleTechFullscreenChange_",value:function handleTechFullscreenChange_(event,data){var _this161=this;if(data){if(data.nativeIOSFullscreen){this.addClass('vjs-ios-native-fs');this.tech_.one('webkitendfullscreen',function(){_this161.removeClass('vjs-ios-native-fs');});}this.isFullscreen(data.isFullscreen);}}},{key:"handleTechFullscreenError_",value:function handleTechFullscreenError_(event,err){this.trigger('fullscreenerror',err);}/**
         * @private
         */},{key:"togglePictureInPictureClass_",value:function togglePictureInPictureClass_(){if(this.isInPictureInPicture()){this.addClass('vjs-picture-in-picture');}else{this.removeClass('vjs-picture-in-picture');}}/**
         * Handle Tech Enter Picture-in-Picture.
         *
         * @param {Event} event
         *        the enterpictureinpicture event that triggered this function
         *
         * @private
         * @listens Tech#enterpictureinpicture
         */},{key:"handleTechEnterPictureInPicture_",value:function handleTechEnterPictureInPicture_(event){this.isInPictureInPicture(true);}/**
         * Handle Tech Leave Picture-in-Picture.
         *
         * @param {Event} event
         *        the leavepictureinpicture event that triggered this function
         *
         * @private
         * @listens Tech#leavepictureinpicture
         */},{key:"handleTechLeavePictureInPicture_",value:function handleTechLeavePictureInPicture_(event){this.isInPictureInPicture(false);}/**
         * Fires when an error occurred during the loading of an audio/video.
         *
         * @private
         * @listens Tech#error
         */},{key:"handleTechError_",value:function handleTechError_(){var error=this.tech_.error();if(error){this.error(error);}}/**
         * Retrigger the `textdata` event that was triggered by the {@link Tech}.
         *
         * @fires Player#textdata
         * @listens Tech#textdata
         * @private
         */},{key:"handleTechTextData_",value:function handleTechTextData_(){var data=null;if(arguments.length>1){data=arguments[1];}/**
           * Fires when we get a textdata event from tech
           *
           * @event Player#textdata
           * @type {Event}
           */this.trigger('textdata',data);}/**
         * Get object for cached values.
         *
         * @return {Object}
         *         get the current object cache
         */},{key:"getCache",value:function getCache(){return this.cache_;}/**
         * Resets the internal cache object.
         *
         * Using this function outside the player constructor or reset method may
         * have unintended side-effects.
         *
         * @private
         */},{key:"resetCache_",value:function resetCache_(){this.cache_={// Right now, the currentTime is not _really_ cached because it is always
// retrieved from the tech (see: currentTime). However, for completeness,
// we set it to zero here to ensure that if we do start actually caching
// it, we reset it along with everything else.
currentTime:0,initTime:0,inactivityTimeout:this.options_.inactivityTimeout,duration:NaN,lastVolume:1,lastPlaybackRate:this.defaultPlaybackRate(),media:null,src:'',source:{},sources:[],playbackRates:[],volume:1};}/**
         * Pass values to the playback tech
         *
         * @param {string} [method]
         *        the method to call
         *
         * @param {Object} [arg]
         *        the argument to pass
         *
         * @private
         */},{key:"techCall_",value:function techCall_(method,arg){// If it's not ready yet, call method when it is
this.ready(function(){if(method in allowedSetters){return set(this.middleware_,this.tech_,method,arg);}else if(method in allowedMediators){return mediate(this.middleware_,this.tech_,method,arg);}try{if(this.tech_){this.tech_[method](arg);}}catch(e){log$1(e);throw e;}},true);}/**
         * Mediate attempt to call playback tech method
         * and return the value of the method called.
         *
         * @param {string} method
         *        Tech method
         *
         * @return {*}
         *         Value returned by the tech method called, undefined if tech
         *         is not ready or tech method is not present
         *
         * @private
         */},{key:"techGet_",value:function techGet_(method){if(!this.tech_||!this.tech_.isReady_){return;}if(method in allowedGetters){return get(this.middleware_,this.tech_,method);}else if(method in allowedMediators){return mediate(this.middleware_,this.tech_,method);}// Log error when playback tech object is present but method
// is undefined or unavailable
try{return this.tech_[method]();}catch(e){// When building additional tech libs, an expected method may not be defined yet
if(this.tech_[method]===undefined){log$1("Video.js: ".concat(method," method not defined for ").concat(this.techName_," playback technology."),e);throw e;}// When a method isn't available on the object it throws a TypeError
if(e.name==='TypeError'){log$1("Video.js: ".concat(method," unavailable on ").concat(this.techName_," playback technology element."),e);this.tech_.isReady_=false;throw e;}// If error unknown, just log and throw
log$1(e);throw e;}}/**
         * Attempt to begin playback at the first opportunity.
         *
         * @return {Promise|undefined}
         *         Returns a promise if the browser supports Promises (or one
         *         was passed in as an option). This promise will be resolved on
         *         the return value of play. If this is undefined it will fulfill the
         *         promise chain otherwise the promise chain will be fulfilled when
         *         the promise from play is fulfilled.
         */},{key:"play",value:function play(){var _this162=this;return new Promise(function(resolve){_this162.play_(resolve);});}/**
         * The actual logic for play, takes a callback that will be resolved on the
         * return value of play. This allows us to resolve to the play promise if there
         * is one on modern browsers.
         *
         * @private
         * @param {Function} [callback]
         *        The callback that should be called when the techs play is actually called
         */},{key:"play_",value:function play_(){var _this163=this;var callback=arguments.length>0&&arguments[0]!==undefined?arguments[0]:silencePromise;this.playCallbacks_.push(callback);var isSrcReady=Boolean(!this.changingSrc_&&(this.src()||this.currentSrc()));var isSafariOrIOS=Boolean(IS_ANY_SAFARI||IS_IOS);// treat calls to play_ somewhat like the `one` event function
if(this.waitToPlay_){this.off(['ready','loadstart'],this.waitToPlay_);this.waitToPlay_=null;}// if the player/tech is not ready or the src itself is not ready
// queue up a call to play on `ready` or `loadstart`
if(!this.isReady_||!isSrcReady){this.waitToPlay_=function(e){_this163.play_();};this.one(['ready','loadstart'],this.waitToPlay_);// if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod
// in that case, we need to prime the video element by calling load so it'll be ready in time
if(!isSrcReady&&isSafariOrIOS){this.load();}return;}// If the player/tech is ready and we have a source, we can attempt playback.
var val=this.techGet_('play');// For native playback, reset the progress bar if we get a play call from a replay.
var isNativeReplay=isSafariOrIOS&&this.hasClass('vjs-ended');if(isNativeReplay){this.resetProgressBar_();}// play was terminated if the returned value is null
if(val===null){this.runPlayTerminatedQueue_();}else{this.runPlayCallbacks_(val);}}/**
         * These functions will be run when if play is terminated. If play
         * runPlayCallbacks_ is run these function will not be run. This allows us
         * to differentiate between a terminated play and an actual call to play.
         */},{key:"runPlayTerminatedQueue_",value:function runPlayTerminatedQueue_(){var queue=this.playTerminatedQueue_.slice(0);this.playTerminatedQueue_=[];queue.forEach(function(q){q();});}/**
         * When a callback to play is delayed we have to run these
         * callbacks when play is actually called on the tech. This function
         * runs the callbacks that were delayed and accepts the return value
         * from the tech.
         *
         * @param {undefined|Promise} val
         *        The return value from the tech.
         */},{key:"runPlayCallbacks_",value:function runPlayCallbacks_(val){var callbacks=this.playCallbacks_.slice(0);this.playCallbacks_=[];// clear play terminatedQueue since we finished a real play
this.playTerminatedQueue_=[];callbacks.forEach(function(cb){cb(val);});}/**
         * Pause the video playback
         */},{key:"pause",value:function pause(){this.techCall_('pause');}/**
         * Check if the player is paused or has yet to play
         *
         * @return {boolean}
         *         - false: if the media is currently playing
         *         - true: if media is not currently playing
         */},{key:"paused",value:function paused(){// The initial state of paused should be true (in Safari it's actually false)
return this.techGet_('paused')===false?false:true;}/**
         * Get a TimeRange object representing the current ranges of time that the user
         * has played.
         *
         * @return { import('./utils/time').TimeRange }
         *         A time range object that represents all the increments of time that have
         *         been played.
         */},{key:"played",value:function played(){return this.techGet_('played')||createTimeRanges$1(0,0);}/**
         * Sets or returns whether or not the user is "scrubbing". Scrubbing is
         * when the user has clicked the progress bar handle and is
         * dragging it along the progress bar.
         *
         * @param {boolean} [isScrubbing]
         *        whether the user is or is not scrubbing
         *
         * @return {boolean|undefined}
         *         - The value of scrubbing when getting
         *         - Nothing when setting
         */},{key:"scrubbing",value:function scrubbing(isScrubbing){if(typeof isScrubbing==='undefined'){return this.scrubbing_;}this.scrubbing_=!!isScrubbing;this.techCall_('setScrubbing',this.scrubbing_);if(isScrubbing){this.addClass('vjs-scrubbing');}else{this.removeClass('vjs-scrubbing');}}/**
         * Get or set the current time (in seconds)
         *
         * @param {number|string} [seconds]
         *        The time to seek to in seconds
         *
         * @return {number|undefined}
         *         - the current time in seconds when getting
         *         - Nothing when setting
         */},{key:"currentTime",value:function currentTime(seconds){if(seconds===undefined){// cache last currentTime and return. default to 0 seconds
//
// Caching the currentTime is meant to prevent a massive amount of reads on the tech's
// currentTime when scrubbing, but may not provide much performance benefit after all.
// Should be tested. Also something has to read the actual current time or the cache will
// never get updated.
this.cache_.currentTime=this.techGet_('currentTime')||0;return this.cache_.currentTime;}if(seconds<0){seconds=0;}if(!this.isReady_||this.changingSrc_||!this.tech_||!this.tech_.isReady_){this.cache_.initTime=seconds;this.off('canplay',this.boundApplyInitTime_);this.one('canplay',this.boundApplyInitTime_);return;}this.techCall_('setCurrentTime',seconds);this.cache_.initTime=0;if(isFinite(seconds)){this.cache_.currentTime=Number(seconds);}}/**
         * Apply the value of initTime stored in cache as currentTime.
         *
         * @private
         */},{key:"applyInitTime_",value:function applyInitTime_(){this.currentTime(this.cache_.initTime);}/**
         * Normally gets the length in time of the video in seconds;
         * in all but the rarest use cases an argument will NOT be passed to the method
         *
         * > **NOTE**: The video must have started loading before the duration can be
         * known, and depending on preload behaviour may not be known until the video starts
         * playing.
         *
         * @fires Player#durationchange
         *
         * @param {number} [seconds]
         *        The duration of the video to set in seconds
         *
         * @return {number|undefined}
         *         - The duration of the video in seconds when getting
         *         - Nothing when setting
         */},{key:"duration",value:function duration(seconds){if(seconds===undefined){// return NaN if the duration is not known
return this.cache_.duration!==undefined?this.cache_.duration:NaN;}seconds=parseFloat(seconds);// Standardize on Infinity for signaling video is live
if(seconds<0){seconds=Infinity;}if(seconds!==this.cache_.duration){// Cache the last set value for optimized scrubbing
this.cache_.duration=seconds;if(seconds===Infinity){this.addClass('vjs-live');}else{this.removeClass('vjs-live');}if(!isNaN(seconds)){// Do not fire durationchange unless the duration value is known.
// @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}
/**
               * @event Player#durationchange
               * @type {Event}
               */this.trigger('durationchange');}}}/**
         * Calculates how much time is left in the video. Not part
         * of the native video API.
         *
         * @return {number}
         *         The time remaining in seconds
         */},{key:"remainingTime",value:function remainingTime(){return this.duration()-this.currentTime();}/**
         * A remaining time function that is intended to be used when
         * the time is to be displayed directly to the user.
         *
         * @return {number}
         *         The rounded time remaining in seconds
         */},{key:"remainingTimeDisplay",value:function remainingTimeDisplay(){return Math.floor(this.duration())-Math.floor(this.currentTime());}//
// Kind of like an array of portions of the video that have been downloaded.
/**
         * Get a TimeRange object with an array of the times of the video
         * that have been downloaded. If you just want the percent of the
         * video that's been downloaded, use bufferedPercent.
         *
         * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}
         *
         * @return { import('./utils/time').TimeRange }
         *         A mock {@link TimeRanges} object (following HTML spec)
         */},{key:"buffered",value:function buffered(){var buffered=this.techGet_('buffered');if(!buffered||!buffered.length){buffered=createTimeRanges$1(0,0);}return buffered;}/**
         * Get the TimeRanges of the media that are currently available
         * for seeking to.
         *
         * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}
         *
         * @return { import('./utils/time').TimeRange }
         *         A mock {@link TimeRanges} object (following HTML spec)
         */},{key:"seekable",value:function seekable(){var seekable=this.techGet_('seekable');if(!seekable||!seekable.length){seekable=createTimeRanges$1(0,0);}return seekable;}/**
         * Returns whether the player is in the "seeking" state.
         *
         * @return {boolean} True if the player is in the seeking state, false if not.
         */},{key:"seeking",value:function seeking(){return this.techGet_('seeking');}/**
         * Returns whether the player is in the "ended" state.
         *
         * @return {boolean} True if the player is in the ended state, false if not.
         */},{key:"ended",value:function ended(){return this.techGet_('ended');}/**
         * Returns the current state of network activity for the element, from
         * the codes in the list below.
         * - NETWORK_EMPTY (numeric value 0)
         *   The element has not yet been initialised. All attributes are in
         *   their initial states.
         * - NETWORK_IDLE (numeric value 1)
         *   The element's resource selection algorithm is active and has
         *   selected a resource, but it is not actually using the network at
         *   this time.
         * - NETWORK_LOADING (numeric value 2)
         *   The user agent is actively trying to download data.
         * - NETWORK_NO_SOURCE (numeric value 3)
         *   The element's resource selection algorithm is active, but it has
         *   not yet found a resource to use.
         *
         * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states
         * @return {number} the current network activity state
         */},{key:"networkState",value:function networkState(){return this.techGet_('networkState');}/**
         * Returns a value that expresses the current state of the element
         * with respect to rendering the current playback position, from the
         * codes in the list below.
         * - HAVE_NOTHING (numeric value 0)
         *   No information regarding the media resource is available.
         * - HAVE_METADATA (numeric value 1)
         *   Enough of the resource has been obtained that the duration of the
         *   resource is available.
         * - HAVE_CURRENT_DATA (numeric value 2)
         *   Data for the immediate current playback position is available.
         * - HAVE_FUTURE_DATA (numeric value 3)
         *   Data for the immediate current playback position is available, as
         *   well as enough data for the user agent to advance the current
         *   playback position in the direction of playback.
         * - HAVE_ENOUGH_DATA (numeric value 4)
         *   The user agent estimates that enough data is available for
         *   playback to proceed uninterrupted.
         *
         * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate
         * @return {number} the current playback rendering state
         */},{key:"readyState",value:function readyState(){return this.techGet_('readyState');}/**
         * Get the percent (as a decimal) of the video that's been downloaded.
         * This method is not a part of the native HTML video API.
         *
         * @return {number}
         *         A decimal between 0 and 1 representing the percent
         *         that is buffered 0 being 0% and 1 being 100%
         */},{key:"bufferedPercent",value:function bufferedPercent(){return _bufferedPercent(this.buffered(),this.duration());}/**
         * Get the ending time of the last buffered time range
         * This is used in the progress bar to encapsulate all time ranges.
         *
         * @return {number}
         *         The end of the last buffered time range
         */},{key:"bufferedEnd",value:function bufferedEnd(){var buffered=this.buffered();var duration=this.duration();var end=buffered.end(buffered.length-1);if(end>duration){end=duration;}return end;}/**
         * Get or set the current volume of the media
         *
         * @param  {number} [percentAsDecimal]
         *         The new volume as a decimal percent:
         *         - 0 is muted/0%/off
         *         - 1.0 is 100%/full
         *         - 0.5 is half volume or 50%
         *
         * @return {number|undefined}
         *         The current volume as a percent when getting
         */},{key:"volume",value:function volume(percentAsDecimal){var vol;if(percentAsDecimal!==undefined){// Force value to between 0 and 1
vol=Math.max(0,Math.min(1,percentAsDecimal));this.cache_.volume=vol;this.techCall_('setVolume',vol);if(vol>0){this.lastVolume_(vol);}return;}// Default to 1 when returning current volume.
vol=parseFloat(this.techGet_('volume'));return isNaN(vol)?1:vol;}/**
         * Get the current muted state, or turn mute on or off
         *
         * @param {boolean} [muted]
         *        - true to mute
         *        - false to unmute
         *
         * @return {boolean|undefined}
         *         - true if mute is on and getting
         *         - false if mute is off and getting
         *         - nothing if setting
         */},{key:"muted",value:function muted(_muted){if(_muted!==undefined){this.techCall_('setMuted',_muted);return;}return this.techGet_('muted')||false;}/**
         * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted
         * indicates the state of muted on initial playback.
         *
         * ```js
         *   var myPlayer = videojs('some-player-id');
         *
         *   myPlayer.src("http://www.example.com/path/to/video.mp4");
         *
         *   // get, should be false
         *   console.log(myPlayer.defaultMuted());
         *   // set to true
         *   myPlayer.defaultMuted(true);
         *   // get should be true
         *   console.log(myPlayer.defaultMuted());
         * ```
         *
         * @param {boolean} [defaultMuted]
         *        - true to mute
         *        - false to unmute
         *
         * @return {boolean|undefined}
         *         - true if defaultMuted is on and getting
         *         - false if defaultMuted is off and getting
         *         - Nothing when setting
         */},{key:"defaultMuted",value:function defaultMuted(_defaultMuted){if(_defaultMuted!==undefined){this.techCall_('setDefaultMuted',_defaultMuted);}return this.techGet_('defaultMuted')||false;}/**
         * Get the last volume, or set it
         *
         * @param  {number} [percentAsDecimal]
         *         The new last volume as a decimal percent:
         *         - 0 is muted/0%/off
         *         - 1.0 is 100%/full
         *         - 0.5 is half volume or 50%
         *
         * @return {number|undefined}
         *         - The current value of lastVolume as a percent when getting
         *         - Nothing when setting
         *
         * @private
         */},{key:"lastVolume_",value:function lastVolume_(percentAsDecimal){if(percentAsDecimal!==undefined&&percentAsDecimal!==0){this.cache_.lastVolume=percentAsDecimal;return;}return this.cache_.lastVolume;}/**
         * Check if current tech can support native fullscreen
         * (e.g. with built in controls like iOS)
         *
         * @return {boolean}
         *         if native fullscreen is supported
         */},{key:"supportsFullScreen",value:function supportsFullScreen(){return this.techGet_('supportsFullScreen')||false;}/**
         * Check if the player is in fullscreen mode or tell the player that it
         * is or is not in fullscreen mode.
         *
         * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official
         * property and instead document.fullscreenElement is used. But isFullscreen is
         * still a valuable property for internal player workings.
         *
         * @param  {boolean} [isFS]
         *         Set the players current fullscreen state
         *
         * @return {boolean|undefined}
         *         - true if fullscreen is on and getting
         *         - false if fullscreen is off and getting
         *         - Nothing when setting
         */},{key:"isFullscreen",value:function isFullscreen(isFS){if(isFS!==undefined){var oldValue=this.isFullscreen_;this.isFullscreen_=Boolean(isFS);// if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange
// this is the only place where we trigger fullscreenchange events for older browsers
// fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well
if(this.isFullscreen_!==oldValue&&this.fsApi_.prefixed){/**
                 * @event Player#fullscreenchange
                 * @type {Event}
                 */this.trigger('fullscreenchange');}this.toggleFullscreenClass_();return;}return this.isFullscreen_;}/**
         * Increase the size of the video to full screen
         * In some browsers, full screen is not supported natively, so it enters
         * "full window mode", where the video fills the browser window.
         * In browsers and devices that support native full screen, sometimes the
         * browser's default controls will be shown, and not the Video.js custom skin.
         * This includes most mobile devices (iOS, Android) and older versions of
         * Safari.
         *
         * @param  {Object} [fullscreenOptions]
         *         Override the player fullscreen options
         *
         * @fires Player#fullscreenchange
         */},{key:"requestFullscreen",value:function requestFullscreen(fullscreenOptions){if(this.isInPictureInPicture()){this.exitPictureInPicture();}var self=this;return new Promise(function(resolve,reject){function offHandler(){self.off('fullscreenerror',errorHandler);self.off('fullscreenchange',changeHandler);}function changeHandler(){offHandler();resolve();}function errorHandler(e,err){offHandler();reject(err);}self.one('fullscreenchange',changeHandler);self.one('fullscreenerror',errorHandler);var promise=self.requestFullscreenHelper_(fullscreenOptions);if(promise){promise.then(offHandler,offHandler);promise.then(resolve,reject);}});}},{key:"requestFullscreenHelper_",value:function requestFullscreenHelper_(fullscreenOptions){var _this164=this;var fsOptions;// Only pass fullscreen options to requestFullscreen in spec-compliant browsers.
// Use defaults or player configured option unless passed directly to this method.
if(!this.fsApi_.prefixed){fsOptions=this.options_.fullscreen&&this.options_.fullscreen.options||{};if(fullscreenOptions!==undefined){fsOptions=fullscreenOptions;}}// This method works as follows:
// 1. if a fullscreen api is available, use it
//   1. call requestFullscreen with potential options
//   2. if we got a promise from above, use it to update isFullscreen()
// 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.
//   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.
// 3. otherwise, use "fullWindow" mode
if(this.fsApi_.requestFullscreen){var promise=this.el_[this.fsApi_.requestFullscreen](fsOptions);// Even on browsers with promise support this may not return a promise
if(promise){promise.then(function(){return _this164.isFullscreen(true);},function(){return _this164.isFullscreen(false);});}return promise;}else if(this.tech_.supportsFullScreen()&&!this.options_.preferFullWindow===true){// we can't take the video.js controls fullscreen but we can go fullscreen
// with native controls
this.techCall_('enterFullScreen');}else{// fullscreen isn't supported so we'll just stretch the video element to
// fill the viewport
this.enterFullWindow();}}/**
         * Return the video to its normal size after having been in full screen mode
         *
         * @fires Player#fullscreenchange
         */},{key:"exitFullscreen",value:function exitFullscreen(){var self=this;return new Promise(function(resolve,reject){function offHandler(){self.off('fullscreenerror',errorHandler);self.off('fullscreenchange',changeHandler);}function changeHandler(){offHandler();resolve();}function errorHandler(e,err){offHandler();reject(err);}self.one('fullscreenchange',changeHandler);self.one('fullscreenerror',errorHandler);var promise=self.exitFullscreenHelper_();if(promise){promise.then(offHandler,offHandler);// map the promise to our resolve/reject methods
promise.then(resolve,reject);}});}},{key:"exitFullscreenHelper_",value:function exitFullscreenHelper_(){var _this165=this;if(this.fsApi_.requestFullscreen){var promise=document_1[this.fsApi_.exitFullscreen]();// Even on browsers with promise support this may not return a promise
if(promise){// we're splitting the promise here, so, we want to catch the
// potential error so that this chain doesn't have unhandled errors
silencePromise(promise.then(function(){return _this165.isFullscreen(false);}));}return promise;}else if(this.tech_.supportsFullScreen()&&!this.options_.preferFullWindow===true){this.techCall_('exitFullScreen');}else{this.exitFullWindow();}}/**
         * When fullscreen isn't supported we can stretch the
         * video container to as wide as the browser will let us.
         *
         * @fires Player#enterFullWindow
         */},{key:"enterFullWindow",value:function enterFullWindow(){this.isFullscreen(true);this.isFullWindow=true;// Storing original doc overflow value to return to when fullscreen is off
this.docOrigOverflow=document_1.documentElement.style.overflow;// Add listener for esc key to exit fullscreen
_on(document_1,'keydown',this.boundFullWindowOnEscKey_);// Hide any scroll bars
document_1.documentElement.style.overflow='hidden';// Apply fullscreen styles
_addClass(document_1.body,'vjs-full-window');/**
           * @event Player#enterFullWindow
           * @type {Event}
           */this.trigger('enterFullWindow');}/**
         * Check for call to either exit full window or
         * full screen on ESC key
         *
         * @param {string} event
         *        Event to check for key press
         */},{key:"fullWindowOnEscKey",value:function fullWindowOnEscKey(event){if(keycode.isEventKey(event,'Esc')){if(this.isFullscreen()===true){if(!this.isFullWindow){this.exitFullscreen();}else{this.exitFullWindow();}}}}/**
         * Exit full window
         *
         * @fires Player#exitFullWindow
         */},{key:"exitFullWindow",value:function exitFullWindow(){this.isFullscreen(false);this.isFullWindow=false;_off(document_1,'keydown',this.boundFullWindowOnEscKey_);// Unhide scroll bars.
document_1.documentElement.style.overflow=this.docOrigOverflow;// Remove fullscreen styles
_removeClass(document_1.body,'vjs-full-window');// Resize the box, controller, and poster to original sizes
// this.positionAll();
/**
           * @event Player#exitFullWindow
           * @type {Event}
           */this.trigger('exitFullWindow');}/**
         * Get or set disable Picture-in-Picture mode.
         *
         * @param {boolean} [value]
         *                  - true will disable Picture-in-Picture mode
         *                  - false will enable Picture-in-Picture mode
         */},{key:"disablePictureInPicture",value:function disablePictureInPicture(value){if(value===undefined){return this.techGet_('disablePictureInPicture');}this.techCall_('setDisablePictureInPicture',value);this.options_.disablePictureInPicture=value;this.trigger('disablepictureinpicturechanged');}/**
         * Check if the player is in Picture-in-Picture mode or tell the player that it
         * is or is not in Picture-in-Picture mode.
         *
         * @param  {boolean} [isPiP]
         *         Set the players current Picture-in-Picture state
         *
         * @return {boolean|undefined}
         *         - true if Picture-in-Picture is on and getting
         *         - false if Picture-in-Picture is off and getting
         *         - nothing if setting
         */},{key:"isInPictureInPicture",value:function isInPictureInPicture(isPiP){if(isPiP!==undefined){this.isInPictureInPicture_=!!isPiP;this.togglePictureInPictureClass_();return;}return!!this.isInPictureInPicture_;}/**
         * Create a floating video window always on top of other windows so that users may
         * continue consuming media while they interact with other content sites, or
         * applications on their device.
         *
         * This can use document picture-in-picture or element picture in picture
         *
         * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser
         * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser
         *
         *
         * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}
         * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}
         *
         * @fires Player#enterpictureinpicture
         *
         * @return {Promise}
         *         A promise with a Picture-in-Picture window.
         */},{key:"requestPictureInPicture",value:function requestPictureInPicture(){var _this166=this;if(this.options_.enableDocumentPictureInPicture&&window_1.documentPictureInPicture){var pipContainer=document_1.createElement(this.el().tagName);pipContainer.classList=this.el().classList;pipContainer.classList.add('vjs-pip-container');if(this.posterImage){pipContainer.appendChild(this.posterImage.el().cloneNode(true));}if(this.titleBar){pipContainer.appendChild(this.titleBar.el().cloneNode(true));}pipContainer.appendChild(_createEl('p',{className:'vjs-pip-text'},{},this.localize('Playing in picture-in-picture')));return window_1.documentPictureInPicture.requestWindow({// The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629
width:this.videoWidth(),height:this.videoHeight()}).then(function(pipWindow){copyStyleSheetsToWindow(pipWindow);_this166.el_.parentNode.insertBefore(pipContainer,_this166.el_);pipWindow.document.body.appendChild(_this166.el_);pipWindow.document.body.classList.add('vjs-pip-window');_this166.player_.isInPictureInPicture(true);_this166.player_.trigger({type:'enterpictureinpicture',pipWindow:pipWindow});// Listen for the PiP closing event to move the video back.
pipWindow.addEventListener('pagehide',function(event){var pipVideo=event.target.querySelector('.video-js');pipContainer.parentNode.replaceChild(pipVideo,pipContainer);_this166.player_.isInPictureInPicture(false);_this166.player_.trigger('leavepictureinpicture');});return pipWindow;});}if('pictureInPictureEnabled'in document_1&&this.disablePictureInPicture()===false){/**
             * This event fires when the player enters picture in picture mode
             *
             * @event Player#enterpictureinpicture
             * @type {Event}
             */return this.techGet_('requestPictureInPicture');}return Promise.reject('No PiP mode is available');}/**
         * Exit Picture-in-Picture mode.
         *
         * @see [Spec]{@link https://wicg.github.io/picture-in-picture}
         *
         * @fires Player#leavepictureinpicture
         *
         * @return {Promise}
         *         A promise.
         */},{key:"exitPictureInPicture",value:function exitPictureInPicture(){if(window_1.documentPictureInPicture&&window_1.documentPictureInPicture.window){// With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler
window_1.documentPictureInPicture.window.close();return Promise.resolve();}if('pictureInPictureEnabled'in document_1){/**
             * This event fires when the player leaves picture in picture mode
             *
             * @event Player#leavepictureinpicture
             * @type {Event}
             */return document_1.exitPictureInPicture();}}/**
         * Called when this Player has focus and a key gets pressed down, or when
         * any Component of this player receives a key press that it doesn't handle.
         * This allows player-wide hotkeys (either as defined below, or optionally
         * by an external function).
         *
         * @param {KeyboardEvent} event
         *        The `keydown` event that caused this function to be called.
         *
         * @listens keydown
         */},{key:"handleKeyDown",value:function handleKeyDown(event){var userActions=this.options_.userActions;// Bail out if hotkeys are not configured.
if(!userActions||!userActions.hotkeys){return;}// Function that determines whether or not to exclude an element from
// hotkeys handling.
var excludeElement=function excludeElement(el){var tagName=el.tagName.toLowerCase();// The first and easiest test is for `contenteditable` elements.
if(el.isContentEditable){return true;}// Inputs matching these types will still trigger hotkey handling as
// they are not text inputs.
var allowedInputTypes=['button','checkbox','hidden','radio','reset','submit'];if(tagName==='input'){return allowedInputTypes.indexOf(el.type)===-1;}// The final test is by tag name. These tags will be excluded entirely.
var excludedTags=['textarea'];return excludedTags.indexOf(tagName)!==-1;};// Bail out if the user is focused on an interactive form element.
if(excludeElement(this.el_.ownerDocument.activeElement)){return;}if(typeof userActions.hotkeys==='function'){userActions.hotkeys.call(this,event);}else{this.handleHotkeys(event);}}/**
         * Called when this Player receives a hotkey keydown event.
         * Supported player-wide hotkeys are:
         *
         *   f          - toggle fullscreen
         *   m          - toggle mute
         *   k or Space - toggle play/pause
         *
         * @param {Event} event
         *        The `keydown` event that caused this function to be called.
         */},{key:"handleHotkeys",value:function handleHotkeys(event){var hotkeys=this.options_.userActions?this.options_.userActions.hotkeys:{};// set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set
var _hotkeys$fullscreenKe=hotkeys.fullscreenKey,fullscreenKey=_hotkeys$fullscreenKe===void 0?function(keydownEvent){return keycode.isEventKey(keydownEvent,'f');}:_hotkeys$fullscreenKe,_hotkeys$muteKey=hotkeys.muteKey,muteKey=_hotkeys$muteKey===void 0?function(keydownEvent){return keycode.isEventKey(keydownEvent,'m');}:_hotkeys$muteKey,_hotkeys$playPauseKey=hotkeys.playPauseKey,playPauseKey=_hotkeys$playPauseKey===void 0?function(keydownEvent){return keycode.isEventKey(keydownEvent,'k')||keycode.isEventKey(keydownEvent,'Space');}:_hotkeys$playPauseKey;if(fullscreenKey.call(this,event)){event.preventDefault();event.stopPropagation();var FSToggle=Component$1.getComponent('FullscreenToggle');if(document_1[this.fsApi_.fullscreenEnabled]!==false){FSToggle.prototype.handleClick.call(this,event);}}else if(muteKey.call(this,event)){event.preventDefault();event.stopPropagation();var _MuteToggle=Component$1.getComponent('MuteToggle');_MuteToggle.prototype.handleClick.call(this,event);}else if(playPauseKey.call(this,event)){event.preventDefault();event.stopPropagation();var _PlayToggle=Component$1.getComponent('PlayToggle');_PlayToggle.prototype.handleClick.call(this,event);}}/**
         * Check whether the player can play a given mimetype
         *
         * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype
         *
         * @param {string} type
         *        The mimetype to check
         *
         * @return {string}
         *         'probably', 'maybe', or '' (empty string)
         */},{key:"canPlayType",value:function canPlayType(type){var can;// Loop through each playback technology in the options order
for(var _i146=0,_j13=this.options_.techOrder;_i146<_j13.length;_i146++){var techName=_j13[_i146];var tech=Tech.getTech(techName);// Support old behavior of techs being registered as components.
// Remove once that deprecated behavior is removed.
if(!tech){tech=Component$1.getComponent(techName);}// Check if the current tech is defined before continuing
if(!tech){log$1.error("The \"".concat(techName,"\" tech is undefined. Skipped browser support check for that tech."));continue;}// Check if the browser supports this technology
if(tech.isSupported()){can=tech.canPlayType(type);if(can){return can;}}}return'';}/**
         * Select source based on tech-order or source-order
         * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,
         * defaults to tech-order selection
         *
         * @param {Array} sources
         *        The sources for a media asset
         *
         * @return {Object|boolean}
         *         Object of source and tech order or false
         */},{key:"selectSource",value:function selectSource(sources){var _this167=this;// Get only the techs specified in `techOrder` that exist and are supported by the
// current platform
var techs=this.options_.techOrder.map(function(techName){return[techName,Tech.getTech(techName)];}).filter(function(_ref156){var _ref157=_slicedToArray(_ref156,2),techName=_ref157[0],tech=_ref157[1];// Check if the current tech is defined before continuing
if(tech){// Check if the browser supports this technology
return tech.isSupported();}log$1.error("The \"".concat(techName,"\" tech is undefined. Skipped browser support check for that tech."));return false;});// Iterate over each `innerArray` element once per `outerArray` element and execute
// `tester` with both. If `tester` returns a non-falsy value, exit early and return
// that value.
var findFirstPassingTechSourcePair=function findFirstPassingTechSourcePair(outerArray,innerArray,tester){var found;outerArray.some(function(outerChoice){return innerArray.some(function(innerChoice){found=tester(outerChoice,innerChoice);if(found){return true;}});});return found;};var foundSourceAndTech;var flip=function flip(fn){return function(a,b){return fn(b,a);};};var finder=function finder(_ref158,source){var _ref159=_slicedToArray(_ref158,2),techName=_ref159[0],tech=_ref159[1];if(tech.canPlaySource(source,_this167.options_[techName.toLowerCase()])){return{source:source,tech:techName};}};// Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources
// to select from them based on their priority.
if(this.options_.sourceOrder){// Source-first ordering
foundSourceAndTech=findFirstPassingTechSourcePair(sources,techs,flip(finder));}else{// Tech-first ordering
foundSourceAndTech=findFirstPassingTechSourcePair(techs,sources,finder);}return foundSourceAndTech||false;}/**
         * Executes source setting and getting logic
         *
         * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]
         *        A SourceObject, an array of SourceObjects, or a string referencing
         *        a URL to a media source. It is _highly recommended_ that an object
         *        or array of objects is used here, so that source selection
         *        algorithms can take the `type` into account.
         *
         *        If not provided, this method acts as a getter.
         * @param {boolean} [isRetry]
         *        Indicates whether this is being called internally as a result of a retry
         *
         * @return {string|undefined}
         *         If the `source` argument is missing, returns the current source
         *         URL. Otherwise, returns nothing/undefined.
         */},{key:"handleSrc_",value:function handleSrc_(source,isRetry){var _this168=this;// getter usage
if(typeof source==='undefined'){return this.cache_.src||'';}// Reset retry behavior for new source
if(this.resetRetryOnError_){this.resetRetryOnError_();}// filter out invalid sources and turn our source into
// an array of source objects
var sources=filterSource(source);// if a source was passed in then it is invalid because
// it was filtered to a zero length Array. So we have to
// show an error
if(!sources.length){this.setTimeout(function(){this.error({code:4,message:this.options_.notSupportedMessage});},0);return;}// initial sources
this.changingSrc_=true;// Only update the cached source list if we are not retrying a new source after error,
// since in that case we want to include the failed source(s) in the cache
if(!isRetry){this.cache_.sources=sources;}this.updateSourceCaches_(sources[0]);// middlewareSource is the source after it has been changed by middleware
setSource(this,sources[0],function(middlewareSource,mws){_this168.middleware_=mws;// since sourceSet is async we have to update the cache again after we select a source since
// the source that is selected could be out of order from the cache update above this callback.
if(!isRetry){_this168.cache_.sources=sources;}_this168.updateSourceCaches_(middlewareSource);var err=_this168.src_(middlewareSource);if(err){if(sources.length>1){return _this168.handleSrc_(sources.slice(1));}_this168.changingSrc_=false;// We need to wrap this in a timeout to give folks a chance to add error event handlers
_this168.setTimeout(function(){this.error({code:4,message:this.options_.notSupportedMessage});},0);// we could not find an appropriate tech, but let's still notify the delegate that this is it
// this needs a better comment about why this is needed
_this168.triggerReady();return;}setTech(mws,_this168.tech_);});// Try another available source if this one fails before playback.
if(sources.length>1){var retry=function retry(){// Remove the error modal
_this168.error(null);_this168.handleSrc_(sources.slice(1),true);};var stopListeningForErrors=function stopListeningForErrors(){_this168.off('error',retry);};this.one('error',retry);this.one('playing',stopListeningForErrors);this.resetRetryOnError_=function(){_this168.off('error',retry);_this168.off('playing',stopListeningForErrors);};}}/**
         * Get or set the video source.
         *
         * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]
         *        A SourceObject, an array of SourceObjects, or a string referencing
         *        a URL to a media source. It is _highly recommended_ that an object
         *        or array of objects is used here, so that source selection
         *        algorithms can take the `type` into account.
         *
         *        If not provided, this method acts as a getter.
         *
         * @return {string|undefined}
         *         If the `source` argument is missing, returns the current source
         *         URL. Otherwise, returns nothing/undefined.
         */},{key:"src",value:function src(source){return this.handleSrc_(source,false);}/**
         * Set the source object on the tech, returns a boolean that indicates whether
         * there is a tech that can play the source or not
         *
         * @param {Tech~SourceObject} source
         *        The source object to set on the Tech
         *
         * @return {boolean}
         *         - True if there is no Tech to playback this source
         *         - False otherwise
         *
         * @private
         */},{key:"src_",value:function src_(source){var _this169=this;var sourceTech=this.selectSource([source]);if(!sourceTech){return true;}if(!titleCaseEquals(sourceTech.tech,this.techName_)){this.changingSrc_=true;// load this technology with the chosen source
this.loadTech_(sourceTech.tech,sourceTech.source);this.tech_.ready(function(){_this169.changingSrc_=false;});return false;}// wait until the tech is ready to set the source
// and set it synchronously if possible (#2326)
this.ready(function(){// The setSource tech method was added with source handlers
// so older techs won't support it
// We need to check the direct prototype for the case where subclasses
// of the tech do not support source handlers
if(this.tech_.constructor.prototype.hasOwnProperty('setSource')){this.techCall_('setSource',source);}else{this.techCall_('src',source.src);}this.changingSrc_=false;},true);return false;}/**
         * Begin loading the src data.
         */},{key:"load",value:function load(){// Workaround to use the load method with the VHS.
// Does not cover the case when the load method is called directly from the mediaElement.
if(this.tech_&&this.tech_.vhs){this.src(this.currentSource());return;}this.techCall_('load');}/**
         * Reset the player. Loads the first tech in the techOrder,
         * removes all the text tracks in the existing `tech`,
         * and calls `reset` on the `tech`.
         */},{key:"reset",value:function reset(){var _this170=this;if(this.paused()){this.doReset_();}else{var playPromise=this.play();silencePromise(playPromise.then(function(){return _this170.doReset_();}));}}},{key:"doReset_",value:function doReset_(){if(this.tech_){this.tech_.clearTracks('text');}this.removeClass('vjs-playing');this.addClass('vjs-paused');this.resetCache_();this.poster('');this.loadTech_(this.options_.techOrder[0],null);this.techCall_('reset');this.resetControlBarUI_();this.error(null);if(this.titleBar){this.titleBar.update({title:undefined,description:undefined});}if(isEvented(this)){this.trigger('playerreset');}}/**
         * Reset Control Bar's UI by calling sub-methods that reset
         * all of Control Bar's components
         */},{key:"resetControlBarUI_",value:function resetControlBarUI_(){this.resetProgressBar_();this.resetPlaybackRate_();this.resetVolumeBar_();}/**
         * Reset tech's progress so progress bar is reset in the UI
         */},{key:"resetProgressBar_",value:function resetProgressBar_(){this.currentTime(0);var _ref160=this.controlBar||{},currentTimeDisplay=_ref160.currentTimeDisplay,durationDisplay=_ref160.durationDisplay,progressControl=_ref160.progressControl,remainingTimeDisplay=_ref160.remainingTimeDisplay;var _ref161=progressControl||{},seekBar=_ref161.seekBar;if(currentTimeDisplay){currentTimeDisplay.updateContent();}if(durationDisplay){durationDisplay.updateContent();}if(remainingTimeDisplay){remainingTimeDisplay.updateContent();}if(seekBar){seekBar.update();if(seekBar.loadProgressBar){seekBar.loadProgressBar.update();}}}/**
         * Reset Playback ratio
         */},{key:"resetPlaybackRate_",value:function resetPlaybackRate_(){this.playbackRate(this.defaultPlaybackRate());this.handleTechRateChange_();}/**
         * Reset Volume bar
         */},{key:"resetVolumeBar_",value:function resetVolumeBar_(){this.volume(1.0);this.trigger('volumechange');}/**
         * Returns all of the current source objects.
         *
         * @return {Tech~SourceObject[]}
         *         The current source objects
         */},{key:"currentSources",value:function currentSources(){var source=this.currentSource();var sources=[];// assume `{}` or `{ src }`
if(Object.keys(source).length!==0){sources.push(source);}return this.cache_.sources||sources;}/**
         * Returns the current source object.
         *
         * @return {Tech~SourceObject}
         *         The current source object
         */},{key:"currentSource",value:function currentSource(){return this.cache_.source||{};}/**
         * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4
         * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.
         *
         * @return {string}
         *         The current source
         */},{key:"currentSrc",value:function currentSrc(){return this.currentSource()&&this.currentSource().src||'';}/**
         * Get the current source type e.g. video/mp4
         * This can allow you rebuild the current source object so that you could load the same
         * source and tech later
         *
         * @return {string}
         *         The source MIME type
         */},{key:"currentType",value:function currentType(){return this.currentSource()&&this.currentSource().type||'';}/**
         * Get or set the preload attribute
         *
         * @param {'none'|'auto'|'metadata'} [value]
         *        Preload mode to pass to tech
         *
         * @return {string|undefined}
         *         - The preload attribute value when getting
         *         - Nothing when setting
         */},{key:"preload",value:function preload(value){if(value!==undefined){this.techCall_('setPreload',value);this.options_.preload=value;return;}return this.techGet_('preload');}/**
         * Get or set the autoplay option. When this is a boolean it will
         * modify the attribute on the tech. When this is a string the attribute on
         * the tech will be removed and `Player` will handle autoplay on loadstarts.
         *
         * @param {boolean|'play'|'muted'|'any'} [value]
         *        - true: autoplay using the browser behavior
         *        - false: do not autoplay
         *        - 'play': call play() on every loadstart
         *        - 'muted': call muted() then play() on every loadstart
         *        - 'any': call play() on every loadstart. if that fails call muted() then play().
         *        - *: values other than those listed here will be set `autoplay` to true
         *
         * @return {boolean|string|undefined}
         *         - The current value of autoplay when getting
         *         - Nothing when setting
         */},{key:"autoplay",value:function autoplay(value){// getter usage
if(value===undefined){return this.options_.autoplay||false;}var techAutoplay;// if the value is a valid string set it to that, or normalize `true` to 'play', if need be
if(typeof value==='string'&&/(any|play|muted)/.test(value)||value===true&&this.options_.normalizeAutoplay){this.options_.autoplay=value;this.manualAutoplay_(typeof value==='string'?value:'play');techAutoplay=false;// any falsy value sets autoplay to false in the browser,
// lets do the same
}else if(!value){this.options_.autoplay=false;// any other value (ie truthy) sets autoplay to true
}else{this.options_.autoplay=true;}techAutoplay=typeof techAutoplay==='undefined'?this.options_.autoplay:techAutoplay;// if we don't have a tech then we do not queue up
// a setAutoplay call on tech ready. We do this because the
// autoplay option will be passed in the constructor and we
// do not need to set it twice
if(this.tech_){this.techCall_('setAutoplay',techAutoplay);}}/**
         * Set or unset the playsinline attribute.
         * Playsinline tells the browser that non-fullscreen playback is preferred.
         *
         * @param {boolean} [value]
         *        - true means that we should try to play inline by default
         *        - false means that we should use the browser's default playback mode,
         *          which in most cases is inline. iOS Safari is a notable exception
         *          and plays fullscreen by default.
         *
         * @return {string|undefined}
         *         - the current value of playsinline
         *         - Nothing when setting
         *
         * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}
         */},{key:"playsinline",value:function playsinline(value){if(value!==undefined){this.techCall_('setPlaysinline',value);this.options_.playsinline=value;}return this.techGet_('playsinline');}/**
         * Get or set the loop attribute on the video element.
         *
         * @param {boolean} [value]
         *        - true means that we should loop the video
         *        - false means that we should not loop the video
         *
         * @return {boolean|undefined}
         *         - The current value of loop when getting
         *         - Nothing when setting
         */},{key:"loop",value:function loop(value){if(value!==undefined){this.techCall_('setLoop',value);this.options_.loop=value;return;}return this.techGet_('loop');}/**
         * Get or set the poster image source url
         *
         * @fires Player#posterchange
         *
         * @param {string} [src]
         *        Poster image source URL
         *
         * @return {string|undefined}
         *         - The current value of poster when getting
         *         - Nothing when setting
         */},{key:"poster",value:function poster(src){if(src===undefined){return this.poster_;}// The correct way to remove a poster is to set as an empty string
// other falsey values will throw errors
if(!src){src='';}if(src===this.poster_){return;}// update the internal poster variable
this.poster_=src;// update the tech's poster
this.techCall_('setPoster',src);this.isPosterFromTech_=false;// alert components that the poster has been set
/**
           * This event fires when the poster image is changed on the player.
           *
           * @event Player#posterchange
           * @type {Event}
           */this.trigger('posterchange');}/**
         * Some techs (e.g. YouTube) can provide a poster source in an
         * asynchronous way. We want the poster component to use this
         * poster source so that it covers up the tech's controls.
         * (YouTube's play button). However we only want to use this
         * source if the player user hasn't set a poster through
         * the normal APIs.
         *
         * @fires Player#posterchange
         * @listens Tech#posterchange
         * @private
         */},{key:"handleTechPosterChange_",value:function handleTechPosterChange_(){if((!this.poster_||this.options_.techCanOverridePoster)&&this.tech_&&this.tech_.poster){var newPoster=this.tech_.poster()||'';if(newPoster!==this.poster_){this.poster_=newPoster;this.isPosterFromTech_=true;// Let components know the poster has changed
this.trigger('posterchange');}}}/**
         * Get or set whether or not the controls are showing.
         *
         * @fires Player#controlsenabled
         *
         * @param {boolean} [bool]
         *        - true to turn controls on
         *        - false to turn controls off
         *
         * @return {boolean|undefined}
         *         - The current value of controls when getting
         *         - Nothing when setting
         */},{key:"controls",value:function controls(bool){if(bool===undefined){return!!this.controls_;}bool=!!bool;// Don't trigger a change event unless it actually changed
if(this.controls_===bool){return;}this.controls_=bool;if(this.usingNativeControls()){this.techCall_('setControls',bool);}if(this.controls_){this.removeClass('vjs-controls-disabled');this.addClass('vjs-controls-enabled');/**
             * @event Player#controlsenabled
             * @type {Event}
             */this.trigger('controlsenabled');if(!this.usingNativeControls()){this.addTechControlsListeners_();}}else{this.removeClass('vjs-controls-enabled');this.addClass('vjs-controls-disabled');/**
             * @event Player#controlsdisabled
             * @type {Event}
             */this.trigger('controlsdisabled');if(!this.usingNativeControls()){this.removeTechControlsListeners_();}}}/**
         * Toggle native controls on/off. Native controls are the controls built into
         * devices (e.g. default iPhone controls) or other techs
         * (e.g. Vimeo Controls)
         * **This should only be set by the current tech, because only the tech knows
         * if it can support native controls**
         *
         * @fires Player#usingnativecontrols
         * @fires Player#usingcustomcontrols
         *
         * @param {boolean} [bool]
         *        - true to turn native controls on
         *        - false to turn native controls off
         *
         * @return {boolean|undefined}
         *         - The current value of native controls when getting
         *         - Nothing when setting
         */},{key:"usingNativeControls",value:function usingNativeControls(bool){if(bool===undefined){return!!this.usingNativeControls_;}bool=!!bool;// Don't trigger a change event unless it actually changed
if(this.usingNativeControls_===bool){return;}this.usingNativeControls_=bool;if(this.usingNativeControls_){this.addClass('vjs-using-native-controls');/**
             * player is using the native device controls
             *
             * @event Player#usingnativecontrols
             * @type {Event}
             */this.trigger('usingnativecontrols');}else{this.removeClass('vjs-using-native-controls');/**
             * player is using the custom HTML controls
             *
             * @event Player#usingcustomcontrols
             * @type {Event}
             */this.trigger('usingcustomcontrols');}}/**
         * Set or get the current MediaError
         *
         * @fires Player#error
         *
         * @param  {MediaError|string|number} [err]
         *         A MediaError or a string/number to be turned
         *         into a MediaError
         *
         * @return {MediaError|null|undefined}
         *         - The current MediaError when getting (or null)
         *         - Nothing when setting
         */},{key:"error",value:function error(err){var _this171=this;if(err===undefined){return this.error_||null;}// allow hooks to modify error object
hooks('beforeerror').forEach(function(hookFunction){var newErr=hookFunction(_this171,err);if(!(isObject(newErr)&&!Array.isArray(newErr)||typeof newErr==='string'||typeof newErr==='number'||newErr===null)){_this171.log.error('please return a value that MediaError expects in beforeerror hooks');return;}err=newErr;});// Suppress the first error message for no compatible source until
// user interaction
if(this.options_.suppressNotSupportedError&&err&&err.code===4){var triggerSuppressedError=function triggerSuppressedError(){this.error(err);};this.options_.suppressNotSupportedError=false;this.any(['click','touchstart'],triggerSuppressedError);this.one('loadstart',function(){this.off(['click','touchstart'],triggerSuppressedError);});return;}// restoring to default
if(err===null){this.error_=null;this.removeClass('vjs-error');if(this.errorDisplay){this.errorDisplay.close();}return;}this.error_=new MediaError(err);// add the vjs-error classname to the player
this.addClass('vjs-error');// log the name of the error type and any message
// IE11 logs "[object object]" and required you to expand message to see error object
log$1.error("(CODE:".concat(this.error_.code," ").concat(MediaError.errorTypes[this.error_.code],")"),this.error_.message,this.error_);/**
           * @event Player#error
           * @type {Event}
           */this.trigger('error');// notify hooks of the per player error
hooks('error').forEach(function(hookFunction){return hookFunction(_this171,_this171.error_);});return;}/**
         * Report user activity
         *
         * @param {Object} event
         *        Event object
         */},{key:"reportUserActivity",value:function reportUserActivity(event){this.userActivity_=true;}/**
         * Get/set if user is active
         *
         * @fires Player#useractive
         * @fires Player#userinactive
         *
         * @param {boolean} [bool]
         *        - true if the user is active
         *        - false if the user is inactive
         *
         * @return {boolean|undefined}
         *         - The current value of userActive when getting
         *         - Nothing when setting
         */},{key:"userActive",value:function userActive(bool){if(bool===undefined){return this.userActive_;}bool=!!bool;if(bool===this.userActive_){return;}this.userActive_=bool;if(this.userActive_){this.userActivity_=true;this.removeClass('vjs-user-inactive');this.addClass('vjs-user-active');/**
             * @event Player#useractive
             * @type {Event}
             */this.trigger('useractive');return;}// Chrome/Safari/IE have bugs where when you change the cursor it can
// trigger a mousemove event. This causes an issue when you're hiding
// the cursor when the user is inactive, and a mousemove signals user
// activity. Making it impossible to go into inactive mode. Specifically
// this happens in fullscreen when we really need to hide the cursor.
//
// When this gets resolved in ALL browsers it can be removed
// https://code.google.com/p/chromium/issues/detail?id=103041
if(this.tech_){this.tech_.one('mousemove',function(e){e.stopPropagation();e.preventDefault();});}this.userActivity_=false;this.removeClass('vjs-user-active');this.addClass('vjs-user-inactive');/**
           * @event Player#userinactive
           * @type {Event}
           */this.trigger('userinactive');}/**
         * Listen for user activity based on timeout value
         *
         * @private
         */},{key:"listenForUserActivity_",value:function listenForUserActivity_(){var mouseInProgress;var lastMoveX;var lastMoveY;var handleActivity=bind_(this,this.reportUserActivity);var handleMouseMove=function handleMouseMove(e){// #1068 - Prevent mousemove spamming
// Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970
if(e.screenX!==lastMoveX||e.screenY!==lastMoveY){lastMoveX=e.screenX;lastMoveY=e.screenY;handleActivity();}};var handleMouseDown=function handleMouseDown(){handleActivity();// For as long as the they are touching the device or have their mouse down,
// we consider them active even if they're not moving their finger or mouse.
// So we want to continue to update that they are active
this.clearInterval(mouseInProgress);// Setting userActivity=true now and setting the interval to the same time
// as the activityCheck interval (250) should ensure we never miss the
// next activityCheck
mouseInProgress=this.setInterval(handleActivity,250);};var handleMouseUpAndMouseLeave=function handleMouseUpAndMouseLeave(event){handleActivity();// Stop the interval that maintains activity if the mouse/touch is down
this.clearInterval(mouseInProgress);};// Any mouse movement will be considered user activity
this.on('mousedown',handleMouseDown);this.on('mousemove',handleMouseMove);this.on('mouseup',handleMouseUpAndMouseLeave);this.on('mouseleave',handleMouseUpAndMouseLeave);var controlBar=this.getChild('controlBar');// Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)
// controlBar would no longer be hidden by default timeout.
if(controlBar&&!IS_IOS&&!IS_ANDROID){controlBar.on('mouseenter',function(event){if(this.player().options_.inactivityTimeout!==0){this.player().cache_.inactivityTimeout=this.player().options_.inactivityTimeout;}this.player().options_.inactivityTimeout=0;});controlBar.on('mouseleave',function(event){this.player().options_.inactivityTimeout=this.player().cache_.inactivityTimeout;});}// Listen for keyboard navigation
// Shouldn't need to use inProgress interval because of key repeat
this.on('keydown',handleActivity);this.on('keyup',handleActivity);// Run an interval every 250 milliseconds instead of stuffing everything into
// the mousemove/touchmove function itself, to prevent performance degradation.
// `this.reportUserActivity` simply sets this.userActivity_ to true, which
// then gets picked up by this loop
// http://ejohn.org/blog/learning-from-twitter/
var inactivityTimeout;/** @this Player */var activityCheck=function activityCheck(){// Check to see if mouse/touch activity has happened
if(!this.userActivity_){return;}// Reset the activity tracker
this.userActivity_=false;// If the user state was inactive, set the state to active
this.userActive(true);// Clear any existing inactivity timeout to start the timer over
this.clearTimeout(inactivityTimeout);var timeout=this.options_.inactivityTimeout;if(timeout<=0){return;}// In <timeout> milliseconds, if no more activity has occurred the
// user will be considered inactive
inactivityTimeout=this.setTimeout(function(){// Protect against the case where the inactivityTimeout can trigger just
// before the next user activity is picked up by the activity check loop
// causing a flicker
if(!this.userActivity_){this.userActive(false);}},timeout);};this.setInterval(activityCheck,250);}/**
         * Gets or sets the current playback rate. A playback rate of
         * 1.0 represents normal speed and 0.5 would indicate half-speed
         * playback, for instance.
         *
         * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate
         *
         * @param {number} [rate]
         *       New playback rate to set.
         *
         * @return {number|undefined}
         *         - The current playback rate when getting or 1.0
         *         - Nothing when setting
         */},{key:"playbackRate",value:function playbackRate(rate){if(rate!==undefined){// NOTE: this.cache_.lastPlaybackRate is set from the tech handler
// that is registered above
this.techCall_('setPlaybackRate',rate);return;}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.cache_.lastPlaybackRate||this.techGet_('playbackRate');}return 1.0;}/**
         * Gets or sets the current default playback rate. A default playback rate of
         * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.
         * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not
         * not the current playbackRate.
         *
         * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate
         *
         * @param {number} [rate]
         *       New default playback rate to set.
         *
         * @return {number|undefined}
         *         - The default playback rate when getting or 1.0
         *         - Nothing when setting
         */},{key:"defaultPlaybackRate",value:function defaultPlaybackRate(rate){if(rate!==undefined){return this.techCall_('setDefaultPlaybackRate',rate);}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.techGet_('defaultPlaybackRate');}return 1.0;}/**
         * Gets or sets the audio flag
         *
         * @param {boolean} [bool]
         *        - true signals that this is an audio player
         *        - false signals that this is not an audio player
         *
         * @return {boolean|undefined}
         *         - The current value of isAudio when getting
         *         - Nothing when setting
         */},{key:"isAudio",value:function isAudio(bool){if(bool!==undefined){this.isAudio_=!!bool;return;}return!!this.isAudio_;}},{key:"enableAudioOnlyUI_",value:function enableAudioOnlyUI_(){var _this172=this;// Update styling immediately to show the control bar so we can get its height
this.addClass('vjs-audio-only-mode');var playerChildren=this.children();var controlBar=this.getChild('ControlBar');var controlBarHeight=controlBar&&controlBar.currentHeight();// Hide all player components except the control bar. Control bar components
// needed only for video are hidden with CSS
playerChildren.forEach(function(child){if(child===controlBar){return;}if(child.el_&&!child.hasClass('vjs-hidden')){child.hide();_this172.audioOnlyCache_.hiddenChildren.push(child);}});this.audioOnlyCache_.playerHeight=this.currentHeight();// Set the player height the same as the control bar
this.height(controlBarHeight);this.trigger('audioonlymodechange');}},{key:"disableAudioOnlyUI_",value:function disableAudioOnlyUI_(){this.removeClass('vjs-audio-only-mode');// Show player components that were previously hidden
this.audioOnlyCache_.hiddenChildren.forEach(function(child){return child.show();});// Reset player height
this.height(this.audioOnlyCache_.playerHeight);this.trigger('audioonlymodechange');}/**
         * Get the current audioOnlyMode state or set audioOnlyMode to true or false.
         *
         * Setting this to `true` will hide all player components except the control bar,
         * as well as control bar components needed only for video.
         *
         * @param {boolean} [value]
         *         The value to set audioOnlyMode to.
         *
         * @return {Promise|boolean}
         *        A Promise is returned when setting the state, and a boolean when getting
         *        the present state
         */},{key:"audioOnlyMode",value:function audioOnlyMode(value){var _this173=this;if(typeof value!=='boolean'||value===this.audioOnlyMode_){return this.audioOnlyMode_;}this.audioOnlyMode_=value;// Enable Audio Only Mode
if(value){var exitPromises=[];// Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.
if(this.isInPictureInPicture()){exitPromises.push(this.exitPictureInPicture());}if(this.isFullscreen()){exitPromises.push(this.exitFullscreen());}if(this.audioPosterMode()){exitPromises.push(this.audioPosterMode(false));}return Promise.all(exitPromises).then(function(){return _this173.enableAudioOnlyUI_();});}// Disable Audio Only Mode
return Promise.resolve().then(function(){return _this173.disableAudioOnlyUI_();});}},{key:"enablePosterModeUI_",value:function enablePosterModeUI_(){// Hide the video element and show the poster image to enable posterModeUI
var tech=this.tech_&&this.tech_;tech.hide();this.addClass('vjs-audio-poster-mode');this.trigger('audiopostermodechange');}},{key:"disablePosterModeUI_",value:function disablePosterModeUI_(){// Show the video element and hide the poster image to disable posterModeUI
var tech=this.tech_&&this.tech_;tech.show();this.removeClass('vjs-audio-poster-mode');this.trigger('audiopostermodechange');}/**
         * Get the current audioPosterMode state or set audioPosterMode to true or false
         *
         * @param {boolean} [value]
         *         The value to set audioPosterMode to.
         *
         * @return {Promise|boolean}
         *         A Promise is returned when setting the state, and a boolean when getting
         *        the present state
         */},{key:"audioPosterMode",value:function audioPosterMode(value){var _this174=this;if(typeof value!=='boolean'||value===this.audioPosterMode_){return this.audioPosterMode_;}this.audioPosterMode_=value;if(value){if(this.audioOnlyMode()){var audioOnlyModePromise=this.audioOnlyMode(false);return audioOnlyModePromise.then(function(){// enable audio poster mode after audio only mode is disabled
_this174.enablePosterModeUI_();});}return Promise.resolve().then(function(){// enable audio poster mode
_this174.enablePosterModeUI_();});}return Promise.resolve().then(function(){// disable audio poster mode
_this174.disablePosterModeUI_();});}/**
         * A helper method for adding a {@link TextTrack} to our
         * {@link TextTrackList}.
         *
         * In addition to the W3C settings we allow adding additional info through options.
         *
         * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack
         *
         * @param {string} [kind]
         *        the kind of TextTrack you are adding
         *
         * @param {string} [label]
         *        the label to give the TextTrack label
         *
         * @param {string} [language]
         *        the language to set on the TextTrack
         *
         * @return {TextTrack|undefined}
         *         the TextTrack that was added or undefined
         *         if there is no tech
         */},{key:"addTextTrack",value:function addTextTrack(kind,label,language){if(this.tech_){return this.tech_.addTextTrack(kind,label,language);}}/**
         * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.
         *
         * @param {Object} options
         *        Options to pass to {@link HTMLTrackElement} during creation. See
         *        {@link HTMLTrackElement} for object properties that you should use.
         *
         * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed
         *                                        from the TextTrackList and HtmlTrackElementList
         *                                        after a source change
         *
         * @return { import('./tracks/html-track-element').default }
         *         the HTMLTrackElement that was created and added
         *         to the HtmlTrackElementList and the remote
         *         TextTrackList
         *
         */},{key:"addRemoteTextTrack",value:function addRemoteTextTrack(options,manualCleanup){if(this.tech_){return this.tech_.addRemoteTextTrack(options,manualCleanup);}}/**
         * Remove a remote {@link TextTrack} from the respective
         * {@link TextTrackList} and {@link HtmlTrackElementList}.
         *
         * @param {Object} track
         *        Remote {@link TextTrack} to remove
         *
         * @return {undefined}
         *         does not return anything
         */},{key:"removeRemoteTextTrack",value:function removeRemoteTextTrack(){var obj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var track=obj.track;if(!track){track=obj;}// destructure the input into an object with a track argument, defaulting to arguments[0]
// default the whole argument to an empty object if nothing was passed in
if(this.tech_){return this.tech_.removeRemoteTextTrack(track);}}/**
         * Gets available media playback quality metrics as specified by the W3C's Media
         * Playback Quality API.
         *
         * @see [Spec]{@link https://wicg.github.io/media-playback-quality}
         *
         * @return {Object|undefined}
         *         An object with supported media playback quality metrics or undefined if there
         *         is no tech or the tech does not support it.
         */},{key:"getVideoPlaybackQuality",value:function getVideoPlaybackQuality(){return this.techGet_('getVideoPlaybackQuality');}/**
         * Get video width
         *
         * @return {number}
         *         current video width
         */},{key:"videoWidth",value:function videoWidth(){return this.tech_&&this.tech_.videoWidth&&this.tech_.videoWidth()||0;}/**
         * Get video height
         *
         * @return {number}
         *         current video height
         */},{key:"videoHeight",value:function videoHeight(){return this.tech_&&this.tech_.videoHeight&&this.tech_.videoHeight()||0;}/**
         * Set or get the player's language code.
         *
         * Changing the language will trigger
         * [languagechange]{@link Player#event:languagechange}
         * which Components can use to update control text.
         * ClickableComponent will update its control text by default on
         * [languagechange]{@link Player#event:languagechange}.
         *
         * @fires Player#languagechange
         *
         * @param {string} [code]
         *        the language code to set the player to
         *
         * @return {string|undefined}
         *         - The current language code when getting
         *         - Nothing when setting
         */},{key:"language",value:function language(code){if(code===undefined){return this.language_;}if(this.language_!==String(code).toLowerCase()){this.language_=String(code).toLowerCase();// during first init, it's possible some things won't be evented
if(isEvented(this)){/**
              * fires when the player language change
              *
              * @event Player#languagechange
              * @type {Event}
              */this.trigger('languagechange');}}}/**
         * Get the player's language dictionary
         * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time
         * Languages specified directly in the player options have precedence
         *
         * @return {Array}
         *         An array of of supported languages
         */},{key:"languages",value:function languages(){return merge$1(Player.prototype.options_.languages,this.languages_);}/**
         * returns a JavaScript object representing the current track
         * information. **DOES not return it as JSON**
         *
         * @return {Object}
         *         Object representing the current of track info
         */},{key:"toJSON",value:function toJSON(){var options=merge$1(this.options_);var tracks=options.tracks;options.tracks=[];for(var _i147=0;_i147<tracks.length;_i147++){var track=tracks[_i147];// deep merge tracks and null out player so no circular references
track=merge$1(track);track.player=undefined;options.tracks[_i147]=track;}return options;}/**
         * Creates a simple modal dialog (an instance of the {@link ModalDialog}
         * component) that immediately overlays the player with arbitrary
         * content and removes itself when closed.
         *
         * @param {string|Function|Element|Array|null} content
         *        Same as {@link ModalDialog#content}'s param of the same name.
         *        The most straight-forward usage is to provide a string or DOM
         *        element.
         *
         * @param {Object} [options]
         *        Extra options which will be passed on to the {@link ModalDialog}.
         *
         * @return {ModalDialog}
         *         the {@link ModalDialog} that was created
         */},{key:"createModal",value:function createModal(content,options){var _this175=this;options=options||{};options.content=content||'';var modal=new ModalDialog(this,options);this.addChild(modal);modal.on('dispose',function(){_this175.removeChild(modal);});modal.open();return modal;}/**
         * Change breakpoint classes when the player resizes.
         *
         * @private
         */},{key:"updateCurrentBreakpoint_",value:function updateCurrentBreakpoint_(){if(!this.responsive()){return;}var currentBreakpoint=this.currentBreakpoint();var currentWidth=this.currentWidth();for(var _i148=0;_i148<BREAKPOINT_ORDER.length;_i148++){var candidateBreakpoint=BREAKPOINT_ORDER[_i148];var _maxWidth=this.breakpoints_[candidateBreakpoint];if(currentWidth<=_maxWidth){// The current breakpoint did not change, nothing to do.
if(currentBreakpoint===candidateBreakpoint){return;}// Only remove a class if there is a current breakpoint.
if(currentBreakpoint){this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);}this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);this.breakpoint_=candidateBreakpoint;break;}}}/**
         * Removes the current breakpoint.
         *
         * @private
         */},{key:"removeCurrentBreakpoint_",value:function removeCurrentBreakpoint_(){var className=this.currentBreakpointClass();this.breakpoint_='';if(className){this.removeClass(className);}}/**
         * Get or set breakpoints on the player.
         *
         * Calling this method with an object or `true` will remove any previous
         * custom breakpoints and start from the defaults again.
         *
         * @param  {Object|boolean} [breakpoints]
         *         If an object is given, it can be used to provide custom
         *         breakpoints. If `true` is given, will set default breakpoints.
         *         If this argument is not given, will simply return the current
         *         breakpoints.
         *
         * @param  {number} [breakpoints.tiny]
         *         The maximum width for the "vjs-layout-tiny" class.
         *
         * @param  {number} [breakpoints.xsmall]
         *         The maximum width for the "vjs-layout-x-small" class.
         *
         * @param  {number} [breakpoints.small]
         *         The maximum width for the "vjs-layout-small" class.
         *
         * @param  {number} [breakpoints.medium]
         *         The maximum width for the "vjs-layout-medium" class.
         *
         * @param  {number} [breakpoints.large]
         *         The maximum width for the "vjs-layout-large" class.
         *
         * @param  {number} [breakpoints.xlarge]
         *         The maximum width for the "vjs-layout-x-large" class.
         *
         * @param  {number} [breakpoints.huge]
         *         The maximum width for the "vjs-layout-huge" class.
         *
         * @return {Object}
         *         An object mapping breakpoint names to maximum width values.
         */},{key:"breakpoints",value:function breakpoints(_breakpoints){// Used as a getter.
if(_breakpoints===undefined){return Object.assign(this.breakpoints_);}this.breakpoint_='';this.breakpoints_=Object.assign({},DEFAULT_BREAKPOINTS,_breakpoints);// When breakpoint definitions change, we need to update the currently
// selected breakpoint.
this.updateCurrentBreakpoint_();// Clone the breakpoints before returning.
return Object.assign(this.breakpoints_);}/**
         * Get or set a flag indicating whether or not this player should adjust
         * its UI based on its dimensions.
         *
         * @param  {boolean} [value]
         *         Should be `true` if the player should adjust its UI based on its
         *         dimensions; otherwise, should be `false`.
         *
         * @return {boolean|undefined}
         *         Will be `true` if this player should adjust its UI based on its
         *         dimensions; otherwise, will be `false`.
         *         Nothing if setting
         */},{key:"responsive",value:function responsive(value){// Used as a getter.
if(value===undefined){return this.responsive_;}value=Boolean(value);var current=this.responsive_;// Nothing changed.
if(value===current){return;}// The value actually changed, set it.
this.responsive_=value;// Start listening for breakpoints and set the initial breakpoint if the
// player is now responsive.
if(value){this.on('playerresize',this.boundUpdateCurrentBreakpoint_);this.updateCurrentBreakpoint_();// Stop listening for breakpoints if the player is no longer responsive.
}else{this.off('playerresize',this.boundUpdateCurrentBreakpoint_);this.removeCurrentBreakpoint_();}return value;}/**
         * Get current breakpoint name, if any.
         *
         * @return {string}
         *         If there is currently a breakpoint set, returns a the key from the
         *         breakpoints object matching it. Otherwise, returns an empty string.
         */},{key:"currentBreakpoint",value:function currentBreakpoint(){return this.breakpoint_;}/**
         * Get the current breakpoint class name.
         *
         * @return {string}
         *         The matching class name (e.g. `"vjs-layout-tiny"` or
         *         `"vjs-layout-large"`) for the current breakpoint. Empty string if
         *         there is no current breakpoint.
         */},{key:"currentBreakpointClass",value:function currentBreakpointClass(){return BREAKPOINT_CLASSES[this.breakpoint_]||'';}/**
         * An object that describes a single piece of media.
         *
         * Properties that are not part of this type description will be retained; so,
         * this can be viewed as a generic metadata storage mechanism as well.
         *
         * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}
         * @typedef  {Object} Player~MediaObject
         *
         * @property {string} [album]
         *           Unused, except if this object is passed to the `MediaSession`
         *           API.
         *
         * @property {string} [artist]
         *           Unused, except if this object is passed to the `MediaSession`
         *           API.
         *
         * @property {Object[]} [artwork]
         *           Unused, except if this object is passed to the `MediaSession`
         *           API. If not specified, will be populated via the `poster`, if
         *           available.
         *
         * @property {string} [poster]
         *           URL to an image that will display before playback.
         *
         * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]
         *           A single source object, an array of source objects, or a string
         *           referencing a URL to a media source. It is _highly recommended_
         *           that an object or array of objects is used here, so that source
         *           selection algorithms can take the `type` into account.
         *
         * @property {string} [title]
         *           Unused, except if this object is passed to the `MediaSession`
         *           API.
         *
         * @property {Object[]} [textTracks]
         *           An array of objects to be used to create text tracks, following
         *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.
         *           For ease of removal, these will be created as "remote" text
         *           tracks and set to automatically clean up on source changes.
         *
         *           These objects may have properties like `src`, `kind`, `label`,
         *           and `language`, see {@link Tech#createRemoteTextTrack}.
         */ /**
         * Populate the player using a {@link Player~MediaObject|MediaObject}.
         *
         * @param  {Player~MediaObject} media
         *         A media object.
         *
         * @param  {Function} ready
         *         A callback to be called when the player is ready.
         */},{key:"loadMedia",value:function loadMedia(media,ready){var _this176=this;if(!media||_typeof(media)!=='object'){return;}var crossOrigin=this.crossOrigin();this.reset();// Clone the media object so it cannot be mutated from outside.
this.cache_.media=merge$1(media);var _this$cache_$media=this.cache_.media,artist=_this$cache_$media.artist,artwork=_this$cache_$media.artwork,description=_this$cache_$media.description,poster=_this$cache_$media.poster,src=_this$cache_$media.src,textTracks=_this$cache_$media.textTracks,title=_this$cache_$media.title;// If `artwork` is not given, create it using `poster`.
if(!artwork&&poster){this.cache_.media.artwork=[{src:poster,type:getMimetype(poster)}];}if(crossOrigin){this.crossOrigin(crossOrigin);}if(src){this.src(src);}if(poster){this.poster(poster);}if(Array.isArray(textTracks)){textTracks.forEach(function(tt){return _this176.addRemoteTextTrack(tt,false);});}if(this.titleBar){this.titleBar.update({title:title,description:description||artist||''});}this.ready(ready);}/**
         * Get a clone of the current {@link Player~MediaObject} for this player.
         *
         * If the `loadMedia` method has not been used, will attempt to return a
         * {@link Player~MediaObject} based on the current state of the player.
         *
         * @return {Player~MediaObject}
         */},{key:"getMedia",value:function getMedia(){if(!this.cache_.media){var poster=this.poster();var src=this.currentSources();var textTracks=Array.prototype.map.call(this.remoteTextTracks(),function(tt){return{kind:tt.kind,label:tt.label,language:tt.language,src:tt.src};});var media={src:src,textTracks:textTracks};if(poster){media.poster=poster;media.artwork=[{src:media.poster,type:getMimetype(media.poster)}];}return media;}return merge$1(this.cache_.media);}/**
         * Gets tag settings
         *
         * @param {Element} tag
         *        The player tag
         *
         * @return {Object}
         *         An object containing all of the settings
         *         for a player tag
         */},{key:"debug",value:/**
         * Set debug mode to enable/disable logs at info level.
         *
         * @param {boolean} enabled
         * @fires Player#debugon
         * @fires Player#debugoff
         * @return {boolean|undefined}
         */function debug(enabled){if(enabled===undefined){return this.debugEnabled_;}if(enabled){this.trigger('debugon');this.previousLogLevel_=this.log.level;this.log.level('debug');this.debugEnabled_=true;}else{this.trigger('debugoff');this.log.level(this.previousLogLevel_);this.previousLogLevel_=undefined;this.debugEnabled_=false;}}/**
         * Set or get current playback rates.
         * Takes an array and updates the playback rates menu with the new items.
         * Pass in an empty array to hide the menu.
         * Values other than arrays are ignored.
         *
         * @fires Player#playbackrateschange
         * @param {number[]} [newRates]
         *                   The new rates that the playback rates menu should update to.
         *                   An empty array will hide the menu
         * @return {number[]} When used as a getter will return the current playback rates
         */},{key:"playbackRates",value:function playbackRates(newRates){if(newRates===undefined){return this.cache_.playbackRates;}// ignore any value that isn't an array
if(!Array.isArray(newRates)){return;}// ignore any arrays that don't only contain numbers
if(!newRates.every(function(rate){return typeof rate==='number';})){return;}this.cache_.playbackRates=newRates;/**
          * fires when the playback rates in a player are changed
          *
          * @event Player#playbackrateschange
          * @type {Event}
          */this.trigger('playbackrateschange');}}],[{key:"getTagSettings",value:function getTagSettings(tag){var baseOptions={sources:[],tracks:[]};var tagOptions=getAttributes(tag);var dataSetup=tagOptions['data-setup'];if(_hasClass(tag,'vjs-fill')){tagOptions.fill=true;}if(_hasClass(tag,'vjs-fluid')){tagOptions.fluid=true;}// Check if data-setup attr exists.
if(dataSetup!==null){// Parse options JSON
// If empty string, make it a parsable json object.
var _tuple=tuple(dataSetup||'{}'),_tuple2=_slicedToArray(_tuple,2),err=_tuple2[0],_data3=_tuple2[1];if(err){log$1.error(err);}Object.assign(tagOptions,_data3);}Object.assign(baseOptions,tagOptions);// Get tag children settings
if(tag.hasChildNodes()){var _children7=tag.childNodes;for(var _i149=0,_j14=_children7.length;_i149<_j14;_i149++){var child=_children7[_i149];// Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/
var childName=child.nodeName.toLowerCase();if(childName==='source'){baseOptions.sources.push(getAttributes(child));}else if(childName==='track'){baseOptions.tracks.push(getAttributes(child));}}}return baseOptions;}}]);return Player;}(Component$1);/**
       * Get the {@link VideoTrackList}
       *
       * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist
       *
       * @return {VideoTrackList}
       *         the current video track list
       *
       * @method Player.prototype.videoTracks
       */ /**
       * Get the {@link AudioTrackList}
       *
       * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist
       *
       * @return {AudioTrackList}
       *         the current audio track list
       *
       * @method Player.prototype.audioTracks
       */ /**
       * Get the {@link TextTrackList}
       *
       * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks
       *
       * @return {TextTrackList}
       *         the current text track list
       *
       * @method Player.prototype.textTracks
       */ /**
       * Get the remote {@link TextTrackList}
       *
       * @return {TextTrackList}
       *         The current remote text track list
       *
       * @method Player.prototype.remoteTextTracks
       */ /**
       * Get the remote {@link HtmlTrackElementList} tracks.
       *
       * @return {HtmlTrackElementList}
       *         The current remote text track element list
       *
       * @method Player.prototype.remoteTextTrackEls
       */ALL.names.forEach(function(name){var props=ALL[name];Player.prototype[props.getterName]=function(){if(this.tech_){return this.tech_[props.getterName]();}// if we have not yet loadTech_, we create {video,audio,text}Tracks_
// these will be passed to the tech during loading
this[props.privateName]=this[props.privateName]||new props.ListClass();return this[props.privateName];};});/**
       * Get or set the `Player`'s crossorigin option. For the HTML5 player, this
       * sets the `crossOrigin` property on the `<video>` tag to control the CORS
       * behavior.
       *
       * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}
       *
       * @param {string} [value]
       *        The value to set the `Player`'s crossorigin to. If an argument is
       *        given, must be one of `anonymous` or `use-credentials`.
       *
       * @return {string|undefined}
       *         - The current crossorigin value of the `Player` when getting.
       *         - undefined when setting
       */Player.prototype.crossorigin=Player.prototype.crossOrigin;/**
       * Global enumeration of players.
       *
       * The keys are the player IDs and the values are either the {@link Player}
       * instance or `null` for disposed players.
       *
       * @type {Object}
       */Player.players={};var navigator$1=window_1.navigator;/*
       * Player instance options, surfaced using options
       * options = Player.prototype.options_
       * Make changes in options, not here.
       *
       * @type {Object}
       * @private
       */Player.prototype.options_={// Default order of fallback technology
techOrder:Tech.defaultTechOrder_,html5:{},// enable sourceset by default
enableSourceset:true,// default inactivity timeout
inactivityTimeout:2000,// default playback rates
playbackRates:[],// Add playback rate selection by adding rates
// 'playbackRates': [0.5, 1, 1.5, 2],
liveui:false,// Included control sets
children:['mediaLoader','posterImage','titleBar','textTrackDisplay','loadingSpinner','bigPlayButton','liveTracker','controlBar','errorDisplay','textTrackSettings','resizeManager'],language:navigator$1&&(navigator$1.languages&&navigator$1.languages[0]||navigator$1.userLanguage||navigator$1.language)||'en',// locales and their language translations
languages:{},// Default message to show when a video cannot be played.
notSupportedMessage:'No compatible source was found for this media.',normalizeAutoplay:false,fullscreen:{options:{navigationUI:'hide'}},breakpoints:{},responsive:false,audioOnlyMode:false,audioPosterMode:false,spatialNavigation:{enabled:false,horizontalSeek:false},// Default smooth seeking to false
enableSmoothSeeking:false};TECH_EVENTS_RETRIGGER.forEach(function(event){Player.prototype["handleTech".concat(toTitleCase$1(event),"_")]=function(){return this.trigger(event);};});/**
       * Fired when the player has initial duration and dimension information
       *
       * @event Player#loadedmetadata
       * @type {Event}
       */ /**
       * Fired when the player has downloaded data at the current playback position
       *
       * @event Player#loadeddata
       * @type {Event}
       */ /**
       * Fired when the current playback position has changed *
       * During playback this is fired every 15-250 milliseconds, depending on the
       * playback technology in use.
       *
       * @event Player#timeupdate
       * @type {Event}
       */ /**
       * Fired when the volume changes
       *
       * @event Player#volumechange
       * @type {Event}
       */ /**
       * Reports whether or not a player has a plugin available.
       *
       * This does not report whether or not the plugin has ever been initialized
       * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.
       *
       * @method Player#hasPlugin
       * @param  {string}  name
       *         The name of a plugin.
       *
       * @return {boolean}
       *         Whether or not this player has the requested plugin available.
       */ /**
       * Reports whether or not a player is using a plugin by name.
       *
       * For basic plugins, this only reports whether the plugin has _ever_ been
       * initialized on this player.
       *
       * @method Player#usingPlugin
       * @param  {string} name
       *         The name of a plugin.
       *
       * @return {boolean}
       *         Whether or not this player is using the requested plugin.
       */Component$1.registerComponent('Player',Player);/**
       * @file plugin.js
       */ /**
       * The base plugin name.
       *
       * @private
       * @constant
       * @type {string}
       */var BASE_PLUGIN_NAME='plugin';/**
       * The key on which a player's active plugins cache is stored.
       *
       * @private
       * @constant
       * @type     {string}
       */var PLUGIN_CACHE_KEY='activePlugins_';/**
       * Stores registered plugins in a private space.
       *
       * @private
       * @type    {Object}
       */var pluginStorage={};/**
       * Reports whether or not a plugin has been registered.
       *
       * @private
       * @param   {string} name
       *          The name of a plugin.
       *
       * @return {boolean}
       *          Whether or not the plugin has been registered.
       */var pluginExists=function pluginExists(name){return pluginStorage.hasOwnProperty(name);};/**
       * Get a single registered plugin by name.
       *
       * @private
       * @param   {string} name
       *          The name of a plugin.
       *
       * @return {typeof Plugin|Function|undefined}
       *          The plugin (or undefined).
       */var getPlugin=function getPlugin(name){return pluginExists(name)?pluginStorage[name]:undefined;};/**
       * Marks a plugin as "active" on a player.
       *
       * Also, ensures that the player has an object for tracking active plugins.
       *
       * @private
       * @param   {Player} player
       *          A Video.js player instance.
       *
       * @param   {string} name
       *          The name of a plugin.
       */var markPluginAsActive=function markPluginAsActive(player,name){player[PLUGIN_CACHE_KEY]=player[PLUGIN_CACHE_KEY]||{};player[PLUGIN_CACHE_KEY][name]=true;};/**
       * Triggers a pair of plugin setup events.
       *
       * @private
       * @param  {Player} player
       *         A Video.js player instance.
       *
       * @param  {PluginEventHash} hash
       *         A plugin event hash.
       *
       * @param  {boolean} [before]
       *         If true, prefixes the event name with "before". In other words,
       *         use this to trigger "beforepluginsetup" instead of "pluginsetup".
       */var triggerSetupEvent=function triggerSetupEvent(player,hash,before){var eventName=(before?'before':'')+'pluginsetup';player.trigger(eventName,hash);player.trigger(eventName+':'+hash.name,hash);};/**
       * Takes a basic plugin function and returns a wrapper function which marks
       * on the player that the plugin has been activated.
       *
       * @private
       * @param   {string} name
       *          The name of the plugin.
       *
       * @param   {Function} plugin
       *          The basic plugin.
       *
       * @return {Function}
       *          A wrapper function for the given plugin.
       */var createBasicPlugin=function createBasicPlugin(name,plugin){var basicPluginWrapper=function basicPluginWrapper(){// We trigger the "beforepluginsetup" and "pluginsetup" events on the player
// regardless, but we want the hash to be consistent with the hash provided
// for advanced plugins.
//
// The only potentially counter-intuitive thing here is the `instance` in
// the "pluginsetup" event is the value returned by the `plugin` function.
triggerSetupEvent(this,{name:name,plugin:plugin,instance:null},true);var instance=plugin.apply(this,arguments);markPluginAsActive(this,name);triggerSetupEvent(this,{name:name,plugin:plugin,instance:instance});return instance;};Object.keys(plugin).forEach(function(prop){basicPluginWrapper[prop]=plugin[prop];});return basicPluginWrapper;};/**
       * Takes a plugin sub-class and returns a factory function for generating
       * instances of it.
       *
       * This factory function will replace itself with an instance of the requested
       * sub-class of Plugin.
       *
       * @private
       * @param   {string} name
       *          The name of the plugin.
       *
       * @param   {Plugin} PluginSubClass
       *          The advanced plugin.
       *
       * @return {Function}
       */var createPluginFactory=function createPluginFactory(name,PluginSubClass){// Add a `name` property to the plugin prototype so that each plugin can
// refer to itself by name.
PluginSubClass.prototype.name=name;return function(){triggerSetupEvent(this,{name:name,plugin:PluginSubClass,instance:null},true);for(var _len38=arguments.length,args=new Array(_len38),_key39=0;_key39<_len38;_key39++){args[_key39]=arguments[_key39];}var instance=_construct(PluginSubClass,[this].concat(args));// The plugin is replaced by a function that returns the current instance.
this[name]=function(){return instance;};triggerSetupEvent(this,instance.getEventHash());return instance;};};/**
       * Parent class for all advanced plugins.
       *
       * @mixes   module:evented~EventedMixin
       * @mixes   module:stateful~StatefulMixin
       * @fires   Player#beforepluginsetup
       * @fires   Player#beforepluginsetup:$name
       * @fires   Player#pluginsetup
       * @fires   Player#pluginsetup:$name
       * @listens Player#dispose
       * @throws  {Error}
       *          If attempting to instantiate the base {@link Plugin} class
       *          directly instead of via a sub-class.
       */var Plugin=/*#__PURE__*/function(){/**
         * Creates an instance of this class.
         *
         * Sub-classes should call `super` to ensure plugins are properly initialized.
         *
         * @param {Player} player
         *        A Video.js player instance.
         */function Plugin(player){_classCallCheck(this,Plugin);if(this.constructor===Plugin){throw new Error('Plugin must be sub-classed; not directly instantiated.');}this.player=player;if(!this.log){this.log=this.player.log.createLogger(this.name);}// Make this object evented, but remove the added `trigger` method so we
// use the prototype version instead.
evented(this);delete this.trigger;stateful(this,this.constructor.defaultState);markPluginAsActive(player,this.name);// Auto-bind the dispose method so we can use it as a listener and unbind
// it later easily.
this.dispose=this.dispose.bind(this);// If the player is disposed, dispose the plugin.
player.on('dispose',this.dispose);}/**
         * Get the version of the plugin that was set on <pluginName>.VERSION
         */_createClass(Plugin,[{key:"version",value:function version(){return this.constructor.VERSION;}/**
         * Each event triggered by plugins includes a hash of additional data with
         * conventional properties.
         *
         * This returns that object or mutates an existing hash.
         *
         * @param   {Object} [hash={}]
         *          An object to be used as event an event hash.
         *
         * @return {PluginEventHash}
         *          An event hash object with provided properties mixed-in.
         */},{key:"getEventHash",value:function getEventHash(){var hash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};hash.name=this.name;hash.plugin=this.constructor;hash.instance=this;return hash;}/**
         * Triggers an event on the plugin object and overrides
         * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.
         *
         * @param   {string|Object} event
         *          An event type or an object with a type property.
         *
         * @param   {Object} [hash={}]
         *          Additional data hash to merge with a
         *          {@link PluginEventHash|PluginEventHash}.
         *
         * @return {boolean}
         *          Whether or not default was prevented.
         */},{key:"trigger",value:function trigger(event){var hash=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return _trigger(this.eventBusEl_,event,this.getEventHash(hash));}/**
         * Handles "statechanged" events on the plugin. No-op by default, override by
         * subclassing.
         *
         * @abstract
         * @param    {Event} e
         *           An event object provided by a "statechanged" event.
         *
         * @param    {Object} e.changes
         *           An object describing changes that occurred with the "statechanged"
         *           event.
         */},{key:"handleStateChanged",value:function handleStateChanged(e){}/**
         * Disposes a plugin.
         *
         * Subclasses can override this if they want, but for the sake of safety,
         * it's probably best to subscribe the "dispose" event.
         *
         * @fires Plugin#dispose
         */},{key:"dispose",value:function dispose(){var name=this.name,player=this.player;/**
           * Signals that a advanced plugin is about to be disposed.
           *
           * @event Plugin#dispose
           * @type  {Event}
           */this.trigger('dispose');this.off();player.off('dispose',this.dispose);// Eliminate any possible sources of leaking memory by clearing up
// references between the player and the plugin instance and nulling out
// the plugin's state and replacing methods with a function that throws.
player[PLUGIN_CACHE_KEY][name]=false;this.player=this.state=null;// Finally, replace the plugin name on the player with a new factory
// function, so that the plugin is ready to be set up again.
player[name]=createPluginFactory(name,pluginStorage[name]);}/**
         * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).
         *
         * @param   {string|Function} plugin
         *          If a string, matches the name of a plugin. If a function, will be
         *          tested directly.
         *
         * @return {boolean}
         *          Whether or not a plugin is a basic plugin.
         */}],[{key:"isBasic",value:function isBasic(plugin){var p=typeof plugin==='string'?getPlugin(plugin):plugin;return typeof p==='function'&&!Plugin.prototype.isPrototypeOf(p.prototype);}/**
         * Register a Video.js plugin.
         *
         * @param   {string} name
         *          The name of the plugin to be registered. Must be a string and
         *          must not match an existing plugin or a method on the `Player`
         *          prototype.
         *
         * @param   {typeof Plugin|Function} plugin
         *          A sub-class of `Plugin` or a function for basic plugins.
         *
         * @return {typeof Plugin|Function}
         *          For advanced plugins, a factory function for that plugin. For
         *          basic plugins, a wrapper function that initializes the plugin.
         */},{key:"registerPlugin",value:function registerPlugin(name,plugin){if(typeof name!=='string'){throw new Error("Illegal plugin name, \"".concat(name,"\", must be a string, was ").concat(_typeof(name),"."));}if(pluginExists(name)){log$1.warn("A plugin named \"".concat(name,"\" already exists. You may want to avoid re-registering plugins!"));}else if(Player.prototype.hasOwnProperty(name)){throw new Error("Illegal plugin name, \"".concat(name,"\", cannot share a name with an existing player method!"));}if(typeof plugin!=='function'){throw new Error("Illegal plugin for \"".concat(name,"\", must be a function, was ").concat(_typeof(plugin),"."));}pluginStorage[name]=plugin;// Add a player prototype method for all sub-classed plugins (but not for
// the base Plugin class).
if(name!==BASE_PLUGIN_NAME){if(Plugin.isBasic(plugin)){Player.prototype[name]=createBasicPlugin(name,plugin);}else{Player.prototype[name]=createPluginFactory(name,plugin);}}return plugin;}/**
         * De-register a Video.js plugin.
         *
         * @param  {string} name
         *         The name of the plugin to be de-registered. Must be a string that
         *         matches an existing plugin.
         *
         * @throws {Error}
         *         If an attempt is made to de-register the base plugin.
         */},{key:"deregisterPlugin",value:function deregisterPlugin(name){if(name===BASE_PLUGIN_NAME){throw new Error('Cannot de-register base plugin.');}if(pluginExists(name)){delete pluginStorage[name];delete Player.prototype[name];}}/**
         * Gets an object containing multiple Video.js plugins.
         *
         * @param   {Array} [names]
         *          If provided, should be an array of plugin names. Defaults to _all_
         *          plugin names.
         *
         * @return {Object|undefined}
         *          An object containing plugin(s) associated with their name(s) or
         *          `undefined` if no matching plugins exist).
         */},{key:"getPlugins",value:function getPlugins(){var names=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Object.keys(pluginStorage);var result;names.forEach(function(name){var plugin=getPlugin(name);if(plugin){result=result||{};result[name]=plugin;}});return result;}/**
         * Gets a plugin's version, if available
         *
         * @param   {string} name
         *          The name of a plugin.
         *
         * @return {string}
         *          The plugin's version or an empty string.
         */},{key:"getPluginVersion",value:function getPluginVersion(name){var plugin=getPlugin(name);return plugin&&plugin.VERSION||'';}}]);return Plugin;}();/**
       * Gets a plugin by name if it exists.
       *
       * @static
       * @method   getPlugin
       * @memberOf Plugin
       * @param    {string} name
       *           The name of a plugin.
       *
       * @returns  {typeof Plugin|Function|undefined}
       *           The plugin (or `undefined`).
       */Plugin.getPlugin=getPlugin;/**
       * The name of the base plugin class as it is registered.
       *
       * @type {string}
       */Plugin.BASE_PLUGIN_NAME=BASE_PLUGIN_NAME;Plugin.registerPlugin(BASE_PLUGIN_NAME,Plugin);/**
       * Documented in player.js
       *
       * @ignore
       */Player.prototype.usingPlugin=function(name){return!!this[PLUGIN_CACHE_KEY]&&this[PLUGIN_CACHE_KEY][name]===true;};/**
       * Documented in player.js
       *
       * @ignore
       */Player.prototype.hasPlugin=function(name){return!!pluginExists(name);};/**
       * Signals that a plugin is about to be set up on a player.
       *
       * @event    Player#beforepluginsetup
       * @type     {PluginEventHash}
       */ /**
       * Signals that a plugin is about to be set up on a player - by name. The name
       * is the name of the plugin.
       *
       * @event    Player#beforepluginsetup:$name
       * @type     {PluginEventHash}
       */ /**
       * Signals that a plugin has just been set up on a player.
       *
       * @event    Player#pluginsetup
       * @type     {PluginEventHash}
       */ /**
       * Signals that a plugin has just been set up on a player - by name. The name
       * is the name of the plugin.
       *
       * @event    Player#pluginsetup:$name
       * @type     {PluginEventHash}
       */ /**
       * @typedef  {Object} PluginEventHash
       *
       * @property {string} instance
       *           For basic plugins, the return value of the plugin function. For
       *           advanced plugins, the plugin instance on which the event is fired.
       *
       * @property {string} name
       *           The name of the plugin.
       *
       * @property {string} plugin
       *           For basic plugins, the plugin function. For advanced plugins, the
       *           plugin class/constructor.
       */ /**
       * @file deprecate.js
       * @module deprecate
       */ /**
       * Decorate a function with a deprecation message the first time it is called.
       *
       * @param  {string}   message
       *         A deprecation message to log the first time the returned function
       *         is called.
       *
       * @param  {Function} fn
       *         The function to be deprecated.
       *
       * @return {Function}
       *         A wrapper function that will log a deprecation warning the first
       *         time it is called. The return value will be the return value of
       *         the wrapped function.
       */function deprecate(message,fn){var warned=false;return function(){if(!warned){log$1.warn(message);}warned=true;for(var _len39=arguments.length,args=new Array(_len39),_key40=0;_key40<_len39;_key40++){args[_key40]=arguments[_key40];}return fn.apply(this,args);};}/**
       * Internal function used to mark a function as deprecated in the next major
       * version with consistent messaging.
       *
       * @param  {number}   major   The major version where it will be removed
       * @param  {string}   oldName The old function name
       * @param  {string}   newName The new function name
       * @param  {Function} fn      The function to deprecate
       * @return {Function}         The decorated function
       */function deprecateForMajor(major,oldName,newName,fn){return deprecate("".concat(oldName," is deprecated and will be removed in ").concat(major,".0; please use ").concat(newName," instead."),fn);}var VjsErrors={UnsupportedSidxContainer:'unsupported-sidx-container-error',DashManifestSidxParsingError:'dash-manifest-sidx-parsing-error',HlsPlaylistRequestError:'hls-playlist-request-error',SegmentUnsupportedMediaFormat:'segment-unsupported-media-format-error',UnsupportedMediaInitialization:'unsupported-media-initialization-error',SegmentSwitchError:'segment-switch-error',SegmentExceedsSourceBufferQuota:'segment-exceeds-source-buffer-quota-error',SegmentAppendError:'segment-append-error',VttLoadError:'vtt-load-error',VttCueParsingError:'vtt-cue-parsing-error',// Errors used in contrib-ads:
AdsBeforePrerollError:'ads-before-preroll-error',AdsPrerollError:'ads-preroll-error',AdsMidrollError:'ads-midroll-error',AdsPostrollError:'ads-postroll-error',AdsMacroReplacementFailed:'ads-macro-replacement-failed',AdsResumeContentFailed:'ads-resume-content-failed',// Errors used in contrib-eme:
EMEFailedToRequestMediaKeySystemAccess:'eme-failed-request-media-key-system-access',EMEFailedToCreateMediaKeys:'eme-failed-create-media-keys',EMEFailedToAttachMediaKeysToVideoElement:'eme-failed-attach-media-keys-to-video',EMEFailedToCreateMediaKeySession:'eme-failed-create-media-key-session',EMEFailedToSetServerCertificate:'eme-failed-set-server-certificate',EMEFailedToGenerateLicenseRequest:'eme-failed-generate-license-request',EMEFailedToUpdateSessionWithReceivedLicenseKeys:'eme-failed-update-session',EMEFailedToCloseSession:'eme-failed-close-session',EMEFailedToRemoveKeysFromSession:'eme-failed-remove-keys',EMEFailedToLoadSessionBySessionId:'eme-failed-load-session'};/**
       * @file video.js
       * @module videojs
       */ /**
       * Normalize an `id` value by trimming off a leading `#`
       *
       * @private
       * @param   {string} id
       *          A string, maybe with a leading `#`.
       *
       * @return {string}
       *          The string, without any leading `#`.
       */var normalizeId=function normalizeId(id){return id.indexOf('#')===0?id.slice(1):id;};/**
       * A callback that is called when a component is ready. Does not have any
       * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}
       *
       * @callback ReadyCallback
       */ /**
       * The `videojs()` function doubles as the main function for users to create a
       * {@link Player} instance as well as the main library namespace.
       *
       * It can also be used as a getter for a pre-existing {@link Player} instance.
       * However, we _strongly_ recommend using `videojs.getPlayer()` for this
       * purpose because it avoids any potential for unintended initialization.
       *
       * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)
       * of our JSDoc template, we cannot properly document this as both a function
       * and a namespace, so its function signature is documented here.
       *
       * #### Arguments
       * ##### id
       * string|Element, **required**
       *
       * Video element or video element ID.
       *
       * ##### options
       * Object, optional
       *
       * Options object for providing settings.
       * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).
       *
       * ##### ready
       * {@link Component~ReadyCallback}, optional
       *
       * A function to be called when the {@link Player} and {@link Tech} are ready.
       *
       * #### Return Value
       *
       * The `videojs()` function returns a {@link Player} instance.
       *
       * @namespace
       *
       * @borrows AudioTrack as AudioTrack
       * @borrows Component.getComponent as getComponent
       * @borrows module:events.on as on
       * @borrows module:events.one as one
       * @borrows module:events.off as off
       * @borrows module:events.trigger as trigger
       * @borrows EventTarget as EventTarget
       * @borrows module:middleware.use as use
       * @borrows Player.players as players
       * @borrows Plugin.registerPlugin as registerPlugin
       * @borrows Plugin.deregisterPlugin as deregisterPlugin
       * @borrows Plugin.getPlugins as getPlugins
       * @borrows Plugin.getPlugin as getPlugin
       * @borrows Plugin.getPluginVersion as getPluginVersion
       * @borrows Tech.getTech as getTech
       * @borrows Tech.registerTech as registerTech
       * @borrows TextTrack as TextTrack
       * @borrows VideoTrack as VideoTrack
       *
       * @param  {string|Element} id
       *         Video element or video element ID.
       *
       * @param  {Object} [options]
       *         Options object for providing settings.
       *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).
       *
       * @param  {ReadyCallback} [ready]
       *         A function to be called when the {@link Player} and {@link Tech} are
       *         ready.
       *
       * @return {Player}
       *         The `videojs()` function returns a {@link Player|Player} instance.
       */function videojs(id,options,ready){var player=videojs.getPlayer(id);if(player){if(options){log$1.warn("Player \"".concat(id,"\" is already initialised. Options will not be applied."));}if(ready){player.ready(ready);}return player;}var el=typeof id==='string'?_$('#'+normalizeId(id)):id;if(!isEl(el)){throw new TypeError('The element or ID supplied is not valid. (videojs)');}// document.body.contains(el) will only check if el is contained within that one document.
// This causes problems for elements in iframes.
// Instead, use the element's ownerDocument instead of the global document.
// This will make sure that the element is indeed in the dom of that document.
// Additionally, check that the document in question has a default view.
// If the document is no longer attached to the dom, the defaultView of the document will be null.
// If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body
// always returns false. Instead, use the Shadow DOM root.
var inShadowDom='getRootNode'in el?el.getRootNode()instanceof window_1.ShadowRoot:false;var rootNode=inShadowDom?el.getRootNode():el.ownerDocument.body;if(!el.ownerDocument.defaultView||!rootNode.contains(el)){log$1.warn('The element supplied is not included in the DOM');}options=options||{};// Store a copy of the el before modification, if it is to be restored in destroy()
// If div ingest, store the parent div
if(options.restoreEl===true){options.restoreEl=(el.parentNode&&el.parentNode.hasAttribute('data-vjs-player')?el.parentNode:el).cloneNode(true);}hooks('beforesetup').forEach(function(hookFunction){var opts=hookFunction(el,merge$1(options));if(!isObject(opts)||Array.isArray(opts)){log$1.error('please return an object in beforesetup hooks');return;}options=merge$1(options,opts);});// We get the current "Player" component here in case an integration has
// replaced it with a custom player.
var PlayerComponent=Component$1.getComponent('Player');player=new PlayerComponent(el,options,ready);hooks('setup').forEach(function(hookFunction){return hookFunction(player);});return player;}videojs.hooks_=hooks_;videojs.hooks=hooks;videojs.hook=hook;videojs.hookOnce=hookOnce;videojs.removeHook=removeHook;// Add default styles
if(window_1.VIDEOJS_NO_DYNAMIC_STYLE!==true&&isReal()){var _style3=_$('.vjs-styles-defaults');if(!_style3){_style3=createStyleElement('vjs-styles-defaults');var head=_$('head');if(head){head.insertBefore(_style3,head.firstChild);}setTextContent(_style3,"\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    ");}}// Run Auto-load players
// You have to wait at least once in case this script is loaded after your
// video in the DOM (weird behavior only with minified version)
autoSetupTimeout(1,videojs);/**
       * Current Video.js version. Follows [semantic versioning](https://semver.org/).
       *
       * @type {string}
       */videojs.VERSION=version$6;/**
       * The global options object. These are the settings that take effect
       * if no overrides are specified when the player is created.
       *
       * @type {Object}
       */videojs.options=Player.prototype.options_;/**
       * Get an object with the currently created players, keyed by player ID
       *
       * @return {Object}
       *         The created players
       */videojs.getPlayers=function(){return Player.players;};/**
       * Get a single player based on an ID or DOM element.
       *
       * This is useful if you want to check if an element or ID has an associated
       * Video.js player, but not create one if it doesn't.
       *
       * @param   {string|Element} id
       *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -
       *          or a string matching the `id` of such an element.
       *
       * @return {Player|undefined}
       *          A player instance or `undefined` if there is no player instance
       *          matching the argument.
       */videojs.getPlayer=function(id){var players=Player.players;var tag;if(typeof id==='string'){var nId=normalizeId(id);var player=players[nId];if(player){return player;}tag=_$('#'+nId);}else{tag=id;}if(isEl(tag)){var _tag=tag,_player2=_tag.player,playerId=_tag.playerId;// Element may have a `player` property referring to an already created
// player instance. If so, return that.
if(_player2||players[playerId]){return _player2||players[playerId];}}};/**
       * Returns an array of all current players.
       *
       * @return {Array}
       *         An array of all players. The array will be in the order that
       *         `Object.keys` provides, which could potentially vary between
       *         JavaScript engines.
       *
       */videojs.getAllPlayers=function(){return(// Disposed players leave a key with a `null` value, so we need to make sure
// we filter those out.
Object.keys(Player.players).map(function(k){return Player.players[k];}).filter(Boolean));};videojs.players=Player.players;videojs.getComponent=Component$1.getComponent;/**
       * Register a component so it can referred to by name. Used when adding to other
       * components, either through addChild `component.addChild('myComponent')` or through
       * default children options  `{ children: ['myComponent'] }`.
       *
       * > NOTE: You could also just initialize the component before adding.
       * `component.addChild(new MyComponent());`
       *
       * @param {string} name
       *        The class name of the component
       *
       * @param {typeof Component} comp
       *        The component class
       *
       * @return {typeof Component}
       *         The newly registered component
       */videojs.registerComponent=function(name,comp){if(Tech.isTech(comp)){log$1.warn("The ".concat(name," tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)"));}return Component$1.registerComponent.call(Component$1,name,comp);};videojs.getTech=Tech.getTech;videojs.registerTech=Tech.registerTech;videojs.use=use;/**
       * An object that can be returned by a middleware to signify
       * that the middleware is being terminated.
       *
       * @type {object}
       * @property {object} middleware.TERMINATOR
       */Object.defineProperty(videojs,'middleware',{value:{},writeable:false,enumerable:true});Object.defineProperty(videojs.middleware,'TERMINATOR',{value:TERMINATOR,writeable:false,enumerable:true});/**
       * A reference to the {@link module:browser|browser utility module} as an object.
       *
       * @type {Object}
       * @see  {@link module:browser|browser}
       */videojs.browser=browser;/**
       * A reference to the {@link module:obj|obj utility module} as an object.
       *
       * @type {Object}
       * @see  {@link module:obj|obj}
       */videojs.obj=Obj;/**
       * Deprecated reference to the {@link module:obj.merge|merge function}
       *
       * @type {Function}
       * @see {@link module:obj.merge|merge}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.
       */videojs.mergeOptions=deprecateForMajor(9,'videojs.mergeOptions','videojs.obj.merge',merge$1);/**
       * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}
       *
       * @type {Function}
       * @see {@link module:obj.defineLazyProperty|defineLazyProperty}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.
       */videojs.defineLazyProperty=deprecateForMajor(9,'videojs.defineLazyProperty','videojs.obj.defineLazyProperty',defineLazyProperty);/**
       * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}
       *
       * @type {Function}
       * @see {@link module:fn.bind_|fn.bind_}
       * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.
       */videojs.bind=deprecateForMajor(9,'videojs.bind','native Function.prototype.bind',bind_);videojs.registerPlugin=Plugin.registerPlugin;videojs.deregisterPlugin=Plugin.deregisterPlugin;/**
       * Deprecated method to register a plugin with Video.js
       *
       * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.
       *
       * @param {string} name
       *        The plugin name
      *
       * @param {typeof Plugin|Function} plugin
       *         The plugin sub-class or function
       *
       * @return {typeof Plugin|Function}
       */videojs.plugin=function(name,plugin){log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');return Plugin.registerPlugin(name,plugin);};videojs.getPlugins=Plugin.getPlugins;videojs.getPlugin=Plugin.getPlugin;videojs.getPluginVersion=Plugin.getPluginVersion;/**
       * Adding languages so that they're available to all players.
       * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`
       *
       * @param {string} code
       *        The language code or dictionary property
       *
       * @param {Object} data
       *        The data values to be translated
       *
       * @return {Object}
       *         The resulting language dictionary object
       */videojs.addLanguage=function(code,data){code=(''+code).toLowerCase();videojs.options.languages=merge$1(videojs.options.languages,_defineProperty({},code,data));return videojs.options.languages[code];};/**
       * A reference to the {@link module:log|log utility module} as an object.
       *
       * @type {Function}
       * @see  {@link module:log|log}
       */videojs.log=log$1;videojs.createLogger=createLogger;/**
       * A reference to the {@link module:time|time utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:time|time}
       */videojs.time=Time;/**
       * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}
       *
       * @type {Function}
       * @see {@link module:time.createTimeRanges|createTimeRanges}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.
       */videojs.createTimeRange=deprecateForMajor(9,'videojs.createTimeRange','videojs.time.createTimeRanges',createTimeRanges$1);/**
       * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}
       *
       * @type {Function}
       * @see {@link module:time.createTimeRanges|createTimeRanges}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.
       */videojs.createTimeRanges=deprecateForMajor(9,'videojs.createTimeRanges','videojs.time.createTimeRanges',createTimeRanges$1);/**
       * Deprecated reference to the {@link module:time.formatTime|formatTime function}
       *
       * @type {Function}
       * @see {@link module:time.formatTime|formatTime}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.
       */videojs.formatTime=deprecateForMajor(9,'videojs.formatTime','videojs.time.formatTime',formatTime);/**
       * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}
       *
       * @type {Function}
       * @see {@link module:time.setFormatTime|setFormatTime}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.
       */videojs.setFormatTime=deprecateForMajor(9,'videojs.setFormatTime','videojs.time.setFormatTime',setFormatTime);/**
       * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}
       *
       * @type {Function}
       * @see {@link module:time.resetFormatTime|resetFormatTime}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.
       */videojs.resetFormatTime=deprecateForMajor(9,'videojs.resetFormatTime','videojs.time.resetFormatTime',resetFormatTime);/**
       * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}
       *
       * @type {Function}
       * @see {@link module:url.parseUrl|parseUrl}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.
       */videojs.parseUrl=deprecateForMajor(9,'videojs.parseUrl','videojs.url.parseUrl',parseUrl);/**
       * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}
       *
       * @type {Function}
       * @see {@link module:url.isCrossOrigin|isCrossOrigin}
       * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.
       */videojs.isCrossOrigin=deprecateForMajor(9,'videojs.isCrossOrigin','videojs.url.isCrossOrigin',isCrossOrigin);videojs.EventTarget=EventTarget$2;videojs.any=_any;videojs.on=_on;videojs.one=_one;videojs.off=_off;videojs.trigger=_trigger;/**
       * A cross-browser XMLHttpRequest wrapper.
       *
       * @function
       * @param    {Object} options
       *           Settings for the request.
       *
       * @return   {XMLHttpRequest|XDomainRequest}
       *           The request object.
       *
       * @see      https://github.com/Raynos/xhr
       */videojs.xhr=XHR;videojs.TextTrack=TextTrack;videojs.AudioTrack=AudioTrack;videojs.VideoTrack=VideoTrack;['isEl','isTextNode','createEl','hasClass','addClass','removeClass','toggleClass','setAttributes','getAttributes','emptyEl','appendContent','insertContent'].forEach(function(k){videojs[k]=function(){log$1.warn("videojs.".concat(k,"() is deprecated; use videojs.dom.").concat(k,"() instead"));return Dom[k].apply(null,arguments);};});videojs.computedStyle=deprecateForMajor(9,'videojs.computedStyle','videojs.dom.computedStyle',computedStyle);/**
       * A reference to the {@link module:dom|DOM utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:dom|dom}
       */videojs.dom=Dom;/**
       * A reference to the {@link module:fn|fn utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:fn|fn}
       */videojs.fn=Fn;/**
       * A reference to the {@link module:num|num utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:num|num}
       */videojs.num=Num;/**
       * A reference to the {@link module:str|str utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:str|str}
       */videojs.str=Str;/**
       * A reference to the {@link module:url|URL utility module} as an object.
       *
       * @type {Object}
       * @see {@link module:url|url}
       */videojs.url=Url;// The list of possible error types to occur in video.js
videojs.Error=VjsErrors;/*! @name videojs-contrib-quality-levels @version 4.1.0 @license Apache-2.0 */ /**
       * A single QualityLevel.
       *
       * interface QualityLevel {
       *   readonly attribute DOMString id;
       *            attribute DOMString label;
       *   readonly attribute long width;
       *   readonly attribute long height;
       *   readonly attribute long bitrate;
       *            attribute boolean enabled;
       * };
       *
       * @class QualityLevel
       */var QualityLevel=/*#__PURE__*/_createClass(/**
         * Creates a QualityLevel
         *
         * @param {Representation|Object} representation The representation of the quality level
         * @param {string}   representation.id        Unique id of the QualityLevel
         * @param {number=}  representation.width     Resolution width of the QualityLevel
         * @param {number=}  representation.height    Resolution height of the QualityLevel
         * @param {number}   representation.bandwidth Bitrate of the QualityLevel
         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel
         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel
         */function QualityLevel(representation){_classCallCheck(this,QualityLevel);var level=this;// eslint-disable-line
level.id=representation.id;level.label=level.id;level.width=representation.width;level.height=representation.height;level.bitrate=representation.bandwidth;level.frameRate=representation.frameRate;level.enabled_=representation.enabled;Object.defineProperty(level,'enabled',{/**
             * Get whether the QualityLevel is enabled.
             *
             * @return {boolean} True if the QualityLevel is enabled.
             */get:function get(){return level.enabled_();},/**
             * Enable or disable the QualityLevel.
             *
             * @param {boolean} enable true to enable QualityLevel, false to disable.
             */set:function set(enable){level.enabled_(enable);}});return level;});/**
       * A list of QualityLevels.
       *
       * interface QualityLevelList : EventTarget {
       *   getter QualityLevel (unsigned long index);
       *   readonly attribute unsigned long length;
       *   readonly attribute long selectedIndex;
       *
       *   void addQualityLevel(QualityLevel qualityLevel)
       *   void removeQualityLevel(QualityLevel remove)
       *   QualityLevel? getQualityLevelById(DOMString id);
       *
       *   attribute EventHandler onchange;
       *   attribute EventHandler onaddqualitylevel;
       *   attribute EventHandler onremovequalitylevel;
       * };
       *
       * @extends videojs.EventTarget
       * @class QualityLevelList
       */var QualityLevelList=/*#__PURE__*/function(_videojs$EventTarget){_inherits(QualityLevelList,_videojs$EventTarget);var _super93=_createSuper(QualityLevelList);/**
         * Creates a QualityLevelList.
         */function QualityLevelList(){var _this177;_classCallCheck(this,QualityLevelList);_this177=_super93.call(this);var list=_assertThisInitialized2(_this177);// eslint-disable-line
list.levels_=[];list.selectedIndex_=-1;/**
           * Get the index of the currently selected QualityLevel.
           *
           * @returns {number} The index of the selected QualityLevel. -1 if none selected.
           * @readonly
           */Object.defineProperty(list,'selectedIndex',{get:function get(){return list.selectedIndex_;}});/**
           * Get the length of the list of QualityLevels.
           *
           * @returns {number} The length of the list.
           * @readonly
           */Object.defineProperty(list,'length',{get:function get(){return list.levels_.length;}});list[Symbol.iterator]=function(){return list.levels_.values();};return _possibleConstructorReturn(_this177,list);}/**
         * Adds a quality level to the list.
         *
         * @param {Representation|Object} representation The representation of the quality level
         * @param {string}   representation.id        Unique id of the QualityLevel
         * @param {number=}  representation.width     Resolution width of the QualityLevel
         * @param {number=}  representation.height    Resolution height of the QualityLevel
         * @param {number}   representation.bandwidth Bitrate of the QualityLevel
         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel
         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel
         * @return {QualityLevel} the QualityLevel added to the list
         * @method addQualityLevel
         */_createClass(QualityLevelList,[{key:"addQualityLevel",value:function addQualityLevel(representation){var qualityLevel=this.getQualityLevelById(representation.id);// Do not add duplicate quality levels
if(qualityLevel){return qualityLevel;}var index=this.levels_.length;qualityLevel=new QualityLevel(representation);if(!(''+index in this)){Object.defineProperty(this,index,{get:function get(){return this.levels_[index];}});}this.levels_.push(qualityLevel);this.trigger({qualityLevel:qualityLevel,type:'addqualitylevel'});return qualityLevel;}/**
         * Removes a quality level from the list.
         *
         * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.
         * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed
         * @method removeQualityLevel
         */},{key:"removeQualityLevel",value:function removeQualityLevel(qualityLevel){var removed=null;for(var _i150=0,_l9=this.length;_i150<_l9;_i150++){if(this[_i150]===qualityLevel){removed=this.levels_.splice(_i150,1)[0];if(this.selectedIndex_===_i150){this.selectedIndex_=-1;}else if(this.selectedIndex_>_i150){this.selectedIndex_--;}break;}}if(removed){this.trigger({qualityLevel:qualityLevel,type:'removequalitylevel'});}return removed;}/**
         * Searches for a QualityLevel with the given id.
         *
         * @param {string} id The id of the QualityLevel to find.
         * @return {QualityLevel|null} The QualityLevel with id, or null if not found.
         * @method getQualityLevelById
         */},{key:"getQualityLevelById",value:function getQualityLevelById(id){for(var _i151=0,_l10=this.length;_i151<_l10;_i151++){var level=this[_i151];if(level.id===id){return level;}}return null;}/**
         * Resets the list of QualityLevels to empty
         *
         * @method dispose
         */},{key:"dispose",value:function dispose(){this.selectedIndex_=-1;this.levels_.length=0;}}]);return QualityLevelList;}(videojs.EventTarget);/**
       * change - The selected QualityLevel has changed.
       * addqualitylevel - A QualityLevel has been added to the QualityLevelList.
       * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.
       */QualityLevelList.prototype.allowedEvents_={change:'change',addqualitylevel:'addqualitylevel',removequalitylevel:'removequalitylevel'};// emulate attribute EventHandler support to allow for feature detection
for(var _event2 in QualityLevelList.prototype.allowedEvents_){QualityLevelList.prototype['on'+_event2]=null;}var version$5="4.1.0";/**
       * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and
       * event handlers.
       *
       * @param {Player} player Player object.
       * @param {Object} options Plugin options object.
       * @return {QualityLevelList} a list of QualityLevels
       */var initPlugin$1=function initPlugin$1(player,options){var originalPluginFn=player.qualityLevels;var qualityLevelList=new QualityLevelList();var disposeHandler=function disposeHandler(){qualityLevelList.dispose();player.qualityLevels=originalPluginFn;player.off('dispose',disposeHandler);};player.on('dispose',disposeHandler);player.qualityLevels=function(){return qualityLevelList;};player.qualityLevels.VERSION=version$5;return qualityLevelList;};/**
       * A video.js plugin.
       *
       * In the plugin function, the value of `this` is a video.js `Player`
       * instance. You cannot rely on the player being in a "ready" state here,
       * depending on how the plugin is invoked. This may or may not be important
       * to you; if not, remove the wait for "ready"!
       *
       * @param {Object} options Plugin options object
       * @return {QualityLevelList} a list of QualityLevels
       */var qualityLevels=function qualityLevels(options){return initPlugin$1(this,videojs.obj.merge({},options));};// Register the plugin with video.js.
videojs.registerPlugin('qualityLevels',qualityLevels);// Include the version number.
qualityLevels.VERSION=version$5;/*! @name @videojs/http-streaming @version 3.12.2 @license Apache-2.0 */ /**
       * @file resolve-url.js - Handling how URLs are resolved and manipulated
       */var resolveUrl=resolveUrl$1;/**
       * If the xhr request was redirected, return the responseURL, otherwise,
       * return the original url.
       *
       * @api private
       *
       * @param  {string} url - an url being requested
       * @param  {XMLHttpRequest} req - xhr request result
       *
       * @return {string}
       */var resolveManifestRedirect=function resolveManifestRedirect(url,req){// To understand how the responseURL below is set and generated:
// - https://fetch.spec.whatwg.org/#concept-response-url
// - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling
if(req&&req.responseURL&&url!==req.responseURL){return req.responseURL;}return url;};var logger=function logger(source){if(videojs.log.debug){return videojs.log.debug.bind(videojs,'VHS:',"".concat(source," >"));}return function(){};};/**
       * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.
       */ /**
       * Delegates to videojs.obj.merge (Video.js 8) or
       * videojs.mergeOptions (Video.js 7).
       */function merge(){var context=videojs.obj||videojs;var fn=context.merge||context.mergeOptions;for(var _len40=arguments.length,args=new Array(_len40),_key41=0;_key41<_len40;_key41++){args[_key41]=arguments[_key41];}return fn.apply(context,args);}/**
       * Delegates to videojs.time.createTimeRanges (Video.js 8) or
       * videojs.createTimeRanges (Video.js 7).
       */function createTimeRanges(){var context=videojs.time||videojs;var fn=context.createTimeRanges||context.createTimeRanges;for(var _len41=arguments.length,args=new Array(_len41),_key42=0;_key42<_len41;_key42++){args[_key42]=arguments[_key42];}return fn.apply(context,args);}/**
       * Converts provided buffered ranges to a descriptive string
       *
       * @param {TimeRanges} buffered - received buffered time ranges
       *
       * @return {string} - descriptive string
       */function bufferedRangesToString(buffered){if(buffered.length===0){return'Buffered Ranges are empty';}var bufferedRangesStr='Buffered Ranges: \n';for(var _i152=0;_i152<buffered.length;_i152++){var start=buffered.start(_i152);var _end5=buffered.end(_i152);bufferedRangesStr+="".concat(start," --> ").concat(_end5,". Duration (").concat(_end5-start,")\n");}return bufferedRangesStr;}/**
       * ranges
       *
       * Utilities for working with TimeRanges.
       *
       */var TIME_FUDGE_FACTOR=1/30;// Comparisons between time values such as current time and the end of the buffered range
// can be misleading because of precision differences or when the current media has poorly
// aligned audio and video, which can cause values to be slightly off from what you would
// expect. This value is what we consider to be safe to use in such comparisons to account
// for these scenarios.
var SAFE_TIME_DELTA=TIME_FUDGE_FACTOR*3;var filterRanges=function filterRanges(timeRanges,predicate){var results=[];var i;if(timeRanges&&timeRanges.length){// Search for ranges that match the predicate
for(i=0;i<timeRanges.length;i++){if(predicate(timeRanges.start(i),timeRanges.end(i))){results.push([timeRanges.start(i),timeRanges.end(i)]);}}}return createTimeRanges(results);};/**
       * Attempts to find the buffered TimeRange that contains the specified
       * time.
       *
       * @param {TimeRanges} buffered - the TimeRanges object to query
       * @param {number} time  - the time to filter on.
       * @return {TimeRanges} a new TimeRanges object
       */var findRange=function findRange(buffered,time){return filterRanges(buffered,function(start,end){return start-SAFE_TIME_DELTA<=time&&end+SAFE_TIME_DELTA>=time;});};/**
       * Returns the TimeRanges that begin later than the specified time.
       *
       * @param {TimeRanges} timeRanges - the TimeRanges object to query
       * @param {number} time - the time to filter on.
       * @return {TimeRanges} a new TimeRanges object.
       */var findNextRange=function findNextRange(timeRanges,time){return filterRanges(timeRanges,function(start){return start-TIME_FUDGE_FACTOR>=time;});};/**
       * Returns gaps within a list of TimeRanges
       *
       * @param {TimeRanges} buffered - the TimeRanges object
       * @return {TimeRanges} a TimeRanges object of gaps
       */var findGaps=function findGaps(buffered){if(buffered.length<2){return createTimeRanges();}var ranges=[];for(var _i153=1;_i153<buffered.length;_i153++){var start=buffered.end(_i153-1);var _end6=buffered.start(_i153);ranges.push([start,_end6]);}return createTimeRanges(ranges);};/**
       * Calculate the intersection of two TimeRanges
       *
       * @param {TimeRanges} bufferA
       * @param {TimeRanges} bufferB
       * @return {TimeRanges} The interesection of `bufferA` with `bufferB`
       */var bufferIntersection=function bufferIntersection(bufferA,bufferB){var start=null;var end=null;var arity=0;var extents=[];var ranges=[];if(!bufferA||!bufferA.length||!bufferB||!bufferB.length){return createTimeRanges();}// Handle the case where we have both buffers and create an
// intersection of the two
var count=bufferA.length;// A) Gather up all start and end times
while(count--){extents.push({time:bufferA.start(count),type:'start'});extents.push({time:bufferA.end(count),type:'end'});}count=bufferB.length;while(count--){extents.push({time:bufferB.start(count),type:'start'});extents.push({time:bufferB.end(count),type:'end'});}// B) Sort them by time
extents.sort(function(a,b){return a.time-b.time;});// C) Go along one by one incrementing arity for start and decrementing
//    arity for ends
for(count=0;count<extents.length;count++){if(extents[count].type==='start'){arity++;// D) If arity is ever incremented to 2 we are entering an
//    overlapping range
if(arity===2){start=extents[count].time;}}else if(extents[count].type==='end'){arity--;// E) If arity is ever decremented to 1 we leaving an
//    overlapping range
if(arity===1){end=extents[count].time;}}// F) Record overlapping ranges
if(start!==null&&end!==null){ranges.push([start,end]);start=null;end=null;}}return createTimeRanges(ranges);};/**
       * Gets a human readable string for a TimeRange
       *
       * @param {TimeRange} range
       * @return {string} a human readable string
       */var printableRange=function printableRange(range){var strArr=[];if(!range||!range.length){return'';}for(var _i154=0;_i154<range.length;_i154++){strArr.push(range.start(_i154)+' => '+range.end(_i154));}return strArr.join(', ');};/**
       * Calculates the amount of time left in seconds until the player hits the end of the
       * buffer and causes a rebuffer
       *
       * @param {TimeRange} buffered
       *        The state of the buffer
       * @param {Numnber} currentTime
       *        The current time of the player
       * @param {number} playbackRate
       *        The current playback rate of the player. Defaults to 1.
       * @return {number}
       *         Time until the player has to start rebuffering in seconds.
       * @function timeUntilRebuffer
       */var timeUntilRebuffer=function timeUntilRebuffer(buffered,currentTime){var playbackRate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var bufferedEnd=buffered.length?buffered.end(buffered.length-1):0;return(bufferedEnd-currentTime)/playbackRate;};/**
       * Converts a TimeRanges object into an array representation
       *
       * @param {TimeRanges} timeRanges
       * @return {Array}
       */var timeRangesToArray=function timeRangesToArray(timeRanges){var timeRangesList=[];for(var _i155=0;_i155<timeRanges.length;_i155++){timeRangesList.push({start:timeRanges.start(_i155),end:timeRanges.end(_i155)});}return timeRangesList;};/**
       * Determines if two time range objects are different.
       *
       * @param {TimeRange} a
       *        the first time range object to check
       *
       * @param {TimeRange} b
       *        the second time range object to check
       *
       * @return {Boolean}
       *         Whether the time range objects differ
       */var isRangeDifferent=function isRangeDifferent(a,b){// same object
if(a===b){return false;}// one or the other is undefined
if(!a&&b||!b&&a){return true;}// length is different
if(a.length!==b.length){return true;}// see if any start/end pair is different
for(var _i156=0;_i156<a.length;_i156++){if(a.start(_i156)!==b.start(_i156)||a.end(_i156)!==b.end(_i156)){return true;}}// if the length and every pair is the same
// this is the same time range
return false;};var lastBufferedEnd=function lastBufferedEnd(a){if(!a||!a.length||!a.end){return;}return a.end(a.length-1);};/**
       * A utility function to add up the amount of time in a timeRange
       * after a specified startTime.
       * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0
       *     would return 40 as there are 40s seconds after 0 in the timeRange
       *
       * @param {TimeRange} range
       *        The range to check against
       * @param {number} startTime
       *        The time in the time range that you should start counting from
       *
       * @return {number}
       *          The number of seconds in the buffer passed the specified time.
       */var timeAheadOf=function timeAheadOf(range,startTime){var time=0;if(!range||!range.length){return time;}for(var _i157=0;_i157<range.length;_i157++){var start=range.start(_i157);var _end7=range.end(_i157);// startTime is after this range entirely
if(startTime>_end7){continue;}// startTime is within this range
if(startTime>start&&startTime<=_end7){time+=_end7-startTime;continue;}// startTime is before this range.
time+=_end7-start;}return time;};/**
       * @file playlist.js
       *
       * Playlist related utilities.
       */ /**
       * Get the duration of a segment, with special cases for
       * llhls segments that do not have a duration yet.
       *
       * @param {Object} playlist
       *        the playlist that the segment belongs to.
       * @param {Object} segment
       *        the segment to get a duration for.
       *
       * @return {number}
       *          the segment duration
       */var segmentDurationWithParts=function segmentDurationWithParts(playlist,segment){// if this isn't a preload segment
// then we will have a segment duration that is accurate.
if(!segment.preload){return segment.duration;}// otherwise we have to add up parts and preload hints
// to get an up to date duration.
var result=0;(segment.parts||[]).forEach(function(p){result+=p.duration;});// for preload hints we have to use partTargetDuration
// as they won't even have a duration yet.
(segment.preloadHints||[]).forEach(function(p){if(p.type==='PART'){result+=playlist.partTargetDuration;}});return result;};/**
       * A function to get a combined list of parts and segments with durations
       * and indexes.
       *
       * @param {Playlist} playlist the playlist to get the list for.
       *
       * @return {Array} The part/segment list.
       */var getPartsAndSegments=function getPartsAndSegments(playlist){return(playlist.segments||[]).reduce(function(acc,segment,si){if(segment.parts){segment.parts.forEach(function(part,pi){acc.push({duration:part.duration,segmentIndex:si,partIndex:pi,part:part,segment:segment});});}else{acc.push({duration:segment.duration,segmentIndex:si,partIndex:null,segment:segment,part:null});}return acc;},[]);};var getLastParts=function getLastParts(media){var lastSegment=media.segments&&media.segments.length&&media.segments[media.segments.length-1];return lastSegment&&lastSegment.parts||[];};var getKnownPartCount=function getKnownPartCount(_ref162){var preloadSegment=_ref162.preloadSegment;if(!preloadSegment){return;}var parts=preloadSegment.parts,preloadHints=preloadSegment.preloadHints;var partCount=(preloadHints||[]).reduce(function(count,hint){return count+(hint.type==='PART'?1:0);},0);partCount+=parts&&parts.length?parts.length:0;return partCount;};/**
       * Get the number of seconds to delay from the end of a
       * live playlist.
       *
       * @param {Playlist} main the main playlist
       * @param {Playlist} media the media playlist
       * @return {number} the hold back in seconds.
       */var liveEdgeDelay=function liveEdgeDelay(main,media){if(media.endList){return 0;}// dash suggestedPresentationDelay trumps everything
if(main&&main.suggestedPresentationDelay){return main.suggestedPresentationDelay;}var hasParts=getLastParts(media).length>0;// look for "part" delays from ll-hls first
if(hasParts&&media.serverControl&&media.serverControl.partHoldBack){return media.serverControl.partHoldBack;}else if(hasParts&&media.partTargetDuration){return media.partTargetDuration*3;// finally look for full segment delays
}else if(media.serverControl&&media.serverControl.holdBack){return media.serverControl.holdBack;}else if(media.targetDuration){return media.targetDuration*3;}return 0;};/**
       * walk backward until we find a duration we can use
       * or return a failure
       *
       * @param {Playlist} playlist the playlist to walk through
       * @param {Number} endSequence the mediaSequence to stop walking on
       */var backwardDuration=function backwardDuration(playlist,endSequence){var result=0;var i=endSequence-playlist.mediaSequence;// if a start time is available for segment immediately following
// the interval, use it
var segment=playlist.segments[i];// Walk backward until we find the latest segment with timeline
// information that is earlier than endSequence
if(segment){if(typeof segment.start!=='undefined'){return{result:segment.start,precise:true};}if(typeof segment.end!=='undefined'){return{result:segment.end-segment.duration,precise:true};}}while(i--){segment=playlist.segments[i];if(typeof segment.end!=='undefined'){return{result:result+segment.end,precise:true};}result+=segmentDurationWithParts(playlist,segment);if(typeof segment.start!=='undefined'){return{result:result+segment.start,precise:true};}}return{result:result,precise:false};};/**
       * walk forward until we find a duration we can use
       * or return a failure
       *
       * @param {Playlist} playlist the playlist to walk through
       * @param {number} endSequence the mediaSequence to stop walking on
       */var forwardDuration=function forwardDuration(playlist,endSequence){var result=0;var segment;var i=endSequence-playlist.mediaSequence;// Walk forward until we find the earliest segment with timeline
// information
for(;i<playlist.segments.length;i++){segment=playlist.segments[i];if(typeof segment.start!=='undefined'){return{result:segment.start-result,precise:true};}result+=segmentDurationWithParts(playlist,segment);if(typeof segment.end!=='undefined'){return{result:segment.end-result,precise:true};}}// indicate we didn't find a useful duration estimate
return{result:-1,precise:false};};/**
        * Calculate the media duration from the segments associated with a
        * playlist. The duration of a subinterval of the available segments
        * may be calculated by specifying an end index.
        *
        * @param {Object} playlist a media playlist object
        * @param {number=} endSequence an exclusive upper boundary
        * for the playlist.  Defaults to playlist length.
        * @param {number} expired the amount of time that has dropped
        * off the front of the playlist in a live scenario
        * @return {number} the duration between the first available segment
        * and end index.
        */var intervalDuration=function intervalDuration(playlist,endSequence,expired){if(typeof endSequence==='undefined'){endSequence=playlist.mediaSequence+playlist.segments.length;}if(endSequence<playlist.mediaSequence){return 0;}// do a backward walk to estimate the duration
var backward=backwardDuration(playlist,endSequence);if(backward.precise){// if we were able to base our duration estimate on timing
// information provided directly from the Media Source, return
// it
return backward.result;}// walk forward to see if a precise duration estimate can be made
// that way
var forward=forwardDuration(playlist,endSequence);if(forward.precise){// we found a segment that has been buffered and so it's
// position is known precisely
return forward.result;}// return the less-precise, playlist-based duration estimate
return backward.result+expired;};/**
        * Calculates the duration of a playlist. If a start and end index
        * are specified, the duration will be for the subset of the media
        * timeline between those two indices. The total duration for live
        * playlists is always Infinity.
        *
        * @param {Object} playlist a media playlist object
        * @param {number=} endSequence an exclusive upper
        * boundary for the playlist. Defaults to the playlist media
        * sequence number plus its length.
        * @param {number=} expired the amount of time that has
        * dropped off the front of the playlist in a live scenario
        * @return {number} the duration between the start index and end
        * index.
        */var duration=function duration(playlist,endSequence,expired){if(!playlist){return 0;}if(typeof expired!=='number'){expired=0;}// if a slice of the total duration is not requested, use
// playlist-level duration indicators when they're present
if(typeof endSequence==='undefined'){// if present, use the duration specified in the playlist
if(playlist.totalDuration){return playlist.totalDuration;}// duration should be Infinity for live playlists
if(!playlist.endList){return window_1.Infinity;}}// calculate the total duration based on the segment durations
return intervalDuration(playlist,endSequence,expired);};/**
        * Calculate the time between two indexes in the current playlist
        * neight the start- nor the end-index need to be within the current
        * playlist in which case, the targetDuration of the playlist is used
        * to approximate the durations of the segments
        *
        * @param {Array} options.durationList list to iterate over for durations.
        * @param {number} options.defaultDuration duration to use for elements before or after the durationList
        * @param {number} options.startIndex partsAndSegments index to start
        * @param {number} options.endIndex partsAndSegments index to end.
        * @return {number} the number of seconds between startIndex and endIndex
        */var sumDurations=function sumDurations(_ref163){var defaultDuration=_ref163.defaultDuration,durationList=_ref163.durationList,startIndex=_ref163.startIndex,endIndex=_ref163.endIndex;var durations=0;if(startIndex>endIndex){var _ref164=[endIndex,startIndex];startIndex=_ref164[0];endIndex=_ref164[1];}if(startIndex<0){for(var _i158=startIndex;_i158<Math.min(0,endIndex);_i158++){durations+=defaultDuration;}startIndex=0;}for(var _i159=startIndex;_i159<endIndex;_i159++){durations+=durationList[_i159].duration;}return durations;};/**
       * Calculates the playlist end time
       *
       * @param {Object} playlist a media playlist object
       * @param {number=} expired the amount of time that has
       *                  dropped off the front of the playlist in a live scenario
       * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the
       *                        playlist end calculation should consider the safe live end
       *                        (truncate the playlist end by three segments). This is normally
       *                        used for calculating the end of the playlist's seekable range.
       *                        This takes into account the value of liveEdgePadding.
       *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.
       * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.
       *                 If this is provided, it is used in the safe live end calculation.
       *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.
       *                 Corresponds to suggestedPresentationDelay in DASH manifests.
       * @return {number} the end time of playlist
       * @function playlistEnd
       */var playlistEnd=function playlistEnd(playlist,expired,useSafeLiveEnd,liveEdgePadding){if(!playlist||!playlist.segments){return null;}if(playlist.endList){return duration(playlist);}if(expired===null){return null;}expired=expired||0;var lastSegmentEndTime=intervalDuration(playlist,playlist.mediaSequence+playlist.segments.length,expired);if(useSafeLiveEnd){liveEdgePadding=typeof liveEdgePadding==='number'?liveEdgePadding:liveEdgeDelay(null,playlist);lastSegmentEndTime-=liveEdgePadding;}// don't return a time less than zero
return Math.max(0,lastSegmentEndTime);};/**
        * Calculates the interval of time that is currently seekable in a
        * playlist. The returned time ranges are relative to the earliest
        * moment in the specified playlist that is still available. A full
        * seekable implementation for live streams would need to offset
        * these values by the duration of content that has expired from the
        * stream.
        *
        * @param {Object} playlist a media playlist object
        * dropped off the front of the playlist in a live scenario
        * @param {number=} expired the amount of time that has
        * dropped off the front of the playlist in a live scenario
        * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.
        *        Corresponds to suggestedPresentationDelay in DASH manifests.
        * @return {TimeRanges} the periods of time that are valid targets
        * for seeking
        */var seekable=function seekable(playlist,expired,liveEdgePadding){var useSafeLiveEnd=true;var seekableStart=expired||0;var seekableEnd=playlistEnd(playlist,expired,useSafeLiveEnd,liveEdgePadding);if(seekableEnd===null){return createTimeRanges();}// Clamp seekable end since it can not be less than the seekable start
if(seekableEnd<seekableStart){seekableEnd=seekableStart;}return createTimeRanges(seekableStart,seekableEnd);};/**
       * Determine the index and estimated starting time of the segment that
       * contains a specified playback position in a media playlist.
       *
       * @param {Object} options.playlist the media playlist to query
       * @param {number} options.currentTime The number of seconds since the earliest
       * possible position to determine the containing segment for
       * @param {number} options.startTime the time when the segment/part starts
       * @param {number} options.startingSegmentIndex the segment index to start looking at.
       * @param {number?} [options.startingPartIndex] the part index to look at within the segment.
       *
       * @return {Object} an object with partIndex, segmentIndex, and startTime.
       */var getMediaInfoForTime=function getMediaInfoForTime(_ref165){var playlist=_ref165.playlist,currentTime=_ref165.currentTime,startingSegmentIndex=_ref165.startingSegmentIndex,startingPartIndex=_ref165.startingPartIndex,startTime=_ref165.startTime,exactManifestTimings=_ref165.exactManifestTimings;var time=currentTime-startTime;var partsAndSegments=getPartsAndSegments(playlist);var startIndex=0;for(var _i160=0;_i160<partsAndSegments.length;_i160++){var partAndSegment=partsAndSegments[_i160];if(startingSegmentIndex!==partAndSegment.segmentIndex){continue;}// skip this if part index does not match.
if(typeof startingPartIndex==='number'&&typeof partAndSegment.partIndex==='number'&&startingPartIndex!==partAndSegment.partIndex){continue;}startIndex=_i160;break;}if(time<0){// Walk backward from startIndex in the playlist, adding durations
// until we find a segment that contains `time` and return it
if(startIndex>0){for(var _i161=startIndex-1;_i161>=0;_i161--){var _partAndSegment=partsAndSegments[_i161];time+=_partAndSegment.duration;if(exactManifestTimings){if(time<0){continue;}}else if(time+TIME_FUDGE_FACTOR<=0){continue;}return{partIndex:_partAndSegment.partIndex,segmentIndex:_partAndSegment.segmentIndex,startTime:startTime-sumDurations({defaultDuration:playlist.targetDuration,durationList:partsAndSegments,startIndex:startIndex,endIndex:_i161})};}}// We were unable to find a good segment within the playlist
// so select the first segment
return{partIndex:partsAndSegments[0]&&partsAndSegments[0].partIndex||null,segmentIndex:partsAndSegments[0]&&partsAndSegments[0].segmentIndex||0,startTime:currentTime};}// When startIndex is negative, we first walk forward to first segment
// adding target durations. If we "run out of time" before getting to
// the first segment, return the first segment
if(startIndex<0){for(var _i162=startIndex;_i162<0;_i162++){time-=playlist.targetDuration;if(time<0){return{partIndex:partsAndSegments[0]&&partsAndSegments[0].partIndex||null,segmentIndex:partsAndSegments[0]&&partsAndSegments[0].segmentIndex||0,startTime:currentTime};}}startIndex=0;}// Walk forward from startIndex in the playlist, subtracting durations
// until we find a segment that contains `time` and return it
for(var _i163=startIndex;_i163<partsAndSegments.length;_i163++){var _partAndSegment2=partsAndSegments[_i163];time-=_partAndSegment2.duration;var canUseFudgeFactor=_partAndSegment2.duration>TIME_FUDGE_FACTOR;var isExactlyAtTheEnd=time===0;var isExtremelyCloseToTheEnd=canUseFudgeFactor&&time+TIME_FUDGE_FACTOR>=0;if(isExactlyAtTheEnd||isExtremelyCloseToTheEnd){// 1) We are exactly at the end of the current segment.
// 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).
//    We may encounter this situation when
//    we don't have exact match between segment duration info in the manifest and the actual duration of the segment
//    For example:
//    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,
//    but we the actual buffered is 29.99999
//
// In both cases:
// if we passed current time -> it means that we already played current segment
// if we passed buffered.end -> it means that this segment is already loaded and buffered
// we should select the next segment if we have one:
if(_i163!==partsAndSegments.length-1){continue;}}if(exactManifestTimings){if(time>0){continue;}}else if(time-TIME_FUDGE_FACTOR>=0){continue;}return{partIndex:_partAndSegment2.partIndex,segmentIndex:_partAndSegment2.segmentIndex,startTime:startTime+sumDurations({defaultDuration:playlist.targetDuration,durationList:partsAndSegments,startIndex:startIndex,endIndex:_i163})};}// We are out of possible candidates so load the last one...
return{segmentIndex:partsAndSegments[partsAndSegments.length-1].segmentIndex,partIndex:partsAndSegments[partsAndSegments.length-1].partIndex,startTime:currentTime};};/**
       * Check whether the playlist is excluded or not.
       *
       * @param {Object} playlist the media playlist object
       * @return {boolean} whether the playlist is excluded or not
       * @function isExcluded
       */var isExcluded=function isExcluded(playlist){return playlist.excludeUntil&&playlist.excludeUntil>Date.now();};/**
       * Check whether the playlist is compatible with current playback configuration or has
       * been excluded permanently for being incompatible.
       *
       * @param {Object} playlist the media playlist object
       * @return {boolean} whether the playlist is incompatible or not
       * @function isIncompatible
       */var isIncompatible=function isIncompatible(playlist){return playlist.excludeUntil&&playlist.excludeUntil===Infinity;};/**
       * Check whether the playlist is enabled or not.
       *
       * @param {Object} playlist the media playlist object
       * @return {boolean} whether the playlist is enabled or not
       * @function isEnabled
       */var isEnabled=function isEnabled(playlist){var excluded=isExcluded(playlist);return!playlist.disabled&&!excluded;};/**
       * Check whether the playlist has been manually disabled through the representations api.
       *
       * @param {Object} playlist the media playlist object
       * @return {boolean} whether the playlist is disabled manually or not
       * @function isDisabled
       */var isDisabled=function isDisabled(playlist){return playlist.disabled;};/**
       * Returns whether the current playlist is an AES encrypted HLS stream
       *
       * @return {boolean} true if it's an AES encrypted HLS stream
       */var isAes=function isAes(media){for(var _i164=0;_i164<media.segments.length;_i164++){if(media.segments[_i164].key){return true;}}return false;};/**
       * Checks if the playlist has a value for the specified attribute
       *
       * @param {string} attr
       *        Attribute to check for
       * @param {Object} playlist
       *        The media playlist object
       * @return {boolean}
       *         Whether the playlist contains a value for the attribute or not
       * @function hasAttribute
       */var hasAttribute=function hasAttribute(attr,playlist){return playlist.attributes&&playlist.attributes[attr];};/**
       * Estimates the time required to complete a segment download from the specified playlist
       *
       * @param {number} segmentDuration
       *        Duration of requested segment
       * @param {number} bandwidth
       *        Current measured bandwidth of the player
       * @param {Object} playlist
       *        The media playlist object
       * @param {number=} bytesReceived
       *        Number of bytes already received for the request. Defaults to 0
       * @return {number|NaN}
       *         The estimated time to request the segment. NaN if bandwidth information for
       *         the given playlist is unavailable
       * @function estimateSegmentRequestTime
       */var estimateSegmentRequestTime=function estimateSegmentRequestTime(segmentDuration,bandwidth,playlist){var bytesReceived=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(!hasAttribute('BANDWIDTH',playlist)){return NaN;}var size=segmentDuration*playlist.attributes.BANDWIDTH;return(size-bytesReceived*8)/bandwidth;};/*
       * Returns whether the current playlist is the lowest rendition
       *
       * @return {Boolean} true if on lowest rendition
       */var isLowestEnabledRendition=function isLowestEnabledRendition(main,media){if(main.playlists.length===1){return true;}var currentBandwidth=media.attributes.BANDWIDTH||Number.MAX_VALUE;return main.playlists.filter(function(playlist){if(!isEnabled(playlist)){return false;}return(playlist.attributes.BANDWIDTH||0)<currentBandwidth;}).length===0;};var playlistMatch=function playlistMatch(a,b){// both playlits are null
// or only one playlist is non-null
// no match
if(!a&&!b||!a&&b||a&&!b){return false;}// playlist objects are the same, match
if(a===b){return true;}// first try to use id as it should be the most
// accurate
if(a.id&&b.id&&a.id===b.id){return true;}// next try to use reslovedUri as it should be the
// second most accurate.
if(a.resolvedUri&&b.resolvedUri&&a.resolvedUri===b.resolvedUri){return true;}// finally try to use uri as it should be accurate
// but might miss a few cases for relative uris
if(a.uri&&b.uri&&a.uri===b.uri){return true;}return false;};var someAudioVariant=function someAudioVariant(main,callback){var AUDIO=main&&main.mediaGroups&&main.mediaGroups.AUDIO||{};var found=false;for(var groupName in AUDIO){for(var label in AUDIO[groupName]){found=callback(AUDIO[groupName][label]);if(found){break;}}if(found){break;}}return!!found;};var isAudioOnly=function isAudioOnly(main){// we are audio only if we have no main playlists but do
// have media group playlists.
if(!main||!main.playlists||!main.playlists.length){// without audio variants or playlists this
// is not an audio only main.
var found=someAudioVariant(main,function(variant){return variant.playlists&&variant.playlists.length||variant.uri;});return found;}// if every playlist has only an audio codec it is audio only
var _loop4=function _loop4(_i165){var playlist=main.playlists[_i165];var CODECS=playlist.attributes&&playlist.attributes.CODECS;// all codecs are audio, this is an audio playlist.
if(CODECS&&CODECS.split(',').every(function(c){return isAudioCodec(c);})){return"continue";}// playlist is in an audio group it is audio only
var found=someAudioVariant(main,function(variant){return playlistMatch(playlist,variant);});if(found){return"continue";}// if we make it here this playlist isn't audio and we
// are not audio only
return{v:false};};for(var _i165=0;_i165<main.playlists.length;_i165++){var _ret=_loop4(_i165);if(_ret==="continue")continue;if(_typeof(_ret)==="object")return _ret.v;}// if we make it past every playlist without returning, then
// this is an audio only playlist.
return true;};// exports
var Playlist={liveEdgeDelay:liveEdgeDelay,duration:duration,seekable:seekable,getMediaInfoForTime:getMediaInfoForTime,isEnabled:isEnabled,isDisabled:isDisabled,isExcluded:isExcluded,isIncompatible:isIncompatible,playlistEnd:playlistEnd,isAes:isAes,hasAttribute:hasAttribute,estimateSegmentRequestTime:estimateSegmentRequestTime,isLowestEnabledRendition:isLowestEnabledRendition,isAudioOnly:isAudioOnly,playlistMatch:playlistMatch,segmentDurationWithParts:segmentDurationWithParts};var log=videojs.log;var createPlaylistID=function createPlaylistID(index,uri){return"".concat(index,"-").concat(uri);};// default function for creating a group id
var groupID=function groupID(type,group,label){return"placeholder-uri-".concat(type,"-").concat(group,"-").concat(label);};/**
       * Parses a given m3u8 playlist
       *
       * @param {Function} [onwarn]
       *        a function to call when the parser triggers a warning event.
       * @param {Function} [oninfo]
       *        a function to call when the parser triggers an info event.
       * @param {string} manifestString
       *        The downloaded manifest string
       * @param {Object[]} [customTagParsers]
       *        An array of custom tag parsers for the m3u8-parser instance
       * @param {Object[]} [customTagMappers]
       *        An array of custom tag mappers for the m3u8-parser instance
       * @param {boolean} [llhls]
       *        Whether to keep ll-hls features in the manifest after parsing.
       * @return {Object}
       *         The manifest object
       */var parseManifest=function parseManifest(_ref166){var onwarn=_ref166.onwarn,oninfo=_ref166.oninfo,manifestString=_ref166.manifestString,_ref166$customTagPars=_ref166.customTagParsers,customTagParsers=_ref166$customTagPars===void 0?[]:_ref166$customTagPars,_ref166$customTagMapp=_ref166.customTagMappers,customTagMappers=_ref166$customTagMapp===void 0?[]:_ref166$customTagMapp,llhls=_ref166.llhls;var parser=new Parser();if(onwarn){parser.on('warn',onwarn);}if(oninfo){parser.on('info',oninfo);}customTagParsers.forEach(function(customParser){return parser.addParser(customParser);});customTagMappers.forEach(function(mapper){return parser.addTagMapper(mapper);});parser.push(manifestString);parser.end();var manifest=parser.manifest;// remove llhls features from the parsed manifest
// if we don't want llhls support.
if(!llhls){['preloadSegment','skip','serverControl','renditionReports','partInf','partTargetDuration'].forEach(function(k){if(manifest.hasOwnProperty(k)){delete manifest[k];}});if(manifest.segments){manifest.segments.forEach(function(segment){['parts','preloadHints'].forEach(function(k){if(segment.hasOwnProperty(k)){delete segment[k];}});});}}if(!manifest.targetDuration){var targetDuration=10;if(manifest.segments&&manifest.segments.length){targetDuration=manifest.segments.reduce(function(acc,s){return Math.max(acc,s.duration);},0);}if(onwarn){onwarn({message:"manifest has no targetDuration defaulting to ".concat(targetDuration)});}manifest.targetDuration=targetDuration;}var parts=getLastParts(manifest);if(parts.length&&!manifest.partTargetDuration){var partTargetDuration=parts.reduce(function(acc,p){return Math.max(acc,p.duration);},0);if(onwarn){onwarn({message:"manifest has no partTargetDuration defaulting to ".concat(partTargetDuration)});log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');}manifest.partTargetDuration=partTargetDuration;}return manifest;};/**
       * Loops through all supported media groups in main and calls the provided
       * callback for each group
       *
       * @param {Object} main
       *        The parsed main manifest object
       * @param {Function} callback
       *        Callback to call for each media group
       */var forEachMediaGroup=function forEachMediaGroup(main,callback){if(!main.mediaGroups){return;}['AUDIO','SUBTITLES'].forEach(function(mediaType){if(!main.mediaGroups[mediaType]){return;}for(var groupKey in main.mediaGroups[mediaType]){for(var labelKey in main.mediaGroups[mediaType][groupKey]){var mediaProperties=main.mediaGroups[mediaType][groupKey][labelKey];callback(mediaProperties,mediaType,groupKey,labelKey);}}});};/**
       * Adds properties and attributes to the playlist to keep consistent functionality for
       * playlists throughout VHS.
       *
       * @param {Object} config
       *        Arguments object
       * @param {Object} config.playlist
       *        The media playlist
       * @param {string} [config.uri]
       *        The uri to the media playlist (if media playlist is not from within a main
       *        playlist)
       * @param {string} id
       *        ID to use for the playlist
       */var setupMediaPlaylist=function setupMediaPlaylist(_ref167){var playlist=_ref167.playlist,uri=_ref167.uri,id=_ref167.id;playlist.id=id;playlist.playlistErrors_=0;if(uri){// For media playlists, m3u8-parser does not have access to a URI, as HLS media
// playlists do not contain their own source URI, but one is needed for consistency in
// VHS.
playlist.uri=uri;}// For HLS main playlists, even though certain attributes MUST be defined, the
// stream may still be played without them.
// For HLS media playlists, m3u8-parser does not attach an attributes object to the
// manifest.
//
// To avoid undefined reference errors through the project, and make the code easier
// to write/read, add an empty attributes object for these cases.
playlist.attributes=playlist.attributes||{};};/**
       * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where
       * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to
       * playlist references to the playlists array.
       *
       * @param {Object} main
       *        The main playlist
       */var setupMediaPlaylists=function setupMediaPlaylists(main){var i=main.playlists.length;while(i--){var playlist=main.playlists[i];setupMediaPlaylist({playlist:playlist,id:createPlaylistID(i,playlist.uri)});playlist.resolvedUri=resolveUrl(main.uri,playlist.uri);main.playlists[playlist.id]=playlist;// URI reference added for backwards compatibility
main.playlists[playlist.uri]=playlist;// Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,
// the stream can be played without it. Although an attributes property may have been
// added to the playlist to prevent undefined references, issue a warning to fix the
// manifest.
if(!playlist.attributes.BANDWIDTH){log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');}}};/**
       * Adds resolvedUri properties to each media group.
       *
       * @param {Object} main
       *        The main playlist
       */var resolveMediaGroupUris=function resolveMediaGroupUris(main){forEachMediaGroup(main,function(properties){if(properties.uri){properties.resolvedUri=resolveUrl(main.uri,properties.uri);}});};/**
       * Creates a main playlist wrapper to insert a sole media playlist into.
       *
       * @param {Object} media
       *        Media playlist
       * @param {string} uri
       *        The media URI
       *
       * @return {Object}
       *         main playlist
       */var mainForMedia=function mainForMedia(media,uri){var id=createPlaylistID(0,uri);var main={mediaGroups:{'AUDIO':{},'VIDEO':{},'CLOSED-CAPTIONS':{},'SUBTITLES':{}},uri:window_1.location.href,resolvedUri:window_1.location.href,playlists:[{uri:uri,id:id,resolvedUri:uri,// m3u8-parser does not attach an attributes property to media playlists so make
// sure that the property is attached to avoid undefined reference errors
attributes:{}}]};// set up ID reference
main.playlists[id]=main.playlists[0];// URI reference added for backwards compatibility
main.playlists[uri]=main.playlists[0];return main;};/**
       * Does an in-place update of the main manifest to add updated playlist URI references
       * as well as other properties needed by VHS that aren't included by the parser.
       *
       * @param {Object} main
       *        main manifest object
       * @param {string} uri
       *        The source URI
       * @param {function} createGroupID
       *        A function to determine how to create the groupID for mediaGroups
       */var addPropertiesToMain=function addPropertiesToMain(main,uri){var createGroupID=arguments.length>2&&arguments[2]!==undefined?arguments[2]:groupID;main.uri=uri;for(var _i166=0;_i166<main.playlists.length;_i166++){if(!main.playlists[_i166].uri){// Set up phony URIs for the playlists since playlists are referenced by their URIs
// throughout VHS, but some formats (e.g., DASH) don't have external URIs
// TODO: consider adding dummy URIs in mpd-parser
var phonyUri="placeholder-uri-".concat(_i166);main.playlists[_i166].uri=phonyUri;}}var audioOnlyMain=isAudioOnly(main);forEachMediaGroup(main,function(properties,mediaType,groupKey,labelKey){// add a playlist array under properties
if(!properties.playlists||!properties.playlists.length){// If the manifest is audio only and this media group does not have a uri, check
// if the media group is located in the main list of playlists. If it is, don't add
// placeholder properties as it shouldn't be considered an alternate audio track.
if(audioOnlyMain&&mediaType==='AUDIO'&&!properties.uri){for(var _i167=0;_i167<main.playlists.length;_i167++){var _p=main.playlists[_i167];if(_p.attributes&&_p.attributes.AUDIO&&_p.attributes.AUDIO===groupKey){return;}}}properties.playlists=[_extends$2({},properties)];}properties.playlists.forEach(function(p,i){var groupId=createGroupID(mediaType,groupKey,labelKey,p);var id=createPlaylistID(i,groupId);if(p.uri){p.resolvedUri=p.resolvedUri||resolveUrl(main.uri,p.uri);}else{// DEPRECATED, this has been added to prevent a breaking change.
// previously we only ever had a single media group playlist, so
// we mark the first playlist uri without prepending the index as we used to
// ideally we would do all of the playlists the same way.
p.uri=i===0?groupId:id;// don't resolve a placeholder uri to an absolute url, just use
// the placeholder again
p.resolvedUri=p.uri;}p.id=p.id||id;// add an empty attributes object, all playlists are
// expected to have this.
p.attributes=p.attributes||{};// setup ID and URI references (URI for backwards compatibility)
main.playlists[p.id]=p;main.playlists[p.uri]=p;});});setupMediaPlaylists(main);resolveMediaGroupUris(main);};var DateRangesStorage=/*#__PURE__*/function(){function DateRangesStorage(){_classCallCheck(this,DateRangesStorage);this.offset_=null;this.pendingDateRanges_=new Map();this.processedDateRanges_=new Map();}_createClass(DateRangesStorage,[{key:"setOffset",value:function setOffset(){var segments=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];// already set
if(this.offset_!==null){return;}// no segment to process
if(!segments.length){return;}var _segments=_slicedToArray(segments,1),firstSegment=_segments[0];// no program date time
if(firstSegment.programDateTime===undefined){return;}// Set offset as ProgramDateTime for the very first segment of the very first playlist load:
this.offset_=firstSegment.programDateTime/1000;}},{key:"setPendingDateRanges",value:function setPendingDateRanges(){var dateRanges=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];if(!dateRanges.length){return;}var _dateRanges=_slicedToArray(dateRanges,1),dateRange=_dateRanges[0];var startTime=dateRange.startDate.getTime();this.trimProcessedDateRanges_(startTime);this.pendingDateRanges_=dateRanges.reduce(function(map,pendingDateRange){map.set(pendingDateRange.id,pendingDateRange);return map;},new Map());}},{key:"processDateRange",value:function processDateRange(dateRange){this.pendingDateRanges_.delete(dateRange.id);this.processedDateRanges_.set(dateRange.id,dateRange);}},{key:"getDateRangesToProcess",value:function getDateRangesToProcess(){var _this178=this;if(this.offset_===null){return[];}var dateRangeClasses={};var dateRangesToProcess=[];this.pendingDateRanges_.forEach(function(dateRange,id){if(_this178.processedDateRanges_.has(id)){return;}dateRange.startTime=dateRange.startDate.getTime()/1000-_this178.offset_;dateRange.processDateRange=function(){return _this178.processDateRange(dateRange);};dateRangesToProcess.push(dateRange);if(!dateRange.class){return;}if(dateRangeClasses[dateRange.class]){var _length6=dateRangeClasses[dateRange.class].push(dateRange);dateRange.classListIndex=_length6-1;}else{dateRangeClasses[dateRange.class]=[dateRange];dateRange.classListIndex=0;}});for(var _i168=0,_dateRangesToProcess=dateRangesToProcess;_i168<_dateRangesToProcess.length;_i168++){var dateRange=_dateRangesToProcess[_i168];var classList=dateRangeClasses[dateRange.class]||[];if(dateRange.endDate){dateRange.endTime=dateRange.endDate.getTime()/1000-this.offset_;}else if(dateRange.endOnNext&&classList[dateRange.classListIndex+1]){dateRange.endTime=classList[dateRange.classListIndex+1].startTime;}else if(dateRange.duration){dateRange.endTime=dateRange.startTime+dateRange.duration;}else if(dateRange.plannedDuration){dateRange.endTime=dateRange.startTime+dateRange.plannedDuration;}else{dateRange.endTime=dateRange.startTime;}}return dateRangesToProcess;}},{key:"trimProcessedDateRanges_",value:function trimProcessedDateRanges_(startTime){var _this179=this;var copy=new Map(this.processedDateRanges_);copy.forEach(function(dateRange,id){if(dateRange.startDate.getTime()<startTime){_this179.processedDateRanges_.delete(id);}});}}]);return DateRangesStorage;}();var EventTarget$1=videojs.EventTarget;var addLLHLSQueryDirectives=function addLLHLSQueryDirectives(uri,media){if(media.endList||!media.serverControl){return uri;}var parameters={};if(media.serverControl.canBlockReload){var preloadSegment=media.preloadSegment;// next msn is a zero based value, length is not.
var nextMSN=media.mediaSequence+media.segments.length;// If preload segment has parts then it is likely
// that we are going to request a part of that preload segment.
// the logic below is used to determine that.
if(preloadSegment){var parts=preloadSegment.parts||[];// _HLS_part is a zero based index
var nextPart=getKnownPartCount(media)-1;// if nextPart is > -1 and not equal to just the
// length of parts, then we know we had part preload hints
// and we need to add the _HLS_part= query
if(nextPart>-1&&nextPart!==parts.length-1){// add existing parts to our preload hints
// eslint-disable-next-line
parameters._HLS_part=nextPart;}// this if statement makes sure that we request the msn
// of the preload segment if:
// 1. the preload segment had parts (and was not yet a full segment)
//    but was added to our segments array
// 2. the preload segment had preload hints for parts that are not in
//    the manifest yet.
// in all other cases we want the segment after the preload segment
// which will be given by using media.segments.length because it is 1 based
// rather than 0 based.
if(nextPart>-1||parts.length){nextMSN--;}}// add _HLS_msn= in front of any _HLS_part query
// eslint-disable-next-line
parameters._HLS_msn=nextMSN;}if(media.serverControl&&media.serverControl.canSkipUntil){// add _HLS_skip= infront of all other queries.
// eslint-disable-next-line
parameters._HLS_skip=media.serverControl.canSkipDateranges?'v2':'YES';}if(Object.keys(parameters).length){var parsedUri=new window_1.URL(uri);['_HLS_skip','_HLS_msn','_HLS_part'].forEach(function(name){if(!parameters.hasOwnProperty(name)){return;}parsedUri.searchParams.set(name,parameters[name]);});uri=parsedUri.toString();}return uri;};/**
       * Returns a new segment object with properties and
       * the parts array merged.
       *
       * @param {Object} a the old segment
       * @param {Object} b the new segment
       *
       * @return {Object} the merged segment
       */var updateSegment=function updateSegment(a,b){if(!a){return b;}var result=merge(a,b);// if only the old segment has preload hints
// and the new one does not, remove preload hints.
if(a.preloadHints&&!b.preloadHints){delete result.preloadHints;}// if only the old segment has parts
// then the parts are no longer valid
if(a.parts&&!b.parts){delete result.parts;// if both segments have parts
// copy part propeties from the old segment
// to the new one.
}else if(a.parts&&b.parts){for(var _i169=0;_i169<b.parts.length;_i169++){if(a.parts&&a.parts[_i169]){result.parts[_i169]=merge(a.parts[_i169],b.parts[_i169]);}}}// set skipped to false for segments that have
// have had information merged from the old segment.
if(!a.skipped&&b.skipped){result.skipped=false;}// set preload to false for segments that have
// had information added in the new segment.
if(a.preload&&!b.preload){result.preload=false;}return result;};/**
       * Returns a new array of segments that is the result of merging
       * properties from an older list of segments onto an updated
       * list. No properties on the updated playlist will be ovewritten.
       *
       * @param {Array} original the outdated list of segments
       * @param {Array} update the updated list of segments
       * @param {number=} offset the index of the first update
       * segment in the original segment list. For non-live playlists,
       * this should always be zero and does not need to be
       * specified. For live playlists, it should be the difference
       * between the media sequence numbers in the original and updated
       * playlists.
       * @return {Array} a list of merged segment objects
       */var updateSegments=function updateSegments(original,update,offset){var oldSegments=original.slice();var newSegments=update.slice();offset=offset||0;var result=[];var currentMap;for(var newIndex=0;newIndex<newSegments.length;newIndex++){var oldSegment=oldSegments[newIndex+offset];var newSegment=newSegments[newIndex];if(oldSegment){currentMap=oldSegment.map||currentMap;result.push(updateSegment(oldSegment,newSegment));}else{// carry over map to new segment if it is missing
if(currentMap&&!newSegment.map){newSegment.map=currentMap;}result.push(newSegment);}}return result;};var resolveSegmentUris=function resolveSegmentUris(segment,baseUri){// preloadSegment will not have a uri at all
// as the segment isn't actually in the manifest yet, only parts
if(!segment.resolvedUri&&segment.uri){segment.resolvedUri=resolveUrl(baseUri,segment.uri);}if(segment.key&&!segment.key.resolvedUri){segment.key.resolvedUri=resolveUrl(baseUri,segment.key.uri);}if(segment.map&&!segment.map.resolvedUri){segment.map.resolvedUri=resolveUrl(baseUri,segment.map.uri);}if(segment.map&&segment.map.key&&!segment.map.key.resolvedUri){segment.map.key.resolvedUri=resolveUrl(baseUri,segment.map.key.uri);}if(segment.parts&&segment.parts.length){segment.parts.forEach(function(p){if(p.resolvedUri){return;}p.resolvedUri=resolveUrl(baseUri,p.uri);});}if(segment.preloadHints&&segment.preloadHints.length){segment.preloadHints.forEach(function(p){if(p.resolvedUri){return;}p.resolvedUri=resolveUrl(baseUri,p.uri);});}};var getAllSegments=function getAllSegments(media){var segments=media.segments||[];var preloadSegment=media.preloadSegment;// a preloadSegment with only preloadHints is not currently
// a usable segment, only include a preloadSegment that has
// parts.
if(preloadSegment&&preloadSegment.parts&&preloadSegment.parts.length){// if preloadHints has a MAP that means that the
// init segment is going to change. We cannot use any of the parts
// from this preload segment.
if(preloadSegment.preloadHints){for(var _i170=0;_i170<preloadSegment.preloadHints.length;_i170++){if(preloadSegment.preloadHints[_i170].type==='MAP'){return segments;}}}// set the duration for our preload segment to target duration.
preloadSegment.duration=media.targetDuration;preloadSegment.preload=true;segments.push(preloadSegment);}return segments;};// consider the playlist unchanged if the playlist object is the same or
// the number of segments is equal, the media sequence number is unchanged,
// and this playlist hasn't become the end of the playlist
var isPlaylistUnchanged=function isPlaylistUnchanged(a,b){return a===b||a.segments&&b.segments&&a.segments.length===b.segments.length&&a.endList===b.endList&&a.mediaSequence===b.mediaSequence&&a.preloadSegment===b.preloadSegment;};/**
        * Returns a new main playlist that is the result of merging an
        * updated media playlist into the original version. If the
        * updated media playlist does not match any of the playlist
        * entries in the original main playlist, null is returned.
        *
        * @param {Object} main a parsed main M3U8 object
        * @param {Object} media a parsed media M3U8 object
        * @return {Object} a new object that represents the original
        * main playlist with the updated media playlist merged in, or
        * null if the merge produced no change.
        */var updateMain$1=function updateMain$1(main,newMedia){var unchangedCheck=arguments.length>2&&arguments[2]!==undefined?arguments[2]:isPlaylistUnchanged;var result=merge(main,{});var oldMedia=result.playlists[newMedia.id];if(!oldMedia){return null;}if(unchangedCheck(oldMedia,newMedia)){return null;}newMedia.segments=getAllSegments(newMedia);var mergedPlaylist=merge(oldMedia,newMedia);// always use the new media's preload segment
if(mergedPlaylist.preloadSegment&&!newMedia.preloadSegment){delete mergedPlaylist.preloadSegment;}// if the update could overlap existing segment information, merge the two segment lists
if(oldMedia.segments){if(newMedia.skip){newMedia.segments=newMedia.segments||[];// add back in objects for skipped segments, so that we merge
// old properties into the new segments
for(var _i171=0;_i171<newMedia.skip.skippedSegments;_i171++){newMedia.segments.unshift({skipped:true});}}mergedPlaylist.segments=updateSegments(oldMedia.segments,newMedia.segments,newMedia.mediaSequence-oldMedia.mediaSequence);}// resolve any segment URIs to prevent us from having to do it later
mergedPlaylist.segments.forEach(function(segment){resolveSegmentUris(segment,mergedPlaylist.resolvedUri);});// TODO Right now in the playlists array there are two references to each playlist, one
// that is referenced by index, and one by URI. The index reference may no longer be
// necessary.
for(var _i172=0;_i172<result.playlists.length;_i172++){if(result.playlists[_i172].id===newMedia.id){result.playlists[_i172]=mergedPlaylist;}}result.playlists[newMedia.id]=mergedPlaylist;// URI reference added for backwards compatibility
result.playlists[newMedia.uri]=mergedPlaylist;// update media group playlist references.
forEachMediaGroup(main,function(properties,mediaType,groupKey,labelKey){if(!properties.playlists){return;}for(var _i173=0;_i173<properties.playlists.length;_i173++){if(newMedia.id===properties.playlists[_i173].id){properties.playlists[_i173]=mergedPlaylist;}}});return result;};/**
       * Calculates the time to wait before refreshing a live playlist
       *
       * @param {Object} media
       *        The current media
       * @param {boolean} update
       *        True if there were any updates from the last refresh, false otherwise
       * @return {number}
       *         The time in ms to wait before refreshing the live playlist
       */var refreshDelay=function refreshDelay(media,update){var segments=media.segments||[];var lastSegment=segments[segments.length-1];var lastPart=lastSegment&&lastSegment.parts&&lastSegment.parts[lastSegment.parts.length-1];var lastDuration=lastPart&&lastPart.duration||lastSegment&&lastSegment.duration;if(update&&lastDuration){return lastDuration*1000;}// if the playlist is unchanged since the last reload or last segment duration
// cannot be determined, try again after half the target duration
return(media.partTargetDuration||media.targetDuration||10)*500;};/**
       * Load a playlist from a remote location
       *
       * @class PlaylistLoader
       * @extends Stream
       * @param {string|Object} src url or object of manifest
       * @param {boolean} withCredentials the withCredentials xhr option
       * @class
       */var PlaylistLoader=/*#__PURE__*/function(_EventTarget$5){_inherits(PlaylistLoader,_EventTarget$5);var _super94=_createSuper(PlaylistLoader);function PlaylistLoader(src,vhs){var _this180;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,PlaylistLoader);_this180=_super94.call(this);if(!src){throw new Error('A non-empty playlist URL or object is required');}_this180.logger_=logger('PlaylistLoader');var _options$withCredenti=options.withCredentials,withCredentials=_options$withCredenti===void 0?false:_options$withCredenti;_this180.src=src;_this180.vhs_=vhs;_this180.withCredentials=withCredentials;_this180.addDateRangesToTextTrack_=options.addDateRangesToTextTrack;var vhsOptions=vhs.options_;_this180.customTagParsers=vhsOptions&&vhsOptions.customTagParsers||[];_this180.customTagMappers=vhsOptions&&vhsOptions.customTagMappers||[];_this180.llhls=vhsOptions&&vhsOptions.llhls;_this180.dateRangesStorage_=new DateRangesStorage();// initialize the loader state
_this180.state='HAVE_NOTHING';// live playlist staleness timeout
_this180.handleMediaupdatetimeout_=_this180.handleMediaupdatetimeout_.bind(_assertThisInitialized2(_this180));_this180.on('mediaupdatetimeout',_this180.handleMediaupdatetimeout_);_this180.on('loadedplaylist',_this180.handleLoadedPlaylist_.bind(_assertThisInitialized2(_this180)));return _this180;}_createClass(PlaylistLoader,[{key:"handleLoadedPlaylist_",value:function handleLoadedPlaylist_(){var mediaPlaylist=this.media();if(!mediaPlaylist){return;}this.dateRangesStorage_.setOffset(mediaPlaylist.segments);this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);var availableDateRanges=this.dateRangesStorage_.getDateRangesToProcess();if(!availableDateRanges.length||!this.addDateRangesToTextTrack_){return;}this.addDateRangesToTextTrack_(availableDateRanges);}},{key:"handleMediaupdatetimeout_",value:function handleMediaupdatetimeout_(){var _this181=this;if(this.state!=='HAVE_METADATA'){// only refresh the media playlist if no other activity is going on
return;}var media=this.media();var uri=resolveUrl(this.main.uri,media.uri);if(this.llhls){uri=addLLHLSQueryDirectives(uri,media);}this.state='HAVE_CURRENT_METADATA';this.request=this.vhs_.xhr({uri:uri,withCredentials:this.withCredentials,requestType:'hls-playlist'},function(error,req){// disposed
if(!_this181.request){return;}if(error){return _this181.playlistRequestError(_this181.request,_this181.media(),'HAVE_METADATA');}_this181.haveMetadata({playlistString:_this181.request.responseText,url:_this181.media().uri,id:_this181.media().id});});}},{key:"playlistRequestError",value:function playlistRequestError(xhr,playlist,startingState){var uri=playlist.uri,id=playlist.id;// any in-flight request is now finished
this.request=null;if(startingState){this.state=startingState;}this.error={playlist:this.main.playlists[id],status:xhr.status,message:"HLS playlist request error at URL: ".concat(uri,"."),responseText:xhr.responseText,code:xhr.status>=500?4:2,metadata:{errorType:videojs.Error.HlsPlaylistRequestError}};this.trigger('error');}},{key:"parseManifest_",value:function parseManifest_(_ref168){var _this182=this;var url=_ref168.url,manifestString=_ref168.manifestString;return parseManifest({onwarn:function onwarn(_ref169){var message=_ref169.message;return _this182.logger_("m3u8-parser warn for ".concat(url,": ").concat(message));},oninfo:function oninfo(_ref170){var message=_ref170.message;return _this182.logger_("m3u8-parser info for ".concat(url,": ").concat(message));},manifestString:manifestString,customTagParsers:this.customTagParsers,customTagMappers:this.customTagMappers,llhls:this.llhls});}/**
         * Update the playlist loader's state in response to a new or updated playlist.
         *
         * @param {string} [playlistString]
         *        Playlist string (if playlistObject is not provided)
         * @param {Object} [playlistObject]
         *        Playlist object (if playlistString is not provided)
         * @param {string} url
         *        URL of playlist
         * @param {string} id
         *        ID to use for playlist
         */},{key:"haveMetadata",value:function haveMetadata(_ref171){var playlistString=_ref171.playlistString,playlistObject=_ref171.playlistObject,url=_ref171.url,id=_ref171.id;// any in-flight request is now finished
this.request=null;this.state='HAVE_METADATA';var playlist=playlistObject||this.parseManifest_({url:url,manifestString:playlistString});playlist.lastRequest=Date.now();setupMediaPlaylist({playlist:playlist,uri:url,id:id});// merge this playlist into the main manifest
var update=updateMain$1(this.main,playlist);this.targetDuration=playlist.partTargetDuration||playlist.targetDuration;this.pendingMedia_=null;if(update){this.main=update;this.media_=this.main.playlists[id];}else{this.trigger('playlistunchanged');}this.updateMediaUpdateTimeout_(refreshDelay(this.media(),!!update));this.trigger('loadedplaylist');}/**
          * Abort any outstanding work and clean up.
          */},{key:"dispose",value:function dispose(){this.trigger('dispose');this.stopRequest();window_1.clearTimeout(this.mediaUpdateTimeout);window_1.clearTimeout(this.finalRenditionTimeout);this.dateRangesStorage_=new DateRangesStorage();this.off();}},{key:"stopRequest",value:function stopRequest(){if(this.request){var oldRequest=this.request;this.request=null;oldRequest.onreadystatechange=null;oldRequest.abort();}}/**
          * When called without any arguments, returns the currently
          * active media playlist. When called with a single argument,
          * triggers the playlist loader to asynchronously switch to the
          * specified media playlist. Calling this method while the
          * loader is in the HAVE_NOTHING causes an error to be emitted
          * but otherwise has no effect.
          *
          * @param {Object=} playlist the parsed media playlist
          * object to switch to
          * @param {boolean=} shouldDelay whether we should delay the request by half target duration
          *
          * @return {Playlist} the current loaded media
          */},{key:"media",value:function media(playlist,shouldDelay){var _this183=this;// getter
if(!playlist){return this.media_;}// setter
if(this.state==='HAVE_NOTHING'){throw new Error('Cannot switch media playlist from '+this.state);}// find the playlist object if the target playlist has been
// specified by URI
if(typeof playlist==='string'){if(!this.main.playlists[playlist]){throw new Error('Unknown playlist URI: '+playlist);}playlist=this.main.playlists[playlist];}window_1.clearTimeout(this.finalRenditionTimeout);if(shouldDelay){var delay=(playlist.partTargetDuration||playlist.targetDuration)/2*1000||5*1000;this.finalRenditionTimeout=window_1.setTimeout(this.media.bind(this,playlist,false),delay);return;}var startingState=this.state;var mediaChange=!this.media_||playlist.id!==this.media_.id;var mainPlaylistRef=this.main.playlists[playlist.id];// switch to fully loaded playlists immediately
if(mainPlaylistRef&&mainPlaylistRef.endList||// handle the case of a playlist object (e.g., if using vhs-json with a resolved
// media playlist or, for the case of demuxed audio, a resolved audio media group)
playlist.endList&&playlist.segments.length){// abort outstanding playlist requests
if(this.request){this.request.onreadystatechange=null;this.request.abort();this.request=null;}this.state='HAVE_METADATA';this.media_=playlist;// trigger media change if the active media has been updated
if(mediaChange){this.trigger('mediachanging');if(startingState==='HAVE_MAIN_MANIFEST'){// The initial playlist was a main manifest, and the first media selected was
// also provided (in the form of a resolved playlist object) as part of the
// source object (rather than just a URL). Therefore, since the media playlist
// doesn't need to be requested, loadedmetadata won't trigger as part of the
// normal flow, and needs an explicit trigger here.
this.trigger('loadedmetadata');}else{this.trigger('mediachange');}}return;}// We update/set the timeout here so that live playlists
// that are not a media change will "start" the loader as expected.
// We expect that this function will start the media update timeout
// cycle again. This also prevents a playlist switch failure from
// causing us to stall during live.
this.updateMediaUpdateTimeout_(refreshDelay(playlist,true));// switching to the active playlist is a no-op
if(!mediaChange){return;}this.state='SWITCHING_MEDIA';// there is already an outstanding playlist request
if(this.request){if(playlist.resolvedUri===this.request.url){// requesting to switch to the same playlist multiple times
// has no effect after the first
return;}this.request.onreadystatechange=null;this.request.abort();this.request=null;}// request the new playlist
if(this.media_){this.trigger('mediachanging');}this.pendingMedia_=playlist;this.request=this.vhs_.xhr({uri:playlist.resolvedUri,withCredentials:this.withCredentials,requestType:'hls-playlist'},function(error,req){// disposed
if(!_this183.request){return;}playlist.lastRequest=Date.now();playlist.resolvedUri=resolveManifestRedirect(playlist.resolvedUri,req);if(error){return _this183.playlistRequestError(_this183.request,playlist,startingState);}_this183.haveMetadata({playlistString:req.responseText,url:playlist.uri,id:playlist.id});// fire loadedmetadata the first time a media playlist is loaded
if(startingState==='HAVE_MAIN_MANIFEST'){_this183.trigger('loadedmetadata');}else{_this183.trigger('mediachange');}});}/**
         * pause loading of the playlist
         */},{key:"pause",value:function pause(){if(this.mediaUpdateTimeout){window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}this.stopRequest();if(this.state==='HAVE_NOTHING'){// If we pause the loader before any data has been retrieved, its as if we never
// started, so reset to an unstarted state.
this.started=false;}// Need to restore state now that no activity is happening
if(this.state==='SWITCHING_MEDIA'){// if the loader was in the process of switching media, it should either return to
// HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media
// playlist yet. This is determined by the existence of loader.media_
if(this.media_){this.state='HAVE_METADATA';}else{this.state='HAVE_MAIN_MANIFEST';}}else if(this.state==='HAVE_CURRENT_METADATA'){this.state='HAVE_METADATA';}}/**
         * start loading of the playlist
         */},{key:"load",value:function load(shouldDelay){var _this184=this;if(this.mediaUpdateTimeout){window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}var media=this.media();if(shouldDelay){var delay=media?(media.partTargetDuration||media.targetDuration)/2*1000:5*1000;this.mediaUpdateTimeout=window_1.setTimeout(function(){_this184.mediaUpdateTimeout=null;_this184.load();},delay);return;}if(!this.started){this.start();return;}if(media&&!media.endList){this.trigger('mediaupdatetimeout');}else{this.trigger('loadedplaylist');}}},{key:"updateMediaUpdateTimeout_",value:function updateMediaUpdateTimeout_(delay){var _this185=this;if(this.mediaUpdateTimeout){window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}// we only have use mediaupdatetimeout for live playlists.
if(!this.media()||this.media().endList){return;}this.mediaUpdateTimeout=window_1.setTimeout(function(){_this185.mediaUpdateTimeout=null;_this185.trigger('mediaupdatetimeout');_this185.updateMediaUpdateTimeout_(delay);},delay);}/**
         * start loading of the playlist
         */},{key:"start",value:function start(){var _this186=this;this.started=true;if(_typeof(this.src)==='object'){// in the case of an entirely constructed manifest object (meaning there's no actual
// manifest on a server), default the uri to the page's href
if(!this.src.uri){this.src.uri=window_1.location.href;}// resolvedUri is added on internally after the initial request. Since there's no
// request for pre-resolved manifests, add on resolvedUri here.
this.src.resolvedUri=this.src.uri;// Since a manifest object was passed in as the source (instead of a URL), the first
// request can be skipped (since the top level of the manifest, at a minimum, is
// already available as a parsed manifest object). However, if the manifest object
// represents a main playlist, some media playlists may need to be resolved before
// the starting segment list is available. Therefore, go directly to setup of the
// initial playlist, and let the normal flow continue from there.
//
// Note that the call to setup is asynchronous, as other sections of VHS may assume
// that the first request is asynchronous.
setTimeout(function(){_this186.setupInitialPlaylist(_this186.src);},0);return;}// request the specified URL
this.request=this.vhs_.xhr({uri:this.src,withCredentials:this.withCredentials,requestType:'hls-playlist'},function(error,req){// disposed
if(!_this186.request){return;}// clear the loader's request reference
_this186.request=null;if(error){_this186.error={status:req.status,message:"HLS playlist request error at URL: ".concat(_this186.src,"."),responseText:req.responseText,// MEDIA_ERR_NETWORK
code:2,metadata:{errorType:videojs.Error.HlsPlaylistRequestError}};if(_this186.state==='HAVE_NOTHING'){_this186.started=false;}return _this186.trigger('error');}_this186.src=resolveManifestRedirect(_this186.src,req);var manifest=_this186.parseManifest_({manifestString:req.responseText,url:_this186.src});_this186.setupInitialPlaylist(manifest);});}},{key:"srcUri",value:function srcUri(){return typeof this.src==='string'?this.src:this.src.uri;}/**
         * Given a manifest object that's either a main or media playlist, trigger the proper
         * events and set the state of the playlist loader.
         *
         * If the manifest object represents a main playlist, `loadedplaylist` will be
         * triggered to allow listeners to select a playlist. If none is selected, the loader
         * will default to the first one in the playlists array.
         *
         * If the manifest object represents a media playlist, `loadedplaylist` will be
         * triggered followed by `loadedmetadata`, as the only available playlist is loaded.
         *
         * In the case of a media playlist, a main playlist object wrapper with one playlist
         * will be created so that all logic can handle playlists in the same fashion (as an
         * assumed manifest object schema).
         *
         * @param {Object} manifest
         *        The parsed manifest object
         */},{key:"setupInitialPlaylist",value:function setupInitialPlaylist(manifest){this.state='HAVE_MAIN_MANIFEST';if(manifest.playlists){this.main=manifest;addPropertiesToMain(this.main,this.srcUri());// If the initial main playlist has playlists wtih segments already resolved,
// then resolve URIs in advance, as they are usually done after a playlist request,
// which may not happen if the playlist is resolved.
manifest.playlists.forEach(function(playlist){playlist.segments=getAllSegments(playlist);playlist.segments.forEach(function(segment){resolveSegmentUris(segment,playlist.resolvedUri);});});this.trigger('loadedplaylist');if(!this.request){// no media playlist was specifically selected so start
// from the first listed one
this.media(this.main.playlists[0]);}return;}// In order to support media playlists passed in as vhs-json, the case where the uri
// is not provided as part of the manifest should be considered, and an appropriate
// default used.
var uri=this.srcUri()||window_1.location.href;this.main=mainForMedia(manifest,uri);this.haveMetadata({playlistObject:manifest,url:uri,id:this.main.playlists[0].id});this.trigger('loadedmetadata');}/**
         * Updates or deletes a preexisting pathway clone.
         * Ensures that all playlists related to the old pathway clone are
         * either updated or deleted.
         *
         * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.
         *        On delete, the old pathway clone object to be deleted.
         * @param {boolean} isUpdate True if the pathway is to be updated,
         *        false if it is meant to be deleted.
         */},{key:"updateOrDeleteClone",value:function updateOrDeleteClone(clone,isUpdate){var main=this.main;var pathway=clone.ID;var i=main.playlists.length;// Iterate backwards through the playlist so we can remove playlists if necessary.
while(i--){var _p2=main.playlists[i];if(_p2.attributes['PATHWAY-ID']===pathway){var oldPlaylistUri=_p2.resolvedUri;var oldPlaylistId=_p2.id;// update the indexed playlist and add new playlists by ID and URI
if(isUpdate){var newPlaylistUri=this.createCloneURI_(_p2.resolvedUri,clone);var newPlaylistId=createPlaylistID(pathway,newPlaylistUri);var _attributes6=this.createCloneAttributes_(pathway,_p2.attributes);var updatedPlaylist=this.createClonePlaylist_(_p2,newPlaylistId,clone,_attributes6);main.playlists[i]=updatedPlaylist;main.playlists[newPlaylistId]=updatedPlaylist;main.playlists[newPlaylistUri]=updatedPlaylist;}else{// Remove the indexed playlist.
main.playlists.splice(i,1);}// Remove playlists by the old ID and URI.
delete main.playlists[oldPlaylistId];delete main.playlists[oldPlaylistUri];}}this.updateOrDeleteCloneMedia(clone,isUpdate);}/**
         * Updates or deletes media data based on the pathway clone object.
         * Due to the complexity of the media groups and playlists, in all cases
         * we remove all of the old media groups and playlists.
         * On updates, we then create new media groups and playlists based on the
         * new pathway clone object.
         *
         * @param {Object} clone The pathway clone object for the newly updated pathway clone.
         * @param {boolean} isUpdate True if the pathway is to be updated,
         *        false if it is meant to be deleted.
         */},{key:"updateOrDeleteCloneMedia",value:function updateOrDeleteCloneMedia(clone,isUpdate){var main=this.main;var id=clone.ID;['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(mediaType){if(!main.mediaGroups[mediaType]||!main.mediaGroups[mediaType][id]){return;}for(var groupKey in main.mediaGroups[mediaType]){// Remove all media playlists for the media group for this pathway clone.
if(groupKey===id){for(var labelKey in main.mediaGroups[mediaType][groupKey]){var oldMedia=main.mediaGroups[mediaType][groupKey][labelKey];oldMedia.playlists.forEach(function(p,i){var oldMediaPlaylist=main.playlists[p.id];var oldPlaylistId=oldMediaPlaylist.id;var oldPlaylistUri=oldMediaPlaylist.resolvedUri;delete main.playlists[oldPlaylistId];delete main.playlists[oldPlaylistUri];});}// Delete the old media group.
delete main.mediaGroups[mediaType][groupKey];}}});// Create the new media groups and playlists if there is an update.
if(isUpdate){this.createClonedMediaGroups_(clone);}}/**
         * Given a pathway clone object, clones all necessary playlists.
         *
         * @param {Object} clone The pathway clone object.
         * @param {Object} basePlaylist The original playlist to clone from.
         */},{key:"addClonePathway",value:function addClonePathway(clone){var basePlaylist=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var main=this.main;var index=main.playlists.length;var uri=this.createCloneURI_(basePlaylist.resolvedUri,clone);var playlistId=createPlaylistID(clone.ID,uri);var attributes=this.createCloneAttributes_(clone.ID,basePlaylist.attributes);var playlist=this.createClonePlaylist_(basePlaylist,playlistId,clone,attributes);main.playlists[index]=playlist;// add playlist by ID and URI
main.playlists[playlistId]=playlist;main.playlists[uri]=playlist;this.createClonedMediaGroups_(clone);}/**
         * Given a pathway clone object we create clones of all media.
         * In this function, all necessary information and updated playlists
         * are added to the `mediaGroup` object.
         * Playlists are also added to the `playlists` array so the media groups
         * will be properly linked.
         *
         * @param {Object} clone The pathway clone object.
         */},{key:"createClonedMediaGroups_",value:function createClonedMediaGroups_(clone){var _this187=this;var id=clone.ID;var baseID=clone['BASE-ID'];var main=this.main;['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(mediaType){// If the media type doesn't exist, or there is already a clone, skip
// to the next media type.
if(!main.mediaGroups[mediaType]||main.mediaGroups[mediaType][id]){return;}for(var groupKey in main.mediaGroups[mediaType]){if(groupKey===baseID){// Create the group.
main.mediaGroups[mediaType][id]={};}else{// There is no need to iterate over label keys in this case.
continue;}var _loop5=function _loop5(labelKey){var oldMedia=main.mediaGroups[mediaType][groupKey][labelKey];main.mediaGroups[mediaType][id][labelKey]=_extends$2({},oldMedia);var newMedia=main.mediaGroups[mediaType][id][labelKey];// update URIs on the media
var newUri=_this187.createCloneURI_(oldMedia.resolvedUri,clone);newMedia.resolvedUri=newUri;newMedia.uri=newUri;// Reset playlists in the new media group.
newMedia.playlists=[];// Create new playlists in the newly cloned media group.
oldMedia.playlists.forEach(function(p,i){var oldMediaPlaylist=main.playlists[p.id];var group=groupID(mediaType,id,labelKey);var newPlaylistID=createPlaylistID(id,group);// Check to see if it already exists
if(oldMediaPlaylist&&!main.playlists[newPlaylistID]){var newMediaPlaylist=_this187.createClonePlaylist_(oldMediaPlaylist,newPlaylistID,clone);var newPlaylistUri=newMediaPlaylist.resolvedUri;main.playlists[newPlaylistID]=newMediaPlaylist;main.playlists[newPlaylistUri]=newMediaPlaylist;}newMedia.playlists[i]=_this187.createClonePlaylist_(p,newPlaylistID,clone);});};for(var labelKey in main.mediaGroups[mediaType][groupKey]){_loop5(labelKey);}}});}/**
         * Using the original playlist to be cloned, and the pathway clone object
         * information, we create a new playlist.
         *
         * @param {Object} basePlaylist  The original playlist to be cloned from.
         * @param {string} id The desired id of the newly cloned playlist.
         * @param {Object} clone The pathway clone object.
         * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.
         *
         * @return {Object} The combined cloned playlist.
         */},{key:"createClonePlaylist_",value:function createClonePlaylist_(basePlaylist,id,clone,attributes){var uri=this.createCloneURI_(basePlaylist.resolvedUri,clone);var newProps={resolvedUri:uri,uri:uri,id:id};// Remove all segments from previous playlist in the clone.
if(basePlaylist.segments){newProps.segments=[];}if(attributes){newProps.attributes=attributes;}return merge(basePlaylist,newProps);}/**
         * Generates an updated URI for a cloned pathway based on the original
         * pathway's URI and the paramaters from the pathway clone object in the
         * content steering server response.
         *
         * @param {string} baseUri URI to be updated in the cloned pathway.
         * @param {Object} clone The pathway clone object.
         *
         * @return {string} The updated URI for the cloned pathway.
         */},{key:"createCloneURI_",value:function createCloneURI_(baseURI,clone){var uri=new URL(baseURI);uri.hostname=clone['URI-REPLACEMENT'].HOST;var params=clone['URI-REPLACEMENT'].PARAMS;// Add params to the cloned URL.
for(var _i174=0,_Object$keys=Object.keys(params);_i174<_Object$keys.length;_i174++){var key=_Object$keys[_i174];uri.searchParams.set(key,params[key]);}return uri.href;}/**
         * Helper function to create the attributes needed for the new clone.
         * This mainly adds the necessary media attributes.
         *
         * @param {string} id The pathway clone object ID.
         * @param {Object} oldAttributes The old attributes to compare to.
         * @return {Object} The new attributes to add to the playlist.
         */},{key:"createCloneAttributes_",value:function createCloneAttributes_(id,oldAttributes){var attributes=_defineProperty({},'PATHWAY-ID',id);['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(mediaType){if(oldAttributes[mediaType]){attributes[mediaType]=id;}});return attributes;}/**
         * Returns the key ID set from a playlist
         *
         * @param {playlist} playlist to fetch the key ID set from.
         * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.
         */},{key:"getKeyIdSet",value:function getKeyIdSet(playlist){if(playlist.contentProtection){var keyIds=new Set();for(var keysystem in playlist.contentProtection){var keyId=playlist.contentProtection[keysystem].attributes.keyId;if(keyId){keyIds.add(keyId.toLowerCase());}}return keyIds;}}}]);return PlaylistLoader;}(EventTarget$1);/**
       * @file xhr.js
       */var callbackWrapper=function callbackWrapper(request,error,response,callback){var reqResponse=request.responseType==='arraybuffer'?request.response:request.responseText;if(!error&&reqResponse){request.responseTime=Date.now();request.roundTripTime=request.responseTime-request.requestTime;request.bytesReceived=reqResponse.byteLength||reqResponse.length;if(!request.bandwidth){request.bandwidth=Math.floor(request.bytesReceived/request.roundTripTime*8*1000);}}if(response.headers){request.responseHeaders=response.headers;}// videojs.xhr now uses a specific code on the error
// object to signal that a request has timed out instead
// of setting a boolean on the request object
if(error&&error.code==='ETIMEDOUT'){request.timedout=true;}// videojs.xhr no longer considers status codes outside of 200 and 0
// (for file uris) to be errors, but the old XHR did, so emulate that
// behavior. Status 206 may be used in response to byterange requests.
if(!error&&!request.aborted&&response.statusCode!==200&&response.statusCode!==206&&response.statusCode!==0){error=new Error('XHR Failed with a response of: '+(request&&(reqResponse||request.responseText)));}callback(error,request);};/**
       * Iterates over the request hooks Set and calls them in order
       *
       * @param {Set} hooks the hook Set to iterate over
       * @param {Object} options the request options to pass to the xhr wrapper
       * @return the callback hook function return value, the modified or new options Object.
       */var callAllRequestHooks=function callAllRequestHooks(requestSet,options){if(!requestSet||!requestSet.size){return;}var newOptions=options;requestSet.forEach(function(requestCallback){newOptions=requestCallback(newOptions);});return newOptions;};/**
       * Iterates over the response hooks Set and calls them in order.
       *
       * @param {Set} hooks the hook Set to iterate over
       * @param {Object} request the xhr request object
       * @param {Object} error the xhr error object
       * @param {Object} response the xhr response object
       */var callAllResponseHooks=function callAllResponseHooks(responseSet,request,error,response){if(!responseSet||!responseSet.size){return;}responseSet.forEach(function(responseCallback){responseCallback(request,error,response);});};var xhrFactory=function xhrFactory(){var xhr=function XhrFunction(options,callback){// Add a default timeout
options=merge({timeout:45e3},options);// Allow an optional user-specified function to modify the option
// object before we construct the xhr request
// TODO: Remove beforeRequest in the next major release.
var beforeRequest=XhrFunction.beforeRequest||videojs.Vhs.xhr.beforeRequest;// onRequest and onResponse hooks as a Set, at either the player or global level.
// TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.
var _requestCallbackSet=XhrFunction._requestCallbackSet||videojs.Vhs.xhr._requestCallbackSet||new Set();var _responseCallbackSet=XhrFunction._responseCallbackSet||videojs.Vhs.xhr._responseCallbackSet;if(beforeRequest&&typeof beforeRequest==='function'){videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');_requestCallbackSet.add(beforeRequest);}// Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden
// TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11
var xhrMethod=videojs.Vhs.xhr.original===true?videojs.xhr:videojs.Vhs.xhr;// call all registered onRequest hooks, assign new options.
var beforeRequestOptions=callAllRequestHooks(_requestCallbackSet,options);// Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.
_requestCallbackSet.delete(beforeRequest);// xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send
var request=xhrMethod(beforeRequestOptions||options,function(error,response){// call all registered onResponse hooks
callAllResponseHooks(_responseCallbackSet,request,error,response);return callbackWrapper(request,error,response,callback);});var originalAbort=request.abort;request.abort=function(){request.aborted=true;return originalAbort.apply(request,arguments);};request.uri=options.uri;request.requestTime=Date.now();return request;};xhr.original=true;return xhr;};/**
       * Turns segment byterange into a string suitable for use in
       * HTTP Range requests
       *
       * @param {Object} byterange - an object with two values defining the start and end
       *                             of a byte-range
       */var byterangeStr=function byterangeStr(byterange){// `byterangeEnd` is one less than `offset + length` because the HTTP range
// header uses inclusive ranges
var byterangeEnd;var byterangeStart=byterange.offset;if(typeof byterange.offset==='bigint'||typeof byterange.length==='bigint'){byterangeEnd=window_1.BigInt(byterange.offset)+window_1.BigInt(byterange.length)-window_1.BigInt(1);}else{byterangeEnd=byterange.offset+byterange.length-1;}return'bytes='+byterangeStart+'-'+byterangeEnd;};/**
       * Defines headers for use in the xhr request for a particular segment.
       *
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       */var segmentXhrHeaders=function segmentXhrHeaders(segment){var headers={};if(segment.byterange){headers.Range=byterangeStr(segment.byterange);}return headers;};/**
       * @file bin-utils.js
       */ /**
       * convert a TimeRange to text
       *
       * @param {TimeRange} range the timerange to use for conversion
       * @param {number} i the iterator on the range to convert
       * @return {string} the range in string format
       */var textRange=function textRange(range,i){return range.start(i)+'-'+range.end(i);};/**
       * format a number as hex string
       *
       * @param {number} e The number
       * @param {number} i the iterator
       * @return {string} the hex formatted number as a string
       */var formatHexString=function formatHexString(e,i){var value=e.toString(16);return'00'.substring(0,2-value.length)+value+(i%2?' ':'');};var formatAsciiString=function formatAsciiString(e){if(e>=0x20&&e<0x7e){return String.fromCharCode(e);}return'.';};/**
       * Creates an object for sending to a web worker modifying properties that are TypedArrays
       * into a new object with seperated properties for the buffer, byteOffset, and byteLength.
       *
       * @param {Object} message
       *        Object of properties and values to send to the web worker
       * @return {Object}
       *         Modified message with TypedArray values expanded
       * @function createTransferableMessage
       */var createTransferableMessage=function createTransferableMessage(message){var transferable={};Object.keys(message).forEach(function(key){var value=message[key];if(isArrayBufferView(value)){transferable[key]={bytes:value.buffer,byteOffset:value.byteOffset,byteLength:value.byteLength};}else{transferable[key]=value;}});return transferable;};/**
       * Returns a unique string identifier for a media initialization
       * segment.
       *
       * @param {Object} initSegment
       *        the init segment object.
       *
       * @return {string} the generated init segment id
       */var initSegmentId=function initSegmentId(initSegment){var byterange=initSegment.byterange||{length:Infinity,offset:0};return[byterange.length,byterange.offset,initSegment.resolvedUri].join(',');};/**
       * Returns a unique string identifier for a media segment key.
       *
       * @param {Object} key the encryption key
       * @return {string} the unique id for the media segment key.
       */var segmentKeyId=function segmentKeyId(key){return key.resolvedUri;};/**
       * utils to help dump binary data to the console
       *
       * @param {Array|TypedArray} data
       *        data to dump to a string
       *
       * @return {string} the data as a hex string.
       */var hexDump=function hexDump(data){var bytes=Array.prototype.slice.call(data);var step=16;var result='';var hex;var ascii;for(var _j15=0;_j15<bytes.length/step;_j15++){hex=bytes.slice(_j15*step,_j15*step+step).map(formatHexString).join('');ascii=bytes.slice(_j15*step,_j15*step+step).map(formatAsciiString).join('');result+=hex+' '+ascii+'\n';}return result;};var tagDump=function tagDump(_ref172){var bytes=_ref172.bytes;return hexDump(bytes);};var textRanges=function textRanges(ranges){var result='';var i;for(i=0;i<ranges.length;i++){result+=textRange(ranges,i)+' ';}return result;};var utils=/*#__PURE__*/Object.freeze({__proto__:null,createTransferableMessage:createTransferableMessage,initSegmentId:initSegmentId,segmentKeyId:segmentKeyId,hexDump:hexDump,tagDump:tagDump,textRanges:textRanges});// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux
// 25% was arbitrarily chosen, and may need to be refined over time.
var SEGMENT_END_FUDGE_PERCENT=0.25;/**
       * Converts a player time (any time that can be gotten/set from player.currentTime(),
       * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a
       * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).
       *
       * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an "anchor
       * point" (a point where we have a mapping from program time to player time, with player
       * time being the post transmux start of the segment).
       *
       * For more details, see [this doc](../../docs/program-time-from-player-time.md).
       *
       * @param {number} playerTime the player time
       * @param {Object} segment the segment which contains the player time
       * @return {Date} program time
       */var playerTimeToProgramTime=function playerTimeToProgramTime(playerTime,segment){if(!segment.dateTimeObject){// Can't convert without an "anchor point" for the program time (i.e., a time that can
// be used to map the start of a segment with a real world time).
return null;}var transmuxerPrependedSeconds=segment.videoTimingInfo.transmuxerPrependedSeconds;var transmuxedStart=segment.videoTimingInfo.transmuxedPresentationStart;// get the start of the content from before old content is prepended
var startOfSegment=transmuxedStart+transmuxerPrependedSeconds;var offsetFromSegmentStart=playerTime-startOfSegment;return new Date(segment.dateTimeObject.getTime()+offsetFromSegmentStart*1000);};var originalSegmentVideoDuration=function originalSegmentVideoDuration(videoTimingInfo){return videoTimingInfo.transmuxedPresentationEnd-videoTimingInfo.transmuxedPresentationStart-videoTimingInfo.transmuxerPrependedSeconds;};/**
       * Finds a segment that contains the time requested given as an ISO-8601 string. The
       * returned segment might be an estimate or an accurate match.
       *
       * @param {string} programTime The ISO-8601 programTime to find a match for
       * @param {Object} playlist A playlist object to search within
       */var findSegmentForProgramTime=function findSegmentForProgramTime(programTime,playlist){// Assumptions:
//  - verifyProgramDateTimeTags has already been run
//  - live streams have been started
var dateTimeObject;try{dateTimeObject=new Date(programTime);}catch(e){return null;}if(!playlist||!playlist.segments||playlist.segments.length===0){return null;}var segment=playlist.segments[0];if(dateTimeObject<new Date(segment.dateTimeObject)){// Requested time is before stream start.
return null;}for(var _i175=0;_i175<playlist.segments.length-1;_i175++){segment=playlist.segments[_i175];var nextSegmentStart=new Date(playlist.segments[_i175+1].dateTimeObject);if(dateTimeObject<nextSegmentStart){break;}}var lastSegment=playlist.segments[playlist.segments.length-1];var lastSegmentStart=lastSegment.dateTimeObject;var lastSegmentDuration=lastSegment.videoTimingInfo?originalSegmentVideoDuration(lastSegment.videoTimingInfo):lastSegment.duration+lastSegment.duration*SEGMENT_END_FUDGE_PERCENT;var lastSegmentEnd=new Date(lastSegmentStart.getTime()+lastSegmentDuration*1000);if(dateTimeObject>lastSegmentEnd){// Beyond the end of the stream, or our best guess of the end of the stream.
return null;}if(dateTimeObject>new Date(lastSegmentStart)){segment=lastSegment;}return{segment:segment,estimatedStart:segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationStart:Playlist.duration(playlist,playlist.mediaSequence+playlist.segments.indexOf(segment)),// Although, given that all segments have accurate date time objects, the segment
// selected should be accurate, unless the video has been transmuxed at some point
// (determined by the presence of the videoTimingInfo object), the segment's "player
// time" (the start time in the player) can't be considered accurate.
type:segment.videoTimingInfo?'accurate':'estimate'};};/**
       * Finds a segment that contains the given player time(in seconds).
       *
       * @param {number} time The player time to find a match for
       * @param {Object} playlist A playlist object to search within
       */var findSegmentForPlayerTime=function findSegmentForPlayerTime(time,playlist){// Assumptions:
// - there will always be a segment.duration
// - we can start from zero
// - segments are in time order
if(!playlist||!playlist.segments||playlist.segments.length===0){return null;}var segmentEnd=0;var segment;for(var _i176=0;_i176<playlist.segments.length;_i176++){segment=playlist.segments[_i176];// videoTimingInfo is set after the segment is downloaded and transmuxed, and
// should contain the most accurate values we have for the segment's player times.
//
// Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall
// back to an estimate based on the manifest derived (inaccurate) segment.duration, to
// calculate an end value.
segmentEnd=segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationEnd:segmentEnd+segment.duration;if(time<=segmentEnd){break;}}var lastSegment=playlist.segments[playlist.segments.length-1];if(lastSegment.videoTimingInfo&&lastSegment.videoTimingInfo.transmuxedPresentationEnd<time){// The time requested is beyond the stream end.
return null;}if(time>segmentEnd){// The time is within or beyond the last segment.
//
// Check to see if the time is beyond a reasonable guess of the end of the stream.
if(time>segmentEnd+lastSegment.duration*SEGMENT_END_FUDGE_PERCENT){// Technically, because the duration value is only an estimate, the time may still
// exist in the last segment, however, there isn't enough information to make even
// a reasonable estimate.
return null;}segment=lastSegment;}return{segment:segment,estimatedStart:segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationStart:segmentEnd-segment.duration,// Because videoTimingInfo is only set after transmux, it is the only way to get
// accurate timing values.
type:segment.videoTimingInfo?'accurate':'estimate'};};/**
       * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.
       * If the offset returned is positive, the programTime occurs after the
       * comparisonTimestamp.
       * If the offset is negative, the programTime occurs before the comparisonTimestamp.
       *
       * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against
       * @param {string} programTime The programTime as an ISO-8601 string
       * @return {number} offset
       */var getOffsetFromTimestamp=function getOffsetFromTimestamp(comparisonTimeStamp,programTime){var segmentDateTime;var programDateTime;try{segmentDateTime=new Date(comparisonTimeStamp);programDateTime=new Date(programTime);}catch(e){// TODO handle error
}var segmentTimeEpoch=segmentDateTime.getTime();var programTimeEpoch=programDateTime.getTime();return(programTimeEpoch-segmentTimeEpoch)/1000;};/**
       * Checks that all segments in this playlist have programDateTime tags.
       *
       * @param {Object} playlist A playlist object
       */var verifyProgramDateTimeTags=function verifyProgramDateTimeTags(playlist){if(!playlist.segments||playlist.segments.length===0){return false;}for(var _i177=0;_i177<playlist.segments.length;_i177++){var segment=playlist.segments[_i177];if(!segment.dateTimeObject){return false;}}return true;};/**
       * Returns the programTime of the media given a playlist and a playerTime.
       * The playlist must have programDateTime tags for a programDateTime tag to be returned.
       * If the segments containing the time requested have not been buffered yet, an estimate
       * may be returned to the callback.
       *
       * @param {Object} args
       * @param {Object} args.playlist A playlist object to search within
       * @param {number} time A playerTime in seconds
       * @param {Function} callback(err, programTime)
       * @return {string} err.message A detailed error message
       * @return {Object} programTime
       * @return {number} programTime.mediaSeconds The streamTime in seconds
       * @return {string} programTime.programDateTime The programTime as an ISO-8601 String
       */var getProgramTime=function getProgramTime(_ref173){var playlist=_ref173.playlist,_ref173$time=_ref173.time,time=_ref173$time===void 0?undefined:_ref173$time,callback=_ref173.callback;if(!callback){throw new Error('getProgramTime: callback must be provided');}if(!playlist||time===undefined){return callback({message:'getProgramTime: playlist and time must be provided'});}var matchedSegment=findSegmentForPlayerTime(time,playlist);if(!matchedSegment){return callback({message:'valid programTime was not found'});}if(matchedSegment.type==='estimate'){return callback({message:'Accurate programTime could not be determined.'+' Please seek to e.seekTime and try again',seekTime:matchedSegment.estimatedStart});}var programTimeObject={mediaSeconds:time};var programTime=playerTimeToProgramTime(time,matchedSegment.segment);if(programTime){programTimeObject.programDateTime=programTime.toISOString();}return callback(null,programTimeObject);};/**
       * Seeks in the player to a time that matches the given programTime ISO-8601 string.
       *
       * @param {Object} args
       * @param {string} args.programTime A programTime to seek to as an ISO-8601 String
       * @param {Object} args.playlist A playlist to look within
       * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.
       * @param {Function} args.seekTo A method to perform a seek
       * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.
       * @param {Object} args.tech The tech to seek on
       * @param {Function} args.callback(err, newTime) A callback to return the new time to
       * @return {string} err.message A detailed error message
       * @return {number} newTime The exact time that was seeked to in seconds
       */var _seekToProgramTime=function seekToProgramTime(_ref174){var programTime=_ref174.programTime,playlist=_ref174.playlist,_ref174$retryCount=_ref174.retryCount,retryCount=_ref174$retryCount===void 0?2:_ref174$retryCount,seekTo=_ref174.seekTo,_ref174$pauseAfterSee=_ref174.pauseAfterSeek,pauseAfterSeek=_ref174$pauseAfterSee===void 0?true:_ref174$pauseAfterSee,tech=_ref174.tech,callback=_ref174.callback;if(!callback){throw new Error('seekToProgramTime: callback must be provided');}if(typeof programTime==='undefined'||!playlist||!seekTo){return callback({message:'seekToProgramTime: programTime, seekTo and playlist must be provided'});}if(!playlist.endList&&!tech.hasStarted_){return callback({message:'player must be playing a live stream to start buffering'});}if(!verifyProgramDateTimeTags(playlist)){return callback({message:'programDateTime tags must be provided in the manifest '+playlist.resolvedUri});}var matchedSegment=findSegmentForProgramTime(programTime,playlist);// no match
if(!matchedSegment){return callback({message:"".concat(programTime," was not found in the stream")});}var segment=matchedSegment.segment;var mediaOffset=getOffsetFromTimestamp(segment.dateTimeObject,programTime);if(matchedSegment.type==='estimate'){// we've run out of retries
if(retryCount===0){return callback({message:"".concat(programTime," is not buffered yet. Try again")});}seekTo(matchedSegment.estimatedStart+mediaOffset);tech.one('seeked',function(){_seekToProgramTime({programTime:programTime,playlist:playlist,retryCount:retryCount-1,seekTo:seekTo,pauseAfterSeek:pauseAfterSeek,tech:tech,callback:callback});});return;}// Since the segment.start value is determined from the buffered end or ending time
// of the prior segment, the seekToTime doesn't need to account for any transmuxer
// modifications.
var seekToTime=segment.start+mediaOffset;var seekedCallback=function seekedCallback(){return callback(null,tech.currentTime());};// listen for seeked event
tech.one('seeked',seekedCallback);// pause before seeking as video.js will restore this state
if(pauseAfterSeek){tech.pause();}seekTo(seekToTime);};// which will only happen if the request is complete.
var callbackOnCompleted=function callbackOnCompleted(request,cb){if(request.readyState===4){return cb();}return;};var containerRequest=function containerRequest(uri,xhr,cb){var bytes=[];var id3Offset;var finished=false;var endRequestAndCallback=function endRequestAndCallback(err,req,type,_bytes){req.abort();finished=true;return cb(err,req,type,_bytes);};var progressListener=function progressListener(error,request){if(finished){return;}if(error){return endRequestAndCallback(error,request,'',bytes);}// grap the new part of content that was just downloaded
var newPart=request.responseText.substring(bytes&&bytes.byteLength||0,request.responseText.length);// add that onto bytes
bytes=concatTypedArrays(bytes,stringToBytes(newPart,true));id3Offset=id3Offset||getId3Offset(bytes);// we need at least 10 bytes to determine a type
// or we need at least two bytes after an id3Offset
if(bytes.length<10||id3Offset&&bytes.length<id3Offset+2){return callbackOnCompleted(request,function(){return endRequestAndCallback(error,request,'',bytes);});}var type=detectContainerForBytes(bytes);// if this looks like a ts segment but we don't have enough data
// to see the second sync byte, wait until we have enough data
// before declaring it ts
if(type==='ts'&&bytes.length<188){return callbackOnCompleted(request,function(){return endRequestAndCallback(error,request,'',bytes);});}// this may be an unsynced ts segment
// wait for 376 bytes before detecting no container
if(!type&&bytes.length<376){return callbackOnCompleted(request,function(){return endRequestAndCallback(error,request,'',bytes);});}return endRequestAndCallback(null,request,type,bytes);};var options={uri:uri,beforeSend:function beforeSend(request){// this forces the browser to pass the bytes to us unprocessed
request.overrideMimeType('text/plain; charset=x-user-defined');request.addEventListener('progress',function(_ref175){var total=_ref175.total,loaded=_ref175.loaded;return callbackWrapper(request,null,{statusCode:request.status},progressListener);});}};var request=xhr(options,function(error,response){return callbackWrapper(request,error,response,progressListener);});return request;};var EventTarget=videojs.EventTarget;var dashPlaylistUnchanged=function dashPlaylistUnchanged(a,b){if(!isPlaylistUnchanged(a,b)){return false;}// for dash the above check will often return true in scenarios where
// the playlist actually has changed because mediaSequence isn't a
// dash thing, and we often set it to 1. So if the playlists have the same amount
// of segments we return true.
// So for dash we need to make sure that the underlying segments are different.
// if sidx changed then the playlists are different.
if(a.sidx&&b.sidx&&(a.sidx.offset!==b.sidx.offset||a.sidx.length!==b.sidx.length)){return false;}else if(!a.sidx&&b.sidx||a.sidx&&!b.sidx){return false;}// one or the other does not have segments
// there was a change.
if(a.segments&&!b.segments||!a.segments&&b.segments){return false;}// neither has segments nothing changed
if(!a.segments&&!b.segments){return true;}// check segments themselves
for(var _i178=0;_i178<a.segments.length;_i178++){var aSegment=a.segments[_i178];var bSegment=b.segments[_i178];// if uris are different between segments there was a change
if(aSegment.uri!==bSegment.uri){return false;}// neither segment has a byterange, there will be no byterange change.
if(!aSegment.byterange&&!bSegment.byterange){continue;}var aByterange=aSegment.byterange;var bByterange=bSegment.byterange;// if byterange only exists on one of the segments, there was a change.
if(aByterange&&!bByterange||!aByterange&&bByterange){return false;}// if both segments have byterange with different offsets, there was a change.
if(aByterange.offset!==bByterange.offset||aByterange.length!==bByterange.length){return false;}}// if everything was the same with segments, this is the same playlist.
return true;};/**
       * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation
       * ID in the parser. This allows for continuous playout across periods with the same representation IDs
       * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support
       * periods without continuous playback this function may need modification as well as the parser.
       */var dashGroupId=function dashGroupId(type,group,label,playlist){// If the manifest somehow does not have an ID (non-dash compliant), use the label.
var playlistId=playlist.attributes.NAME||label;return"placeholder-uri-".concat(type,"-").concat(group,"-").concat(playlistId);};/**
       * Parses the main XML string and updates playlist URI references.
       *
       * @param {Object} config
       *        Object of arguments
       * @param {string} config.mainXml
       *        The mpd XML
       * @param {string} config.srcUrl
       *        The mpd URL
       * @param {Date} config.clientOffset
       *         A time difference between server and client
       * @param {Object} config.sidxMapping
       *        SIDX mappings for moof/mdat URIs and byte ranges
       * @return {Object}
       *         The parsed mpd manifest object
       */var parseMainXml=function parseMainXml(_ref176){var mainXml=_ref176.mainXml,srcUrl=_ref176.srcUrl,clientOffset=_ref176.clientOffset,sidxMapping=_ref176.sidxMapping,previousManifest=_ref176.previousManifest;var manifest=parse(mainXml,{manifestUri:srcUrl,clientOffset:clientOffset,sidxMapping:sidxMapping,previousManifest:previousManifest});addPropertiesToMain(manifest,srcUrl,dashGroupId);return manifest;};/**
       * Removes any mediaGroup labels that no longer exist in the newMain
       *
       * @param {Object} update
       *         The previous mpd object being updated
       * @param {Object} newMain
       *         The new mpd object
       */var removeOldMediaGroupLabels=function removeOldMediaGroupLabels(update,newMain){forEachMediaGroup(update,function(properties,type,group,label){if(!(label in newMain.mediaGroups[type][group])){delete update.mediaGroups[type][group][label];}});};/**
       * Returns a new main manifest that is the result of merging an updated main manifest
       * into the original version.
       *
       * @param {Object} oldMain
       *        The old parsed mpd object
       * @param {Object} newMain
       *        The updated parsed mpd object
       * @return {Object}
       *         A new object representing the original main manifest with the updated media
       *         playlists merged in
       */var updateMain=function updateMain(oldMain,newMain,sidxMapping){var noChanges=true;var update=merge(oldMain,{// These are top level properties that can be updated
duration:newMain.duration,minimumUpdatePeriod:newMain.minimumUpdatePeriod,timelineStarts:newMain.timelineStarts});// First update the playlists in playlist list
for(var _i179=0;_i179<newMain.playlists.length;_i179++){var playlist=newMain.playlists[_i179];if(playlist.sidx){var sidxKey=generateSidxKey(playlist.sidx);// add sidx segments to the playlist if we have all the sidx info already
if(sidxMapping&&sidxMapping[sidxKey]&&sidxMapping[sidxKey].sidx){addSidxSegmentsToPlaylist$1(playlist,sidxMapping[sidxKey].sidx,playlist.sidx.resolvedUri);}}var playlistUpdate=updateMain$1(update,playlist,dashPlaylistUnchanged);if(playlistUpdate){update=playlistUpdate;noChanges=false;}}// Then update media group playlists
forEachMediaGroup(newMain,function(properties,type,group,label){if(properties.playlists&&properties.playlists.length){var id=properties.playlists[0].id;var _playlistUpdate=updateMain$1(update,properties.playlists[0],dashPlaylistUnchanged);if(_playlistUpdate){update=_playlistUpdate;// add new mediaGroup label if it doesn't exist and assign the new mediaGroup.
if(!(label in update.mediaGroups[type][group])){update.mediaGroups[type][group][label]=properties;}// update the playlist reference within media groups
update.mediaGroups[type][group][label].playlists[0]=update.playlists[id];noChanges=false;}}});// remove mediaGroup labels and references that no longer exist in the newMain
removeOldMediaGroupLabels(update,newMain);if(newMain.minimumUpdatePeriod!==oldMain.minimumUpdatePeriod){noChanges=false;}if(noChanges){return null;}return update;};// SIDX should be equivalent if the URI and byteranges of the SIDX match.
// If the SIDXs have maps, the two maps should match,
// both `a` and `b` missing SIDXs is considered matching.
// If `a` or `b` but not both have a map, they aren't matching.
var equivalentSidx=function equivalentSidx(a,b){var neitherMap=Boolean(!a.map&&!b.map);var equivalentMap=neitherMap||Boolean(a.map&&b.map&&a.map.byterange.offset===b.map.byterange.offset&&a.map.byterange.length===b.map.byterange.length);return equivalentMap&&a.uri===b.uri&&a.byterange.offset===b.byterange.offset&&a.byterange.length===b.byterange.length;};// exported for testing
var compareSidxEntry=function compareSidxEntry(playlists,oldSidxMapping){var newSidxMapping={};for(var id in playlists){var playlist=playlists[id];var currentSidxInfo=playlist.sidx;if(currentSidxInfo){var key=generateSidxKey(currentSidxInfo);if(!oldSidxMapping[key]){break;}var savedSidxInfo=oldSidxMapping[key].sidxInfo;if(equivalentSidx(savedSidxInfo,currentSidxInfo)){newSidxMapping[key]=oldSidxMapping[key];}}}return newSidxMapping;};/**
       *  A function that filters out changed items as they need to be requested separately.
       *
       *  The method is exported for testing
       *
       *  @param {Object} main the parsed mpd XML returned via mpd-parser
       *  @param {Object} oldSidxMapping the SIDX to compare against
       */var filterChangedSidxMappings=function filterChangedSidxMappings(main,oldSidxMapping){var videoSidx=compareSidxEntry(main.playlists,oldSidxMapping);var mediaGroupSidx=videoSidx;forEachMediaGroup(main,function(properties,mediaType,groupKey,labelKey){if(properties.playlists&&properties.playlists.length){var playlists=properties.playlists;mediaGroupSidx=merge(mediaGroupSidx,compareSidxEntry(playlists,oldSidxMapping));}});return mediaGroupSidx;};var DashPlaylistLoader=/*#__PURE__*/function(_EventTarget){_inherits(DashPlaylistLoader,_EventTarget);var _super95=_createSuper(DashPlaylistLoader);// DashPlaylistLoader must accept either a src url or a playlist because subsequent
// playlist loader setups from media groups will expect to be able to pass a playlist
// (since there aren't external URLs to media playlists with DASH)
function DashPlaylistLoader(srcUrlOrPlaylist,vhs){var _this188;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var mainPlaylistLoader=arguments.length>3?arguments[3]:undefined;_classCallCheck(this,DashPlaylistLoader);_this188=_super95.call(this);_this188.mainPlaylistLoader_=mainPlaylistLoader||_assertThisInitialized2(_this188);if(!mainPlaylistLoader){_this188.isMain_=true;}var _options$withCredenti2=options.withCredentials,withCredentials=_options$withCredenti2===void 0?false:_options$withCredenti2;_this188.vhs_=vhs;_this188.withCredentials=withCredentials;_this188.addMetadataToTextTrack=options.addMetadataToTextTrack;if(!srcUrlOrPlaylist){throw new Error('A non-empty playlist URL or object is required');}// event naming?
_this188.on('minimumUpdatePeriod',function(){_this188.refreshXml_();});// live playlist staleness timeout
_this188.on('mediaupdatetimeout',function(){_this188.refreshMedia_(_this188.media().id);});_this188.state='HAVE_NOTHING';_this188.loadedPlaylists_={};_this188.logger_=logger('DashPlaylistLoader');// initialize the loader state
// The mainPlaylistLoader will be created with a string
if(_this188.isMain_){_this188.mainPlaylistLoader_.srcUrl=srcUrlOrPlaylist;// TODO: reset sidxMapping between period changes
// once multi-period is refactored
_this188.mainPlaylistLoader_.sidxMapping_={};}else{_this188.childPlaylist_=srcUrlOrPlaylist;}return _this188;}_createClass(DashPlaylistLoader,[{key:"requestErrored_",value:function requestErrored_(err,request,startingState){// disposed
if(!this.request){return true;}// pending request is cleared
this.request=null;if(err){// use the provided error object or create one
// based on the request/response
this.error=_typeof(err)==='object'&&!(err instanceof Error)?err:{status:request.status,message:'DASH request error at URL: '+request.uri,response:request.response,// MEDIA_ERR_NETWORK
code:2,metadata:err.metadata};if(startingState){this.state=startingState;}this.trigger('error');return true;}}/**
         * Verify that the container of the sidx segment can be parsed
         * and if it can, get and parse that segment.
         */},{key:"addSidxSegments_",value:function addSidxSegments_(playlist,startingState,cb){var _this189=this;var sidxKey=playlist.sidx&&generateSidxKey(playlist.sidx);// playlist lacks sidx or sidx segments were added to this playlist already.
if(!playlist.sidx||!sidxKey||this.mainPlaylistLoader_.sidxMapping_[sidxKey]){// keep this function async
this.mediaRequest_=window_1.setTimeout(function(){return cb(false);},0);return;}// resolve the segment URL relative to the playlist
var uri=resolveManifestRedirect(playlist.sidx.resolvedUri);var fin=function fin(err,request){// TODO: add error metdata here once we create an error type in video.js
if(_this189.requestErrored_(err,request,startingState)){return;}var sidxMapping=_this189.mainPlaylistLoader_.sidxMapping_;var sidx;try{sidx=parseSidx_1(toUint8(request.response).subarray(8));}catch(e){e.metadata={errorType:videojs.Error.DashManifestSidxParsingError};// sidx parsing failed.
_this189.requestErrored_(e,request,startingState);return;}sidxMapping[sidxKey]={sidxInfo:playlist.sidx,sidx:sidx};addSidxSegmentsToPlaylist$1(playlist,sidx,playlist.sidx.resolvedUri);return cb(true);};this.request=containerRequest(uri,this.vhs_.xhr,function(err,request,container,bytes){if(err){return fin(err,request);}if(!container||container!=='mp4'){var sidxContainer=container||'unknown';return fin({status:request.status,message:"Unsupported ".concat(sidxContainer," container type for sidx segment at URL: ").concat(uri),// response is just bytes in this case
// but we really don't want to return that.
response:'',playlist:playlist,internal:true,playlistExclusionDuration:Infinity,// MEDIA_ERR_NETWORK
code:2,metadata:{errorType:videojs.Error.UnsupportedSidxContainer,sidxContainer:sidxContainer}},request);}// if we already downloaded the sidx bytes in the container request, use them
var _playlist$sidx$bytera=playlist.sidx.byterange,offset=_playlist$sidx$bytera.offset,length=_playlist$sidx$bytera.length;if(bytes.length>=length+offset){return fin(err,{response:bytes.subarray(offset,offset+length),status:request.status,uri:request.uri});}// otherwise request sidx bytes
_this189.request=_this189.vhs_.xhr({uri:uri,responseType:'arraybuffer',headers:segmentXhrHeaders({byterange:playlist.sidx.byterange})},fin);});}},{key:"dispose",value:function dispose(){this.trigger('dispose');this.stopRequest();this.loadedPlaylists_={};window_1.clearTimeout(this.minimumUpdatePeriodTimeout_);window_1.clearTimeout(this.mediaRequest_);window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;this.mediaRequest_=null;this.minimumUpdatePeriodTimeout_=null;if(this.mainPlaylistLoader_.createMupOnMedia_){this.off('loadedmetadata',this.mainPlaylistLoader_.createMupOnMedia_);this.mainPlaylistLoader_.createMupOnMedia_=null;}this.off();}},{key:"hasPendingRequest",value:function hasPendingRequest(){return this.request||this.mediaRequest_;}},{key:"stopRequest",value:function stopRequest(){if(this.request){var oldRequest=this.request;this.request=null;oldRequest.onreadystatechange=null;oldRequest.abort();}}},{key:"media",value:function media(playlist){var _this190=this;// getter
if(!playlist){return this.media_;}// setter
if(this.state==='HAVE_NOTHING'){throw new Error('Cannot switch media playlist from '+this.state);}var startingState=this.state;// find the playlist object if the target playlist has been specified by URI
if(typeof playlist==='string'){if(!this.mainPlaylistLoader_.main.playlists[playlist]){throw new Error('Unknown playlist URI: '+playlist);}playlist=this.mainPlaylistLoader_.main.playlists[playlist];}var mediaChange=!this.media_||playlist.id!==this.media_.id;// switch to previously loaded playlists immediately
if(mediaChange&&this.loadedPlaylists_[playlist.id]&&this.loadedPlaylists_[playlist.id].endList){this.state='HAVE_METADATA';this.media_=playlist;// trigger media change if the active media has been updated
if(mediaChange){this.trigger('mediachanging');this.trigger('mediachange');}return;}// switching to the active playlist is a no-op
if(!mediaChange){return;}// switching from an already loaded playlist
if(this.media_){this.trigger('mediachanging');}this.addSidxSegments_(playlist,startingState,function(sidxChanged){// everything is ready just continue to haveMetadata
_this190.haveMetadata({startingState:startingState,playlist:playlist});});}},{key:"haveMetadata",value:function haveMetadata(_ref177){var startingState=_ref177.startingState,playlist=_ref177.playlist;this.state='HAVE_METADATA';this.loadedPlaylists_[playlist.id]=playlist;this.mediaRequest_=null;// This will trigger loadedplaylist
this.refreshMedia_(playlist.id);// fire loadedmetadata the first time a media playlist is loaded
// to resolve setup of media groups
if(startingState==='HAVE_MAIN_MANIFEST'){this.trigger('loadedmetadata');}else{// trigger media change if the active media has been updated
this.trigger('mediachange');}}},{key:"pause",value:function pause(){if(this.mainPlaylistLoader_.createMupOnMedia_){this.off('loadedmetadata',this.mainPlaylistLoader_.createMupOnMedia_);this.mainPlaylistLoader_.createMupOnMedia_=null;}this.stopRequest();window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;if(this.isMain_){window_1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_=null;}if(this.state==='HAVE_NOTHING'){// If we pause the loader before any data has been retrieved, its as if we never
// started, so reset to an unstarted state.
this.started=false;}}},{key:"load",value:function load(isFinalRendition){var _this191=this;window_1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;var media=this.media();if(isFinalRendition){var delay=media?media.targetDuration/2*1000:5*1000;this.mediaUpdateTimeout=window_1.setTimeout(function(){return _this191.load();},delay);return;}// because the playlists are internal to the manifest, load should either load the
// main manifest, or do nothing but trigger an event
if(!this.started){this.start();return;}if(media&&!media.endList){// Check to see if this is the main loader and the MUP was cleared (this happens
// when the loader was paused). `media` should be set at this point since one is always
// set during `start()`.
if(this.isMain_&&!this.minimumUpdatePeriodTimeout_){// Trigger minimumUpdatePeriod to refresh the main manifest
this.trigger('minimumUpdatePeriod');// Since there was no prior minimumUpdatePeriodTimeout it should be recreated
this.updateMinimumUpdatePeriodTimeout_();}this.trigger('mediaupdatetimeout');}else{this.trigger('loadedplaylist');}}},{key:"start",value:function start(){var _this192=this;this.started=true;// We don't need to request the main manifest again
// Call this asynchronously to match the xhr request behavior below
if(!this.isMain_){this.mediaRequest_=window_1.setTimeout(function(){return _this192.haveMain_();},0);return;}this.requestMain_(function(req,mainChanged){_this192.haveMain_();if(!_this192.hasPendingRequest()&&!_this192.media_){_this192.media(_this192.mainPlaylistLoader_.main.playlists[0]);}});}},{key:"requestMain_",value:function requestMain_(cb){var _this193=this;this.request=this.vhs_.xhr({uri:this.mainPlaylistLoader_.srcUrl,withCredentials:this.withCredentials,requestType:'dash-manifest'},function(error,req){if(_this193.requestErrored_(error,req)){if(_this193.state==='HAVE_NOTHING'){_this193.started=false;}return;}var mainChanged=req.responseText!==_this193.mainPlaylistLoader_.mainXml_;_this193.mainPlaylistLoader_.mainXml_=req.responseText;if(req.responseHeaders&&req.responseHeaders.date){_this193.mainLoaded_=Date.parse(req.responseHeaders.date);}else{_this193.mainLoaded_=Date.now();}_this193.mainPlaylistLoader_.srcUrl=resolveManifestRedirect(_this193.mainPlaylistLoader_.srcUrl,req);if(mainChanged){_this193.handleMain_();_this193.syncClientServerClock_(function(){return cb(req,mainChanged);});return;}return cb(req,mainChanged);});}/**
         * Parses the main xml for UTCTiming node to sync the client clock to the server
         * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.
         *
         * @param {Function} done
         *        Function to call when clock sync has completed
         */},{key:"syncClientServerClock_",value:function syncClientServerClock_(done){var _this194=this;var utcTiming=parseUTCTiming(this.mainPlaylistLoader_.mainXml_);// No UTCTiming element found in the mpd. Use Date header from mpd request as the
// server clock
if(utcTiming===null){this.mainPlaylistLoader_.clientOffset_=this.mainLoaded_-Date.now();return done();}if(utcTiming.method==='DIRECT'){this.mainPlaylistLoader_.clientOffset_=utcTiming.value-Date.now();return done();}this.request=this.vhs_.xhr({uri:resolveUrl(this.mainPlaylistLoader_.srcUrl,utcTiming.value),method:utcTiming.method,withCredentials:this.withCredentials,requestType:'dash-clock-sync'},function(error,req){// disposed
if(!_this194.request){return;}if(error){// sync request failed, fall back to using date header from mpd
// TODO: log warning
_this194.mainPlaylistLoader_.clientOffset_=_this194.mainLoaded_-Date.now();return done();}var serverTime;if(utcTiming.method==='HEAD'){if(!req.responseHeaders||!req.responseHeaders.date){// expected date header not preset, fall back to using date header from mpd
// TODO: log warning
serverTime=_this194.mainLoaded_;}else{serverTime=Date.parse(req.responseHeaders.date);}}else{serverTime=Date.parse(req.responseText);}_this194.mainPlaylistLoader_.clientOffset_=serverTime-Date.now();done();});}},{key:"haveMain_",value:function haveMain_(){this.state='HAVE_MAIN_MANIFEST';if(this.isMain_){// We have the main playlist at this point, so
// trigger this to allow PlaylistController
// to make an initial playlist selection
this.trigger('loadedplaylist');}else if(!this.media_){// no media playlist was specifically selected so select
// the one the child playlist loader was created with
this.media(this.childPlaylist_);}}},{key:"handleMain_",value:function handleMain_(){// clear media request
this.mediaRequest_=null;var oldMain=this.mainPlaylistLoader_.main;var newMain=parseMainXml({mainXml:this.mainPlaylistLoader_.mainXml_,srcUrl:this.mainPlaylistLoader_.srcUrl,clientOffset:this.mainPlaylistLoader_.clientOffset_,sidxMapping:this.mainPlaylistLoader_.sidxMapping_,previousManifest:oldMain});// if we have an old main to compare the new main against
if(oldMain){newMain=updateMain(oldMain,newMain,this.mainPlaylistLoader_.sidxMapping_);}// only update main if we have a new main
this.mainPlaylistLoader_.main=newMain?newMain:oldMain;var location=this.mainPlaylistLoader_.main.locations&&this.mainPlaylistLoader_.main.locations[0];if(location&&location!==this.mainPlaylistLoader_.srcUrl){this.mainPlaylistLoader_.srcUrl=location;}if(!oldMain||newMain&&newMain.minimumUpdatePeriod!==oldMain.minimumUpdatePeriod){this.updateMinimumUpdatePeriodTimeout_();}this.addEventStreamToMetadataTrack_(newMain);return Boolean(newMain);}},{key:"updateMinimumUpdatePeriodTimeout_",value:function updateMinimumUpdatePeriodTimeout_(){var mpl=this.mainPlaylistLoader_;// cancel any pending creation of mup on media
// a new one will be added if needed.
if(mpl.createMupOnMedia_){mpl.off('loadedmetadata',mpl.createMupOnMedia_);mpl.createMupOnMedia_=null;}// clear any pending timeouts
if(mpl.minimumUpdatePeriodTimeout_){window_1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);mpl.minimumUpdatePeriodTimeout_=null;}var mup=mpl.main&&mpl.main.minimumUpdatePeriod;// If the minimumUpdatePeriod has a value of 0, that indicates that the current
// MPD has no future validity, so a new one will need to be acquired when new
// media segments are to be made available. Thus, we use the target duration
// in this case
if(mup===0){if(mpl.media()){mup=mpl.media().targetDuration*1000;}else{mpl.createMupOnMedia_=mpl.updateMinimumUpdatePeriodTimeout_;mpl.one('loadedmetadata',mpl.createMupOnMedia_);}}// if minimumUpdatePeriod is invalid or <= zero, which
// can happen when a live video becomes VOD. skip timeout
// creation.
if(typeof mup!=='number'||mup<=0){if(mup<0){this.logger_("found invalid minimumUpdatePeriod of ".concat(mup,", not setting a timeout"));}return;}this.createMUPTimeout_(mup);}},{key:"createMUPTimeout_",value:function createMUPTimeout_(mup){var mpl=this.mainPlaylistLoader_;mpl.minimumUpdatePeriodTimeout_=window_1.setTimeout(function(){mpl.minimumUpdatePeriodTimeout_=null;mpl.trigger('minimumUpdatePeriod');mpl.createMUPTimeout_(mup);},mup);}/**
         * Sends request to refresh the main xml and updates the parsed main manifest
         */},{key:"refreshXml_",value:function refreshXml_(){var _this195=this;this.requestMain_(function(req,mainChanged){if(!mainChanged){return;}if(_this195.media_){_this195.media_=_this195.mainPlaylistLoader_.main.playlists[_this195.media_.id];}// This will filter out updated sidx info from the mapping
_this195.mainPlaylistLoader_.sidxMapping_=filterChangedSidxMappings(_this195.mainPlaylistLoader_.main,_this195.mainPlaylistLoader_.sidxMapping_);_this195.addSidxSegments_(_this195.media(),_this195.state,function(sidxChanged){// TODO: do we need to reload the current playlist?
_this195.refreshMedia_(_this195.media().id);});});}/**
         * Refreshes the media playlist by re-parsing the main xml and updating playlist
         * references. If this is an alternate loader, the updated parsed manifest is retrieved
         * from the main loader.
         */},{key:"refreshMedia_",value:function refreshMedia_(mediaID){var _this196=this;if(!mediaID){throw new Error('refreshMedia_ must take a media id');}// for main we have to reparse the main xml
// to re-create segments based on current timing values
// which may change media. We only skip updating the main manifest
// if this is the first time this.media_ is being set.
// as main was just parsed in that case.
if(this.media_&&this.isMain_){this.handleMain_();}var playlists=this.mainPlaylistLoader_.main.playlists;var mediaChanged=!this.media_||this.media_!==playlists[mediaID];if(mediaChanged){this.media_=playlists[mediaID];}else{this.trigger('playlistunchanged');}if(!this.mediaUpdateTimeout){var createMediaUpdateTimeout=function createMediaUpdateTimeout(){if(_this196.media().endList){return;}_this196.mediaUpdateTimeout=window_1.setTimeout(function(){_this196.trigger('mediaupdatetimeout');createMediaUpdateTimeout();},refreshDelay(_this196.media(),Boolean(mediaChanged)));};createMediaUpdateTimeout();}this.trigger('loadedplaylist');}/**
         * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.
         *
         * @param {manifest} newMain the newly parsed manifest
         */},{key:"addEventStreamToMetadataTrack_",value:function addEventStreamToMetadataTrack_(newMain){// Only add new event stream metadata if we have a new manifest.
if(newMain&&this.mainPlaylistLoader_.main.eventStream){// convert EventStream to ID3-like data.
var metadataArray=this.mainPlaylistLoader_.main.eventStream.map(function(eventStreamNode){return{cueTime:eventStreamNode.start,frames:[{data:eventStreamNode.messageData}]};});this.addMetadataToTextTrack('EventStream',metadataArray,this.mainPlaylistLoader_.main.duration);}}/**
         * Returns the key ID set from a playlist
         *
         * @param {playlist} playlist to fetch the key ID set from.
         * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.
         */},{key:"getKeyIdSet",value:function getKeyIdSet(playlist){if(playlist.contentProtection){var keyIds=new Set();for(var keysystem in playlist.contentProtection){var defaultKID=playlist.contentProtection[keysystem].attributes['cenc:default_KID'];if(defaultKID){// DASH keyIds are separated by dashes.
keyIds.add(defaultKID.replace(/-/g,'').toLowerCase());}}return keyIds;}}}]);return DashPlaylistLoader;}(EventTarget);var Config={GOAL_BUFFER_LENGTH:30,MAX_GOAL_BUFFER_LENGTH:60,BACK_BUFFER_LENGTH:30,GOAL_BUFFER_LENGTH_RATE:1,// 0.5 MB/s
INITIAL_BANDWIDTH:4194304,// A fudge factor to apply to advertised playlist bitrates to account for
// temporary flucations in client bandwidth
BANDWIDTH_VARIANCE:1.2,// How much of the buffer must be filled before we consider upswitching
BUFFER_LOW_WATER_LINE:0,MAX_BUFFER_LOW_WATER_LINE:30,// TODO: Remove this when experimentalBufferBasedABR is removed
EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE:16,BUFFER_LOW_WATER_LINE_RATE:1,// If the buffer is greater than the high water line, we won't switch down
BUFFER_HIGH_WATER_LINE:30};var stringToArrayBuffer=function stringToArrayBuffer(string){var view=new Uint8Array(new ArrayBuffer(string.length));for(var _i180=0;_i180<string.length;_i180++){view[_i180]=string.charCodeAt(_i180);}return view.buffer;};/* global Blob, BlobBuilder, Worker */ // unify worker interface
var browserWorkerPolyFill=function browserWorkerPolyFill(workerObj){// node only supports on/off
workerObj.on=workerObj.addEventListener;workerObj.off=workerObj.removeEventListener;return workerObj;};var createObjectURL=function createObjectURL(str){try{return URL.createObjectURL(new Blob([str],{type:'application/javascript'}));}catch(e){var blob=new BlobBuilder();blob.append(str);return URL.createObjectURL(blob.getBlob());}};var factory=function factory(code){return function(){var objectUrl=createObjectURL(code);var worker=browserWorkerPolyFill(new Worker(objectUrl));worker.objURL=objectUrl;var terminate=worker.terminate;worker.on=worker.addEventListener;worker.off=worker.removeEventListener;worker.terminate=function(){URL.revokeObjectURL(objectUrl);return terminate.call(this);};return worker;};};var transform=function transform(code){return"var browserWorkerPolyFill = ".concat(browserWorkerPolyFill.toString(),";\n")+'browserWorkerPolyFill(self);\n'+code;};var getWorkerString=function getWorkerString(fn){return fn.toString().replace(/^function.+?{/,'').slice(0,-1);};/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */var workerCode$1=transform(getWorkerString(function(){var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * A lightweight readable stream implemention that handles event dispatching.
         * Objects that inherit from streams should call init in their constructors.
         */var Stream$8=function Stream$8(){this.init=function(){var listeners={};/**
             * Add a listener for a specified event type.
             * @param type {string} the event name
             * @param listener {function} the callback to be invoked when an event of
             * the specified type occurs
             */this.on=function(type,listener){if(!listeners[type]){listeners[type]=[];}listeners[type]=listeners[type].concat(listener);};/**
             * Remove a listener for a specified event type.
             * @param type {string} the event name
             * @param listener {function} a function previously registered for this
             * type of event through `on`
             */this.off=function(type,listener){var index;if(!listeners[type]){return false;}index=listeners[type].indexOf(listener);listeners[type]=listeners[type].slice();listeners[type].splice(index,1);return index>-1;};/**
             * Trigger an event of the specified type on this stream. Any additional
             * arguments to this function are passed as parameters to event listeners.
             * @param type {string} the event name
             */this.trigger=function(type){var callbacks,i,length,args;callbacks=listeners[type];if(!callbacks){return;}// Slicing the arguments on every invocation of this method
// can add a significant amount of overhead. Avoid the
// intermediate object creation for the common case of a
// single callback argument
if(arguments.length===2){length=callbacks.length;for(i=0;i<length;++i){callbacks[i].call(this,arguments[1]);}}else{args=[];i=arguments.length;for(i=1;i<arguments.length;++i){args.push(arguments[i]);}length=callbacks.length;for(i=0;i<length;++i){callbacks[i].apply(this,args);}}};/**
             * Destroys the stream and cleans up.
             */this.dispose=function(){listeners={};};};};/**
         * Forwards all `data` events on this stream to the destination stream. The
         * destination stream should provide a method `push` to receive the data
         * events as they arrive.
         * @param destination {stream} the stream that will receive all `data` events
         * @param autoFlush {boolean} if false, we will not call `flush` on the destination
         *                            when the current stream emits a 'done' event
         * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options
         */Stream$8.prototype.pipe=function(destination){this.on('data',function(data){destination.push(data);});this.on('done',function(flushSource){destination.flush(flushSource);});this.on('partialdone',function(flushSource){destination.partialFlush(flushSource);});this.on('endedtimeline',function(flushSource){destination.endTimeline(flushSource);});this.on('reset',function(flushSource){destination.reset(flushSource);});return destination;};// Default stream functions that are expected to be overridden to perform
// actual work. These are provided by the prototype as a sort of no-op
// implementation so that we don't have to check for their existence in the
// `pipe` function above.
Stream$8.prototype.push=function(data){this.trigger('data',data);};Stream$8.prototype.flush=function(flushSource){this.trigger('done',flushSource);};Stream$8.prototype.partialFlush=function(flushSource){this.trigger('partialdone',flushSource);};Stream$8.prototype.endTimeline=function(flushSource){this.trigger('endedtimeline',flushSource);};Stream$8.prototype.reset=function(flushSource){this.trigger('reset',flushSource);};var stream=Stream$8;var MAX_UINT32$1=Math.pow(2,32);var getUint64$3=function getUint64$3(uint8){var dv=new DataView(uint8.buffer,uint8.byteOffset,uint8.byteLength);var value;if(dv.getBigUint64){value=dv.getBigUint64(0);if(value<Number.MAX_SAFE_INTEGER){return Number(value);}return value;}return dv.getUint32(0)*MAX_UINT32$1+dv.getUint32(4);};var numbers={getUint64:getUint64$3,MAX_UINT32:MAX_UINT32$1};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Functions that generate fragmented MP4s suitable for use with Media
         * Source Extensions.
         */var MAX_UINT32=numbers.MAX_UINT32;var box,dinf,esds,ftyp,mdat,mfhd,minf,moof,moov,mvex,mvhd,trak,tkhd,mdia,mdhd,hdlr,sdtp,stbl,stsd,traf,trex,trun$1,types,MAJOR_BRAND,MINOR_VERSION,AVC1_BRAND,VIDEO_HDLR,AUDIO_HDLR,HDLR_TYPES,VMHD,SMHD,DREF,STCO,STSC,STSZ,STTS;// pre-calculate constants
(function(){var i;types={avc1:[],// codingname
avcC:[],btrt:[],dinf:[],dref:[],esds:[],ftyp:[],hdlr:[],mdat:[],mdhd:[],mdia:[],mfhd:[],minf:[],moof:[],moov:[],mp4a:[],// codingname
mvex:[],mvhd:[],pasp:[],sdtp:[],smhd:[],stbl:[],stco:[],stsc:[],stsd:[],stsz:[],stts:[],styp:[],tfdt:[],tfhd:[],traf:[],trak:[],trun:[],trex:[],tkhd:[],vmhd:[]};// In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we
// don't throw an error
if(typeof Uint8Array==='undefined'){return;}for(i in types){if(types.hasOwnProperty(i)){types[i]=[i.charCodeAt(0),i.charCodeAt(1),i.charCodeAt(2),i.charCodeAt(3)];}}MAJOR_BRAND=new Uint8Array(['i'.charCodeAt(0),'s'.charCodeAt(0),'o'.charCodeAt(0),'m'.charCodeAt(0)]);AVC1_BRAND=new Uint8Array(['a'.charCodeAt(0),'v'.charCodeAt(0),'c'.charCodeAt(0),'1'.charCodeAt(0)]);MINOR_VERSION=new Uint8Array([0,0,0,1]);VIDEO_HDLR=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x00,// pre_defined
0x76,0x69,0x64,0x65,// handler_type: 'vide'
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x56,0x69,0x64,0x65,0x6f,0x48,0x61,0x6e,0x64,0x6c,0x65,0x72,0x00// name: 'VideoHandler'
]);AUDIO_HDLR=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x00,// pre_defined
0x73,0x6f,0x75,0x6e,// handler_type: 'soun'
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x53,0x6f,0x75,0x6e,0x64,0x48,0x61,0x6e,0x64,0x6c,0x65,0x72,0x00// name: 'SoundHandler'
]);HDLR_TYPES={video:VIDEO_HDLR,audio:AUDIO_HDLR};DREF=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x01,// entry_count
0x00,0x00,0x00,0x0c,// entry_size
0x75,0x72,0x6c,0x20,// 'url' type
0x00,// version 0
0x00,0x00,0x01// entry_flags
]);SMHD=new Uint8Array([0x00,// version
0x00,0x00,0x00,// flags
0x00,0x00,// balance, 0 means centered
0x00,0x00// reserved
]);STCO=new Uint8Array([0x00,// version
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x00// entry_count
]);STSC=STCO;STSZ=new Uint8Array([0x00,// version
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x00,// sample_size
0x00,0x00,0x00,0x00// sample_count
]);STTS=STCO;VMHD=new Uint8Array([0x00,// version
0x00,0x00,0x01,// flags
0x00,0x00,// graphicsmode
0x00,0x00,0x00,0x00,0x00,0x00// opcolor
]);})();box=function box(type){var payload=[],size=0,i,result,view;for(i=1;i<arguments.length;i++){payload.push(arguments[i]);}i=payload.length;// calculate the total size we need to allocate
while(i--){size+=payload[i].byteLength;}result=new Uint8Array(size+8);view=new DataView(result.buffer,result.byteOffset,result.byteLength);view.setUint32(0,result.byteLength);result.set(type,4);// copy the payload into the result
for(i=0,size=8;i<payload.length;i++){result.set(payload[i],size);size+=payload[i].byteLength;}return result;};dinf=function dinf(){return box(types.dinf,box(types.dref,DREF));};esds=function esds(track){return box(types.esds,new Uint8Array([0x00,// version
0x00,0x00,0x00,// flags
// ES_Descriptor
0x03,// tag, ES_DescrTag
0x19,// length
0x00,0x00,// ES_ID
0x00,// streamDependenceFlag, URL_flag, reserved, streamPriority
// DecoderConfigDescriptor
0x04,// tag, DecoderConfigDescrTag
0x11,// length
0x40,// object type
0x15,// streamType
0x00,0x06,0x00,// bufferSizeDB
0x00,0x00,0xda,0xc0,// maxBitrate
0x00,0x00,0xda,0xc0,// avgBitrate
// DecoderSpecificInfo
0x05,// tag, DecoderSpecificInfoTag
0x02,// length
// ISO/IEC 14496-3, AudioSpecificConfig
// for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35
track.audioobjecttype<<3|track.samplingfrequencyindex>>>1,track.samplingfrequencyindex<<7|track.channelcount<<3,0x06,0x01,0x02// GASpecificConfig
]));};ftyp=function ftyp(){return box(types.ftyp,MAJOR_BRAND,MINOR_VERSION,MAJOR_BRAND,AVC1_BRAND);};hdlr=function hdlr(type){return box(types.hdlr,HDLR_TYPES[type]);};mdat=function mdat(data){return box(types.mdat,data);};mdhd=function mdhd(track){var result=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x02,// creation_time
0x00,0x00,0x00,0x03,// modification_time
0x00,0x01,0x5f,0x90,// timescale, 90,000 "ticks" per second
track.duration>>>24&0xFF,track.duration>>>16&0xFF,track.duration>>>8&0xFF,track.duration&0xFF,// duration
0x55,0xc4,// 'und' language (undetermined)
0x00,0x00]);// Use the sample rate from the track metadata, when it is
// defined. The sample rate can be parsed out of an ADTS header, for
// instance.
if(track.samplerate){result[12]=track.samplerate>>>24&0xFF;result[13]=track.samplerate>>>16&0xFF;result[14]=track.samplerate>>>8&0xFF;result[15]=track.samplerate&0xFF;}return box(types.mdhd,result);};mdia=function mdia(track){return box(types.mdia,mdhd(track),hdlr(track.type),minf(track));};mfhd=function mfhd(sequenceNumber){return box(types.mfhd,new Uint8Array([0x00,0x00,0x00,0x00,// flags
(sequenceNumber&0xFF000000)>>24,(sequenceNumber&0xFF0000)>>16,(sequenceNumber&0xFF00)>>8,sequenceNumber&0xFF// sequence_number
]));};minf=function minf(track){return box(types.minf,track.type==='video'?box(types.vmhd,VMHD):box(types.smhd,SMHD),dinf(),stbl(track));};moof=function moof(sequenceNumber,tracks){var trackFragments=[],i=tracks.length;// build traf boxes for each track fragment
while(i--){trackFragments[i]=traf(tracks[i]);}return box.apply(null,[types.moof,mfhd(sequenceNumber)].concat(trackFragments));};/**
         * Returns a movie box.
         * @param tracks {array} the tracks associated with this movie
         * @see ISO/IEC 14496-12:2012(E), section 8.2.1
         */moov=function moov(tracks){var i=tracks.length,boxes=[];while(i--){boxes[i]=trak(tracks[i]);}return box.apply(null,[types.moov,mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));};mvex=function mvex(tracks){var i=tracks.length,boxes=[];while(i--){boxes[i]=trex(tracks[i]);}return box.apply(null,[types.mvex].concat(boxes));};mvhd=function mvhd(duration){var bytes=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x01,// creation_time
0x00,0x00,0x00,0x02,// modification_time
0x00,0x01,0x5f,0x90,// timescale, 90,000 "ticks" per second
(duration&0xFF000000)>>24,(duration&0xFF0000)>>16,(duration&0xFF00)>>8,duration&0xFF,// duration
0x00,0x01,0x00,0x00,// 1.0 rate
0x01,0x00,// 1.0 volume
0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,// transformation: unity matrix
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// pre_defined
0xff,0xff,0xff,0xff// next_track_ID
]);return box(types.mvhd,bytes);};sdtp=function sdtp(track){var samples=track.samples||[],bytes=new Uint8Array(4+samples.length),flags,i;// leave the full box header (4 bytes) all zero
// write the sample table
for(i=0;i<samples.length;i++){flags=samples[i].flags;bytes[i+4]=flags.dependsOn<<4|flags.isDependedOn<<2|flags.hasRedundancy;}return box(types.sdtp,bytes);};stbl=function stbl(track){return box(types.stbl,stsd(track),box(types.stts,STTS),box(types.stsc,STSC),box(types.stsz,STSZ),box(types.stco,STCO));};(function(){var videoSample,audioSample;stsd=function stsd(track){return box(types.stsd,new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
0x00,0x00,0x00,0x01]),track.type==='video'?videoSample(track):audioSample(track));};videoSample=function videoSample(track){var sps=track.sps||[],pps=track.pps||[],sequenceParameterSets=[],pictureParameterSets=[],i,avc1Box;// assemble the SPSs
for(i=0;i<sps.length;i++){sequenceParameterSets.push((sps[i].byteLength&0xFF00)>>>8);sequenceParameterSets.push(sps[i].byteLength&0xFF);// sequenceParameterSetLength
sequenceParameterSets=sequenceParameterSets.concat(Array.prototype.slice.call(sps[i]));// SPS
}// assemble the PPSs
for(i=0;i<pps.length;i++){pictureParameterSets.push((pps[i].byteLength&0xFF00)>>>8);pictureParameterSets.push(pps[i].byteLength&0xFF);pictureParameterSets=pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));}avc1Box=[types.avc1,new Uint8Array([0x00,0x00,0x00,0x00,0x00,0x00,// reserved
0x00,0x01,// data_reference_index
0x00,0x00,// pre_defined
0x00,0x00,// reserved
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// pre_defined
(track.width&0xff00)>>8,track.width&0xff,// width
(track.height&0xff00)>>8,track.height&0xff,// height
0x00,0x48,0x00,0x00,// horizresolution
0x00,0x48,0x00,0x00,// vertresolution
0x00,0x00,0x00,0x00,// reserved
0x00,0x01,// frame_count
0x13,0x76,0x69,0x64,0x65,0x6f,0x6a,0x73,0x2d,0x63,0x6f,0x6e,0x74,0x72,0x69,0x62,0x2d,0x68,0x6c,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// compressorname
0x00,0x18,// depth = 24
0x11,0x11// pre_defined = -1
]),box(types.avcC,new Uint8Array([0x01,// configurationVersion
track.profileIdc,// AVCProfileIndication
track.profileCompatibility,// profile_compatibility
track.levelIdc,// AVCLevelIndication
0xff// lengthSizeMinusOne, hard-coded to 4 bytes
].concat([sps.length],// numOfSequenceParameterSets
sequenceParameterSets,// "SPS"
[pps.length],// numOfPictureParameterSets
pictureParameterSets// "PPS"
))),box(types.btrt,new Uint8Array([0x00,0x1c,0x9c,0x80,// bufferSizeDB
0x00,0x2d,0xc6,0xc0,// maxBitrate
0x00,0x2d,0xc6,0xc0// avgBitrate
]))];if(track.sarRatio){var hSpacing=track.sarRatio[0],vSpacing=track.sarRatio[1];avc1Box.push(box(types.pasp,new Uint8Array([(hSpacing&0xFF000000)>>24,(hSpacing&0xFF0000)>>16,(hSpacing&0xFF00)>>8,hSpacing&0xFF,(vSpacing&0xFF000000)>>24,(vSpacing&0xFF0000)>>16,(vSpacing&0xFF00)>>8,vSpacing&0xFF])));}return box.apply(null,avc1Box);};audioSample=function audioSample(track){return box(types.mp4a,new Uint8Array([// SampleEntry, ISO/IEC 14496-12
0x00,0x00,0x00,0x00,0x00,0x00,// reserved
0x00,0x01,// data_reference_index
// AudioSampleEntry, ISO/IEC 14496-12
0x00,0x00,0x00,0x00,// reserved
0x00,0x00,0x00,0x00,// reserved
(track.channelcount&0xff00)>>8,track.channelcount&0xff,// channelcount
(track.samplesize&0xff00)>>8,track.samplesize&0xff,// samplesize
0x00,0x00,// pre_defined
0x00,0x00,// reserved
(track.samplerate&0xff00)>>8,track.samplerate&0xff,0x00,0x00// samplerate, 16.16
// MP4AudioSampleEntry, ISO/IEC 14496-14
]),esds(track));};})();tkhd=function tkhd(track){var result=new Uint8Array([0x00,// version 0
0x00,0x00,0x07,// flags
0x00,0x00,0x00,0x00,// creation_time
0x00,0x00,0x00,0x00,// modification_time
(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID
0x00,0x00,0x00,0x00,// reserved
(track.duration&0xFF000000)>>24,(track.duration&0xFF0000)>>16,(track.duration&0xFF00)>>8,track.duration&0xFF,// duration
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// reserved
0x00,0x00,// layer
0x00,0x00,// alternate_group
0x01,0x00,// non-audio track volume
0x00,0x00,// reserved
0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,// transformation: unity matrix
(track.width&0xFF00)>>8,track.width&0xFF,0x00,0x00,// width
(track.height&0xFF00)>>8,track.height&0xFF,0x00,0x00// height
]);return box(types.tkhd,result);};/**
         * Generate a track fragment (traf) box. A traf box collects metadata
         * about tracks in a movie fragment (moof) box.
         */traf=function traf(track){var trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun,sampleDependencyTable,dataOffset,upperWordBaseMediaDecodeTime,lowerWordBaseMediaDecodeTime;trackFragmentHeader=box(types.tfhd,new Uint8Array([0x00,// version 0
0x00,0x00,0x3a,// flags
(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID
0x00,0x00,0x00,0x01,// sample_description_index
0x00,0x00,0x00,0x00,// default_sample_duration
0x00,0x00,0x00,0x00,// default_sample_size
0x00,0x00,0x00,0x00// default_sample_flags
]));upperWordBaseMediaDecodeTime=Math.floor(track.baseMediaDecodeTime/MAX_UINT32);lowerWordBaseMediaDecodeTime=Math.floor(track.baseMediaDecodeTime%MAX_UINT32);trackFragmentDecodeTime=box(types.tfdt,new Uint8Array([0x01,// version 1
0x00,0x00,0x00,// flags
// baseMediaDecodeTime
upperWordBaseMediaDecodeTime>>>24&0xFF,upperWordBaseMediaDecodeTime>>>16&0xFF,upperWordBaseMediaDecodeTime>>>8&0xFF,upperWordBaseMediaDecodeTime&0xFF,lowerWordBaseMediaDecodeTime>>>24&0xFF,lowerWordBaseMediaDecodeTime>>>16&0xFF,lowerWordBaseMediaDecodeTime>>>8&0xFF,lowerWordBaseMediaDecodeTime&0xFF]));// the data offset specifies the number of bytes from the start of
// the containing moof to the first payload byte of the associated
// mdat
dataOffset=32+// tfhd
20+// tfdt
8+// traf header
16+// mfhd
8+// moof header
8;// mdat header
// audio tracks require less metadata
if(track.type==='audio'){trackFragmentRun=trun$1(track,dataOffset);return box(types.traf,trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun);}// video tracks should contain an independent and disposable samples
// box (sdtp)
// generate one and adjust offsets to match
sampleDependencyTable=sdtp(track);trackFragmentRun=trun$1(track,sampleDependencyTable.length+dataOffset);return box(types.traf,trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun,sampleDependencyTable);};/**
         * Generate a track box.
         * @param track {object} a track definition
         * @return {Uint8Array} the track box
         */trak=function trak(track){track.duration=track.duration||0xffffffff;return box(types.trak,tkhd(track),mdia(track));};trex=function trex(track){var result=new Uint8Array([0x00,// version 0
0x00,0x00,0x00,// flags
(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID
0x00,0x00,0x00,0x01,// default_sample_description_index
0x00,0x00,0x00,0x00,// default_sample_duration
0x00,0x00,0x00,0x00,// default_sample_size
0x00,0x01,0x00,0x01// default_sample_flags
]);// the last two bytes of default_sample_flags is the sample
// degradation priority, a hint about the importance of this sample
// relative to others. Lower the degradation priority for all sample
// types other than video.
if(track.type!=='video'){result[result.length-1]=0x00;}return box(types.trex,result);};(function(){var audioTrun,videoTrun,trunHeader;// This method assumes all samples are uniform. That is, if a
// duration is present for the first sample, it will be present for
// all subsequent samples.
// see ISO/IEC 14496-12:2012, Section 8.8.8.1
trunHeader=function trunHeader(samples,offset){var durationPresent=0,sizePresent=0,flagsPresent=0,compositionTimeOffset=0;// trun flag constants
if(samples.length){if(samples[0].duration!==undefined){durationPresent=0x1;}if(samples[0].size!==undefined){sizePresent=0x2;}if(samples[0].flags!==undefined){flagsPresent=0x4;}if(samples[0].compositionTimeOffset!==undefined){compositionTimeOffset=0x8;}}return[0x00,// version 0
0x00,durationPresent|sizePresent|flagsPresent|compositionTimeOffset,0x01,// flags
(samples.length&0xFF000000)>>>24,(samples.length&0xFF0000)>>>16,(samples.length&0xFF00)>>>8,samples.length&0xFF,// sample_count
(offset&0xFF000000)>>>24,(offset&0xFF0000)>>>16,(offset&0xFF00)>>>8,offset&0xFF// data_offset
];};videoTrun=function videoTrun(track,offset){var bytesOffest,bytes,header,samples,sample,i;samples=track.samples||[];offset+=8+12+16*samples.length;header=trunHeader(samples,offset);bytes=new Uint8Array(header.length+samples.length*16);bytes.set(header);bytesOffest=header.length;for(i=0;i<samples.length;i++){sample=samples[i];bytes[bytesOffest++]=(sample.duration&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.duration&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.duration&0xFF00)>>>8;bytes[bytesOffest++]=sample.duration&0xFF;// sample_duration
bytes[bytesOffest++]=(sample.size&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.size&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.size&0xFF00)>>>8;bytes[bytesOffest++]=sample.size&0xFF;// sample_size
bytes[bytesOffest++]=sample.flags.isLeading<<2|sample.flags.dependsOn;bytes[bytesOffest++]=sample.flags.isDependedOn<<6|sample.flags.hasRedundancy<<4|sample.flags.paddingValue<<1|sample.flags.isNonSyncSample;bytes[bytesOffest++]=sample.flags.degradationPriority&0xF0<<8;bytes[bytesOffest++]=sample.flags.degradationPriority&0x0F;// sample_flags
bytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF00)>>>8;bytes[bytesOffest++]=sample.compositionTimeOffset&0xFF;// sample_composition_time_offset
}return box(types.trun,bytes);};audioTrun=function audioTrun(track,offset){var bytes,bytesOffest,header,samples,sample,i;samples=track.samples||[];offset+=8+12+8*samples.length;header=trunHeader(samples,offset);bytes=new Uint8Array(header.length+samples.length*8);bytes.set(header);bytesOffest=header.length;for(i=0;i<samples.length;i++){sample=samples[i];bytes[bytesOffest++]=(sample.duration&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.duration&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.duration&0xFF00)>>>8;bytes[bytesOffest++]=sample.duration&0xFF;// sample_duration
bytes[bytesOffest++]=(sample.size&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.size&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.size&0xFF00)>>>8;bytes[bytesOffest++]=sample.size&0xFF;// sample_size
}return box(types.trun,bytes);};trun$1=function trun$1(track,offset){if(track.type==='audio'){return audioTrun(track,offset);}return videoTrun(track,offset);};})();var mp4Generator={ftyp:ftyp,mdat:mdat,moof:moof,moov:moov,initSegment:function initSegment(tracks){var fileType=ftyp(),movie=moov(tracks),result;result=new Uint8Array(fileType.byteLength+movie.byteLength);result.set(fileType);result.set(movie,fileType.byteLength);return result;}};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */ // composed of the nal units that make up that frame
// Also keep track of cummulative data about the frame from the nal units such
// as the frame duration, starting pts, etc.
var groupNalsIntoFrames=function groupNalsIntoFrames(nalUnits){var i,currentNal,currentFrame=[],frames=[];// TODO added for LHLS, make sure this is OK
frames.byteLength=0;frames.nalCount=0;frames.duration=0;currentFrame.byteLength=0;for(i=0;i<nalUnits.length;i++){currentNal=nalUnits[i];// Split on 'aud'-type nal units
if(currentNal.nalUnitType==='access_unit_delimiter_rbsp'){// Since the very first nal unit is expected to be an AUD
// only push to the frames array when currentFrame is not empty
if(currentFrame.length){currentFrame.duration=currentNal.dts-currentFrame.dts;// TODO added for LHLS, make sure this is OK
frames.byteLength+=currentFrame.byteLength;frames.nalCount+=currentFrame.length;frames.duration+=currentFrame.duration;frames.push(currentFrame);}currentFrame=[currentNal];currentFrame.byteLength=currentNal.data.byteLength;currentFrame.pts=currentNal.pts;currentFrame.dts=currentNal.dts;}else{// Specifically flag key frames for ease of use later
if(currentNal.nalUnitType==='slice_layer_without_partitioning_rbsp_idr'){currentFrame.keyFrame=true;}currentFrame.duration=currentNal.dts-currentFrame.dts;currentFrame.byteLength+=currentNal.data.byteLength;currentFrame.push(currentNal);}}// For the last frame, use the duration of the previous frame if we
// have nothing better to go on
if(frames.length&&(!currentFrame.duration||currentFrame.duration<=0)){currentFrame.duration=frames[frames.length-1].duration;}// Push the final frame
// TODO added for LHLS, make sure this is OK
frames.byteLength+=currentFrame.byteLength;frames.nalCount+=currentFrame.length;frames.duration+=currentFrame.duration;frames.push(currentFrame);return frames;};// Convert an array of frames into an array of Gop with each Gop being composed
// of the frames that make up that Gop
// Also keep track of cummulative data about the Gop from the frames such as the
// Gop duration, starting pts, etc.
var groupFramesIntoGops=function groupFramesIntoGops(frames){var i,currentFrame,currentGop=[],gops=[];// We must pre-set some of the values on the Gop since we
// keep running totals of these values
currentGop.byteLength=0;currentGop.nalCount=0;currentGop.duration=0;currentGop.pts=frames[0].pts;currentGop.dts=frames[0].dts;// store some metadata about all the Gops
gops.byteLength=0;gops.nalCount=0;gops.duration=0;gops.pts=frames[0].pts;gops.dts=frames[0].dts;for(i=0;i<frames.length;i++){currentFrame=frames[i];if(currentFrame.keyFrame){// Since the very first frame is expected to be an keyframe
// only push to the gops array when currentGop is not empty
if(currentGop.length){gops.push(currentGop);gops.byteLength+=currentGop.byteLength;gops.nalCount+=currentGop.nalCount;gops.duration+=currentGop.duration;}currentGop=[currentFrame];currentGop.nalCount=currentFrame.length;currentGop.byteLength=currentFrame.byteLength;currentGop.pts=currentFrame.pts;currentGop.dts=currentFrame.dts;currentGop.duration=currentFrame.duration;}else{currentGop.duration+=currentFrame.duration;currentGop.nalCount+=currentFrame.length;currentGop.byteLength+=currentFrame.byteLength;currentGop.push(currentFrame);}}if(gops.length&&currentGop.duration<=0){currentGop.duration=gops[gops.length-1].duration;}gops.byteLength+=currentGop.byteLength;gops.nalCount+=currentGop.nalCount;gops.duration+=currentGop.duration;// push the final Gop
gops.push(currentGop);return gops;};/*
         * Search for the first keyframe in the GOPs and throw away all frames
         * until that keyframe. Then extend the duration of the pulled keyframe
         * and pull the PTS and DTS of the keyframe so that it covers the time
         * range of the frames that were disposed.
         *
         * @param {Array} gops video GOPs
         * @returns {Array} modified video GOPs
         */var extendFirstKeyFrame=function extendFirstKeyFrame(gops){var currentGop;if(!gops[0][0].keyFrame&&gops.length>1){// Remove the first GOP
currentGop=gops.shift();gops.byteLength-=currentGop.byteLength;gops.nalCount-=currentGop.nalCount;// Extend the first frame of what is now the
// first gop to cover the time period of the
// frames we just removed
gops[0][0].dts=currentGop.dts;gops[0][0].pts=currentGop.pts;gops[0][0].duration+=currentGop.duration;}return gops;};/**
         * Default sample object
         * see ISO/IEC 14496-12:2012, section 8.6.4.3
         */var createDefaultSample=function createDefaultSample(){return{size:0,flags:{isLeading:0,dependsOn:1,isDependedOn:0,hasRedundancy:0,degradationPriority:0,isNonSyncSample:1}};};/*
         * Collates information from a video frame into an object for eventual
         * entry into an MP4 sample table.
         *
         * @param {Object} frame the video frame
         * @param {Number} dataOffset the byte offset to position the sample
         * @return {Object} object containing sample table info for a frame
         */var sampleForFrame=function sampleForFrame(frame,dataOffset){var sample=createDefaultSample();sample.dataOffset=dataOffset;sample.compositionTimeOffset=frame.pts-frame.dts;sample.duration=frame.duration;sample.size=4*frame.length;// Space for nal unit size
sample.size+=frame.byteLength;if(frame.keyFrame){sample.flags.dependsOn=2;sample.flags.isNonSyncSample=0;}return sample;};// generate the track's sample table from an array of gops
var generateSampleTable$1=function generateSampleTable$1(gops,baseDataOffset){var h,i,sample,currentGop,currentFrame,dataOffset=baseDataOffset||0,samples=[];for(h=0;h<gops.length;h++){currentGop=gops[h];for(i=0;i<currentGop.length;i++){currentFrame=currentGop[i];sample=sampleForFrame(currentFrame,dataOffset);dataOffset+=sample.size;samples.push(sample);}}return samples;};// generate the track's raw mdat data from an array of gops
var concatenateNalData=function concatenateNalData(gops){var h,i,j,currentGop,currentFrame,currentNal,dataOffset=0,nalsByteLength=gops.byteLength,numberOfNals=gops.nalCount,totalByteLength=nalsByteLength+4*numberOfNals,data=new Uint8Array(totalByteLength),view=new DataView(data.buffer);// For each Gop..
for(h=0;h<gops.length;h++){currentGop=gops[h];// For each Frame..
for(i=0;i<currentGop.length;i++){currentFrame=currentGop[i];// For each NAL..
for(j=0;j<currentFrame.length;j++){currentNal=currentFrame[j];view.setUint32(dataOffset,currentNal.data.byteLength);dataOffset+=4;data.set(currentNal.data,dataOffset);dataOffset+=currentNal.data.byteLength;}}}return data;};// generate the track's sample table from a frame
var generateSampleTableForFrame=function generateSampleTableForFrame(frame,baseDataOffset){var sample,dataOffset=baseDataOffset||0,samples=[];sample=sampleForFrame(frame,dataOffset);samples.push(sample);return samples;};// generate the track's raw mdat data from a frame
var concatenateNalDataForFrame=function concatenateNalDataForFrame(frame){var i,currentNal,dataOffset=0,nalsByteLength=frame.byteLength,numberOfNals=frame.length,totalByteLength=nalsByteLength+4*numberOfNals,data=new Uint8Array(totalByteLength),view=new DataView(data.buffer);// For each NAL..
for(i=0;i<frame.length;i++){currentNal=frame[i];view.setUint32(dataOffset,currentNal.data.byteLength);dataOffset+=4;data.set(currentNal.data,dataOffset);dataOffset+=currentNal.data.byteLength;}return data;};var frameUtils$1={groupNalsIntoFrames:groupNalsIntoFrames,groupFramesIntoGops:groupFramesIntoGops,extendFirstKeyFrame:extendFirstKeyFrame,generateSampleTable:generateSampleTable$1,concatenateNalData:concatenateNalData,generateSampleTableForFrame:generateSampleTableForFrame,concatenateNalDataForFrame:concatenateNalDataForFrame};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var highPrefix=[33,16,5,32,164,27];var lowPrefix=[33,65,108,84,1,2,4,8,168,2,4,8,17,191,252];var zeroFill=function zeroFill(count){var a=[];while(count--){a.push(0);}return a;};var makeTable=function makeTable(metaTable){return Object.keys(metaTable).reduce(function(obj,key){obj[key]=new Uint8Array(metaTable[key].reduce(function(arr,part){return arr.concat(part);},[]));return obj;},{});};var silence;var silence_1=function silence_1(){if(!silence){// Frames-of-silence to use for filling in missing AAC frames
var coneOfSilence={96000:[highPrefix,[227,64],zeroFill(154),[56]],88200:[highPrefix,[231],zeroFill(170),[56]],64000:[highPrefix,[248,192],zeroFill(240),[56]],48000:[highPrefix,[255,192],zeroFill(268),[55,148,128],zeroFill(54),[112]],44100:[highPrefix,[255,192],zeroFill(268),[55,163,128],zeroFill(84),[112]],32000:[highPrefix,[255,192],zeroFill(268),[55,234],zeroFill(226),[112]],24000:[highPrefix,[255,192],zeroFill(268),[55,255,128],zeroFill(268),[111,112],zeroFill(126),[224]],16000:[highPrefix,[255,192],zeroFill(268),[55,255,128],zeroFill(268),[111,255],zeroFill(269),[223,108],zeroFill(195),[1,192]],12000:[lowPrefix,zeroFill(268),[3,127,248],zeroFill(268),[6,255,240],zeroFill(268),[13,255,224],zeroFill(268),[27,253,128],zeroFill(259),[56]],11025:[lowPrefix,zeroFill(268),[3,127,248],zeroFill(268),[6,255,240],zeroFill(268),[13,255,224],zeroFill(268),[27,255,192],zeroFill(268),[55,175,128],zeroFill(108),[112]],8000:[lowPrefix,zeroFill(268),[3,121,16],zeroFill(47),[7]]};silence=makeTable(coneOfSilence);}return silence;};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var ONE_SECOND_IN_TS$4=90000,// 90kHz clock
secondsToVideoTs,secondsToAudioTs,videoTsToSeconds,audioTsToSeconds,audioTsToVideoTs,videoTsToAudioTs,metadataTsToSeconds;secondsToVideoTs=function secondsToVideoTs(seconds){return seconds*ONE_SECOND_IN_TS$4;};secondsToAudioTs=function secondsToAudioTs(seconds,sampleRate){return seconds*sampleRate;};videoTsToSeconds=function videoTsToSeconds(timestamp){return timestamp/ONE_SECOND_IN_TS$4;};audioTsToSeconds=function audioTsToSeconds(timestamp,sampleRate){return timestamp/sampleRate;};audioTsToVideoTs=function audioTsToVideoTs(timestamp,sampleRate){return secondsToVideoTs(audioTsToSeconds(timestamp,sampleRate));};videoTsToAudioTs=function videoTsToAudioTs(timestamp,sampleRate){return secondsToAudioTs(videoTsToSeconds(timestamp),sampleRate);};/**
         * Adjust ID3 tag or caption timing information by the timeline pts values
         * (if keepOriginalTimestamps is false) and convert to seconds
         */metadataTsToSeconds=function metadataTsToSeconds(timestamp,timelineStartPts,keepOriginalTimestamps){return videoTsToSeconds(keepOriginalTimestamps?timestamp:timestamp-timelineStartPts);};var clock$2={ONE_SECOND_IN_TS:ONE_SECOND_IN_TS$4,secondsToVideoTs:secondsToVideoTs,secondsToAudioTs:secondsToAudioTs,videoTsToSeconds:videoTsToSeconds,audioTsToSeconds:audioTsToSeconds,audioTsToVideoTs:audioTsToVideoTs,videoTsToAudioTs:videoTsToAudioTs,metadataTsToSeconds:metadataTsToSeconds};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var coneOfSilence=silence_1;var clock$1=clock$2;/**
         * Sum the `byteLength` properties of the data in each AAC frame
         */var sumFrameByteLengths=function sumFrameByteLengths(array){var i,currentObj,sum=0;// sum the byteLength's all each nal unit in the frame
for(i=0;i<array.length;i++){currentObj=array[i];sum+=currentObj.data.byteLength;}return sum;};// Possibly pad (prefix) the audio track with silence if appending this track
// would lead to the introduction of a gap in the audio buffer
var prefixWithSilence=function prefixWithSilence(track,frames,audioAppendStartTs,videoBaseMediaDecodeTime){var baseMediaDecodeTimeTs,frameDuration=0,audioGapDuration=0,audioFillFrameCount=0,audioFillDuration=0,silentFrame,i,firstFrame;if(!frames.length){return;}baseMediaDecodeTimeTs=clock$1.audioTsToVideoTs(track.baseMediaDecodeTime,track.samplerate);// determine frame clock duration based on sample rate, round up to avoid overfills
frameDuration=Math.ceil(clock$1.ONE_SECOND_IN_TS/(track.samplerate/1024));if(audioAppendStartTs&&videoBaseMediaDecodeTime){// insert the shortest possible amount (audio gap or audio to video gap)
audioGapDuration=baseMediaDecodeTimeTs-Math.max(audioAppendStartTs,videoBaseMediaDecodeTime);// number of full frames in the audio gap
audioFillFrameCount=Math.floor(audioGapDuration/frameDuration);audioFillDuration=audioFillFrameCount*frameDuration;}// don't attempt to fill gaps smaller than a single frame or larger
// than a half second
if(audioFillFrameCount<1||audioFillDuration>clock$1.ONE_SECOND_IN_TS/2){return;}silentFrame=coneOfSilence()[track.samplerate];if(!silentFrame){// we don't have a silent frame pregenerated for the sample rate, so use a frame
// from the content instead
silentFrame=frames[0].data;}for(i=0;i<audioFillFrameCount;i++){firstFrame=frames[0];frames.splice(0,0,{data:silentFrame,dts:firstFrame.dts-frameDuration,pts:firstFrame.pts-frameDuration});}track.baseMediaDecodeTime-=Math.floor(clock$1.videoTsToAudioTs(audioFillDuration,track.samplerate));return audioFillDuration;};// If the audio segment extends before the earliest allowed dts
// value, remove AAC frames until starts at or after the earliest
// allowed DTS so that we don't end up with a negative baseMedia-
// DecodeTime for the audio track
var trimAdtsFramesByEarliestDts=function trimAdtsFramesByEarliestDts(adtsFrames,track,earliestAllowedDts){if(track.minSegmentDts>=earliestAllowedDts){return adtsFrames;}// We will need to recalculate the earliest segment Dts
track.minSegmentDts=Infinity;return adtsFrames.filter(function(currentFrame){// If this is an allowed frame, keep it and record it's Dts
if(currentFrame.dts>=earliestAllowedDts){track.minSegmentDts=Math.min(track.minSegmentDts,currentFrame.dts);track.minSegmentPts=track.minSegmentDts;return true;}// Otherwise, discard it
return false;});};// generate the track's raw mdat data from an array of frames
var generateSampleTable=function generateSampleTable(frames){var i,currentFrame,samples=[];for(i=0;i<frames.length;i++){currentFrame=frames[i];samples.push({size:currentFrame.data.byteLength,duration:1024// For AAC audio, all samples contain 1024 samples
});}return samples;};// generate the track's sample table from an array of frames
var concatenateFrameData=function concatenateFrameData(frames){var i,currentFrame,dataOffset=0,data=new Uint8Array(sumFrameByteLengths(frames));for(i=0;i<frames.length;i++){currentFrame=frames[i];data.set(currentFrame.data,dataOffset);dataOffset+=currentFrame.data.byteLength;}return data;};var audioFrameUtils$1={prefixWithSilence:prefixWithSilence,trimAdtsFramesByEarliestDts:trimAdtsFramesByEarliestDts,generateSampleTable:generateSampleTable,concatenateFrameData:concatenateFrameData};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var ONE_SECOND_IN_TS$3=clock$2.ONE_SECOND_IN_TS;/**
         * Store information about the start and end of the track and the
         * duration for each frame/sample we process in order to calculate
         * the baseMediaDecodeTime
         */var collectDtsInfo=function collectDtsInfo(track,data){if(typeof data.pts==='number'){if(track.timelineStartInfo.pts===undefined){track.timelineStartInfo.pts=data.pts;}if(track.minSegmentPts===undefined){track.minSegmentPts=data.pts;}else{track.minSegmentPts=Math.min(track.minSegmentPts,data.pts);}if(track.maxSegmentPts===undefined){track.maxSegmentPts=data.pts;}else{track.maxSegmentPts=Math.max(track.maxSegmentPts,data.pts);}}if(typeof data.dts==='number'){if(track.timelineStartInfo.dts===undefined){track.timelineStartInfo.dts=data.dts;}if(track.minSegmentDts===undefined){track.minSegmentDts=data.dts;}else{track.minSegmentDts=Math.min(track.minSegmentDts,data.dts);}if(track.maxSegmentDts===undefined){track.maxSegmentDts=data.dts;}else{track.maxSegmentDts=Math.max(track.maxSegmentDts,data.dts);}}};/**
         * Clear values used to calculate the baseMediaDecodeTime between
         * tracks
         */var clearDtsInfo=function clearDtsInfo(track){delete track.minSegmentDts;delete track.maxSegmentDts;delete track.minSegmentPts;delete track.maxSegmentPts;};/**
         * Calculate the track's baseMediaDecodeTime based on the earliest
         * DTS the transmuxer has ever seen and the minimum DTS for the
         * current track
         * @param track {object} track metadata configuration
         * @param keepOriginalTimestamps {boolean} If true, keep the timestamps
         *        in the source; false to adjust the first segment to start at 0.
         */var calculateTrackBaseMediaDecodeTime=function calculateTrackBaseMediaDecodeTime(track,keepOriginalTimestamps){var baseMediaDecodeTime,scale,minSegmentDts=track.minSegmentDts;// Optionally adjust the time so the first segment starts at zero.
if(!keepOriginalTimestamps){minSegmentDts-=track.timelineStartInfo.dts;}// track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where
// we want the start of the first segment to be placed
baseMediaDecodeTime=track.timelineStartInfo.baseMediaDecodeTime;// Add to that the distance this segment is from the very first
baseMediaDecodeTime+=minSegmentDts;// baseMediaDecodeTime must not become negative
baseMediaDecodeTime=Math.max(0,baseMediaDecodeTime);if(track.type==='audio'){// Audio has a different clock equal to the sampling_rate so we need to
// scale the PTS values into the clock rate of the track
scale=track.samplerate/ONE_SECOND_IN_TS$3;baseMediaDecodeTime*=scale;baseMediaDecodeTime=Math.floor(baseMediaDecodeTime);}return baseMediaDecodeTime;};var trackDecodeInfo$1={clearDtsInfo:clearDtsInfo,calculateTrackBaseMediaDecodeTime:calculateTrackBaseMediaDecodeTime,collectDtsInfo:collectDtsInfo};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Reads in-band caption information from a video elementary
         * stream. Captions must follow the CEA-708 standard for injection
         * into an MPEG-2 transport streams.
         * @see https://en.wikipedia.org/wiki/CEA-708
         * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf
         */ // payload type field to indicate how they are to be
// interpreted. CEAS-708 caption content is always transmitted with
// payload type 0x04.
var USER_DATA_REGISTERED_ITU_T_T35=4,RBSP_TRAILING_BITS=128;/**
          * Parse a supplemental enhancement information (SEI) NAL unit.
          * Stops parsing once a message of type ITU T T35 has been found.
          *
          * @param bytes {Uint8Array} the bytes of a SEI NAL unit
          * @return {object} the parsed SEI payload
          * @see Rec. ITU-T H.264, 7.3.2.3.1
          */var parseSei=function parseSei(bytes){var i=0,result={payloadType:-1,payloadSize:0},payloadType=0,payloadSize=0;// go through the sei_rbsp parsing each each individual sei_message
while(i<bytes.byteLength){// stop once we have hit the end of the sei_rbsp
if(bytes[i]===RBSP_TRAILING_BITS){break;}// Parse payload type
while(bytes[i]===0xFF){payloadType+=255;i++;}payloadType+=bytes[i++];// Parse payload size
while(bytes[i]===0xFF){payloadSize+=255;i++;}payloadSize+=bytes[i++];// this sei_message is a 608/708 caption so save it and break
// there can only ever be one caption message in a frame's sei
if(!result.payload&&payloadType===USER_DATA_REGISTERED_ITU_T_T35){var userIdentifier=String.fromCharCode(bytes[i+3],bytes[i+4],bytes[i+5],bytes[i+6]);if(userIdentifier==='GA94'){result.payloadType=payloadType;result.payloadSize=payloadSize;result.payload=bytes.subarray(i,i+payloadSize);break;}else{result.payload=void 0;}}// skip the payload and parse the next message
i+=payloadSize;payloadType=0;payloadSize=0;}return result;};// see ANSI/SCTE 128-1 (2013), section 8.1
var parseUserData=function parseUserData(sei){// itu_t_t35_contry_code must be 181 (United States) for
// captions
if(sei.payload[0]!==181){return null;}// itu_t_t35_provider_code should be 49 (ATSC) for captions
if((sei.payload[1]<<8|sei.payload[2])!==49){return null;}// the user_identifier should be "GA94" to indicate ATSC1 data
if(String.fromCharCode(sei.payload[3],sei.payload[4],sei.payload[5],sei.payload[6])!=='GA94'){return null;}// finally, user_data_type_code should be 0x03 for caption data
if(sei.payload[7]!==0x03){return null;}// return the user_data_type_structure and strip the trailing
// marker bits
return sei.payload.subarray(8,sei.payload.length-1);};// see CEA-708-D, section 4.4
var parseCaptionPackets=function parseCaptionPackets(pts,userData){var results=[],i,count,offset,data;// if this is just filler, return immediately
if(!(userData[0]&0x40)){return results;}// parse out the cc_data_1 and cc_data_2 fields
count=userData[0]&0x1f;for(i=0;i<count;i++){offset=i*3;data={type:userData[offset+2]&0x03,pts:pts};// capture cc data when cc_valid is 1
if(userData[offset+2]&0x04){data.ccData=userData[offset+3]<<8|userData[offset+4];results.push(data);}}return results;};var discardEmulationPreventionBytes$1=function discardEmulationPreventionBytes$1(data){var length=data.byteLength,emulationPreventionBytesPositions=[],i=1,newLength,newData;// Find all `Emulation Prevention Bytes`
while(i<length-2){if(data[i]===0&&data[i+1]===0&&data[i+2]===0x03){emulationPreventionBytesPositions.push(i+2);i+=2;}else{i++;}}// If no Emulation Prevention Bytes were found just return the original
// array
if(emulationPreventionBytesPositions.length===0){return data;}// Create a new array to hold the NAL unit data
newLength=length-emulationPreventionBytesPositions.length;newData=new Uint8Array(newLength);var sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++){if(sourceIndex===emulationPreventionBytesPositions[0]){// Skip this byte
sourceIndex++;// Remove this position index
emulationPreventionBytesPositions.shift();}newData[i]=data[sourceIndex];}return newData;};// exports
var captionPacketParser={parseSei:parseSei,parseUserData:parseUserData,parseCaptionPackets:parseCaptionPackets,discardEmulationPreventionBytes:discardEmulationPreventionBytes$1,USER_DATA_REGISTERED_ITU_T_T35:USER_DATA_REGISTERED_ITU_T_T35};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Reads in-band caption information from a video elementary
         * stream. Captions must follow the CEA-708 standard for injection
         * into an MPEG-2 transport streams.
         * @see https://en.wikipedia.org/wiki/CEA-708
         * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf
         */ // Link To Transport
// -----------------
var Stream$7=stream;var cea708Parser=captionPacketParser;var CaptionStream$2=function CaptionStream$2(options){options=options||{};CaptionStream$2.prototype.init.call(this);// parse708captions flag, default to true
this.parse708captions_=typeof options.parse708captions==='boolean'?options.parse708captions:true;this.captionPackets_=[];this.ccStreams_=[new Cea608Stream(0,0),// eslint-disable-line no-use-before-define
new Cea608Stream(0,1),// eslint-disable-line no-use-before-define
new Cea608Stream(1,0),// eslint-disable-line no-use-before-define
new Cea608Stream(1,1)// eslint-disable-line no-use-before-define
];if(this.parse708captions_){this.cc708Stream_=new Cea708Stream({captionServices:options.captionServices});// eslint-disable-line no-use-before-define
}this.reset();// forward data and done events from CCs to this CaptionStream
this.ccStreams_.forEach(function(cc){cc.on('data',this.trigger.bind(this,'data'));cc.on('partialdone',this.trigger.bind(this,'partialdone'));cc.on('done',this.trigger.bind(this,'done'));},this);if(this.parse708captions_){this.cc708Stream_.on('data',this.trigger.bind(this,'data'));this.cc708Stream_.on('partialdone',this.trigger.bind(this,'partialdone'));this.cc708Stream_.on('done',this.trigger.bind(this,'done'));}};CaptionStream$2.prototype=new Stream$7();CaptionStream$2.prototype.push=function(event){var sei,userData,newCaptionPackets;// only examine SEI NALs
if(event.nalUnitType!=='sei_rbsp'){return;}// parse the sei
sei=cea708Parser.parseSei(event.escapedRBSP);// no payload data, skip
if(!sei.payload){return;}// ignore everything but user_data_registered_itu_t_t35
if(sei.payloadType!==cea708Parser.USER_DATA_REGISTERED_ITU_T_T35){return;}// parse out the user data payload
userData=cea708Parser.parseUserData(sei);// ignore unrecognized userData
if(!userData){return;}// Sometimes, the same segment # will be downloaded twice. To stop the
// caption data from being processed twice, we track the latest dts we've
// received and ignore everything with a dts before that. However, since
// data for a specific dts can be split across packets on either side of
// a segment boundary, we need to make sure we *don't* ignore the packets
// from the *next* segment that have dts === this.latestDts_. By constantly
// tracking the number of packets received with dts === this.latestDts_, we
// know how many should be ignored once we start receiving duplicates.
if(event.dts<this.latestDts_){// We've started getting older data, so set the flag.
this.ignoreNextEqualDts_=true;return;}else if(event.dts===this.latestDts_&&this.ignoreNextEqualDts_){this.numSameDts_--;if(!this.numSameDts_){// We've received the last duplicate packet, time to start processing again
this.ignoreNextEqualDts_=false;}return;}// parse out CC data packets and save them for later
newCaptionPackets=cea708Parser.parseCaptionPackets(event.pts,userData);this.captionPackets_=this.captionPackets_.concat(newCaptionPackets);if(this.latestDts_!==event.dts){this.numSameDts_=0;}this.numSameDts_++;this.latestDts_=event.dts;};CaptionStream$2.prototype.flushCCStreams=function(flushType){this.ccStreams_.forEach(function(cc){return flushType==='flush'?cc.flush():cc.partialFlush();},this);};CaptionStream$2.prototype.flushStream=function(flushType){// make sure we actually parsed captions before proceeding
if(!this.captionPackets_.length){this.flushCCStreams(flushType);return;}// In Chrome, the Array#sort function is not stable so add a
// presortIndex that we can use to ensure we get a stable-sort
this.captionPackets_.forEach(function(elem,idx){elem.presortIndex=idx;});// sort caption byte-pairs based on their PTS values
this.captionPackets_.sort(function(a,b){if(a.pts===b.pts){return a.presortIndex-b.presortIndex;}return a.pts-b.pts;});this.captionPackets_.forEach(function(packet){if(packet.type<2){// Dispatch packet to the right Cea608Stream
this.dispatchCea608Packet(packet);}else{// Dispatch packet to the Cea708Stream
this.dispatchCea708Packet(packet);}},this);this.captionPackets_.length=0;this.flushCCStreams(flushType);};CaptionStream$2.prototype.flush=function(){return this.flushStream('flush');};// Only called if handling partial data
CaptionStream$2.prototype.partialFlush=function(){return this.flushStream('partialFlush');};CaptionStream$2.prototype.reset=function(){this.latestDts_=null;this.ignoreNextEqualDts_=false;this.numSameDts_=0;this.activeCea608Channel_=[null,null];this.ccStreams_.forEach(function(ccStream){ccStream.reset();});};// From the CEA-608 spec:
/*
         * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed
         * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is
         * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair
         * and subsequent data should then be processed according to the FCC rules. It may be necessary for the
         * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)
         * to switch to captioning or Text.
        */ // With that in mind, we ignore any data between an XDS control code and a
// subsequent closed-captioning control code.
CaptionStream$2.prototype.dispatchCea608Packet=function(packet){// NOTE: packet.type is the CEA608 field
if(this.setsTextOrXDSActive(packet)){this.activeCea608Channel_[packet.type]=null;}else if(this.setsChannel1Active(packet)){this.activeCea608Channel_[packet.type]=0;}else if(this.setsChannel2Active(packet)){this.activeCea608Channel_[packet.type]=1;}if(this.activeCea608Channel_[packet.type]===null){// If we haven't received anything to set the active channel, or the
// packets are Text/XDS data, discard the data; we don't want jumbled
// captions
return;}this.ccStreams_[(packet.type<<1)+this.activeCea608Channel_[packet.type]].push(packet);};CaptionStream$2.prototype.setsChannel1Active=function(packet){return(packet.ccData&0x7800)===0x1000;};CaptionStream$2.prototype.setsChannel2Active=function(packet){return(packet.ccData&0x7800)===0x1800;};CaptionStream$2.prototype.setsTextOrXDSActive=function(packet){return(packet.ccData&0x7100)===0x0100||(packet.ccData&0x78fe)===0x102a||(packet.ccData&0x78fe)===0x182a;};CaptionStream$2.prototype.dispatchCea708Packet=function(packet){if(this.parse708captions_){this.cc708Stream_.push(packet);}};// ----------------------
// Session to Application
// ----------------------
// This hash maps special and extended character codes to their
// proper Unicode equivalent. The first one-byte key is just a
// non-standard character code. The two-byte keys that follow are
// the extended CEA708 character codes, along with the preceding
// 0x10 extended character byte to distinguish these codes from
// non-extended character codes. Every CEA708 character code that
// is not in this object maps directly to a standard unicode
// character code.
// The transparent space and non-breaking transparent space are
// technically not fully supported since there is no code to
// make them transparent, so they have normal non-transparent
// stand-ins.
// The special closed caption (CC) character isn't a standard
// unicode character, so a fairly similar unicode character was
// chosen in it's place.
var CHARACTER_TRANSLATION_708={0x7f:0x266a,// ♪
0x1020:0x20,// Transparent Space
0x1021:0xa0,// Nob-breaking Transparent Space
0x1025:0x2026,// …
0x102a:0x0160,// Š
0x102c:0x0152,// Œ
0x1030:0x2588,// █
0x1031:0x2018,// ‘
0x1032:0x2019,// ’
0x1033:0x201c,// “
0x1034:0x201d,// ”
0x1035:0x2022,// •
0x1039:0x2122,// ™
0x103a:0x0161,// š
0x103c:0x0153,// œ
0x103d:0x2120,// ℠
0x103f:0x0178,// Ÿ
0x1076:0x215b,// ⅛
0x1077:0x215c,// ⅜
0x1078:0x215d,// ⅝
0x1079:0x215e,// ⅞
0x107a:0x23d0,// ⏐
0x107b:0x23a4,// ⎤
0x107c:0x23a3,// ⎣
0x107d:0x23af,// ⎯
0x107e:0x23a6,// ⎦
0x107f:0x23a1,// ⎡
0x10a0:0x3138// ㄸ (CC char)
};var get708CharFromCode=function get708CharFromCode(code){var newCode=CHARACTER_TRANSLATION_708[code]||code;if(code&0x1000&&code===newCode){// Invalid extended code
return'';}return String.fromCharCode(newCode);};var within708TextBlock=function within708TextBlock(b){return 0x20<=b&&b<=0x7f||0xa0<=b&&b<=0xff;};var Cea708Window=function Cea708Window(windowNum){this.windowNum=windowNum;this.reset();};Cea708Window.prototype.reset=function(){this.clearText();this.pendingNewLine=false;this.winAttr={};this.penAttr={};this.penLoc={};this.penColor={};// These default values are arbitrary,
// defineWindow will usually override them
this.visible=0;this.rowLock=0;this.columnLock=0;this.priority=0;this.relativePositioning=0;this.anchorVertical=0;this.anchorHorizontal=0;this.anchorPoint=0;this.rowCount=1;this.virtualRowCount=this.rowCount+1;this.columnCount=41;this.windowStyle=0;this.penStyle=0;};Cea708Window.prototype.getText=function(){return this.rows.join('\n');};Cea708Window.prototype.clearText=function(){this.rows=[''];this.rowIdx=0;};Cea708Window.prototype.newLine=function(pts){if(this.rows.length>=this.virtualRowCount&&typeof this.beforeRowOverflow==='function'){this.beforeRowOverflow(pts);}if(this.rows.length>0){this.rows.push('');this.rowIdx++;}// Show all virtual rows since there's no visible scrolling
while(this.rows.length>this.virtualRowCount){this.rows.shift();this.rowIdx--;}};Cea708Window.prototype.isEmpty=function(){if(this.rows.length===0){return true;}else if(this.rows.length===1){return this.rows[0]==='';}return false;};Cea708Window.prototype.addText=function(text){this.rows[this.rowIdx]+=text;};Cea708Window.prototype.backspace=function(){if(!this.isEmpty()){var row=this.rows[this.rowIdx];this.rows[this.rowIdx]=row.substr(0,row.length-1);}};var Cea708Service=function Cea708Service(serviceNum,encoding,stream){this.serviceNum=serviceNum;this.text='';this.currentWindow=new Cea708Window(-1);this.windows=[];this.stream=stream;// Try to setup a TextDecoder if an `encoding` value was provided
if(typeof encoding==='string'){this.createTextDecoder(encoding);}};/**
         * Initialize service windows
         * Must be run before service use
         *
         * @param  {Integer}  pts               PTS value
         * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window
         */Cea708Service.prototype.init=function(pts,beforeRowOverflow){this.startPts=pts;for(var win=0;win<8;win++){this.windows[win]=new Cea708Window(win);if(typeof beforeRowOverflow==='function'){this.windows[win].beforeRowOverflow=beforeRowOverflow;}}};/**
         * Set current window of service to be affected by commands
         *
         * @param  {Integer} windowNum Window number
         */Cea708Service.prototype.setCurrentWindow=function(windowNum){this.currentWindow=this.windows[windowNum];};/**
         * Try to create a TextDecoder if it is natively supported
         */Cea708Service.prototype.createTextDecoder=function(encoding){if(typeof TextDecoder==='undefined'){this.stream.trigger('log',{level:'warn',message:'The `encoding` option is unsupported without TextDecoder support'});}else{try{this.textDecoder_=new TextDecoder(encoding);}catch(error){this.stream.trigger('log',{level:'warn',message:'TextDecoder could not be created with '+encoding+' encoding. '+error});}}};var Cea708Stream=function Cea708Stream(options){options=options||{};Cea708Stream.prototype.init.call(this);var self=this;var captionServices=options.captionServices||{};var captionServiceEncodings={};var serviceProps;// Get service encodings from captionServices option block
Object.keys(captionServices).forEach(function(serviceName){serviceProps=captionServices[serviceName];if(/^SERVICE/.test(serviceName)){captionServiceEncodings[serviceName]=serviceProps.encoding;}});this.serviceEncodings=captionServiceEncodings;this.current708Packet=null;this.services={};this.push=function(packet){if(packet.type===3){// 708 packet start
self.new708Packet();self.add708Bytes(packet);}else{if(self.current708Packet===null){// This should only happen at the start of a file if there's no packet start.
self.new708Packet();}self.add708Bytes(packet);}};};Cea708Stream.prototype=new Stream$7();/**
         * Push current 708 packet, create new 708 packet.
         */Cea708Stream.prototype.new708Packet=function(){if(this.current708Packet!==null){this.push708Packet();}this.current708Packet={data:[],ptsVals:[]};};/**
         * Add pts and both bytes from packet into current 708 packet.
         */Cea708Stream.prototype.add708Bytes=function(packet){var data=packet.ccData;var byte0=data>>>8;var byte1=data&0xff;// I would just keep a list of packets instead of bytes, but it isn't clear in the spec
// that service blocks will always line up with byte pairs.
this.current708Packet.ptsVals.push(packet.pts);this.current708Packet.data.push(byte0);this.current708Packet.data.push(byte1);};/**
         * Parse completed 708 packet into service blocks and push each service block.
         */Cea708Stream.prototype.push708Packet=function(){var packet708=this.current708Packet;var packetData=packet708.data;var serviceNum=null;var blockSize=null;var i=0;var b=packetData[i++];packet708.seq=b>>6;packet708.sizeCode=b&0x3f;// 0b00111111;
for(;i<packetData.length;i++){b=packetData[i++];serviceNum=b>>5;blockSize=b&0x1f;// 0b00011111
if(serviceNum===7&&blockSize>0){// Extended service num
b=packetData[i++];serviceNum=b;}this.pushServiceBlock(serviceNum,i,blockSize);if(blockSize>0){i+=blockSize-1;}}};/**
         * Parse service block, execute commands, read text.
         *
         * Note: While many of these commands serve important purposes,
         * many others just parse out the parameters or attributes, but
         * nothing is done with them because this is not a full and complete
         * implementation of the entire 708 spec.
         *
         * @param  {Integer} serviceNum Service number
         * @param  {Integer} start      Start index of the 708 packet data
         * @param  {Integer} size       Block size
         */Cea708Stream.prototype.pushServiceBlock=function(serviceNum,start,size){var b;var i=start;var packetData=this.current708Packet.data;var service=this.services[serviceNum];if(!service){service=this.initService(serviceNum,i);}for(;i<start+size&&i<packetData.length;i++){b=packetData[i];if(within708TextBlock(b)){i=this.handleText(i,service);}else if(b===0x18){i=this.multiByteCharacter(i,service);}else if(b===0x10){i=this.extendedCommands(i,service);}else if(0x80<=b&&b<=0x87){i=this.setCurrentWindow(i,service);}else if(0x98<=b&&b<=0x9f){i=this.defineWindow(i,service);}else if(b===0x88){i=this.clearWindows(i,service);}else if(b===0x8c){i=this.deleteWindows(i,service);}else if(b===0x89){i=this.displayWindows(i,service);}else if(b===0x8a){i=this.hideWindows(i,service);}else if(b===0x8b){i=this.toggleWindows(i,service);}else if(b===0x97){i=this.setWindowAttributes(i,service);}else if(b===0x90){i=this.setPenAttributes(i,service);}else if(b===0x91){i=this.setPenColor(i,service);}else if(b===0x92){i=this.setPenLocation(i,service);}else if(b===0x8f){service=this.reset(i,service);}else if(b===0x08){// BS: Backspace
service.currentWindow.backspace();}else if(b===0x0c){// FF: Form feed
service.currentWindow.clearText();}else if(b===0x0d){// CR: Carriage return
service.currentWindow.pendingNewLine=true;}else if(b===0x0e){// HCR: Horizontal carriage return
service.currentWindow.clearText();}else if(b===0x8d){// DLY: Delay, nothing to do
i++;}else;}};/**
         * Execute an extended command
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.extendedCommands=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];if(within708TextBlock(b)){i=this.handleText(i,service,{isExtended:true});}return i;};/**
         * Get PTS value of a given byte index
         *
         * @param  {Integer} byteIndex  Index of the byte
         * @return {Integer}            PTS
         */Cea708Stream.prototype.getPts=function(byteIndex){// There's 1 pts value per 2 bytes
return this.current708Packet.ptsVals[Math.floor(byteIndex/2)];};/**
         * Initializes a service
         *
         * @param  {Integer} serviceNum Service number
         * @return {Service}            Initialized service object
         */Cea708Stream.prototype.initService=function(serviceNum,i){var serviceName='SERVICE'+serviceNum;var self=this;var serviceName;var encoding;if(serviceName in this.serviceEncodings){encoding=this.serviceEncodings[serviceName];}this.services[serviceNum]=new Cea708Service(serviceNum,encoding,self);this.services[serviceNum].init(this.getPts(i),function(pts){self.flushDisplayed(pts,self.services[serviceNum]);});return this.services[serviceNum];};/**
         * Execute text writing to current window
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.handleText=function(i,service,options){var isExtended=options&&options.isExtended;var isMultiByte=options&&options.isMultiByte;var packetData=this.current708Packet.data;var extended=isExtended?0x1000:0x0000;var currentByte=packetData[i];var nextByte=packetData[i+1];var win=service.currentWindow;var char;var charCodeArray;// Converts an array of bytes to a unicode hex string.
function toHexString(byteArray){return byteArray.map(function(byte){return('0'+(byte&0xFF).toString(16)).slice(-2);}).join('');}if(isMultiByte){charCodeArray=[currentByte,nextByte];i++;}else{charCodeArray=[currentByte];}// Use the TextDecoder if one was created for this service
if(service.textDecoder_&&!isExtended){char=service.textDecoder_.decode(new Uint8Array(charCodeArray));}else{// We assume any multi-byte char without a decoder is unicode.
if(isMultiByte){var unicode=toHexString(charCodeArray);// Takes a unicode hex string and creates a single character.
char=String.fromCharCode(parseInt(unicode,16));}else{char=get708CharFromCode(extended|currentByte);}}if(win.pendingNewLine&&!win.isEmpty()){win.newLine(this.getPts(i));}win.pendingNewLine=false;win.addText(char);return i;};/**
         * Handle decoding of multibyte character
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.multiByteCharacter=function(i,service){var packetData=this.current708Packet.data;var firstByte=packetData[i+1];var secondByte=packetData[i+2];if(within708TextBlock(firstByte)&&within708TextBlock(secondByte)){i=this.handleText(++i,service,{isMultiByte:true});}return i;};/**
         * Parse and execute the CW# command.
         *
         * Set the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.setCurrentWindow=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var windowNum=b&0x07;service.setCurrentWindow(windowNum);return i;};/**
         * Parse and execute the DF# command.
         *
         * Define a window and set it as the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.defineWindow=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var windowNum=b&0x07;service.setCurrentWindow(windowNum);var win=service.currentWindow;b=packetData[++i];win.visible=(b&0x20)>>5;// v
win.rowLock=(b&0x10)>>4;// rl
win.columnLock=(b&0x08)>>3;// cl
win.priority=b&0x07;// p
b=packetData[++i];win.relativePositioning=(b&0x80)>>7;// rp
win.anchorVertical=b&0x7f;// av
b=packetData[++i];win.anchorHorizontal=b;// ah
b=packetData[++i];win.anchorPoint=(b&0xf0)>>4;// ap
win.rowCount=b&0x0f;// rc
b=packetData[++i];win.columnCount=b&0x3f;// cc
b=packetData[++i];win.windowStyle=(b&0x38)>>3;// ws
win.penStyle=b&0x07;// ps
// The spec says there are (rowCount+1) "virtual rows"
win.virtualRowCount=win.rowCount+1;return i;};/**
         * Parse and execute the SWA command.
         *
         * Set attributes of the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.setWindowAttributes=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var winAttr=service.currentWindow.winAttr;b=packetData[++i];winAttr.fillOpacity=(b&0xc0)>>6;// fo
winAttr.fillRed=(b&0x30)>>4;// fr
winAttr.fillGreen=(b&0x0c)>>2;// fg
winAttr.fillBlue=b&0x03;// fb
b=packetData[++i];winAttr.borderType=(b&0xc0)>>6;// bt
winAttr.borderRed=(b&0x30)>>4;// br
winAttr.borderGreen=(b&0x0c)>>2;// bg
winAttr.borderBlue=b&0x03;// bb
b=packetData[++i];winAttr.borderType+=(b&0x80)>>5;// bt
winAttr.wordWrap=(b&0x40)>>6;// ww
winAttr.printDirection=(b&0x30)>>4;// pd
winAttr.scrollDirection=(b&0x0c)>>2;// sd
winAttr.justify=b&0x03;// j
b=packetData[++i];winAttr.effectSpeed=(b&0xf0)>>4;// es
winAttr.effectDirection=(b&0x0c)>>2;// ed
winAttr.displayEffect=b&0x03;// de
return i;};/**
         * Gather text from all displayed windows and push a caption to output.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         */Cea708Stream.prototype.flushDisplayed=function(pts,service){var displayedText=[];// TODO: Positioning not supported, displaying multiple windows will not necessarily
// display text in the correct order, but sample files so far have not shown any issue.
for(var winId=0;winId<8;winId++){if(service.windows[winId].visible&&!service.windows[winId].isEmpty()){displayedText.push(service.windows[winId].getText());}}service.endPts=pts;service.text=displayedText.join('\n\n');this.pushCaption(service);service.startPts=pts;};/**
         * Push a caption to output if the caption contains text.
         *
         * @param  {Service} service  The service object to be affected
         */Cea708Stream.prototype.pushCaption=function(service){if(service.text!==''){this.trigger('data',{startPts:service.startPts,endPts:service.endPts,text:service.text,stream:'cc708_'+service.serviceNum});service.text='';service.startPts=service.endPts;}};/**
         * Parse and execute the DSW command.
         *
         * Set visible property of windows based on the parsed bitmask.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.displayWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible=1;}}return i;};/**
         * Parse and execute the HDW command.
         *
         * Set visible property of windows based on the parsed bitmask.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.hideWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible=0;}}return i;};/**
         * Parse and execute the TGW command.
         *
         * Set visible property of windows based on the parsed bitmask.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.toggleWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible^=1;}}return i;};/**
         * Parse and execute the CLW command.
         *
         * Clear text of windows based on the parsed bitmask.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.clearWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].clearText();}}return i;};/**
         * Parse and execute the DLW command.
         *
         * Re-initialize windows based on the parsed bitmask.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.deleteWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].reset();}}return i;};/**
         * Parse and execute the SPA command.
         *
         * Set pen attributes of the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.setPenAttributes=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penAttr=service.currentWindow.penAttr;b=packetData[++i];penAttr.textTag=(b&0xf0)>>4;// tt
penAttr.offset=(b&0x0c)>>2;// o
penAttr.penSize=b&0x03;// s
b=packetData[++i];penAttr.italics=(b&0x80)>>7;// i
penAttr.underline=(b&0x40)>>6;// u
penAttr.edgeType=(b&0x38)>>3;// et
penAttr.fontStyle=b&0x07;// fs
return i;};/**
         * Parse and execute the SPC command.
         *
         * Set pen color of the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.setPenColor=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penColor=service.currentWindow.penColor;b=packetData[++i];penColor.fgOpacity=(b&0xc0)>>6;// fo
penColor.fgRed=(b&0x30)>>4;// fr
penColor.fgGreen=(b&0x0c)>>2;// fg
penColor.fgBlue=b&0x03;// fb
b=packetData[++i];penColor.bgOpacity=(b&0xc0)>>6;// bo
penColor.bgRed=(b&0x30)>>4;// br
penColor.bgGreen=(b&0x0c)>>2;// bg
penColor.bgBlue=b&0x03;// bb
b=packetData[++i];penColor.edgeRed=(b&0x30)>>4;// er
penColor.edgeGreen=(b&0x0c)>>2;// eg
penColor.edgeBlue=b&0x03;// eb
return i;};/**
         * Parse and execute the SPL command.
         *
         * Set pen location of the current window.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Integer}          New index after parsing
         */Cea708Stream.prototype.setPenLocation=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penLoc=service.currentWindow.penLoc;// Positioning isn't really supported at the moment, so this essentially just inserts a linebreak
service.currentWindow.pendingNewLine=true;b=packetData[++i];penLoc.row=b&0x0f;// r
b=packetData[++i];penLoc.column=b&0x3f;// c
return i;};/**
         * Execute the RST command.
         *
         * Reset service to a clean slate. Re-initialize.
         *
         * @param  {Integer} i        Current index in the 708 packet
         * @param  {Service} service  The service object to be affected
         * @return {Service}          Re-initialized service
         */Cea708Stream.prototype.reset=function(i,service){var pts=this.getPts(i);this.flushDisplayed(pts,service);return this.initService(service.serviceNum,i);};// This hash maps non-ASCII, special, and extended character codes to their
// proper Unicode equivalent. The first keys that are only a single byte
// are the non-standard ASCII characters, which simply map the CEA608 byte
// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608
// character codes, but have their MSB bitmasked with 0x03 so that a lookup
// can be performed regardless of the field and data channel on which the
// character code was received.
var CHARACTER_TRANSLATION={0x2a:0xe1,// á
0x5c:0xe9,// é
0x5e:0xed,// í
0x5f:0xf3,// ó
0x60:0xfa,// ú
0x7b:0xe7,// ç
0x7c:0xf7,// ÷
0x7d:0xd1,// Ñ
0x7e:0xf1,// ñ
0x7f:0x2588,// █
0x0130:0xae,// ®
0x0131:0xb0,// °
0x0132:0xbd,// ½
0x0133:0xbf,// ¿
0x0134:0x2122,// ™
0x0135:0xa2,// ¢
0x0136:0xa3,// £
0x0137:0x266a,// ♪
0x0138:0xe0,// à
0x0139:0xa0,//
0x013a:0xe8,// è
0x013b:0xe2,// â
0x013c:0xea,// ê
0x013d:0xee,// î
0x013e:0xf4,// ô
0x013f:0xfb,// û
0x0220:0xc1,// Á
0x0221:0xc9,// É
0x0222:0xd3,// Ó
0x0223:0xda,// Ú
0x0224:0xdc,// Ü
0x0225:0xfc,// ü
0x0226:0x2018,// ‘
0x0227:0xa1,// ¡
0x0228:0x2a,// *
0x0229:0x27,// '
0x022a:0x2014,// —
0x022b:0xa9,// ©
0x022c:0x2120,// ℠
0x022d:0x2022,// •
0x022e:0x201c,// “
0x022f:0x201d,// ”
0x0230:0xc0,// À
0x0231:0xc2,// Â
0x0232:0xc7,// Ç
0x0233:0xc8,// È
0x0234:0xca,// Ê
0x0235:0xcb,// Ë
0x0236:0xeb,// ë
0x0237:0xce,// Î
0x0238:0xcf,// Ï
0x0239:0xef,// ï
0x023a:0xd4,// Ô
0x023b:0xd9,// Ù
0x023c:0xf9,// ù
0x023d:0xdb,// Û
0x023e:0xab,// «
0x023f:0xbb,// »
0x0320:0xc3,// Ã
0x0321:0xe3,// ã
0x0322:0xcd,// Í
0x0323:0xcc,// Ì
0x0324:0xec,// ì
0x0325:0xd2,// Ò
0x0326:0xf2,// ò
0x0327:0xd5,// Õ
0x0328:0xf5,// õ
0x0329:0x7b,// {
0x032a:0x7d,// }
0x032b:0x5c,// \
0x032c:0x5e,// ^
0x032d:0x5f,// _
0x032e:0x7c,// |
0x032f:0x7e,// ~
0x0330:0xc4,// Ä
0x0331:0xe4,// ä
0x0332:0xd6,// Ö
0x0333:0xf6,// ö
0x0334:0xdf,// ß
0x0335:0xa5,// ¥
0x0336:0xa4,// ¤
0x0337:0x2502,// │
0x0338:0xc5,// Å
0x0339:0xe5,// å
0x033a:0xd8,// Ø
0x033b:0xf8,// ø
0x033c:0x250c,// ┌
0x033d:0x2510,// ┐
0x033e:0x2514,// └
0x033f:0x2518// ┘
};var getCharFromCode=function getCharFromCode(code){if(code===null){return'';}code=CHARACTER_TRANSLATION[code]||code;return String.fromCharCode(code);};// the index of the last row in a CEA-608 display buffer
var BOTTOM_ROW=14;// This array is used for mapping PACs -> row #, since there's no way of
// getting it through bit logic.
var ROWS=[0x1100,0x1120,0x1200,0x1220,0x1500,0x1520,0x1600,0x1620,0x1700,0x1720,0x1000,0x1300,0x1320,0x1400,0x1420];// CEA-608 captions are rendered onto a 34x15 matrix of character
// cells. The "bottom" row is the last element in the outer array.
// We keep track of positioning information as we go by storing the
// number of indentations and the tab offset in this buffer.
var createDisplayBuffer=function createDisplayBuffer(){var result=[],i=BOTTOM_ROW+1;while(i--){result.push({text:'',indent:0,offset:0});}return result;};var Cea608Stream=function Cea608Stream(field,dataChannel){Cea608Stream.prototype.init.call(this);this.field_=field||0;this.dataChannel_=dataChannel||0;this.name_='CC'+((this.field_<<1|this.dataChannel_)+1);this.setConstants();this.reset();this.push=function(packet){var data,swap,char0,char1,text;// remove the parity bits
data=packet.ccData&0x7f7f;// ignore duplicate control codes; the spec demands they're sent twice
if(data===this.lastControlCode_){this.lastControlCode_=null;return;}// Store control codes
if((data&0xf000)===0x1000){this.lastControlCode_=data;}else if(data!==this.PADDING_){this.lastControlCode_=null;}char0=data>>>8;char1=data&0xff;if(data===this.PADDING_){return;}else if(data===this.RESUME_CAPTION_LOADING_){this.mode_='popOn';}else if(data===this.END_OF_CAPTION_){// If an EOC is received while in paint-on mode, the displayed caption
// text should be swapped to non-displayed memory as if it was a pop-on
// caption. Because of that, we should explicitly switch back to pop-on
// mode
this.mode_='popOn';this.clearFormatting(packet.pts);// if a caption was being displayed, it's gone now
this.flushDisplayed(packet.pts);// flip memory
swap=this.displayed_;this.displayed_=this.nonDisplayed_;this.nonDisplayed_=swap;// start measuring the time to display the caption
this.startPts_=packet.pts;}else if(data===this.ROLL_UP_2_ROWS_){this.rollUpRows_=2;this.setRollUp(packet.pts);}else if(data===this.ROLL_UP_3_ROWS_){this.rollUpRows_=3;this.setRollUp(packet.pts);}else if(data===this.ROLL_UP_4_ROWS_){this.rollUpRows_=4;this.setRollUp(packet.pts);}else if(data===this.CARRIAGE_RETURN_){this.clearFormatting(packet.pts);this.flushDisplayed(packet.pts);this.shiftRowsUp_();this.startPts_=packet.pts;}else if(data===this.BACKSPACE_){if(this.mode_==='popOn'){this.nonDisplayed_[this.row_].text=this.nonDisplayed_[this.row_].text.slice(0,-1);}else{this.displayed_[this.row_].text=this.displayed_[this.row_].text.slice(0,-1);}}else if(data===this.ERASE_DISPLAYED_MEMORY_){this.flushDisplayed(packet.pts);this.displayed_=createDisplayBuffer();}else if(data===this.ERASE_NON_DISPLAYED_MEMORY_){this.nonDisplayed_=createDisplayBuffer();}else if(data===this.RESUME_DIRECT_CAPTIONING_){if(this.mode_!=='paintOn'){// NOTE: This should be removed when proper caption positioning is
// implemented
this.flushDisplayed(packet.pts);this.displayed_=createDisplayBuffer();}this.mode_='paintOn';this.startPts_=packet.pts;// Append special characters to caption text
}else if(this.isSpecialCharacter(char0,char1)){// Bitmask char0 so that we can apply character transformations
// regardless of field and data channel.
// Then byte-shift to the left and OR with char1 so we can pass the
// entire character code to `getCharFromCode`.
char0=(char0&0x03)<<8;text=getCharFromCode(char0|char1);this[this.mode_](packet.pts,text);this.column_++;// Append extended characters to caption text
}else if(this.isExtCharacter(char0,char1)){// Extended characters always follow their "non-extended" equivalents.
// IE if a "è" is desired, you'll always receive "eè"; non-compliant
// decoders are supposed to drop the "è", while compliant decoders
// backspace the "e" and insert "è".
// Delete the previous character
if(this.mode_==='popOn'){this.nonDisplayed_[this.row_].text=this.nonDisplayed_[this.row_].text.slice(0,-1);}else{this.displayed_[this.row_].text=this.displayed_[this.row_].text.slice(0,-1);}// Bitmask char0 so that we can apply character transformations
// regardless of field and data channel.
// Then byte-shift to the left and OR with char1 so we can pass the
// entire character code to `getCharFromCode`.
char0=(char0&0x03)<<8;text=getCharFromCode(char0|char1);this[this.mode_](packet.pts,text);this.column_++;// Process mid-row codes
}else if(this.isMidRowCode(char0,char1)){// Attributes are not additive, so clear all formatting
this.clearFormatting(packet.pts);// According to the standard, mid-row codes
// should be replaced with spaces, so add one now
this[this.mode_](packet.pts,' ');this.column_++;if((char1&0xe)===0xe){this.addFormatting(packet.pts,['i']);}if((char1&0x1)===0x1){this.addFormatting(packet.pts,['u']);}// Detect offset control codes and adjust cursor
}else if(this.isOffsetControlCode(char0,char1)){// Cursor position is set by indent PAC (see below) in 4-column
// increments, with an additional offset code of 1-3 to reach any
// of the 32 columns specified by CEA-608. So all we need to do
// here is increment the column cursor by the given offset.
var offset=char1&0x03;// For an offest value 1-3, set the offset for that caption
// in the non-displayed array.
this.nonDisplayed_[this.row_].offset=offset;this.column_+=offset;// Detect PACs (Preamble Address Codes)
}else if(this.isPAC(char0,char1)){// There's no logic for PAC -> row mapping, so we have to just
// find the row code in an array and use its index :(
var row=ROWS.indexOf(data&0x1f20);// Configure the caption window if we're in roll-up mode
if(this.mode_==='rollUp'){// This implies that the base row is incorrectly set.
// As per the recommendation in CEA-608(Base Row Implementation), defer to the number
// of roll-up rows set.
if(row-this.rollUpRows_+1<0){row=this.rollUpRows_-1;}this.setRollUp(packet.pts,row);}// Ensure the row is between 0 and 14, otherwise use the most
// recent or default row.
if(row!==this.row_&&row>=0&&row<=14){// formatting is only persistent for current row
this.clearFormatting(packet.pts);this.row_=row;}// All PACs can apply underline, so detect and apply
// (All odd-numbered second bytes set underline)
if(char1&0x1&&this.formatting_.indexOf('u')===-1){this.addFormatting(packet.pts,['u']);}if((data&0x10)===0x10){// We've got an indent level code. Each successive even number
// increments the column cursor by 4, so we can get the desired
// column position by bit-shifting to the right (to get n/2)
// and multiplying by 4.
var indentations=(data&0xe)>>1;this.column_=indentations*4;// add to the number of indentations for positioning
this.nonDisplayed_[this.row_].indent+=indentations;}if(this.isColorPAC(char1)){// it's a color code, though we only support white, which
// can be either normal or italicized. white italics can be
// either 0x4e or 0x6e depending on the row, so we just
// bitwise-and with 0xe to see if italics should be turned on
if((char1&0xe)===0xe){this.addFormatting(packet.pts,['i']);}}// We have a normal character in char0, and possibly one in char1
}else if(this.isNormalChar(char0)){if(char1===0x00){char1=null;}text=getCharFromCode(char0);text+=getCharFromCode(char1);this[this.mode_](packet.pts,text);this.column_+=text.length;}// finish data processing
};};Cea608Stream.prototype=new Stream$7();// Trigger a cue point that captures the current state of the
// display buffer
Cea608Stream.prototype.flushDisplayed=function(pts){var _this197=this;var logWarning=function logWarning(index){_this197.trigger('log',{level:'warn',message:'Skipping a malformed 608 caption at index '+index+'.'});};var content=[];this.displayed_.forEach(function(row,i){if(row&&row.text&&row.text.length){try{// remove spaces from the start and end of the string
row.text=row.text.trim();}catch(e){// Ordinarily, this shouldn't happen. However, caption
// parsing errors should not throw exceptions and
// break playback.
logWarning(i);}// See the below link for more details on the following fields:
// https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608
if(row.text.length){content.push({// The text to be displayed in the caption from this specific row, with whitespace removed.
text:row.text,// Value between 1 and 15 representing the PAC row used to calculate line height.
line:i+1,// A number representing the indent position by percentage (CEA-608 PAC indent code).
// The value will be a number between 10 and 80. Offset is used to add an aditional
// value to the position if necessary.
position:10+Math.min(70,row.indent*10)+row.offset*2.5});}}else if(row===undefined||row===null){logWarning(i);}});if(content.length){this.trigger('data',{startPts:this.startPts_,endPts:pts,content:content,stream:this.name_});}};/**
         * Zero out the data, used for startup and on seek
         */Cea608Stream.prototype.reset=function(){this.mode_='popOn';// When in roll-up mode, the index of the last row that will
// actually display captions. If a caption is shifted to a row
// with a lower index than this, it is cleared from the display
// buffer
this.topRow_=0;this.startPts_=0;this.displayed_=createDisplayBuffer();this.nonDisplayed_=createDisplayBuffer();this.lastControlCode_=null;// Track row and column for proper line-breaking and spacing
this.column_=0;this.row_=BOTTOM_ROW;this.rollUpRows_=2;// This variable holds currently-applied formatting
this.formatting_=[];};/**
         * Sets up control code and related constants for this instance
         */Cea608Stream.prototype.setConstants=function(){// The following attributes have these uses:
// ext_ :    char0 for mid-row codes, and the base for extended
//           chars (ext_+0, ext_+1, and ext_+2 are char0s for
//           extended codes)
// control_: char0 for control codes, except byte-shifted to the
//           left so that we can do this.control_ | CONTROL_CODE
// offset_:  char0 for tab offset codes
//
// It's also worth noting that control codes, and _only_ control codes,
// differ between field 1 and field2. Field 2 control codes are always
// their field 1 value plus 1. That's why there's the "| field" on the
// control value.
if(this.dataChannel_===0){this.BASE_=0x10;this.EXT_=0x11;this.CONTROL_=(0x14|this.field_)<<8;this.OFFSET_=0x17;}else if(this.dataChannel_===1){this.BASE_=0x18;this.EXT_=0x19;this.CONTROL_=(0x1c|this.field_)<<8;this.OFFSET_=0x1f;}// Constants for the LSByte command codes recognized by Cea608Stream. This
// list is not exhaustive. For a more comprehensive listing and semantics see
// http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf
// Padding
this.PADDING_=0x0000;// Pop-on Mode
this.RESUME_CAPTION_LOADING_=this.CONTROL_|0x20;this.END_OF_CAPTION_=this.CONTROL_|0x2f;// Roll-up Mode
this.ROLL_UP_2_ROWS_=this.CONTROL_|0x25;this.ROLL_UP_3_ROWS_=this.CONTROL_|0x26;this.ROLL_UP_4_ROWS_=this.CONTROL_|0x27;this.CARRIAGE_RETURN_=this.CONTROL_|0x2d;// paint-on mode
this.RESUME_DIRECT_CAPTIONING_=this.CONTROL_|0x29;// Erasure
this.BACKSPACE_=this.CONTROL_|0x21;this.ERASE_DISPLAYED_MEMORY_=this.CONTROL_|0x2c;this.ERASE_NON_DISPLAYED_MEMORY_=this.CONTROL_|0x2e;};/**
         * Detects if the 2-byte packet data is a special character
         *
         * Special characters have a second byte in the range 0x30 to 0x3f,
         * with the first byte being 0x11 (for data channel 1) or 0x19 (for
         * data channel 2).
         *
         * @param  {Integer} char0 The first byte
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the 2 bytes are an special character
         */Cea608Stream.prototype.isSpecialCharacter=function(char0,char1){return char0===this.EXT_&&char1>=0x30&&char1<=0x3f;};/**
         * Detects if the 2-byte packet data is an extended character
         *
         * Extended characters have a second byte in the range 0x20 to 0x3f,
         * with the first byte being 0x12 or 0x13 (for data channel 1) or
         * 0x1a or 0x1b (for data channel 2).
         *
         * @param  {Integer} char0 The first byte
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the 2 bytes are an extended character
         */Cea608Stream.prototype.isExtCharacter=function(char0,char1){return(char0===this.EXT_+1||char0===this.EXT_+2)&&char1>=0x20&&char1<=0x3f;};/**
         * Detects if the 2-byte packet is a mid-row code
         *
         * Mid-row codes have a second byte in the range 0x20 to 0x2f, with
         * the first byte being 0x11 (for data channel 1) or 0x19 (for data
         * channel 2).
         *
         * @param  {Integer} char0 The first byte
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the 2 bytes are a mid-row code
         */Cea608Stream.prototype.isMidRowCode=function(char0,char1){return char0===this.EXT_&&char1>=0x20&&char1<=0x2f;};/**
         * Detects if the 2-byte packet is an offset control code
         *
         * Offset control codes have a second byte in the range 0x21 to 0x23,
         * with the first byte being 0x17 (for data channel 1) or 0x1f (for
         * data channel 2).
         *
         * @param  {Integer} char0 The first byte
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the 2 bytes are an offset control code
         */Cea608Stream.prototype.isOffsetControlCode=function(char0,char1){return char0===this.OFFSET_&&char1>=0x21&&char1<=0x23;};/**
         * Detects if the 2-byte packet is a Preamble Address Code
         *
         * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)
         * or 0x18 to 0x1f (for data channel 2), with the second byte in the
         * range 0x40 to 0x7f.
         *
         * @param  {Integer} char0 The first byte
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the 2 bytes are a PAC
         */Cea608Stream.prototype.isPAC=function(char0,char1){return char0>=this.BASE_&&char0<this.BASE_+8&&char1>=0x40&&char1<=0x7f;};/**
         * Detects if a packet's second byte is in the range of a PAC color code
         *
         * PAC color codes have the second byte be in the range 0x40 to 0x4f, or
         * 0x60 to 0x6f.
         *
         * @param  {Integer} char1 The second byte
         * @return {Boolean}       Whether the byte is a color PAC
         */Cea608Stream.prototype.isColorPAC=function(char1){return char1>=0x40&&char1<=0x4f||char1>=0x60&&char1<=0x7f;};/**
         * Detects if a single byte is in the range of a normal character
         *
         * Normal text bytes are in the range 0x20 to 0x7f.
         *
         * @param  {Integer} char  The byte
         * @return {Boolean}       Whether the byte is a normal character
         */Cea608Stream.prototype.isNormalChar=function(char){return char>=0x20&&char<=0x7f;};/**
         * Configures roll-up
         *
         * @param  {Integer} pts         Current PTS
         * @param  {Integer} newBaseRow  Used by PACs to slide the current window to
         *                               a new position
         */Cea608Stream.prototype.setRollUp=function(pts,newBaseRow){// Reset the base row to the bottom row when switching modes
if(this.mode_!=='rollUp'){this.row_=BOTTOM_ROW;this.mode_='rollUp';// Spec says to wipe memories when switching to roll-up
this.flushDisplayed(pts);this.nonDisplayed_=createDisplayBuffer();this.displayed_=createDisplayBuffer();}if(newBaseRow!==undefined&&newBaseRow!==this.row_){// move currently displayed captions (up or down) to the new base row
for(var i=0;i<this.rollUpRows_;i++){this.displayed_[newBaseRow-i]=this.displayed_[this.row_-i];this.displayed_[this.row_-i]={text:'',indent:0,offset:0};}}if(newBaseRow===undefined){newBaseRow=this.row_;}this.topRow_=newBaseRow-this.rollUpRows_+1;};// Adds the opening HTML tag for the passed character to the caption text,
// and keeps track of it for later closing
Cea608Stream.prototype.addFormatting=function(pts,format){this.formatting_=this.formatting_.concat(format);var text=format.reduce(function(text,format){return text+'<'+format+'>';},'');this[this.mode_](pts,text);};// Adds HTML closing tags for current formatting to caption text and
// clears remembered formatting
Cea608Stream.prototype.clearFormatting=function(pts){if(!this.formatting_.length){return;}var text=this.formatting_.reverse().reduce(function(text,format){return text+'</'+format+'>';},'');this.formatting_=[];this[this.mode_](pts,text);};// Mode Implementations
Cea608Stream.prototype.popOn=function(pts,text){var baseRow=this.nonDisplayed_[this.row_].text;// buffer characters
baseRow+=text;this.nonDisplayed_[this.row_].text=baseRow;};Cea608Stream.prototype.rollUp=function(pts,text){var baseRow=this.displayed_[this.row_].text;baseRow+=text;this.displayed_[this.row_].text=baseRow;};Cea608Stream.prototype.shiftRowsUp_=function(){var i;// clear out inactive rows
for(i=0;i<this.topRow_;i++){this.displayed_[i]={text:'',indent:0,offset:0};}for(i=this.row_+1;i<BOTTOM_ROW+1;i++){this.displayed_[i]={text:'',indent:0,offset:0};}// shift displayed rows up
for(i=this.topRow_;i<this.row_;i++){this.displayed_[i]=this.displayed_[i+1];}// clear out the bottom row
this.displayed_[this.row_]={text:'',indent:0,offset:0};};Cea608Stream.prototype.paintOn=function(pts,text){var baseRow=this.displayed_[this.row_].text;baseRow+=text;this.displayed_[this.row_].text=baseRow;};// exports
var captionStream={CaptionStream:CaptionStream$2,Cea608Stream:Cea608Stream,Cea708Stream:Cea708Stream};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var streamTypes={H264_STREAM_TYPE:0x1B,ADTS_STREAM_TYPE:0x0F,METADATA_STREAM_TYPE:0x15};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Accepts program elementary stream (PES) data events and corrects
         * decode and presentation time stamps to account for a rollover
         * of the 33 bit value.
         */var Stream$6=stream;var MAX_TS=8589934592;var RO_THRESH=4294967296;var TYPE_SHARED='shared';var handleRollover$1=function handleRollover$1(value,reference){var direction=1;if(value>reference){// If the current timestamp value is greater than our reference timestamp and we detect a
// timestamp rollover, this means the roll over is happening in the opposite direction.
// Example scenario: Enter a long stream/video just after a rollover occurred. The reference
// point will be set to a small number, e.g. 1. The user then seeks backwards over the
// rollover point. In loading this segment, the timestamp values will be very large,
// e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust
// the time stamp to be `value - 2^33`.
direction=-1;}// Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will
// cause an incorrect adjustment.
while(Math.abs(reference-value)>RO_THRESH){value+=direction*MAX_TS;}return value;};var TimestampRolloverStream$1=function TimestampRolloverStream$1(type){var lastDTS,referenceDTS;TimestampRolloverStream$1.prototype.init.call(this);// The "shared" type is used in cases where a stream will contain muxed
// video and audio. We could use `undefined` here, but having a string
// makes debugging a little clearer.
this.type_=type||TYPE_SHARED;this.push=function(data){/**
             * Rollover stream expects data from elementary stream.
             * Elementary stream can push forward 2 types of data
             * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets
             * - Tracks metadata from PMT (Program Map Table)
             * Rollover stream expects pts/dts info to be available, since it stores lastDTS
             * We should ignore non-PES packets since they may override lastDTS to undefined.
             * lastDTS is important to signal the next segments
             * about rollover from the previous segments.
             */if(data.type==='metadata'){this.trigger('data',data);return;}// Any "shared" rollover streams will accept _all_ data. Otherwise,
// streams will only accept data that matches their type.
if(this.type_!==TYPE_SHARED&&data.type!==this.type_){return;}if(referenceDTS===undefined){referenceDTS=data.dts;}data.dts=handleRollover$1(data.dts,referenceDTS);data.pts=handleRollover$1(data.pts,referenceDTS);lastDTS=data.dts;this.trigger('data',data);};this.flush=function(){referenceDTS=lastDTS;this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};this.discontinuity=function(){referenceDTS=void 0;lastDTS=void 0;};this.reset=function(){this.discontinuity();this.trigger('reset');};};TimestampRolloverStream$1.prototype=new Stream$6();var timestampRolloverStream={TimestampRolloverStream:TimestampRolloverStream$1,handleRollover:handleRollover$1};// Once IE11 support is dropped, this function should be removed.
var typedArrayIndexOf$1=function typedArrayIndexOf$1(typedArray,element,fromIndex){if(!typedArray){return-1;}var currentIndex=fromIndex;for(;currentIndex<typedArray.length;currentIndex++){if(typedArray[currentIndex]===element){return currentIndex;}}return-1;};var typedArray={typedArrayIndexOf:typedArrayIndexOf$1};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Tools for parsing ID3 frame data
         * @see http://id3.org/id3v2.3.0
         */var typedArrayIndexOf=typedArray.typedArrayIndexOf,// Frames that allow different types of text encoding contain a text
// encoding description byte [ID3v2.4.0 section 4.]
textEncodingDescriptionByte={Iso88591:0x00,// ISO-8859-1, terminated with \0.
Utf16:0x01,// UTF-16 encoded Unicode BOM, terminated with \0\0
Utf16be:0x02,// UTF-16BE encoded Unicode, without BOM, terminated with \0\0
Utf8:0x03// UTF-8 encoded Unicode, terminated with \0
},// return a percent-encoded representation of the specified byte range
// @see http://en.wikipedia.org/wiki/Percent-encoding 
percentEncode$1=function percentEncode$1(bytes,start,end){var i,result='';for(i=start;i<end;i++){result+='%'+('00'+bytes[i].toString(16)).slice(-2);}return result;},// return the string representation of the specified byte range,
// interpreted as UTf-8.
parseUtf8=function parseUtf8(bytes,start,end){return decodeURIComponent(percentEncode$1(bytes,start,end));},// return the string representation of the specified byte range,
// interpreted as ISO-8859-1.
parseIso88591$1=function parseIso88591$1(bytes,start,end){return unescape(percentEncode$1(bytes,start,end));// jshint ignore:line
},parseSyncSafeInteger$1=function parseSyncSafeInteger$1(data){return data[0]<<21|data[1]<<14|data[2]<<7|data[3];},frameParsers={'APIC':function APIC(frame){var i=1,mimeTypeEndIndex,descriptionEndIndex,LINK_MIME_TYPE='-->';if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings
return;}// parsing fields [ID3v2.4.0 section 4.14.]
mimeTypeEndIndex=typedArrayIndexOf(frame.data,0,i);if(mimeTypeEndIndex<0){// malformed frame
return;}// parsing Mime type field (terminated with \0)
frame.mimeType=parseIso88591$1(frame.data,i,mimeTypeEndIndex);i=mimeTypeEndIndex+1;// parsing 1-byte Picture Type field
frame.pictureType=frame.data[i];i++;descriptionEndIndex=typedArrayIndexOf(frame.data,0,i);if(descriptionEndIndex<0){// malformed frame
return;}// parsing Description field (terminated with \0)
frame.description=parseUtf8(frame.data,i,descriptionEndIndex);i=descriptionEndIndex+1;if(frame.mimeType===LINK_MIME_TYPE){// parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])
frame.url=parseIso88591$1(frame.data,i,frame.data.length);}else{// parsing Picture Data field as binary data
frame.pictureData=frame.data.subarray(i,frame.data.length);}},'T*':function T(frame){if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings
return;}// parse text field, do not include null terminator in the frame value
// frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]
frame.value=parseUtf8(frame.data,1,frame.data.length).replace(/\0*$/,'');// text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]
frame.values=frame.value.split('\0');},'TXXX':function TXXX(frame){var descriptionEndIndex;if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings
return;}descriptionEndIndex=typedArrayIndexOf(frame.data,0,1);if(descriptionEndIndex===-1){return;}// parse the text fields
frame.description=parseUtf8(frame.data,1,descriptionEndIndex);// do not include the null terminator in the tag value
// frames that allow different types of encoding contain terminated text
// [ID3v2.4.0 section 4.]
frame.value=parseUtf8(frame.data,descriptionEndIndex+1,frame.data.length).replace(/\0*$/,'');frame.data=frame.value;},'W*':function W(frame){// parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]
// if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]
frame.url=parseIso88591$1(frame.data,0,frame.data.length).replace(/\0.*$/,'');},'WXXX':function WXXX(frame){var descriptionEndIndex;if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings
return;}descriptionEndIndex=typedArrayIndexOf(frame.data,0,1);if(descriptionEndIndex===-1){return;}// parse the description and URL fields
frame.description=parseUtf8(frame.data,1,descriptionEndIndex);// URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]
// if the value is followed by a string termination all the following information
// should be ignored [ID3v2.4.0 section 4.3]
frame.url=parseIso88591$1(frame.data,descriptionEndIndex+1,frame.data.length).replace(/\0.*$/,'');},'PRIV':function PRIV(frame){var i;for(i=0;i<frame.data.length;i++){if(frame.data[i]===0){// parse the description and URL fields
frame.owner=parseIso88591$1(frame.data,0,i);break;}}frame.privateData=frame.data.subarray(i+1);frame.data=frame.privateData;}};var parseId3Frames$1=function parseId3Frames$1(data){var frameSize,frameHeader,frameStart=10,tagSize=0,frames=[];// If we don't have enough data for a header, 10 bytes, 
// or 'ID3' in the first 3 bytes this is not a valid ID3 tag.
if(data.length<10||data[0]!=='I'.charCodeAt(0)||data[1]!=='D'.charCodeAt(0)||data[2]!=='3'.charCodeAt(0)){return;}// the frame size is transmitted as a 28-bit integer in the
// last four bytes of the ID3 header.
// The most significant bit of each byte is dropped and the
// results concatenated to recover the actual value.
tagSize=parseSyncSafeInteger$1(data.subarray(6,10));// ID3 reports the tag size excluding the header but it's more
// convenient for our comparisons to include it
tagSize+=10;// check bit 6 of byte 5 for the extended header flag.
var hasExtendedHeader=data[5]&0x40;if(hasExtendedHeader){// advance the frame start past the extended header
frameStart+=4;// header size field
frameStart+=parseSyncSafeInteger$1(data.subarray(10,14));tagSize-=parseSyncSafeInteger$1(data.subarray(16,20));// clip any padding off the end
}// parse one or more ID3 frames
// http://id3.org/id3v2.3.0#ID3v2_frame_overview
do{// determine the number of bytes in this frame
frameSize=parseSyncSafeInteger$1(data.subarray(frameStart+4,frameStart+8));if(frameSize<1){break;}frameHeader=String.fromCharCode(data[frameStart],data[frameStart+1],data[frameStart+2],data[frameStart+3]);var frame={id:frameHeader,data:data.subarray(frameStart+10,frameStart+frameSize+10)};frame.key=frame.id;// parse frame values
if(frameParsers[frame.id]){// use frame specific parser
frameParsers[frame.id](frame);}else if(frame.id[0]==='T'){// use text frame generic parser
frameParsers['T*'](frame);}else if(frame.id[0]==='W'){// use URL link frame generic parser
frameParsers['W*'](frame);}frames.push(frame);frameStart+=10;// advance past the frame header
frameStart+=frameSize;// advance past the frame body
}while(frameStart<tagSize);return frames;};var parseId3={parseId3Frames:parseId3Frames$1,parseSyncSafeInteger:parseSyncSafeInteger$1,frameParsers:frameParsers};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Accepts program elementary stream (PES) data events and parses out
         * ID3 metadata from them, if present.
         * @see http://id3.org/id3v2.3.0
         */var Stream$5=stream,StreamTypes$3=streamTypes,id3=parseId3,_MetadataStream;_MetadataStream=function MetadataStream(options){var settings={// the bytes of the program-level descriptor field in MP2T
// see ISO/IEC 13818-1:2013 (E), section 2.6 "Program and
// program element descriptors"
descriptor:options&&options.descriptor},// the total size in bytes of the ID3 tag being parsed
tagSize=0,// tag data that is not complete enough to be parsed
buffer=[],// the total number of bytes currently in the buffer
bufferSize=0,i;_MetadataStream.prototype.init.call(this);// calculate the text track in-band metadata track dispatch type
// https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track
this.dispatchType=StreamTypes$3.METADATA_STREAM_TYPE.toString(16);if(settings.descriptor){for(i=0;i<settings.descriptor.length;i++){this.dispatchType+=('00'+settings.descriptor[i].toString(16)).slice(-2);}}this.push=function(chunk){var tag,frameStart,frameSize,frame,i,frameHeader;if(chunk.type!=='timed-metadata'){return;}// if data_alignment_indicator is set in the PES header,
// we must have the start of a new ID3 tag. Assume anything
// remaining in the buffer was malformed and throw it out
if(chunk.dataAlignmentIndicator){bufferSize=0;buffer.length=0;}// ignore events that don't look like ID3 data
if(buffer.length===0&&(chunk.data.length<10||chunk.data[0]!=='I'.charCodeAt(0)||chunk.data[1]!=='D'.charCodeAt(0)||chunk.data[2]!=='3'.charCodeAt(0))){this.trigger('log',{level:'warn',message:'Skipping unrecognized metadata packet'});return;}// add this chunk to the data we've collected so far
buffer.push(chunk);bufferSize+=chunk.data.byteLength;// grab the size of the entire frame from the ID3 header
if(buffer.length===1){// the frame size is transmitted as a 28-bit integer in the
// last four bytes of the ID3 header.
// The most significant bit of each byte is dropped and the
// results concatenated to recover the actual value.
tagSize=id3.parseSyncSafeInteger(chunk.data.subarray(6,10));// ID3 reports the tag size excluding the header but it's more
// convenient for our comparisons to include it
tagSize+=10;}// if the entire frame has not arrived, wait for more data
if(bufferSize<tagSize){return;}// collect the entire frame so it can be parsed
tag={data:new Uint8Array(tagSize),frames:[],pts:buffer[0].pts,dts:buffer[0].dts};for(i=0;i<tagSize;){tag.data.set(buffer[0].data.subarray(0,tagSize-i),i);i+=buffer[0].data.byteLength;bufferSize-=buffer[0].data.byteLength;buffer.shift();}// find the start of the first frame and the end of the tag
frameStart=10;if(tag.data[5]&0x40){// advance the frame start past the extended header
frameStart+=4;// header size field
frameStart+=id3.parseSyncSafeInteger(tag.data.subarray(10,14));// clip any padding off the end
tagSize-=id3.parseSyncSafeInteger(tag.data.subarray(16,20));}// parse one or more ID3 frames
// http://id3.org/id3v2.3.0#ID3v2_frame_overview
do{// determine the number of bytes in this frame
frameSize=id3.parseSyncSafeInteger(tag.data.subarray(frameStart+4,frameStart+8));if(frameSize<1){this.trigger('log',{level:'warn',message:'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'});// If the frame is malformed, don't parse any further frames but allow previous valid parsed frames
// to be sent along.
break;}frameHeader=String.fromCharCode(tag.data[frameStart],tag.data[frameStart+1],tag.data[frameStart+2],tag.data[frameStart+3]);frame={id:frameHeader,data:tag.data.subarray(frameStart+10,frameStart+frameSize+10)};frame.key=frame.id;// parse frame values
if(id3.frameParsers[frame.id]){// use frame specific parser
id3.frameParsers[frame.id](frame);}else if(frame.id[0]==='T'){// use text frame generic parser
id3.frameParsers['T*'](frame);}else if(frame.id[0]==='W'){// use URL link frame generic parser
id3.frameParsers['W*'](frame);}// handle the special PRIV frame used to indicate the start
// time for raw AAC data
if(frame.owner==='com.apple.streaming.transportStreamTimestamp'){var d=frame.data,size=(d[3]&0x01)<<30|d[4]<<22|d[5]<<14|d[6]<<6|d[7]>>>2;size*=4;size+=d[7]&0x03;frame.timeStamp=size;// in raw AAC, all subsequent data will be timestamped based
// on the value of this frame
// we couldn't have known the appropriate pts and dts before
// parsing this ID3 tag so set those values now
if(tag.pts===undefined&&tag.dts===undefined){tag.pts=frame.timeStamp;tag.dts=frame.timeStamp;}this.trigger('timestamp',frame);}tag.frames.push(frame);frameStart+=10;// advance past the frame header
frameStart+=frameSize;// advance past the frame body
}while(frameStart<tagSize);this.trigger('data',tag);};};_MetadataStream.prototype=new Stream$5();var metadataStream=_MetadataStream;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * A stream-based mp2t to mp4 converter. This utility can be used to
         * deliver mp4s to a SourceBuffer on platforms that support native
         * Media Source Extensions.
         */var Stream$4=stream,CaptionStream$1=captionStream,StreamTypes$2=streamTypes,TimestampRolloverStream=timestampRolloverStream.TimestampRolloverStream;// object types
var _TransportPacketStream,_TransportParseStream,_ElementaryStream;// constants
var MP2T_PACKET_LENGTH$1=188,// bytes
SYNC_BYTE$1=0x47;/**
         * Splits an incoming stream of binary data into MPEG-2 Transport
         * Stream packets.
         */_TransportPacketStream=function TransportPacketStream(){var buffer=new Uint8Array(MP2T_PACKET_LENGTH$1),bytesInBuffer=0;_TransportPacketStream.prototype.init.call(this);// Deliver new bytes to the stream.
/**
           * Split a stream of data into M2TS packets
          **/this.push=function(bytes){var startIndex=0,endIndex=MP2T_PACKET_LENGTH$1,everything;// If there are bytes remaining from the last segment, prepend them to the
// bytes that were pushed in
if(bytesInBuffer){everything=new Uint8Array(bytes.byteLength+bytesInBuffer);everything.set(buffer.subarray(0,bytesInBuffer));everything.set(bytes,bytesInBuffer);bytesInBuffer=0;}else{everything=bytes;}// While we have enough data for a packet
while(endIndex<everything.byteLength){// Look for a pair of start and end sync bytes in the data..
if(everything[startIndex]===SYNC_BYTE$1&&everything[endIndex]===SYNC_BYTE$1){// We found a packet so emit it and jump one whole packet forward in
// the stream
this.trigger('data',everything.subarray(startIndex,endIndex));startIndex+=MP2T_PACKET_LENGTH$1;endIndex+=MP2T_PACKET_LENGTH$1;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex++;endIndex++;}// If there was some data left over at the end of the segment that couldn't
// possibly be a whole packet, keep it because it might be the start of a packet
// that continues in the next segment
if(startIndex<everything.byteLength){buffer.set(everything.subarray(startIndex),0);bytesInBuffer=everything.byteLength-startIndex;}};/**
           * Passes identified M2TS packets to the TransportParseStream to be parsed
          **/this.flush=function(){// If the buffer contains a whole packet when we are being flushed, emit it
// and empty the buffer. Otherwise hold onto the data because it may be
// important for decoding the next segment
if(bytesInBuffer===MP2T_PACKET_LENGTH$1&&buffer[0]===SYNC_BYTE$1){this.trigger('data',buffer);bytesInBuffer=0;}this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};this.reset=function(){bytesInBuffer=0;this.trigger('reset');};};_TransportPacketStream.prototype=new Stream$4();/**
         * Accepts an MP2T TransportPacketStream and emits data events with parsed
         * forms of the individual transport stream packets.
         */_TransportParseStream=function TransportParseStream(){var parsePsi,parsePat,parsePmt,self;_TransportParseStream.prototype.init.call(this);self=this;this.packetsWaitingForPmt=[];this.programMapTable=undefined;parsePsi=function parsePsi(payload,psi){var offset=0;// PSI packets may be split into multiple sections and those
// sections may be split into multiple packets. If a PSI
// section starts in this packet, the payload_unit_start_indicator
// will be true and the first byte of the payload will indicate
// the offset from the current position to the start of the
// section.
if(psi.payloadUnitStartIndicator){offset+=payload[offset]+1;}if(psi.type==='pat'){parsePat(payload.subarray(offset),psi);}else{parsePmt(payload.subarray(offset),psi);}};parsePat=function parsePat(payload,pat){pat.section_number=payload[7];// eslint-disable-line camelcase
pat.last_section_number=payload[8];// eslint-disable-line camelcase
// skip the PSI header and parse the first PMT entry
self.pmtPid=(payload[10]&0x1F)<<8|payload[11];pat.pmtPid=self.pmtPid;};/**
           * Parse out the relevant fields of a Program Map Table (PMT).
           * @param payload {Uint8Array} the PMT-specific portion of an MP2T
           * packet. The first byte in this array should be the table_id
           * field.
           * @param pmt {object} the object that should be decorated with
           * fields parsed from the PMT.
           */parsePmt=function parsePmt(payload,pmt){var sectionLength,tableEnd,programInfoLength,offset;// PMTs can be sent ahead of the time when they should actually
// take effect. We don't believe this should ever be the case
// for HLS but we'll ignore "forward" PMT declarations if we see
// them. Future PMT declarations have the current_next_indicator
// set to zero.
if(!(payload[5]&0x01)){return;}// overwrite any existing program map table
self.programMapTable={video:null,audio:null,'timed-metadata':{}};// the mapping table ends at the end of the current section
sectionLength=(payload[1]&0x0f)<<8|payload[2];tableEnd=3+sectionLength-4;// to determine where the table is, we have to figure out how
// long the program info descriptors are
programInfoLength=(payload[10]&0x0f)<<8|payload[11];// advance the offset to the first entry in the mapping table
offset=12+programInfoLength;while(offset<tableEnd){var streamType=payload[offset];var pid=(payload[offset+1]&0x1F)<<8|payload[offset+2];// only map a single elementary_pid for audio and video stream types
// TODO: should this be done for metadata too? for now maintain behavior of
//       multiple metadata streams
if(streamType===StreamTypes$2.H264_STREAM_TYPE&&self.programMapTable.video===null){self.programMapTable.video=pid;}else if(streamType===StreamTypes$2.ADTS_STREAM_TYPE&&self.programMapTable.audio===null){self.programMapTable.audio=pid;}else if(streamType===StreamTypes$2.METADATA_STREAM_TYPE){// map pid to stream type for metadata streams
self.programMapTable['timed-metadata'][pid]=streamType;}// move to the next table entry
// skip past the elementary stream descriptors, if present
offset+=((payload[offset+3]&0x0F)<<8|payload[offset+4])+5;}// record the map on the packet as well
pmt.programMapTable=self.programMapTable;};/**
           * Deliver a new MP2T packet to the next stream in the pipeline.
           */this.push=function(packet){var result={},offset=4;result.payloadUnitStartIndicator=!!(packet[1]&0x40);// pid is a 13-bit field starting at the last bit of packet[1]
result.pid=packet[1]&0x1f;result.pid<<=8;result.pid|=packet[2];// if an adaption field is present, its length is specified by the
// fifth byte of the TS packet header. The adaptation field is
// used to add stuffing to PES packets that don't fill a complete
// TS packet, and to specify some forms of timing and control data
// that we do not currently use.
if((packet[3]&0x30)>>>4>0x01){offset+=packet[offset]+1;}// parse the rest of the packet based on the type
if(result.pid===0){result.type='pat';parsePsi(packet.subarray(offset),result);this.trigger('data',result);}else if(result.pid===this.pmtPid){result.type='pmt';parsePsi(packet.subarray(offset),result);this.trigger('data',result);// if there are any packets waiting for a PMT to be found, process them now
while(this.packetsWaitingForPmt.length){this.processPes_.apply(this,this.packetsWaitingForPmt.shift());}}else if(this.programMapTable===undefined){// When we have not seen a PMT yet, defer further processing of
// PES packets until one has been parsed
this.packetsWaitingForPmt.push([packet,offset,result]);}else{this.processPes_(packet,offset,result);}};this.processPes_=function(packet,offset,result){// set the appropriate stream type
if(result.pid===this.programMapTable.video){result.streamType=StreamTypes$2.H264_STREAM_TYPE;}else if(result.pid===this.programMapTable.audio){result.streamType=StreamTypes$2.ADTS_STREAM_TYPE;}else{// if not video or audio, it is timed-metadata or unknown
// if unknown, streamType will be undefined
result.streamType=this.programMapTable['timed-metadata'][result.pid];}result.type='pes';result.data=packet.subarray(offset);this.trigger('data',result);};};_TransportParseStream.prototype=new Stream$4();_TransportParseStream.STREAM_TYPES={h264:0x1b,adts:0x0f};/**
         * Reconsistutes program elementary stream (PES) packets from parsed
         * transport stream packets. That is, if you pipe an
         * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output
         * events will be events which capture the bytes for individual PES
         * packets plus relevant metadata that has been extracted from the
         * container.
         */_ElementaryStream=function ElementaryStream(){var self=this,segmentHadPmt=false,// PES packet fragments
video={data:[],size:0},audio={data:[],size:0},timedMetadata={data:[],size:0},programMapTable,parsePes=function parsePes(payload,pes){var ptsDtsFlags;var startPrefix=payload[0]<<16|payload[1]<<8|payload[2];// default to an empty array
pes.data=new Uint8Array();// In certain live streams, the start of a TS fragment has ts packets
// that are frame data that is continuing from the previous fragment. This
// is to check that the pes data is the start of a new pes payload
if(startPrefix!==1){return;}// get the packet length, this will be 0 for video
pes.packetLength=6+(payload[4]<<8|payload[5]);// find out if this packets starts a new keyframe
pes.dataAlignmentIndicator=(payload[6]&0x04)!==0;// PES packets may be annotated with a PTS value, or a PTS value
// and a DTS value. Determine what combination of values is
// available to work with.
ptsDtsFlags=payload[7];// PTS and DTS are normally stored as a 33-bit number.  Javascript
// performs all bitwise operations on 32-bit integers but javascript
// supports a much greater range (52-bits) of integer using standard
// mathematical operations.
// We construct a 31-bit value using bitwise operators over the 31
// most significant bits and then multiply by 4 (equal to a left-shift
// of 2) before we add the final 2 least significant bits of the
// timestamp (equal to an OR.)
if(ptsDtsFlags&0xC0){// the PTS and DTS are not written out directly. For information
// on how they are encoded, see
// http://dvd.sourceforge.net/dvdinfo/pes-hdr.html
pes.pts=(payload[9]&0x0E)<<27|(payload[10]&0xFF)<<20|(payload[11]&0xFE)<<12|(payload[12]&0xFF)<<5|(payload[13]&0xFE)>>>3;pes.pts*=4;// Left shift by 2
pes.pts+=(payload[13]&0x06)>>>1;// OR by the two LSBs
pes.dts=pes.pts;if(ptsDtsFlags&0x40){pes.dts=(payload[14]&0x0E)<<27|(payload[15]&0xFF)<<20|(payload[16]&0xFE)<<12|(payload[17]&0xFF)<<5|(payload[18]&0xFE)>>>3;pes.dts*=4;// Left shift by 2
pes.dts+=(payload[18]&0x06)>>>1;// OR by the two LSBs
}}// the data section starts immediately after the PES header.
// pes_header_data_length specifies the number of header bytes
// that follow the last byte of the field.
pes.data=payload.subarray(9+payload[8]);},/**
              * Pass completely parsed PES packets to the next stream in the pipeline
             **/flushStream=function flushStream(stream,type,forceFlush){var packetData=new Uint8Array(stream.size),event={type:type},i=0,offset=0,packetFlushable=false,fragment;// do nothing if there is not enough buffered data for a complete
// PES header
if(!stream.data.length||stream.size<9){return;}event.trackId=stream.data[0].pid;// reassemble the packet
for(i=0;i<stream.data.length;i++){fragment=stream.data[i];packetData.set(fragment.data,offset);offset+=fragment.data.byteLength;}// parse assembled packet's PES header
parsePes(packetData,event);// non-video PES packets MUST have a non-zero PES_packet_length
// check that there is enough stream data to fill the packet
packetFlushable=type==='video'||event.packetLength<=stream.size;// flush pending packets if the conditions are right
if(forceFlush||packetFlushable){stream.size=0;stream.data.length=0;}// only emit packets that are complete. this is to avoid assembling
// incomplete PES packets due to poor segmentation
if(packetFlushable){self.trigger('data',event);}};_ElementaryStream.prototype.init.call(this);/**
           * Identifies M2TS packet types and parses PES packets using metadata
           * parsed from the PMT
           **/this.push=function(data){({pat:function pat(){// we have to wait for the PMT to arrive as well before we
// have any meaningful metadata
},pes:function pes(){var stream,streamType;switch(data.streamType){case StreamTypes$2.H264_STREAM_TYPE:stream=video;streamType='video';break;case StreamTypes$2.ADTS_STREAM_TYPE:stream=audio;streamType='audio';break;case StreamTypes$2.METADATA_STREAM_TYPE:stream=timedMetadata;streamType='timed-metadata';break;default:// ignore unknown stream types
return;}// if a new packet is starting, we can flush the completed
// packet
if(data.payloadUnitStartIndicator){flushStream(stream,streamType,true);}// buffer this fragment until we are sure we've received the
// complete payload
stream.data.push(data);stream.size+=data.data.byteLength;},pmt:function pmt(){var event={type:'metadata',tracks:[]};programMapTable=data.programMapTable;// translate audio and video streams to tracks
if(programMapTable.video!==null){event.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.video,codec:'avc',type:'video'});}if(programMapTable.audio!==null){event.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.audio,codec:'adts',type:'audio'});}segmentHadPmt=true;self.trigger('data',event);}})[data.type]();};this.reset=function(){video.size=0;video.data.length=0;audio.size=0;audio.data.length=0;this.trigger('reset');};/**
           * Flush any remaining input. Video PES packets may be of variable
           * length. Normally, the start of a new video packet can trigger the
           * finalization of the previous packet. That is not possible if no
           * more video is forthcoming, however. In that case, some other
           * mechanism (like the end of the file) has to be employed. When it is
           * clear that no additional data is forthcoming, calling this method
           * will flush the buffered packets.
           */this.flushStreams_=function(){// !!THIS ORDER IS IMPORTANT!!
// video first then audio
flushStream(video,'video');flushStream(audio,'audio');flushStream(timedMetadata,'timed-metadata');};this.flush=function(){// if on flush we haven't had a pmt emitted
// and we have a pmt to emit. emit the pmt
// so that we trigger a trackinfo downstream.
if(!segmentHadPmt&&programMapTable){var pmt={type:'metadata',tracks:[]};// translate audio and video streams to tracks
if(programMapTable.video!==null){pmt.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.video,codec:'avc',type:'video'});}if(programMapTable.audio!==null){pmt.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.audio,codec:'adts',type:'audio'});}self.trigger('data',pmt);}segmentHadPmt=false;this.flushStreams_();this.trigger('done');};};_ElementaryStream.prototype=new Stream$4();var m2ts$1={PAT_PID:0x0000,MP2T_PACKET_LENGTH:MP2T_PACKET_LENGTH$1,TransportPacketStream:_TransportPacketStream,TransportParseStream:_TransportParseStream,ElementaryStream:_ElementaryStream,TimestampRolloverStream:TimestampRolloverStream,CaptionStream:CaptionStream$1.CaptionStream,Cea608Stream:CaptionStream$1.Cea608Stream,Cea708Stream:CaptionStream$1.Cea708Stream,MetadataStream:metadataStream};for(var type in StreamTypes$2){if(StreamTypes$2.hasOwnProperty(type)){m2ts$1[type]=StreamTypes$2[type];}}var m2ts_1=m2ts$1;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var Stream$3=stream;var ONE_SECOND_IN_TS$2=clock$2.ONE_SECOND_IN_TS;var _AdtsStream$;var ADTS_SAMPLING_FREQUENCIES$1=[96000,88200,64000,48000,44100,32000,24000,22050,16000,12000,11025,8000,7350];/*
         * Accepts a ElementaryStream and emits data events with parsed
         * AAC Audio Frames of the individual packets. Input audio in ADTS
         * format is unpacked and re-emitted as AAC frames.
         *
         * @see http://wiki.multimedia.cx/index.php?title=ADTS
         * @see http://wiki.multimedia.cx/?title=Understanding_AAC
         */_AdtsStream$=function AdtsStream$1(handlePartialSegments){var buffer,frameNum=0;_AdtsStream$.prototype.init.call(this);this.skipWarn_=function(start,end){this.trigger('log',{level:'warn',message:"adts skiping bytes ".concat(start," to ").concat(end," in frame ").concat(frameNum," outside syncword")});};this.push=function(packet){var i=0,frameLength,protectionSkipBytes,oldBuffer,sampleCount,adtsFrameDuration;if(!handlePartialSegments){frameNum=0;}if(packet.type!=='audio'){// ignore non-audio data
return;}// Prepend any data in the buffer to the input data so that we can parse
// aac frames the cross a PES packet boundary
if(buffer&&buffer.length){oldBuffer=buffer;buffer=new Uint8Array(oldBuffer.byteLength+packet.data.byteLength);buffer.set(oldBuffer);buffer.set(packet.data,oldBuffer.byteLength);}else{buffer=packet.data;}// unpack any ADTS frames which have been fully received
// for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS
var skip;// We use i + 7 here because we want to be able to parse the entire header.
// If we don't have enough bytes to do that, then we definitely won't have a full frame.
while(i+7<buffer.length){// Look for the start of an ADTS header..
if(buffer[i]!==0xFF||(buffer[i+1]&0xF6)!==0xF0){if(typeof skip!=='number'){skip=i;}// If a valid header was not found,  jump one forward and attempt to
// find a valid ADTS header starting at the next byte
i++;continue;}if(typeof skip==='number'){this.skipWarn_(skip,i);skip=null;}// The protection skip bit tells us if we have 2 bytes of CRC data at the
// end of the ADTS header
protectionSkipBytes=(~buffer[i+1]&0x01)*2;// Frame length is a 13 bit integer starting 16 bits from the
// end of the sync sequence
// NOTE: frame length includes the size of the header
frameLength=(buffer[i+3]&0x03)<<11|buffer[i+4]<<3|(buffer[i+5]&0xe0)>>5;sampleCount=((buffer[i+6]&0x03)+1)*1024;adtsFrameDuration=sampleCount*ONE_SECOND_IN_TS$2/ADTS_SAMPLING_FREQUENCIES$1[(buffer[i+2]&0x3c)>>>2];// If we don't have enough data to actually finish this ADTS frame,
// then we have to wait for more data
if(buffer.byteLength-i<frameLength){break;}// Otherwise, deliver the complete AAC frame
this.trigger('data',{pts:packet.pts+frameNum*adtsFrameDuration,dts:packet.dts+frameNum*adtsFrameDuration,sampleCount:sampleCount,audioobjecttype:(buffer[i+2]>>>6&0x03)+1,channelcount:(buffer[i+2]&1)<<2|(buffer[i+3]&0xc0)>>>6,samplerate:ADTS_SAMPLING_FREQUENCIES$1[(buffer[i+2]&0x3c)>>>2],samplingfrequencyindex:(buffer[i+2]&0x3c)>>>2,// assume ISO/IEC 14496-12 AudioSampleEntry default of 16
samplesize:16,// data is the frame without it's header
data:buffer.subarray(i+7+protectionSkipBytes,i+frameLength)});frameNum++;i+=frameLength;}if(typeof skip==='number'){this.skipWarn_(skip,i);skip=null;}// remove processed bytes from the buffer.
buffer=buffer.subarray(i);};this.flush=function(){frameNum=0;this.trigger('done');};this.reset=function(){buffer=void 0;this.trigger('reset');};this.endTimeline=function(){buffer=void 0;this.trigger('endedtimeline');};};_AdtsStream$.prototype=new Stream$3();var adts=_AdtsStream$;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var ExpGolomb$1;/**
         * Parser for exponential Golomb codes, a variable-bitwidth number encoding
         * scheme used by h264.
         */ExpGolomb$1=function ExpGolomb$1(workingData){var// the number of bytes left to examine in workingData
workingBytesAvailable=workingData.byteLength,// the current word being examined
workingWord=0,// :uint
// the number of bits left to examine in the current word
workingBitsAvailable=0;// :uint;
// ():uint
this.length=function(){return 8*workingBytesAvailable;};// ():uint
this.bitsAvailable=function(){return 8*workingBytesAvailable+workingBitsAvailable;};// ():void
this.loadWord=function(){var position=workingData.byteLength-workingBytesAvailable,workingBytes=new Uint8Array(4),availableBytes=Math.min(4,workingBytesAvailable);if(availableBytes===0){throw new Error('no bytes available');}workingBytes.set(workingData.subarray(position,position+availableBytes));workingWord=new DataView(workingBytes.buffer).getUint32(0);// track the amount of workingData that has been processed
workingBitsAvailable=availableBytes*8;workingBytesAvailable-=availableBytes;};// (count:int):void
this.skipBits=function(count){var skipBytes;// :int
if(workingBitsAvailable>count){workingWord<<=count;workingBitsAvailable-=count;}else{count-=workingBitsAvailable;skipBytes=Math.floor(count/8);count-=skipBytes*8;workingBytesAvailable-=skipBytes;this.loadWord();workingWord<<=count;workingBitsAvailable-=count;}};// (size:int):uint
this.readBits=function(size){var bits=Math.min(workingBitsAvailable,size),// :uint
valu=workingWord>>>32-bits;// :uint
// if size > 31, handle error
workingBitsAvailable-=bits;if(workingBitsAvailable>0){workingWord<<=bits;}else if(workingBytesAvailable>0){this.loadWord();}bits=size-bits;if(bits>0){return valu<<bits|this.readBits(bits);}return valu;};// ():uint
this.skipLeadingZeros=function(){var leadingZeroCount;// :uint
for(leadingZeroCount=0;leadingZeroCount<workingBitsAvailable;++leadingZeroCount){if((workingWord&0x80000000>>>leadingZeroCount)!==0){// the first bit of working word is 1
workingWord<<=leadingZeroCount;workingBitsAvailable-=leadingZeroCount;return leadingZeroCount;}}// we exhausted workingWord and still have not found a 1
this.loadWord();return leadingZeroCount+this.skipLeadingZeros();};// ():void
this.skipUnsignedExpGolomb=function(){this.skipBits(1+this.skipLeadingZeros());};// ():void
this.skipExpGolomb=function(){this.skipBits(1+this.skipLeadingZeros());};// ():uint
this.readUnsignedExpGolomb=function(){var clz=this.skipLeadingZeros();// :uint
return this.readBits(clz+1)-1;};// ():int
this.readExpGolomb=function(){var valu=this.readUnsignedExpGolomb();// :int
if(0x01&valu){// the number is odd if the low order bit is set
return 1+valu>>>1;// add 1 to make it even, and divide by 2
}return-1*(valu>>>1);// divide by two then make it negative
};// Some convenience functions
// :Boolean
this.readBoolean=function(){return this.readBits(1)===1;};// ():int
this.readUnsignedByte=function(){return this.readBits(8);};this.loadWord();};var expGolomb=ExpGolomb$1;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var Stream$2=stream;var ExpGolomb=expGolomb;var _H264Stream$,_NalByteStream;var PROFILES_WITH_OPTIONAL_SPS_DATA;/**
         * Accepts a NAL unit byte stream and unpacks the embedded NAL units.
         */_NalByteStream=function NalByteStream(){var syncPoint=0,i,buffer;_NalByteStream.prototype.init.call(this);/*
           * Scans a byte stream and triggers a data event with the NAL units found.
           * @param {Object} data Event received from H264Stream
           * @param {Uint8Array} data.data The h264 byte stream to be scanned
           *
           * @see H264Stream.push
           */this.push=function(data){var swapBuffer;if(!buffer){buffer=data.data;}else{swapBuffer=new Uint8Array(buffer.byteLength+data.data.byteLength);swapBuffer.set(buffer);swapBuffer.set(data.data,buffer.byteLength);buffer=swapBuffer;}var len=buffer.byteLength;// Rec. ITU-T H.264, Annex B
// scan for NAL unit boundaries
// a match looks like this:
// 0 0 1 .. NAL .. 0 0 1
// ^ sync point        ^ i
// or this:
// 0 0 1 .. NAL .. 0 0 0
// ^ sync point        ^ i
// advance the sync point to a NAL start, if necessary
for(;syncPoint<len-3;syncPoint++){if(buffer[syncPoint+2]===1){// the sync point is properly aligned
i=syncPoint+5;break;}}while(i<len){// look at the current byte to determine if we've hit the end of
// a NAL unit boundary
switch(buffer[i]){case 0:// skip past non-sync sequences
if(buffer[i-1]!==0){i+=2;break;}else if(buffer[i-2]!==0){i++;break;}// deliver the NAL unit if it isn't empty
if(syncPoint+3!==i-2){this.trigger('data',buffer.subarray(syncPoint+3,i-2));}// drop trailing zeroes
do{i++;}while(buffer[i]!==1&&i<len);syncPoint=i-2;i+=3;break;case 1:// skip past non-sync sequences
if(buffer[i-1]!==0||buffer[i-2]!==0){i+=3;break;}// deliver the NAL unit
this.trigger('data',buffer.subarray(syncPoint+3,i-2));syncPoint=i-2;i+=3;break;default:// the current byte isn't a one or zero, so it cannot be part
// of a sync sequence
i+=3;break;}}// filter out the NAL units that were delivered
buffer=buffer.subarray(syncPoint);i-=syncPoint;syncPoint=0;};this.reset=function(){buffer=null;syncPoint=0;this.trigger('reset');};this.flush=function(){// deliver the last buffered NAL unit
if(buffer&&buffer.byteLength>3){this.trigger('data',buffer.subarray(syncPoint+3));}// reset the stream state
buffer=null;syncPoint=0;this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};};_NalByteStream.prototype=new Stream$2();// values of profile_idc that indicate additional fields are included in the SPS
// see Recommendation ITU-T H.264 (4/2013),
// 7.3.2.1.1 Sequence parameter set data syntax
PROFILES_WITH_OPTIONAL_SPS_DATA={100:true,110:true,122:true,244:true,44:true,83:true,86:true,118:true,128:true,// TODO: the three profiles below don't
// appear to have sps data in the specificiation anymore?
138:true,139:true,134:true};/**
         * Accepts input from a ElementaryStream and produces H.264 NAL unit data
         * events.
         */_H264Stream$=function H264Stream$1(){var nalByteStream=new _NalByteStream(),self,trackId,currentPts,currentDts,discardEmulationPreventionBytes,readSequenceParameterSet,skipScalingList;_H264Stream$.prototype.init.call(this);self=this;/*
           * Pushes a packet from a stream onto the NalByteStream
           *
           * @param {Object} packet - A packet received from a stream
           * @param {Uint8Array} packet.data - The raw bytes of the packet
           * @param {Number} packet.dts - Decode timestamp of the packet
           * @param {Number} packet.pts - Presentation timestamp of the packet
           * @param {Number} packet.trackId - The id of the h264 track this packet came from
           * @param {('video'|'audio')} packet.type - The type of packet
           *
           */this.push=function(packet){if(packet.type!=='video'){return;}trackId=packet.trackId;currentPts=packet.pts;currentDts=packet.dts;nalByteStream.push(packet);};/*
           * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps
           * for the NALUs to the next stream component.
           * Also, preprocess caption and sequence parameter NALUs.
           *
           * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`
           * @see NalByteStream.push
           */nalByteStream.on('data',function(data){var event={trackId:trackId,pts:currentPts,dts:currentDts,data:data,nalUnitTypeCode:data[0]&0x1f};switch(event.nalUnitTypeCode){case 0x05:event.nalUnitType='slice_layer_without_partitioning_rbsp_idr';break;case 0x06:event.nalUnitType='sei_rbsp';event.escapedRBSP=discardEmulationPreventionBytes(data.subarray(1));break;case 0x07:event.nalUnitType='seq_parameter_set_rbsp';event.escapedRBSP=discardEmulationPreventionBytes(data.subarray(1));event.config=readSequenceParameterSet(event.escapedRBSP);break;case 0x08:event.nalUnitType='pic_parameter_set_rbsp';break;case 0x09:event.nalUnitType='access_unit_delimiter_rbsp';break;}// This triggers data on the H264Stream
self.trigger('data',event);});nalByteStream.on('done',function(){self.trigger('done');});nalByteStream.on('partialdone',function(){self.trigger('partialdone');});nalByteStream.on('reset',function(){self.trigger('reset');});nalByteStream.on('endedtimeline',function(){self.trigger('endedtimeline');});this.flush=function(){nalByteStream.flush();};this.partialFlush=function(){nalByteStream.partialFlush();};this.reset=function(){nalByteStream.reset();};this.endTimeline=function(){nalByteStream.endTimeline();};/**
           * Advance the ExpGolomb decoder past a scaling list. The scaling
           * list is optionally transmitted as part of a sequence parameter
           * set and is not relevant to transmuxing.
           * @param count {number} the number of entries in this scaling list
           * @param expGolombDecoder {object} an ExpGolomb pointed to the
           * start of a scaling list
           * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1
           */skipScalingList=function skipScalingList(count,expGolombDecoder){var lastScale=8,nextScale=8,j,deltaScale;for(j=0;j<count;j++){if(nextScale!==0){deltaScale=expGolombDecoder.readExpGolomb();nextScale=(lastScale+deltaScale+256)%256;}lastScale=nextScale===0?lastScale:nextScale;}};/**
           * Expunge any "Emulation Prevention" bytes from a "Raw Byte
           * Sequence Payload"
           * @param data {Uint8Array} the bytes of a RBSP from a NAL
           * unit
           * @return {Uint8Array} the RBSP without any Emulation
           * Prevention Bytes
           */discardEmulationPreventionBytes=function discardEmulationPreventionBytes(data){var length=data.byteLength,emulationPreventionBytesPositions=[],i=1,newLength,newData;// Find all `Emulation Prevention Bytes`
while(i<length-2){if(data[i]===0&&data[i+1]===0&&data[i+2]===0x03){emulationPreventionBytesPositions.push(i+2);i+=2;}else{i++;}}// If no Emulation Prevention Bytes were found just return the original
// array
if(emulationPreventionBytesPositions.length===0){return data;}// Create a new array to hold the NAL unit data
newLength=length-emulationPreventionBytesPositions.length;newData=new Uint8Array(newLength);var sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++){if(sourceIndex===emulationPreventionBytesPositions[0]){// Skip this byte
sourceIndex++;// Remove this position index
emulationPreventionBytesPositions.shift();}newData[i]=data[sourceIndex];}return newData;};/**
           * Read a sequence parameter set and return some interesting video
           * properties. A sequence parameter set is the H264 metadata that
           * describes the properties of upcoming video frames.
           * @param data {Uint8Array} the bytes of a sequence parameter set
           * @return {object} an object with configuration parsed from the
           * sequence parameter set, including the dimensions of the
           * associated video frames.
           */readSequenceParameterSet=function readSequenceParameterSet(data){var frameCropLeftOffset=0,frameCropRightOffset=0,frameCropTopOffset=0,frameCropBottomOffset=0,expGolombDecoder,profileIdc,levelIdc,profileCompatibility,chromaFormatIdc,picOrderCntType,numRefFramesInPicOrderCntCycle,picWidthInMbsMinus1,picHeightInMapUnitsMinus1,frameMbsOnlyFlag,scalingListCount,sarRatio=[1,1],aspectRatioIdc,i;expGolombDecoder=new ExpGolomb(data);profileIdc=expGolombDecoder.readUnsignedByte();// profile_idc
profileCompatibility=expGolombDecoder.readUnsignedByte();// constraint_set[0-5]_flag
levelIdc=expGolombDecoder.readUnsignedByte();// level_idc u(8)
expGolombDecoder.skipUnsignedExpGolomb();// seq_parameter_set_id
// some profiles have more optional data we don't need
if(PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]){chromaFormatIdc=expGolombDecoder.readUnsignedExpGolomb();if(chromaFormatIdc===3){expGolombDecoder.skipBits(1);// separate_colour_plane_flag
}expGolombDecoder.skipUnsignedExpGolomb();// bit_depth_luma_minus8
expGolombDecoder.skipUnsignedExpGolomb();// bit_depth_chroma_minus8
expGolombDecoder.skipBits(1);// qpprime_y_zero_transform_bypass_flag
if(expGolombDecoder.readBoolean()){// seq_scaling_matrix_present_flag
scalingListCount=chromaFormatIdc!==3?8:12;for(i=0;i<scalingListCount;i++){if(expGolombDecoder.readBoolean()){// seq_scaling_list_present_flag[ i ]
if(i<6){skipScalingList(16,expGolombDecoder);}else{skipScalingList(64,expGolombDecoder);}}}}}expGolombDecoder.skipUnsignedExpGolomb();// log2_max_frame_num_minus4
picOrderCntType=expGolombDecoder.readUnsignedExpGolomb();if(picOrderCntType===0){expGolombDecoder.readUnsignedExpGolomb();// log2_max_pic_order_cnt_lsb_minus4
}else if(picOrderCntType===1){expGolombDecoder.skipBits(1);// delta_pic_order_always_zero_flag
expGolombDecoder.skipExpGolomb();// offset_for_non_ref_pic
expGolombDecoder.skipExpGolomb();// offset_for_top_to_bottom_field
numRefFramesInPicOrderCntCycle=expGolombDecoder.readUnsignedExpGolomb();for(i=0;i<numRefFramesInPicOrderCntCycle;i++){expGolombDecoder.skipExpGolomb();// offset_for_ref_frame[ i ]
}}expGolombDecoder.skipUnsignedExpGolomb();// max_num_ref_frames
expGolombDecoder.skipBits(1);// gaps_in_frame_num_value_allowed_flag
picWidthInMbsMinus1=expGolombDecoder.readUnsignedExpGolomb();picHeightInMapUnitsMinus1=expGolombDecoder.readUnsignedExpGolomb();frameMbsOnlyFlag=expGolombDecoder.readBits(1);if(frameMbsOnlyFlag===0){expGolombDecoder.skipBits(1);// mb_adaptive_frame_field_flag
}expGolombDecoder.skipBits(1);// direct_8x8_inference_flag
if(expGolombDecoder.readBoolean()){// frame_cropping_flag
frameCropLeftOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropRightOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropTopOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropBottomOffset=expGolombDecoder.readUnsignedExpGolomb();}if(expGolombDecoder.readBoolean()){// vui_parameters_present_flag
if(expGolombDecoder.readBoolean()){// aspect_ratio_info_present_flag
aspectRatioIdc=expGolombDecoder.readUnsignedByte();switch(aspectRatioIdc){case 1:sarRatio=[1,1];break;case 2:sarRatio=[12,11];break;case 3:sarRatio=[10,11];break;case 4:sarRatio=[16,11];break;case 5:sarRatio=[40,33];break;case 6:sarRatio=[24,11];break;case 7:sarRatio=[20,11];break;case 8:sarRatio=[32,11];break;case 9:sarRatio=[80,33];break;case 10:sarRatio=[18,11];break;case 11:sarRatio=[15,11];break;case 12:sarRatio=[64,33];break;case 13:sarRatio=[160,99];break;case 14:sarRatio=[4,3];break;case 15:sarRatio=[3,2];break;case 16:sarRatio=[2,1];break;case 255:{sarRatio=[expGolombDecoder.readUnsignedByte()<<8|expGolombDecoder.readUnsignedByte(),expGolombDecoder.readUnsignedByte()<<8|expGolombDecoder.readUnsignedByte()];break;}}if(sarRatio){sarRatio[0]/sarRatio[1];}}}return{profileIdc:profileIdc,levelIdc:levelIdc,profileCompatibility:profileCompatibility,width:(picWidthInMbsMinus1+1)*16-frameCropLeftOffset*2-frameCropRightOffset*2,height:(2-frameMbsOnlyFlag)*(picHeightInMapUnitsMinus1+1)*16-frameCropTopOffset*2-frameCropBottomOffset*2,// sar is sample aspect ratio
sarRatio:sarRatio};};};_H264Stream$.prototype=new Stream$2();var h264={H264Stream:_H264Stream$,NalByteStream:_NalByteStream};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Utilities to detect basic properties and metadata about Aac data.
         */var ADTS_SAMPLING_FREQUENCIES=[96000,88200,64000,48000,44100,32000,24000,22050,16000,12000,11025,8000,7350];var parseId3TagSize=function parseId3TagSize(header,byteIndex){var returnSize=header[byteIndex+6]<<21|header[byteIndex+7]<<14|header[byteIndex+8]<<7|header[byteIndex+9],flags=header[byteIndex+5],footerPresent=(flags&16)>>4;// if we get a negative returnSize clamp it to 0
returnSize=returnSize>=0?returnSize:0;if(footerPresent){return returnSize+20;}return returnSize+10;};var getId3Offset=function getId3Offset(data,offset){if(data.length-offset<10||data[offset]!=='I'.charCodeAt(0)||data[offset+1]!=='D'.charCodeAt(0)||data[offset+2]!=='3'.charCodeAt(0)){return offset;}offset+=parseId3TagSize(data,offset);return getId3Offset(data,offset);};// TODO: use vhs-utils
var isLikelyAacData$1=function isLikelyAacData$1(data){var offset=getId3Offset(data,0);return data.length>=offset+2&&(data[offset]&0xFF)===0xFF&&(data[offset+1]&0xF0)===0xF0&&// verify that the 2 layer bits are 0, aka this
// is not mp3 data but aac data.
(data[offset+1]&0x16)===0x10;};var parseSyncSafeInteger=function parseSyncSafeInteger(data){return data[0]<<21|data[1]<<14|data[2]<<7|data[3];};// return a percent-encoded representation of the specified byte range
// @see http://en.wikipedia.org/wiki/Percent-encoding
var percentEncode=function percentEncode(bytes,start,end){var i,result='';for(i=start;i<end;i++){result+='%'+('00'+bytes[i].toString(16)).slice(-2);}return result;};// return the string representation of the specified byte range,
// interpreted as ISO-8859-1.
var parseIso88591=function parseIso88591(bytes,start,end){return unescape(percentEncode(bytes,start,end));// jshint ignore:line
};var parseAdtsSize=function parseAdtsSize(header,byteIndex){var lowThree=(header[byteIndex+5]&0xE0)>>5,middle=header[byteIndex+4]<<3,highTwo=header[byteIndex+3]&0x3<<11;return highTwo|middle|lowThree;};var parseType$4=function parseType$4(header,byteIndex){if(header[byteIndex]==='I'.charCodeAt(0)&&header[byteIndex+1]==='D'.charCodeAt(0)&&header[byteIndex+2]==='3'.charCodeAt(0)){return'timed-metadata';}else if(header[byteIndex]&0xff===0xff&&(header[byteIndex+1]&0xf0)===0xf0){return'audio';}return null;};var parseSampleRate=function parseSampleRate(packet){var i=0;while(i+5<packet.length){if(packet[i]!==0xFF||(packet[i+1]&0xF6)!==0xF0){// If a valid header was not found,  jump one forward and attempt to
// find a valid ADTS header starting at the next byte
i++;continue;}return ADTS_SAMPLING_FREQUENCIES[(packet[i+2]&0x3c)>>>2];}return null;};var parseAacTimestamp=function parseAacTimestamp(packet){var frameStart,frameSize,frame,frameHeader;// find the start of the first frame and the end of the tag
frameStart=10;if(packet[5]&0x40){// advance the frame start past the extended header
frameStart+=4;// header size field
frameStart+=parseSyncSafeInteger(packet.subarray(10,14));}// parse one or more ID3 frames
// http://id3.org/id3v2.3.0#ID3v2_frame_overview
do{// determine the number of bytes in this frame
frameSize=parseSyncSafeInteger(packet.subarray(frameStart+4,frameStart+8));if(frameSize<1){return null;}frameHeader=String.fromCharCode(packet[frameStart],packet[frameStart+1],packet[frameStart+2],packet[frameStart+3]);if(frameHeader==='PRIV'){frame=packet.subarray(frameStart+10,frameStart+frameSize+10);for(var i=0;i<frame.byteLength;i++){if(frame[i]===0){var owner=parseIso88591(frame,0,i);if(owner==='com.apple.streaming.transportStreamTimestamp'){var d=frame.subarray(i+1);var size=(d[3]&0x01)<<30|d[4]<<22|d[5]<<14|d[6]<<6|d[7]>>>2;size*=4;size+=d[7]&0x03;return size;}break;}}}frameStart+=10;// advance past the frame header
frameStart+=frameSize;// advance past the frame body
}while(frameStart<packet.byteLength);return null;};var utils={isLikelyAacData:isLikelyAacData$1,parseId3TagSize:parseId3TagSize,parseAdtsSize:parseAdtsSize,parseType:parseType$4,parseSampleRate:parseSampleRate,parseAacTimestamp:parseAacTimestamp};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * A stream-based aac to mp4 converter. This utility can be used to
         * deliver mp4s to a SourceBuffer on platforms that support native
         * Media Source Extensions.
         */var Stream$1=stream;var aacUtils=utils;// Constants
var _AacStream$;/**
         * Splits an incoming stream of binary data into ADTS and ID3 Frames.
         */_AacStream$=function AacStream$1(){var everything=new Uint8Array(),timeStamp=0;_AacStream$.prototype.init.call(this);this.setTimestamp=function(timestamp){timeStamp=timestamp;};this.push=function(bytes){var frameSize=0,byteIndex=0,bytesLeft,chunk,packet,tempLength;// If there are bytes remaining from the last segment, prepend them to the
// bytes that were pushed in
if(everything.length){tempLength=everything.length;everything=new Uint8Array(bytes.byteLength+tempLength);everything.set(everything.subarray(0,tempLength));everything.set(bytes,tempLength);}else{everything=bytes;}while(everything.length-byteIndex>=3){if(everything[byteIndex]==='I'.charCodeAt(0)&&everything[byteIndex+1]==='D'.charCodeAt(0)&&everything[byteIndex+2]==='3'.charCodeAt(0)){// Exit early because we don't have enough to parse
// the ID3 tag header
if(everything.length-byteIndex<10){break;}// check framesize
frameSize=aacUtils.parseId3TagSize(everything,byteIndex);// Exit early if we don't have enough in the buffer
// to emit a full packet
// Add to byteIndex to support multiple ID3 tags in sequence
if(byteIndex+frameSize>everything.length){break;}chunk={type:'timed-metadata',data:everything.subarray(byteIndex,byteIndex+frameSize)};this.trigger('data',chunk);byteIndex+=frameSize;continue;}else if((everything[byteIndex]&0xff)===0xff&&(everything[byteIndex+1]&0xf0)===0xf0){// Exit early because we don't have enough to parse
// the ADTS frame header
if(everything.length-byteIndex<7){break;}frameSize=aacUtils.parseAdtsSize(everything,byteIndex);// Exit early if we don't have enough in the buffer
// to emit a full packet
if(byteIndex+frameSize>everything.length){break;}packet={type:'audio',data:everything.subarray(byteIndex,byteIndex+frameSize),pts:timeStamp,dts:timeStamp};this.trigger('data',packet);byteIndex+=frameSize;continue;}byteIndex++;}bytesLeft=everything.length-byteIndex;if(bytesLeft>0){everything=everything.subarray(byteIndex);}else{everything=new Uint8Array();}};this.reset=function(){everything=new Uint8Array();this.trigger('reset');};this.endTimeline=function(){everything=new Uint8Array();this.trigger('endedtimeline');};};_AacStream$.prototype=new Stream$1();var aac=_AacStream$;var AUDIO_PROPERTIES$1=['audioobjecttype','channelcount','samplerate','samplingfrequencyindex','samplesize'];var audioProperties=AUDIO_PROPERTIES$1;var VIDEO_PROPERTIES$1=['width','height','profileIdc','levelIdc','profileCompatibility','sarRatio'];var videoProperties=VIDEO_PROPERTIES$1;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * A stream-based mp2t to mp4 converter. This utility can be used to
         * deliver mp4s to a SourceBuffer on platforms that support native
         * Media Source Extensions.
         */var Stream=stream;var mp4=mp4Generator;var frameUtils=frameUtils$1;var audioFrameUtils=audioFrameUtils$1;var trackDecodeInfo=trackDecodeInfo$1;var m2ts=m2ts_1;var clock=clock$2;var AdtsStream=adts;var H264Stream=h264.H264Stream;var AacStream=aac;var isLikelyAacData=utils.isLikelyAacData;var ONE_SECOND_IN_TS$1=clock$2.ONE_SECOND_IN_TS;var AUDIO_PROPERTIES=audioProperties;var VIDEO_PROPERTIES=videoProperties;// object types
var _VideoSegmentStream,_AudioSegmentStream,_Transmuxer,_CoalesceStream;var retriggerForStream=function retriggerForStream(key,event){event.stream=key;this.trigger('log',event);};var addPipelineLogRetriggers=function addPipelineLogRetriggers(transmuxer,pipeline){var keys=Object.keys(pipeline);for(var i=0;i<keys.length;i++){var key=keys[i];// skip non-stream keys and headOfPipeline
// which is just a duplicate
if(key==='headOfPipeline'||!pipeline[key].on){continue;}pipeline[key].on('log',retriggerForStream.bind(transmuxer,key));}};/**
         * Compare two arrays (even typed) for same-ness
         */var arrayEquals=function arrayEquals(a,b){var i;if(a.length!==b.length){return false;}// compare the value of each element in the array
for(i=0;i<a.length;i++){if(a[i]!==b[i]){return false;}}return true;};var generateSegmentTimingInfo=function generateSegmentTimingInfo(baseMediaDecodeTime,startDts,startPts,endDts,endPts,prependedContentDuration){var ptsOffsetFromDts=startPts-startDts,decodeDuration=endDts-startDts,presentationDuration=endPts-startPts;// The PTS and DTS values are based on the actual stream times from the segment,
// however, the player time values will reflect a start from the baseMediaDecodeTime.
// In order to provide relevant values for the player times, base timing info on the
// baseMediaDecodeTime and the DTS and PTS durations of the segment.
return{start:{dts:baseMediaDecodeTime,pts:baseMediaDecodeTime+ptsOffsetFromDts},end:{dts:baseMediaDecodeTime+decodeDuration,pts:baseMediaDecodeTime+presentationDuration},prependedContentDuration:prependedContentDuration,baseMediaDecodeTime:baseMediaDecodeTime};};/**
         * Constructs a single-track, ISO BMFF media segment from AAC data
         * events. The output of this stream can be fed to a SourceBuffer
         * configured with a suitable initialization segment.
         * @param track {object} track metadata configuration
         * @param options {object} transmuxer options object
         * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps
         *        in the source; false to adjust the first segment to start at 0.
         */_AudioSegmentStream=function AudioSegmentStream(track,options){var adtsFrames=[],sequenceNumber,earliestAllowedDts=0,audioAppendStartTs=0,videoBaseMediaDecodeTime=Infinity;options=options||{};sequenceNumber=options.firstSequenceNumber||0;_AudioSegmentStream.prototype.init.call(this);this.push=function(data){trackDecodeInfo.collectDtsInfo(track,data);if(track){AUDIO_PROPERTIES.forEach(function(prop){track[prop]=data[prop];});}// buffer audio data until end() is called
adtsFrames.push(data);};this.setEarliestDts=function(earliestDts){earliestAllowedDts=earliestDts;};this.setVideoBaseMediaDecodeTime=function(baseMediaDecodeTime){videoBaseMediaDecodeTime=baseMediaDecodeTime;};this.setAudioAppendStart=function(timestamp){audioAppendStartTs=timestamp;};this.flush=function(){var frames,moof,mdat,boxes,frameDuration,segmentDuration,videoClockCyclesOfSilencePrefixed;// return early if no audio data has been observed
if(adtsFrames.length===0){this.trigger('done','AudioSegmentStream');return;}frames=audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames,track,earliestAllowedDts);track.baseMediaDecodeTime=trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track,options.keepOriginalTimestamps);// amount of audio filled but the value is in video clock rather than audio clock
videoClockCyclesOfSilencePrefixed=audioFrameUtils.prefixWithSilence(track,frames,audioAppendStartTs,videoBaseMediaDecodeTime);// we have to build the index from byte locations to
// samples (that is, adts frames) in the audio data
track.samples=audioFrameUtils.generateSampleTable(frames);// concatenate the audio data to constuct the mdat
mdat=mp4.mdat(audioFrameUtils.concatenateFrameData(frames));adtsFrames=[];moof=mp4.moof(sequenceNumber,[track]);boxes=new Uint8Array(moof.byteLength+mdat.byteLength);// bump the sequence number for next time
sequenceNumber++;boxes.set(moof);boxes.set(mdat,moof.byteLength);trackDecodeInfo.clearDtsInfo(track);frameDuration=Math.ceil(ONE_SECOND_IN_TS$1*1024/track.samplerate);// TODO this check was added to maintain backwards compatibility (particularly with
// tests) on adding the timingInfo event. However, it seems unlikely that there's a
// valid use-case where an init segment/data should be triggered without associated
// frames. Leaving for now, but should be looked into.
if(frames.length){segmentDuration=frames.length*frameDuration;this.trigger('segmentTimingInfo',generateSegmentTimingInfo(// The audio track's baseMediaDecodeTime is in audio clock cycles, but the
// frame info is in video clock cycles. Convert to match expectation of
// listeners (that all timestamps will be based on video clock cycles).
clock.audioTsToVideoTs(track.baseMediaDecodeTime,track.samplerate),// frame times are already in video clock, as is segment duration
frames[0].dts,frames[0].pts,frames[0].dts+segmentDuration,frames[0].pts+segmentDuration,videoClockCyclesOfSilencePrefixed||0));this.trigger('timingInfo',{start:frames[0].pts,end:frames[0].pts+segmentDuration});}this.trigger('data',{track:track,boxes:boxes});this.trigger('done','AudioSegmentStream');};this.reset=function(){trackDecodeInfo.clearDtsInfo(track);adtsFrames=[];this.trigger('reset');};};_AudioSegmentStream.prototype=new Stream();/**
         * Constructs a single-track, ISO BMFF media segment from H264 data
         * events. The output of this stream can be fed to a SourceBuffer
         * configured with a suitable initialization segment.
         * @param track {object} track metadata configuration
         * @param options {object} transmuxer options object
         * @param options.alignGopsAtEnd {boolean} If true, start from the end of the
         *        gopsToAlignWith list when attempting to align gop pts
         * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps
         *        in the source; false to adjust the first segment to start at 0.
         */_VideoSegmentStream=function VideoSegmentStream(track,options){var sequenceNumber,nalUnits=[],gopsToAlignWith=[],config,pps;options=options||{};sequenceNumber=options.firstSequenceNumber||0;_VideoSegmentStream.prototype.init.call(this);delete track.minPTS;this.gopCache_=[];/**
            * Constructs a ISO BMFF segment given H264 nalUnits
            * @param {Object} nalUnit A data event representing a nalUnit
            * @param {String} nalUnit.nalUnitType
            * @param {Object} nalUnit.config Properties for a mp4 track
            * @param {Uint8Array} nalUnit.data The nalUnit bytes
            * @see lib/codecs/h264.js
           **/this.push=function(nalUnit){trackDecodeInfo.collectDtsInfo(track,nalUnit);// record the track config
if(nalUnit.nalUnitType==='seq_parameter_set_rbsp'&&!config){config=nalUnit.config;track.sps=[nalUnit.data];VIDEO_PROPERTIES.forEach(function(prop){track[prop]=config[prop];},this);}if(nalUnit.nalUnitType==='pic_parameter_set_rbsp'&&!pps){pps=nalUnit.data;track.pps=[nalUnit.data];}// buffer video until flush() is called
nalUnits.push(nalUnit);};/**
            * Pass constructed ISO BMFF track and boxes on to the
            * next stream in the pipeline
           **/this.flush=function(){var frames,gopForFusion,gops,moof,mdat,boxes,prependedContentDuration=0,firstGop,lastGop;// Throw away nalUnits at the start of the byte stream until
// we find the first AUD
while(nalUnits.length){if(nalUnits[0].nalUnitType==='access_unit_delimiter_rbsp'){break;}nalUnits.shift();}// Return early if no video data has been observed
if(nalUnits.length===0){this.resetStream_();this.trigger('done','VideoSegmentStream');return;}// Organize the raw nal-units into arrays that represent
// higher-level constructs such as frames and gops
// (group-of-pictures)
frames=frameUtils.groupNalsIntoFrames(nalUnits);gops=frameUtils.groupFramesIntoGops(frames);// If the first frame of this fragment is not a keyframe we have
// a problem since MSE (on Chrome) requires a leading keyframe.
//
// We have two approaches to repairing this situation:
// 1) GOP-FUSION:
//    This is where we keep track of the GOPS (group-of-pictures)
//    from previous fragments and attempt to find one that we can
//    prepend to the current fragment in order to create a valid
//    fragment.
// 2) KEYFRAME-PULLING:
//    Here we search for the first keyframe in the fragment and
//    throw away all the frames between the start of the fragment
//    and that keyframe. We then extend the duration and pull the
//    PTS of the keyframe forward so that it covers the time range
//    of the frames that were disposed of.
//
// #1 is far prefereable over #2 which can cause "stuttering" but
// requires more things to be just right.
if(!gops[0][0].keyFrame){// Search for a gop for fusion from our gopCache
gopForFusion=this.getGopForFusion_(nalUnits[0],track);if(gopForFusion){// in order to provide more accurate timing information about the segment, save
// the number of seconds prepended to the original segment due to GOP fusion
prependedContentDuration=gopForFusion.duration;gops.unshift(gopForFusion);// Adjust Gops' metadata to account for the inclusion of the
// new gop at the beginning
gops.byteLength+=gopForFusion.byteLength;gops.nalCount+=gopForFusion.nalCount;gops.pts=gopForFusion.pts;gops.dts=gopForFusion.dts;gops.duration+=gopForFusion.duration;}else{// If we didn't find a candidate gop fall back to keyframe-pulling
gops=frameUtils.extendFirstKeyFrame(gops);}}// Trim gops to align with gopsToAlignWith
if(gopsToAlignWith.length){var alignedGops;if(options.alignGopsAtEnd){alignedGops=this.alignGopsAtEnd_(gops);}else{alignedGops=this.alignGopsAtStart_(gops);}if(!alignedGops){// save all the nals in the last GOP into the gop cache
this.gopCache_.unshift({gop:gops.pop(),pps:track.pps,sps:track.sps});// Keep a maximum of 6 GOPs in the cache
this.gopCache_.length=Math.min(6,this.gopCache_.length);// Clear nalUnits
nalUnits=[];// return early no gops can be aligned with desired gopsToAlignWith
this.resetStream_();this.trigger('done','VideoSegmentStream');return;}// Some gops were trimmed. clear dts info so minSegmentDts and pts are correct
// when recalculated before sending off to CoalesceStream
trackDecodeInfo.clearDtsInfo(track);gops=alignedGops;}trackDecodeInfo.collectDtsInfo(track,gops);// First, we have to build the index from byte locations to
// samples (that is, frames) in the video data
track.samples=frameUtils.generateSampleTable(gops);// Concatenate the video data and construct the mdat
mdat=mp4.mdat(frameUtils.concatenateNalData(gops));track.baseMediaDecodeTime=trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track,options.keepOriginalTimestamps);this.trigger('processedGopsInfo',gops.map(function(gop){return{pts:gop.pts,dts:gop.dts,byteLength:gop.byteLength};}));firstGop=gops[0];lastGop=gops[gops.length-1];this.trigger('segmentTimingInfo',generateSegmentTimingInfo(track.baseMediaDecodeTime,firstGop.dts,firstGop.pts,lastGop.dts+lastGop.duration,lastGop.pts+lastGop.duration,prependedContentDuration));this.trigger('timingInfo',{start:gops[0].pts,end:gops[gops.length-1].pts+gops[gops.length-1].duration});// save all the nals in the last GOP into the gop cache
this.gopCache_.unshift({gop:gops.pop(),pps:track.pps,sps:track.sps});// Keep a maximum of 6 GOPs in the cache
this.gopCache_.length=Math.min(6,this.gopCache_.length);// Clear nalUnits
nalUnits=[];this.trigger('baseMediaDecodeTime',track.baseMediaDecodeTime);this.trigger('timelineStartInfo',track.timelineStartInfo);moof=mp4.moof(sequenceNumber,[track]);// it would be great to allocate this array up front instead of
// throwing away hundreds of media segment fragments
boxes=new Uint8Array(moof.byteLength+mdat.byteLength);// Bump the sequence number for next time
sequenceNumber++;boxes.set(moof);boxes.set(mdat,moof.byteLength);this.trigger('data',{track:track,boxes:boxes});this.resetStream_();// Continue with the flush process now
this.trigger('done','VideoSegmentStream');};this.reset=function(){this.resetStream_();nalUnits=[];this.gopCache_.length=0;gopsToAlignWith.length=0;this.trigger('reset');};this.resetStream_=function(){trackDecodeInfo.clearDtsInfo(track);// reset config and pps because they may differ across segments
// for instance, when we are rendition switching
config=undefined;pps=undefined;};// Search for a candidate Gop for gop-fusion from the gop cache and
// return it or return null if no good candidate was found
this.getGopForFusion_=function(nalUnit){var halfSecond=45000,// Half-a-second in a 90khz clock
allowableOverlap=10000,// About 3 frames @ 30fps
nearestDistance=Infinity,dtsDistance,nearestGopObj,currentGop,currentGopObj,i;// Search for the GOP nearest to the beginning of this nal unit
for(i=0;i<this.gopCache_.length;i++){currentGopObj=this.gopCache_[i];currentGop=currentGopObj.gop;// Reject Gops with different SPS or PPS
if(!(track.pps&&arrayEquals(track.pps[0],currentGopObj.pps[0]))||!(track.sps&&arrayEquals(track.sps[0],currentGopObj.sps[0]))){continue;}// Reject Gops that would require a negative baseMediaDecodeTime
if(currentGop.dts<track.timelineStartInfo.dts){continue;}// The distance between the end of the gop and the start of the nalUnit
dtsDistance=nalUnit.dts-currentGop.dts-currentGop.duration;// Only consider GOPS that start before the nal unit and end within
// a half-second of the nal unit
if(dtsDistance>=-allowableOverlap&&dtsDistance<=halfSecond){// Always use the closest GOP we found if there is more than
// one candidate
if(!nearestGopObj||nearestDistance>dtsDistance){nearestGopObj=currentGopObj;nearestDistance=dtsDistance;}}}if(nearestGopObj){return nearestGopObj.gop;}return null;};// trim gop list to the first gop found that has a matching pts with a gop in the list
// of gopsToAlignWith starting from the START of the list
this.alignGopsAtStart_=function(gops){var alignIndex,gopIndex,align,gop,byteLength,nalCount,duration,alignedGops;byteLength=gops.byteLength;nalCount=gops.nalCount;duration=gops.duration;alignIndex=gopIndex=0;while(alignIndex<gopsToAlignWith.length&&gopIndex<gops.length){align=gopsToAlignWith[alignIndex];gop=gops[gopIndex];if(align.pts===gop.pts){break;}if(gop.pts>align.pts){// this current gop starts after the current gop we want to align on, so increment
// align index
alignIndex++;continue;}// current gop starts before the current gop we want to align on. so increment gop
// index
gopIndex++;byteLength-=gop.byteLength;nalCount-=gop.nalCount;duration-=gop.duration;}if(gopIndex===0){// no gops to trim
return gops;}if(gopIndex===gops.length){// all gops trimmed, skip appending all gops
return null;}alignedGops=gops.slice(gopIndex);alignedGops.byteLength=byteLength;alignedGops.duration=duration;alignedGops.nalCount=nalCount;alignedGops.pts=alignedGops[0].pts;alignedGops.dts=alignedGops[0].dts;return alignedGops;};// trim gop list to the first gop found that has a matching pts with a gop in the list
// of gopsToAlignWith starting from the END of the list
this.alignGopsAtEnd_=function(gops){var alignIndex,gopIndex,align,gop,alignEndIndex,matchFound;alignIndex=gopsToAlignWith.length-1;gopIndex=gops.length-1;alignEndIndex=null;matchFound=false;while(alignIndex>=0&&gopIndex>=0){align=gopsToAlignWith[alignIndex];gop=gops[gopIndex];if(align.pts===gop.pts){matchFound=true;break;}if(align.pts>gop.pts){alignIndex--;continue;}if(alignIndex===gopsToAlignWith.length-1){// gop.pts is greater than the last alignment candidate. If no match is found
// by the end of this loop, we still want to append gops that come after this
// point
alignEndIndex=gopIndex;}gopIndex--;}if(!matchFound&&alignEndIndex===null){return null;}var trimIndex;if(matchFound){trimIndex=gopIndex;}else{trimIndex=alignEndIndex;}if(trimIndex===0){return gops;}var alignedGops=gops.slice(trimIndex);var metadata=alignedGops.reduce(function(total,gop){total.byteLength+=gop.byteLength;total.duration+=gop.duration;total.nalCount+=gop.nalCount;return total;},{byteLength:0,duration:0,nalCount:0});alignedGops.byteLength=metadata.byteLength;alignedGops.duration=metadata.duration;alignedGops.nalCount=metadata.nalCount;alignedGops.pts=alignedGops[0].pts;alignedGops.dts=alignedGops[0].dts;return alignedGops;};this.alignGopsWith=function(newGopsToAlignWith){gopsToAlignWith=newGopsToAlignWith;};};_VideoSegmentStream.prototype=new Stream();/**
         * A Stream that can combine multiple streams (ie. audio & video)
         * into a single output segment for MSE. Also supports audio-only
         * and video-only streams.
         * @param options {object} transmuxer options object
         * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps
         *        in the source; false to adjust the first segment to start at media timeline start.
         */_CoalesceStream=function CoalesceStream(options,metadataStream){// Number of Tracks per output segment
// If greater than 1, we combine multiple
// tracks into a single segment
this.numberOfTracks=0;this.metadataStream=metadataStream;options=options||{};if(typeof options.remux!=='undefined'){this.remuxTracks=!!options.remux;}else{this.remuxTracks=true;}if(typeof options.keepOriginalTimestamps==='boolean'){this.keepOriginalTimestamps=options.keepOriginalTimestamps;}else{this.keepOriginalTimestamps=false;}this.pendingTracks=[];this.videoTrack=null;this.pendingBoxes=[];this.pendingCaptions=[];this.pendingMetadata=[];this.pendingBytes=0;this.emittedTracks=0;_CoalesceStream.prototype.init.call(this);// Take output from multiple
this.push=function(output){// buffer incoming captions until the associated video segment
// finishes
if(output.content||output.text){return this.pendingCaptions.push(output);}// buffer incoming id3 tags until the final flush
if(output.frames){return this.pendingMetadata.push(output);}// Add this track to the list of pending tracks and store
// important information required for the construction of
// the final segment
this.pendingTracks.push(output.track);this.pendingBytes+=output.boxes.byteLength;// TODO: is there an issue for this against chrome?
// We unshift audio and push video because
// as of Chrome 75 when switching from
// one init segment to another if the video
// mdat does not appear after the audio mdat
// only audio will play for the duration of our transmux.
if(output.track.type==='video'){this.videoTrack=output.track;this.pendingBoxes.push(output.boxes);}if(output.track.type==='audio'){this.audioTrack=output.track;this.pendingBoxes.unshift(output.boxes);}};};_CoalesceStream.prototype=new Stream();_CoalesceStream.prototype.flush=function(flushSource){var offset=0,event={captions:[],captionStreams:{},metadata:[],info:{}},caption,id3,initSegment,timelineStartPts=0,i;if(this.pendingTracks.length<this.numberOfTracks){if(flushSource!=='VideoSegmentStream'&&flushSource!=='AudioSegmentStream'){// Return because we haven't received a flush from a data-generating
// portion of the segment (meaning that we have only recieved meta-data
// or captions.)
return;}else if(this.remuxTracks){// Return until we have enough tracks from the pipeline to remux (if we
// are remuxing audio and video into a single MP4)
return;}else if(this.pendingTracks.length===0){// In the case where we receive a flush without any data having been
// received we consider it an emitted track for the purposes of coalescing
// `done` events.
// We do this for the case where there is an audio and video track in the
// segment but no audio data. (seen in several playlists with alternate
// audio tracks and no audio present in the main TS segments.)
this.emittedTracks++;if(this.emittedTracks>=this.numberOfTracks){this.trigger('done');this.emittedTracks=0;}return;}}if(this.videoTrack){timelineStartPts=this.videoTrack.timelineStartInfo.pts;VIDEO_PROPERTIES.forEach(function(prop){event.info[prop]=this.videoTrack[prop];},this);}else if(this.audioTrack){timelineStartPts=this.audioTrack.timelineStartInfo.pts;AUDIO_PROPERTIES.forEach(function(prop){event.info[prop]=this.audioTrack[prop];},this);}if(this.videoTrack||this.audioTrack){if(this.pendingTracks.length===1){event.type=this.pendingTracks[0].type;}else{event.type='combined';}this.emittedTracks+=this.pendingTracks.length;initSegment=mp4.initSegment(this.pendingTracks);// Create a new typed array to hold the init segment
event.initSegment=new Uint8Array(initSegment.byteLength);// Create an init segment containing a moov
// and track definitions
event.initSegment.set(initSegment);// Create a new typed array to hold the moof+mdats
event.data=new Uint8Array(this.pendingBytes);// Append each moof+mdat (one per track) together
for(i=0;i<this.pendingBoxes.length;i++){event.data.set(this.pendingBoxes[i],offset);offset+=this.pendingBoxes[i].byteLength;}// Translate caption PTS times into second offsets to match the
// video timeline for the segment, and add track info
for(i=0;i<this.pendingCaptions.length;i++){caption=this.pendingCaptions[i];caption.startTime=clock.metadataTsToSeconds(caption.startPts,timelineStartPts,this.keepOriginalTimestamps);caption.endTime=clock.metadataTsToSeconds(caption.endPts,timelineStartPts,this.keepOriginalTimestamps);event.captionStreams[caption.stream]=true;event.captions.push(caption);}// Translate ID3 frame PTS times into second offsets to match the
// video timeline for the segment
for(i=0;i<this.pendingMetadata.length;i++){id3=this.pendingMetadata[i];id3.cueTime=clock.metadataTsToSeconds(id3.pts,timelineStartPts,this.keepOriginalTimestamps);event.metadata.push(id3);}// We add this to every single emitted segment even though we only need
// it for the first
event.metadata.dispatchType=this.metadataStream.dispatchType;// Reset stream state
this.pendingTracks.length=0;this.videoTrack=null;this.pendingBoxes.length=0;this.pendingCaptions.length=0;this.pendingBytes=0;this.pendingMetadata.length=0;// Emit the built segment
// We include captions and ID3 tags for backwards compatibility,
// ideally we should send only video and audio in the data event
this.trigger('data',event);// Emit each caption to the outside world
// Ideally, this would happen immediately on parsing captions,
// but we need to ensure that video data is sent back first
// so that caption timing can be adjusted to match video timing
for(i=0;i<event.captions.length;i++){caption=event.captions[i];this.trigger('caption',caption);}// Emit each id3 tag to the outside world
// Ideally, this would happen immediately on parsing the tag,
// but we need to ensure that video data is sent back first
// so that ID3 frame timing can be adjusted to match video timing
for(i=0;i<event.metadata.length;i++){id3=event.metadata[i];this.trigger('id3Frame',id3);}}// Only emit `done` if all tracks have been flushed and emitted
if(this.emittedTracks>=this.numberOfTracks){this.trigger('done');this.emittedTracks=0;}};_CoalesceStream.prototype.setRemux=function(val){this.remuxTracks=val;};/**
         * A Stream that expects MP2T binary data as input and produces
         * corresponding media segments, suitable for use with Media Source
         * Extension (MSE) implementations that support the ISO BMFF byte
         * stream format, like Chrome.
         */_Transmuxer=function Transmuxer(options){var self=this,hasFlushed=true,videoTrack,audioTrack;_Transmuxer.prototype.init.call(this);options=options||{};this.baseMediaDecodeTime=options.baseMediaDecodeTime||0;this.transmuxPipeline_={};this.setupAacPipeline=function(){var pipeline={};this.transmuxPipeline_=pipeline;pipeline.type='aac';pipeline.metadataStream=new m2ts.MetadataStream();// set up the parsing pipeline
pipeline.aacStream=new AacStream();pipeline.audioTimestampRolloverStream=new m2ts.TimestampRolloverStream('audio');pipeline.timedMetadataTimestampRolloverStream=new m2ts.TimestampRolloverStream('timed-metadata');pipeline.adtsStream=new AdtsStream();pipeline.coalesceStream=new _CoalesceStream(options,pipeline.metadataStream);pipeline.headOfPipeline=pipeline.aacStream;pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);pipeline.metadataStream.on('timestamp',function(frame){pipeline.aacStream.setTimestamp(frame.timeStamp);});pipeline.aacStream.on('data',function(data){if(data.type!=='timed-metadata'&&data.type!=='audio'||pipeline.audioSegmentStream){return;}audioTrack=audioTrack||{timelineStartInfo:{baseMediaDecodeTime:self.baseMediaDecodeTime},codec:'adts',type:'audio'};// hook up the audio segment stream to the first track with aac data
pipeline.coalesceStream.numberOfTracks++;pipeline.audioSegmentStream=new _AudioSegmentStream(audioTrack,options);pipeline.audioSegmentStream.on('log',self.getLogTrigger_('audioSegmentStream'));pipeline.audioSegmentStream.on('timingInfo',self.trigger.bind(self,'audioTimingInfo'));// Set up the final part of the audio pipeline
pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);// emit pmt info
self.trigger('trackinfo',{hasAudio:!!audioTrack,hasVideo:!!videoTrack});});// Re-emit any data coming from the coalesce stream to the outside world
pipeline.coalesceStream.on('data',this.trigger.bind(this,'data'));// Let the consumer know we have finished flushing the entire pipeline
pipeline.coalesceStream.on('done',this.trigger.bind(this,'done'));addPipelineLogRetriggers(this,pipeline);};this.setupTsPipeline=function(){var pipeline={};this.transmuxPipeline_=pipeline;pipeline.type='ts';pipeline.metadataStream=new m2ts.MetadataStream();// set up the parsing pipeline
pipeline.packetStream=new m2ts.TransportPacketStream();pipeline.parseStream=new m2ts.TransportParseStream();pipeline.elementaryStream=new m2ts.ElementaryStream();pipeline.timestampRolloverStream=new m2ts.TimestampRolloverStream();pipeline.adtsStream=new AdtsStream();pipeline.h264Stream=new H264Stream();pipeline.captionStream=new m2ts.CaptionStream(options);pipeline.coalesceStream=new _CoalesceStream(options,pipeline.metadataStream);pipeline.headOfPipeline=pipeline.packetStream;// disassemble MPEG2-TS packets into elementary streams
pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream);// !!THIS ORDER IS IMPORTANT!!
// demux the streams
pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);// Hook up CEA-608/708 caption stream
pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);pipeline.elementaryStream.on('data',function(data){var i;if(data.type==='metadata'){i=data.tracks.length;// scan the tracks listed in the metadata
while(i--){if(!videoTrack&&data.tracks[i].type==='video'){videoTrack=data.tracks[i];videoTrack.timelineStartInfo.baseMediaDecodeTime=self.baseMediaDecodeTime;}else if(!audioTrack&&data.tracks[i].type==='audio'){audioTrack=data.tracks[i];audioTrack.timelineStartInfo.baseMediaDecodeTime=self.baseMediaDecodeTime;}}// hook up the video segment stream to the first track with h264 data
if(videoTrack&&!pipeline.videoSegmentStream){pipeline.coalesceStream.numberOfTracks++;pipeline.videoSegmentStream=new _VideoSegmentStream(videoTrack,options);pipeline.videoSegmentStream.on('log',self.getLogTrigger_('videoSegmentStream'));pipeline.videoSegmentStream.on('timelineStartInfo',function(timelineStartInfo){// When video emits timelineStartInfo data after a flush, we forward that
// info to the AudioSegmentStream, if it exists, because video timeline
// data takes precedence.  Do not do this if keepOriginalTimestamps is set,
// because this is a particularly subtle form of timestamp alteration.
if(audioTrack&&!options.keepOriginalTimestamps){audioTrack.timelineStartInfo=timelineStartInfo;// On the first segment we trim AAC frames that exist before the
// very earliest DTS we have seen in video because Chrome will
// interpret any video track with a baseMediaDecodeTime that is
// non-zero as a gap.
pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts-self.baseMediaDecodeTime);}});pipeline.videoSegmentStream.on('processedGopsInfo',self.trigger.bind(self,'gopInfo'));pipeline.videoSegmentStream.on('segmentTimingInfo',self.trigger.bind(self,'videoSegmentTimingInfo'));pipeline.videoSegmentStream.on('baseMediaDecodeTime',function(baseMediaDecodeTime){if(audioTrack){pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);}});pipeline.videoSegmentStream.on('timingInfo',self.trigger.bind(self,'videoTimingInfo'));// Set up the final part of the video pipeline
pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);}if(audioTrack&&!pipeline.audioSegmentStream){// hook up the audio segment stream to the first track with aac data
pipeline.coalesceStream.numberOfTracks++;pipeline.audioSegmentStream=new _AudioSegmentStream(audioTrack,options);pipeline.audioSegmentStream.on('log',self.getLogTrigger_('audioSegmentStream'));pipeline.audioSegmentStream.on('timingInfo',self.trigger.bind(self,'audioTimingInfo'));pipeline.audioSegmentStream.on('segmentTimingInfo',self.trigger.bind(self,'audioSegmentTimingInfo'));// Set up the final part of the audio pipeline
pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);}// emit pmt info
self.trigger('trackinfo',{hasAudio:!!audioTrack,hasVideo:!!videoTrack});}});// Re-emit any data coming from the coalesce stream to the outside world
pipeline.coalesceStream.on('data',this.trigger.bind(this,'data'));pipeline.coalesceStream.on('id3Frame',function(id3Frame){id3Frame.dispatchType=pipeline.metadataStream.dispatchType;self.trigger('id3Frame',id3Frame);});pipeline.coalesceStream.on('caption',this.trigger.bind(this,'caption'));// Let the consumer know we have finished flushing the entire pipeline
pipeline.coalesceStream.on('done',this.trigger.bind(this,'done'));addPipelineLogRetriggers(this,pipeline);};// hook up the segment streams once track metadata is delivered
this.setBaseMediaDecodeTime=function(baseMediaDecodeTime){var pipeline=this.transmuxPipeline_;if(!options.keepOriginalTimestamps){this.baseMediaDecodeTime=baseMediaDecodeTime;}if(audioTrack){audioTrack.timelineStartInfo.dts=undefined;audioTrack.timelineStartInfo.pts=undefined;trackDecodeInfo.clearDtsInfo(audioTrack);if(pipeline.audioTimestampRolloverStream){pipeline.audioTimestampRolloverStream.discontinuity();}}if(videoTrack){if(pipeline.videoSegmentStream){pipeline.videoSegmentStream.gopCache_=[];}videoTrack.timelineStartInfo.dts=undefined;videoTrack.timelineStartInfo.pts=undefined;trackDecodeInfo.clearDtsInfo(videoTrack);pipeline.captionStream.reset();}if(pipeline.timestampRolloverStream){pipeline.timestampRolloverStream.discontinuity();}};this.setAudioAppendStart=function(timestamp){if(audioTrack){this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);}};this.setRemux=function(val){var pipeline=this.transmuxPipeline_;options.remux=val;if(pipeline&&pipeline.coalesceStream){pipeline.coalesceStream.setRemux(val);}};this.alignGopsWith=function(gopsToAlignWith){if(videoTrack&&this.transmuxPipeline_.videoSegmentStream){this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);}};this.getLogTrigger_=function(key){var self=this;return function(event){event.stream=key;self.trigger('log',event);};};// feed incoming data to the front of the parsing pipeline
this.push=function(data){if(hasFlushed){var isAac=isLikelyAacData(data);if(isAac&&this.transmuxPipeline_.type!=='aac'){this.setupAacPipeline();}else if(!isAac&&this.transmuxPipeline_.type!=='ts'){this.setupTsPipeline();}hasFlushed=false;}this.transmuxPipeline_.headOfPipeline.push(data);};// flush any buffered data
this.flush=function(){hasFlushed=true;// Start at the top of the pipeline and flush all pending work
this.transmuxPipeline_.headOfPipeline.flush();};this.endTimeline=function(){this.transmuxPipeline_.headOfPipeline.endTimeline();};this.reset=function(){if(this.transmuxPipeline_.headOfPipeline){this.transmuxPipeline_.headOfPipeline.reset();}};// Caption data has to be reset when seeking outside buffered range
this.resetCaptions=function(){if(this.transmuxPipeline_.captionStream){this.transmuxPipeline_.captionStream.reset();}};};_Transmuxer.prototype=new Stream();var transmuxer={Transmuxer:_Transmuxer,VideoSegmentStream:_VideoSegmentStream,AudioSegmentStream:_AudioSegmentStream,AUDIO_PROPERTIES:AUDIO_PROPERTIES,VIDEO_PROPERTIES:VIDEO_PROPERTIES,// exported for testing
generateSegmentTimingInfo:generateSegmentTimingInfo};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         */var toUnsigned$3=function toUnsigned$3(value){return value>>>0;};var toHexString$1=function toHexString$1(value){return('00'+value.toString(16)).slice(-2);};var bin={toUnsigned:toUnsigned$3,toHexString:toHexString$1};var parseType$3=function parseType$3(buffer){var result='';result+=String.fromCharCode(buffer[0]);result+=String.fromCharCode(buffer[1]);result+=String.fromCharCode(buffer[2]);result+=String.fromCharCode(buffer[3]);return result;};var parseType_1=parseType$3;var toUnsigned$2=bin.toUnsigned;var parseType$2=parseType_1;var findBox$2=function findBox$2(data,path){var results=[],i,size,type,end,subresults;if(!path.length){// short-circuit the search for empty paths
return null;}for(i=0;i<data.byteLength;){size=toUnsigned$2(data[i]<<24|data[i+1]<<16|data[i+2]<<8|data[i+3]);type=parseType$2(data.subarray(i+4,i+8));end=size>1?i+size:data.byteLength;if(type===path[0]){if(path.length===1){// this is the end of the path and we've found the box we were
// looking for
results.push(data.subarray(i+8,end));}else{// recursively search for the next box along the path
subresults=findBox$2(data.subarray(i+8,end),path.slice(1));if(subresults.length){results=results.concat(subresults);}}}i=end;}// we've finished searching all of data
return results;};var findBox_1=findBox$2;var toUnsigned$1=bin.toUnsigned;var getUint64$2=numbers.getUint64;var tfdt=function tfdt(data){var result={version:data[0],flags:new Uint8Array(data.subarray(1,4))};if(result.version===1){result.baseMediaDecodeTime=getUint64$2(data.subarray(4));}else{result.baseMediaDecodeTime=toUnsigned$1(data[4]<<24|data[5]<<16|data[6]<<8|data[7]);}return result;};var parseTfdt$2=tfdt;var parseSampleFlags$1=function parseSampleFlags$1(flags){return{isLeading:(flags[0]&0x0c)>>>2,dependsOn:flags[0]&0x03,isDependedOn:(flags[1]&0xc0)>>>6,hasRedundancy:(flags[1]&0x30)>>>4,paddingValue:(flags[1]&0x0e)>>>1,isNonSyncSample:flags[1]&0x01,degradationPriority:flags[2]<<8|flags[3]};};var parseSampleFlags_1=parseSampleFlags$1;var parseSampleFlags=parseSampleFlags_1;var trun=function trun(data){var result={version:data[0],flags:new Uint8Array(data.subarray(1,4)),samples:[]},view=new DataView(data.buffer,data.byteOffset,data.byteLength),// Flag interpretation
dataOffsetPresent=result.flags[2]&0x01,// compare with 2nd byte of 0x1
firstSampleFlagsPresent=result.flags[2]&0x04,// compare with 2nd byte of 0x4
sampleDurationPresent=result.flags[1]&0x01,// compare with 2nd byte of 0x100
sampleSizePresent=result.flags[1]&0x02,// compare with 2nd byte of 0x200
sampleFlagsPresent=result.flags[1]&0x04,// compare with 2nd byte of 0x400
sampleCompositionTimeOffsetPresent=result.flags[1]&0x08,// compare with 2nd byte of 0x800
sampleCount=view.getUint32(4),offset=8,sample;if(dataOffsetPresent){// 32 bit signed integer
result.dataOffset=view.getInt32(offset);offset+=4;}// Overrides the flags for the first sample only. The order of
// optional values will be: duration, size, compositionTimeOffset
if(firstSampleFlagsPresent&&sampleCount){sample={flags:parseSampleFlags(data.subarray(offset,offset+4))};offset+=4;if(sampleDurationPresent){sample.duration=view.getUint32(offset);offset+=4;}if(sampleSizePresent){sample.size=view.getUint32(offset);offset+=4;}if(sampleCompositionTimeOffsetPresent){if(result.version===1){sample.compositionTimeOffset=view.getInt32(offset);}else{sample.compositionTimeOffset=view.getUint32(offset);}offset+=4;}result.samples.push(sample);sampleCount--;}while(sampleCount--){sample={};if(sampleDurationPresent){sample.duration=view.getUint32(offset);offset+=4;}if(sampleSizePresent){sample.size=view.getUint32(offset);offset+=4;}if(sampleFlagsPresent){sample.flags=parseSampleFlags(data.subarray(offset,offset+4));offset+=4;}if(sampleCompositionTimeOffsetPresent){if(result.version===1){sample.compositionTimeOffset=view.getInt32(offset);}else{sample.compositionTimeOffset=view.getUint32(offset);}offset+=4;}result.samples.push(sample);}return result;};var parseTrun$2=trun;var tfhd=function tfhd(data){var view=new DataView(data.buffer,data.byteOffset,data.byteLength),result={version:data[0],flags:new Uint8Array(data.subarray(1,4)),trackId:view.getUint32(4)},baseDataOffsetPresent=result.flags[2]&0x01,sampleDescriptionIndexPresent=result.flags[2]&0x02,defaultSampleDurationPresent=result.flags[2]&0x08,defaultSampleSizePresent=result.flags[2]&0x10,defaultSampleFlagsPresent=result.flags[2]&0x20,durationIsEmpty=result.flags[0]&0x010000,defaultBaseIsMoof=result.flags[0]&0x020000,i;i=8;if(baseDataOffsetPresent){i+=4;// truncate top 4 bytes
// FIXME: should we read the full 64 bits?
result.baseDataOffset=view.getUint32(12);i+=4;}if(sampleDescriptionIndexPresent){result.sampleDescriptionIndex=view.getUint32(i);i+=4;}if(defaultSampleDurationPresent){result.defaultSampleDuration=view.getUint32(i);i+=4;}if(defaultSampleSizePresent){result.defaultSampleSize=view.getUint32(i);i+=4;}if(defaultSampleFlagsPresent){result.defaultSampleFlags=view.getUint32(i);}if(durationIsEmpty){result.durationIsEmpty=true;}if(!baseDataOffsetPresent&&defaultBaseIsMoof){result.baseDataOffsetIsMoof=true;}return result;};var parseTfhd$2=tfhd;var win;if(typeof window!=="undefined"){win=window;}else if(typeof commonjsGlobal!=="undefined"){win=commonjsGlobal;}else if(typeof self!=="undefined"){win=self;}else{win={};}var window_1=win;/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Reads in-band CEA-708 captions out of FMP4 segments.
         * @see https://en.wikipedia.org/wiki/CEA-708
         */var discardEmulationPreventionBytes=captionPacketParser.discardEmulationPreventionBytes;var CaptionStream=captionStream.CaptionStream;var findBox$1=findBox_1;var parseTfdt$1=parseTfdt$2;var parseTrun$1=parseTrun$2;var parseTfhd$1=parseTfhd$2;var window$2=window_1;/**
          * Maps an offset in the mdat to a sample based on the the size of the samples.
          * Assumes that `parseSamples` has been called first.
          *
          * @param {Number} offset - The offset into the mdat
          * @param {Object[]} samples - An array of samples, parsed using `parseSamples`
          * @return {?Object} The matching sample, or null if no match was found.
          *
          * @see ISO-BMFF-12/2015, Section 8.8.8
         **/var mapToSample=function mapToSample(offset,samples){var approximateOffset=offset;for(var i=0;i<samples.length;i++){var sample=samples[i];if(approximateOffset<sample.size){return sample;}approximateOffset-=sample.size;}return null;};/**
          * Finds SEI nal units contained in a Media Data Box.
          * Assumes that `parseSamples` has been called first.
          *
          * @param {Uint8Array} avcStream - The bytes of the mdat
          * @param {Object[]} samples - The samples parsed out by `parseSamples`
          * @param {Number} trackId - The trackId of this video track
          * @return {Object[]} seiNals - the parsed SEI NALUs found.
          *   The contents of the seiNal should match what is expected by
          *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)
          *
          * @see ISO-BMFF-12/2015, Section 8.1.1
          * @see Rec. ITU-T H.264, 7.3.2.3.1
         **/var findSeiNals=function findSeiNals(avcStream,samples,trackId){var avcView=new DataView(avcStream.buffer,avcStream.byteOffset,avcStream.byteLength),result={logs:[],seiNals:[]},seiNal,i,length,lastMatchedSample;for(i=0;i+4<avcStream.length;i+=length){length=avcView.getUint32(i);i+=4;// Bail if this doesn't appear to be an H264 stream
if(length<=0){continue;}switch(avcStream[i]&0x1F){case 0x06:var data=avcStream.subarray(i+1,i+1+length);var matchingSample=mapToSample(i,samples);seiNal={nalUnitType:'sei_rbsp',size:length,data:data,escapedRBSP:discardEmulationPreventionBytes(data),trackId:trackId};if(matchingSample){seiNal.pts=matchingSample.pts;seiNal.dts=matchingSample.dts;lastMatchedSample=matchingSample;}else if(lastMatchedSample){// If a matching sample cannot be found, use the last
// sample's values as they should be as close as possible
seiNal.pts=lastMatchedSample.pts;seiNal.dts=lastMatchedSample.dts;}else{result.logs.push({level:'warn',message:'We\'ve encountered a nal unit without data at '+i+' for trackId '+trackId+'. See mux.js#223.'});break;}result.seiNals.push(seiNal);break;}}return result;};/**
          * Parses sample information out of Track Run Boxes and calculates
          * the absolute presentation and decode timestamps of each sample.
          *
          * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed
          * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt
              @see ISO-BMFF-12/2015, Section 8.8.12
          * @param {Object} tfhd - The parsed Track Fragment Header
          *   @see inspect.parseTfhd
          * @return {Object[]} the parsed samples
          *
          * @see ISO-BMFF-12/2015, Section 8.8.8
         **/var parseSamples=function parseSamples(truns,baseMediaDecodeTime,tfhd){var currentDts=baseMediaDecodeTime;var defaultSampleDuration=tfhd.defaultSampleDuration||0;var defaultSampleSize=tfhd.defaultSampleSize||0;var trackId=tfhd.trackId;var allSamples=[];truns.forEach(function(trun){// Note: We currently do not parse the sample table as well
// as the trun. It's possible some sources will require this.
// moov > trak > mdia > minf > stbl
var trackRun=parseTrun$1(trun);var samples=trackRun.samples;samples.forEach(function(sample){if(sample.duration===undefined){sample.duration=defaultSampleDuration;}if(sample.size===undefined){sample.size=defaultSampleSize;}sample.trackId=trackId;sample.dts=currentDts;if(sample.compositionTimeOffset===undefined){sample.compositionTimeOffset=0;}if(typeof currentDts==='bigint'){sample.pts=currentDts+window$2.BigInt(sample.compositionTimeOffset);currentDts+=window$2.BigInt(sample.duration);}else{sample.pts=currentDts+sample.compositionTimeOffset;currentDts+=sample.duration;}});allSamples=allSamples.concat(samples);});return allSamples;};/**
          * Parses out caption nals from an FMP4 segment's video tracks.
          *
          * @param {Uint8Array} segment - The bytes of a single segment
          * @param {Number} videoTrackId - The trackId of a video track in the segment
          * @return {Object.<Number, Object[]>} A mapping of video trackId to
          *   a list of seiNals found in that track
         **/var parseCaptionNals=function parseCaptionNals(segment,videoTrackId){// To get the samples
var trafs=findBox$1(segment,['moof','traf']);// To get SEI NAL units
var mdats=findBox$1(segment,['mdat']);var captionNals={};var mdatTrafPairs=[];// Pair up each traf with a mdat as moofs and mdats are in pairs
mdats.forEach(function(mdat,index){var matchingTraf=trafs[index];mdatTrafPairs.push({mdat:mdat,traf:matchingTraf});});mdatTrafPairs.forEach(function(pair){var mdat=pair.mdat;var traf=pair.traf;var tfhd=findBox$1(traf,['tfhd']);// Exactly 1 tfhd per traf
var headerInfo=parseTfhd$1(tfhd[0]);var trackId=headerInfo.trackId;var tfdt=findBox$1(traf,['tfdt']);// Either 0 or 1 tfdt per traf
var baseMediaDecodeTime=tfdt.length>0?parseTfdt$1(tfdt[0]).baseMediaDecodeTime:0;var truns=findBox$1(traf,['trun']);var samples;var result;// Only parse video data for the chosen video track
if(videoTrackId===trackId&&truns.length>0){samples=parseSamples(truns,baseMediaDecodeTime,headerInfo);result=findSeiNals(mdat,samples,trackId);if(!captionNals[trackId]){captionNals[trackId]={seiNals:[],logs:[]};}captionNals[trackId].seiNals=captionNals[trackId].seiNals.concat(result.seiNals);captionNals[trackId].logs=captionNals[trackId].logs.concat(result.logs);}});return captionNals;};/**
          * Parses out inband captions from an MP4 container and returns
          * caption objects that can be used by WebVTT and the TextTrack API.
          * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue
          * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack
          * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first
          *
          * @param {Uint8Array} segment - The fmp4 segment containing embedded captions
          * @param {Number} trackId - The id of the video track to parse
          * @param {Number} timescale - The timescale for the video track from the init segment
          *
          * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks
          * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds
          * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds
          * @return {Object[]} parsedCaptions[].content - A list of individual caption segments
          * @return {String} parsedCaptions[].content.text - The visible content of the caption segment
          * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment
          * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80
         **/var parseEmbeddedCaptions=function parseEmbeddedCaptions(segment,trackId,timescale){var captionNals;// the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there
if(trackId===null){return null;}captionNals=parseCaptionNals(segment,trackId);var trackNals=captionNals[trackId]||{};return{seiNals:trackNals.seiNals,logs:trackNals.logs,timescale:timescale};};/**
          * Converts SEI NALUs into captions that can be used by video.js
         **/var CaptionParser=function CaptionParser(){var isInitialized=false;var captionStream;// Stores segments seen before trackId and timescale are set
var segmentCache;// Stores video track ID of the track being parsed
var trackId;// Stores the timescale of the track being parsed
var timescale;// Stores captions parsed so far
var parsedCaptions;// Stores whether we are receiving partial data or not
var parsingPartial;/**
            * A method to indicate whether a CaptionParser has been initalized
            * @returns {Boolean}
           **/this.isInitialized=function(){return isInitialized;};/**
            * Initializes the underlying CaptionStream, SEI NAL parsing
            * and management, and caption collection
           **/this.init=function(options){captionStream=new CaptionStream();isInitialized=true;parsingPartial=options?options.isPartial:false;// Collect dispatched captions
captionStream.on('data',function(event){// Convert to seconds in the source's timescale
event.startTime=event.startPts/timescale;event.endTime=event.endPts/timescale;parsedCaptions.captions.push(event);parsedCaptions.captionStreams[event.stream]=true;});captionStream.on('log',function(log){parsedCaptions.logs.push(log);});};/**
            * Determines if a new video track will be selected
            * or if the timescale changed
            * @return {Boolean}
           **/this.isNewInit=function(videoTrackIds,timescales){if(videoTrackIds&&videoTrackIds.length===0||timescales&&_typeof(timescales)==='object'&&Object.keys(timescales).length===0){return false;}return trackId!==videoTrackIds[0]||timescale!==timescales[trackId];};/**
            * Parses out SEI captions and interacts with underlying
            * CaptionStream to return dispatched captions
            *
            * @param {Uint8Array} segment - The fmp4 segment containing embedded captions
            * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment
            * @param {Object.<Number, Number>} timescales - The timescales found in the init segment
            * @see parseEmbeddedCaptions
            * @see m2ts/caption-stream.js
           **/this.parse=function(segment,videoTrackIds,timescales){var parsedData;if(!this.isInitialized()){return null;// This is not likely to be a video segment
}else if(!videoTrackIds||!timescales){return null;}else if(this.isNewInit(videoTrackIds,timescales)){// Use the first video track only as there is no
// mechanism to switch to other video tracks
trackId=videoTrackIds[0];timescale=timescales[trackId];// If an init segment has not been seen yet, hold onto segment
// data until we have one.
// the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there
}else if(trackId===null||!timescale){segmentCache.push(segment);return null;}// Now that a timescale and trackId is set, parse cached segments
while(segmentCache.length>0){var cachedSegment=segmentCache.shift();this.parse(cachedSegment,videoTrackIds,timescales);}parsedData=parseEmbeddedCaptions(segment,trackId,timescale);if(parsedData&&parsedData.logs){parsedCaptions.logs=parsedCaptions.logs.concat(parsedData.logs);}if(parsedData===null||!parsedData.seiNals){if(parsedCaptions.logs.length){return{logs:parsedCaptions.logs,captions:[],captionStreams:[]};}return null;}this.pushNals(parsedData.seiNals);// Force the parsed captions to be dispatched
this.flushStream();return parsedCaptions;};/**
            * Pushes SEI NALUs onto CaptionStream
            * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`
            * Assumes that `parseCaptionNals` has been called first
            * @see m2ts/caption-stream.js
            **/this.pushNals=function(nals){if(!this.isInitialized()||!nals||nals.length===0){return null;}nals.forEach(function(nal){captionStream.push(nal);});};/**
            * Flushes underlying CaptionStream to dispatch processed, displayable captions
            * @see m2ts/caption-stream.js
           **/this.flushStream=function(){if(!this.isInitialized()){return null;}if(!parsingPartial){captionStream.flush();}else{captionStream.partialFlush();}};/**
            * Reset caption buckets for new data
           **/this.clearParsedCaptions=function(){parsedCaptions.captions=[];parsedCaptions.captionStreams={};parsedCaptions.logs=[];};/**
            * Resets underlying CaptionStream
            * @see m2ts/caption-stream.js
           **/this.resetCaptionStream=function(){if(!this.isInitialized()){return null;}captionStream.reset();};/**
            * Convenience method to clear all captions flushed from the
            * CaptionStream and still being parsed
            * @see m2ts/caption-stream.js
           **/this.clearAllCaptions=function(){this.clearParsedCaptions();this.resetCaptionStream();};/**
            * Reset caption parser
           **/this.reset=function(){segmentCache=[];trackId=null;timescale=null;if(!parsedCaptions){parsedCaptions={captions:[],// CC1, CC2, CC3, CC4
captionStreams:{},logs:[]};}else{this.clearParsedCaptions();}this.resetCaptionStream();};this.reset();};var captionParser=CaptionParser;/**
         * Returns the first string in the data array ending with a null char '\0'
         * @param {UInt8} data 
         * @returns the string with the null char
         */var uint8ToCString$1=function uint8ToCString$1(data){var index=0;var curChar=String.fromCharCode(data[index]);var retString='';while(curChar!=='\0'){retString+=curChar;index++;curChar=String.fromCharCode(data[index]);}// Add nullChar
retString+=curChar;return retString;};var string={uint8ToCString:uint8ToCString$1};var uint8ToCString=string.uint8ToCString;var getUint64$1=numbers.getUint64;/**
         * Based on: ISO/IEC 23009 Section: 5.10.3.3
         * References:
         * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format
         * https://aomediacodec.github.io/id3-emsg/
         * 
         * Takes emsg box data as a uint8 array and returns a emsg box object
         * @param {UInt8Array} boxData data from emsg box
         * @returns A parsed emsg box object
         */var parseEmsgBox=function parseEmsgBox(boxData){// version + flags
var offset=4;var version=boxData[0];var scheme_id_uri,value,timescale,presentation_time,presentation_time_delta,event_duration,id,message_data;if(version===0){scheme_id_uri=uint8ToCString(boxData.subarray(offset));offset+=scheme_id_uri.length;value=uint8ToCString(boxData.subarray(offset));offset+=value.length;var dv=new DataView(boxData.buffer);timescale=dv.getUint32(offset);offset+=4;presentation_time_delta=dv.getUint32(offset);offset+=4;event_duration=dv.getUint32(offset);offset+=4;id=dv.getUint32(offset);offset+=4;}else if(version===1){var dv=new DataView(boxData.buffer);timescale=dv.getUint32(offset);offset+=4;presentation_time=getUint64$1(boxData.subarray(offset));offset+=8;event_duration=dv.getUint32(offset);offset+=4;id=dv.getUint32(offset);offset+=4;scheme_id_uri=uint8ToCString(boxData.subarray(offset));offset+=scheme_id_uri.length;value=uint8ToCString(boxData.subarray(offset));offset+=value.length;}message_data=new Uint8Array(boxData.subarray(offset,boxData.byteLength));var emsgBox={scheme_id_uri:scheme_id_uri,value:value,// if timescale is undefined or 0 set to 1 
timescale:timescale?timescale:1,presentation_time:presentation_time,presentation_time_delta:presentation_time_delta,event_duration:event_duration,id:id,message_data:message_data};return isValidEmsgBox(version,emsgBox)?emsgBox:undefined;};/**
         * Scales a presentation time or time delta with an offset with a provided timescale
         * @param {number} presentationTime 
         * @param {number} timescale 
         * @param {number} timeDelta 
         * @param {number} offset 
         * @returns the scaled time as a number
         */var scaleTime=function scaleTime(presentationTime,timescale,timeDelta,offset){return presentationTime||presentationTime===0?presentationTime/timescale:offset+timeDelta/timescale;};/**
         * Checks the emsg box data for validity based on the version
         * @param {number} version of the emsg box to validate
         * @param {Object} emsg the emsg data to validate
         * @returns if the box is valid as a boolean
         */var isValidEmsgBox=function isValidEmsgBox(version,emsg){var hasScheme=emsg.scheme_id_uri!=='\0';var isValidV0Box=version===0&&isDefined(emsg.presentation_time_delta)&&hasScheme;var isValidV1Box=version===1&&isDefined(emsg.presentation_time)&&hasScheme;// Only valid versions of emsg are 0 and 1
return!(version>1)&&isValidV0Box||isValidV1Box;};// Utility function to check if an object is defined
var isDefined=function isDefined(data){return data!==undefined||data!==null;};var emsg$1={parseEmsgBox:parseEmsgBox,scaleTime:scaleTime};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Utilities to detect basic properties and metadata about MP4s.
         */var toUnsigned=bin.toUnsigned;var toHexString=bin.toHexString;var findBox=findBox_1;var parseType$1=parseType_1;var emsg=emsg$1;var parseTfhd=parseTfhd$2;var parseTrun=parseTrun$2;var parseTfdt=parseTfdt$2;var getUint64=numbers.getUint64;var timescale,startTime,compositionStartTime,getVideoTrackIds,getTracks,getTimescaleFromMediaHeader,getEmsgID3;var window$1=window_1;var parseId3Frames=parseId3.parseId3Frames;/**
         * Parses an MP4 initialization segment and extracts the timescale
         * values for any declared tracks. Timescale values indicate the
         * number of clock ticks per second to assume for time-based values
         * elsewhere in the MP4.
         *
         * To determine the start time of an MP4, you need two pieces of
         * information: the timescale unit and the earliest base media decode
         * time. Multiple timescales can be specified within an MP4 but the
         * base media decode time is always expressed in the timescale from
         * the media header box for the track:
         * ```
         * moov > trak > mdia > mdhd.timescale
         * ```
         * @param init {Uint8Array} the bytes of the init segment
         * @return {object} a hash of track ids to timescale values or null if
         * the init segment is malformed.
         */timescale=function timescale(init){var result={},traks=findBox(init,['moov','trak']);// mdhd timescale
return traks.reduce(function(result,trak){var tkhd,version,index,id,mdhd;tkhd=findBox(trak,['tkhd'])[0];if(!tkhd){return null;}version=tkhd[0];index=version===0?12:20;id=toUnsigned(tkhd[index]<<24|tkhd[index+1]<<16|tkhd[index+2]<<8|tkhd[index+3]);mdhd=findBox(trak,['mdia','mdhd'])[0];if(!mdhd){return null;}version=mdhd[0];index=version===0?12:20;result[id]=toUnsigned(mdhd[index]<<24|mdhd[index+1]<<16|mdhd[index+2]<<8|mdhd[index+3]);return result;},result);};/**
         * Determine the base media decode start time, in seconds, for an MP4
         * fragment. If multiple fragments are specified, the earliest time is
         * returned.
         *
         * The base media decode time can be parsed from track fragment
         * metadata:
         * ```
         * moof > traf > tfdt.baseMediaDecodeTime
         * ```
         * It requires the timescale value from the mdhd to interpret.
         *
         * @param timescale {object} a hash of track ids to timescale values.
         * @return {number} the earliest base media decode start time for the
         * fragment, in seconds
         */startTime=function startTime(timescale,fragment){var trafs;// we need info from two childrend of each track fragment box
trafs=findBox(fragment,['moof','traf']);// determine the start times for each track
var lowestTime=trafs.reduce(function(acc,traf){var tfhd=findBox(traf,['tfhd'])[0];// get the track id from the tfhd
var id=toUnsigned(tfhd[4]<<24|tfhd[5]<<16|tfhd[6]<<8|tfhd[7]);// assume a 90kHz clock if no timescale was specified
var scale=timescale[id]||90e3;// get the base media decode time from the tfdt
var tfdt=findBox(traf,['tfdt'])[0];var dv=new DataView(tfdt.buffer,tfdt.byteOffset,tfdt.byteLength);var baseTime;// version 1 is 64 bit
if(tfdt[0]===1){baseTime=getUint64(tfdt.subarray(4,12));}else{baseTime=dv.getUint32(4);}// convert base time to seconds if it is a valid number.
var seconds;if(typeof baseTime==='bigint'){seconds=baseTime/window$1.BigInt(scale);}else if(typeof baseTime==='number'&&!isNaN(baseTime)){seconds=baseTime/scale;}if(seconds<Number.MAX_SAFE_INTEGER){seconds=Number(seconds);}if(seconds<acc){acc=seconds;}return acc;},Infinity);return typeof lowestTime==='bigint'||isFinite(lowestTime)?lowestTime:0;};/**
         * Determine the composition start, in seconds, for an MP4
         * fragment.
         *
         * The composition start time of a fragment can be calculated using the base
         * media decode time, composition time offset, and timescale, as follows:
         *
         * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale
         *
         * All of the aforementioned information is contained within a media fragment's
         * `traf` box, except for timescale info, which comes from the initialization
         * segment, so a track id (also contained within a `traf`) is also necessary to
         * associate it with a timescale
         *
         *
         * @param timescales {object} - a hash of track ids to timescale values.
         * @param fragment {Unit8Array} - the bytes of a media segment
         * @return {number} the composition start time for the fragment, in seconds
         **/compositionStartTime=function compositionStartTime(timescales,fragment){var trafBoxes=findBox(fragment,['moof','traf']);var baseMediaDecodeTime=0;var compositionTimeOffset=0;var trackId;if(trafBoxes&&trafBoxes.length){// The spec states that track run samples contained within a `traf` box are contiguous, but
// it does not explicitly state whether the `traf` boxes themselves are contiguous.
// We will assume that they are, so we only need the first to calculate start time.
var tfhd=findBox(trafBoxes[0],['tfhd'])[0];var trun=findBox(trafBoxes[0],['trun'])[0];var tfdt=findBox(trafBoxes[0],['tfdt'])[0];if(tfhd){var parsedTfhd=parseTfhd(tfhd);trackId=parsedTfhd.trackId;}if(tfdt){var parsedTfdt=parseTfdt(tfdt);baseMediaDecodeTime=parsedTfdt.baseMediaDecodeTime;}if(trun){var parsedTrun=parseTrun(trun);if(parsedTrun.samples&&parsedTrun.samples.length){compositionTimeOffset=parsedTrun.samples[0].compositionTimeOffset||0;}}}// Get timescale for this specific track. Assume a 90kHz clock if no timescale was
// specified.
var timescale=timescales[trackId]||90e3;// return the composition start time, in seconds
if(typeof baseMediaDecodeTime==='bigint'){compositionTimeOffset=window$1.BigInt(compositionTimeOffset);timescale=window$1.BigInt(timescale);}var result=(baseMediaDecodeTime+compositionTimeOffset)/timescale;if(typeof result==='bigint'&&result<Number.MAX_SAFE_INTEGER){result=Number(result);}return result;};/**
          * Find the trackIds of the video tracks in this source.
          * Found by parsing the Handler Reference and Track Header Boxes:
          *   moov > trak > mdia > hdlr
          *   moov > trak > tkhd
          *
          * @param {Uint8Array} init - The bytes of the init segment for this source
          * @return {Number[]} A list of trackIds
          *
          * @see ISO-BMFF-12/2015, Section 8.4.3
         **/getVideoTrackIds=function getVideoTrackIds(init){var traks=findBox(init,['moov','trak']);var videoTrackIds=[];traks.forEach(function(trak){var hdlrs=findBox(trak,['mdia','hdlr']);var tkhds=findBox(trak,['tkhd']);hdlrs.forEach(function(hdlr,index){var handlerType=parseType$1(hdlr.subarray(8,12));var tkhd=tkhds[index];var view;var version;var trackId;if(handlerType==='vide'){view=new DataView(tkhd.buffer,tkhd.byteOffset,tkhd.byteLength);version=view.getUint8(0);trackId=version===0?view.getUint32(12):view.getUint32(20);videoTrackIds.push(trackId);}});});return videoTrackIds;};getTimescaleFromMediaHeader=function getTimescaleFromMediaHeader(mdhd){// mdhd is a FullBox, meaning it will have its own version as the first byte
var version=mdhd[0];var index=version===0?12:20;return toUnsigned(mdhd[index]<<24|mdhd[index+1]<<16|mdhd[index+2]<<8|mdhd[index+3]);};/**
         * Get all the video, audio, and hint tracks from a non fragmented
         * mp4 segment
         */getTracks=function getTracks(init){var traks=findBox(init,['moov','trak']);var tracks=[];traks.forEach(function(trak){var track={};var tkhd=findBox(trak,['tkhd'])[0];var view,tkhdVersion;// id
if(tkhd){view=new DataView(tkhd.buffer,tkhd.byteOffset,tkhd.byteLength);tkhdVersion=view.getUint8(0);track.id=tkhdVersion===0?view.getUint32(12):view.getUint32(20);}var hdlr=findBox(trak,['mdia','hdlr'])[0];// type
if(hdlr){var type=parseType$1(hdlr.subarray(8,12));if(type==='vide'){track.type='video';}else if(type==='soun'){track.type='audio';}else{track.type=type;}}// codec
var stsd=findBox(trak,['mdia','minf','stbl','stsd'])[0];if(stsd){var sampleDescriptions=stsd.subarray(8);// gives the codec type string
track.codec=parseType$1(sampleDescriptions.subarray(4,8));var codecBox=findBox(sampleDescriptions,[track.codec])[0];var codecConfig,codecConfigType;if(codecBox){// https://tools.ietf.org/html/rfc6381#section-3.3
if(/^[asm]vc[1-9]$/i.test(track.codec)){// we don't need anything but the "config" parameter of the
// avc1 codecBox
codecConfig=codecBox.subarray(78);codecConfigType=parseType$1(codecConfig.subarray(4,8));if(codecConfigType==='avcC'&&codecConfig.length>11){track.codec+='.';// left padded with zeroes for single digit hex
// profile idc
track.codec+=toHexString(codecConfig[9]);// the byte containing the constraint_set flags
track.codec+=toHexString(codecConfig[10]);// level idc
track.codec+=toHexString(codecConfig[11]);}else{// TODO: show a warning that we couldn't parse the codec
// and are using the default
track.codec='avc1.4d400d';}}else if(/^mp4[a,v]$/i.test(track.codec)){// we do not need anything but the streamDescriptor of the mp4a codecBox
codecConfig=codecBox.subarray(28);codecConfigType=parseType$1(codecConfig.subarray(4,8));if(codecConfigType==='esds'&&codecConfig.length>20&&codecConfig[19]!==0){track.codec+='.'+toHexString(codecConfig[19]);// this value is only a single digit
track.codec+='.'+toHexString(codecConfig[20]>>>2&0x3f).replace(/^0/,'');}else{// TODO: show a warning that we couldn't parse the codec
// and are using the default
track.codec='mp4a.40.2';}}else{// flac, opus, etc
track.codec=track.codec.toLowerCase();}}}var mdhd=findBox(trak,['mdia','mdhd'])[0];if(mdhd){track.timescale=getTimescaleFromMediaHeader(mdhd);}tracks.push(track);});return tracks;};/**
         * Returns an array of emsg ID3 data from the provided segmentData.
         * An offset can also be provided as the Latest Arrival Time to calculate 
         * the Event Start Time of v0 EMSG boxes. 
         * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing
         * 
         * @param {Uint8Array} segmentData the segment byte array.
         * @param {number} offset the segment start time or Latest Arrival Time, 
         * @return {Object[]} an array of ID3 parsed from EMSG boxes
         */getEmsgID3=function getEmsgID3(segmentData){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var emsgBoxes=findBox(segmentData,['emsg']);return emsgBoxes.map(function(data){var parsedBox=emsg.parseEmsgBox(new Uint8Array(data));var parsedId3Frames=parseId3Frames(parsedBox.message_data);return{cueTime:emsg.scaleTime(parsedBox.presentation_time,parsedBox.timescale,parsedBox.presentation_time_delta,offset),duration:emsg.scaleTime(parsedBox.event_duration,parsedBox.timescale),frames:parsedId3Frames};});};var probe$2={// export mp4 inspector's findBox and parseType for backwards compatibility
findBox:findBox,parseType:parseType$1,timescale:timescale,startTime:startTime,compositionStartTime:compositionStartTime,videoTrackIds:getVideoTrackIds,tracks:getTracks,getTimescaleFromMediaHeader:getTimescaleFromMediaHeader,getEmsgID3:getEmsgID3};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Utilities to detect basic properties and metadata about TS Segments.
         */var StreamTypes$1=streamTypes;var parsePid=function parsePid(packet){var pid=packet[1]&0x1f;pid<<=8;pid|=packet[2];return pid;};var parsePayloadUnitStartIndicator=function parsePayloadUnitStartIndicator(packet){return!!(packet[1]&0x40);};var parseAdaptionField=function parseAdaptionField(packet){var offset=0;// if an adaption field is present, its length is specified by the
// fifth byte of the TS packet header. The adaptation field is
// used to add stuffing to PES packets that don't fill a complete
// TS packet, and to specify some forms of timing and control data
// that we do not currently use.
if((packet[3]&0x30)>>>4>0x01){offset+=packet[4]+1;}return offset;};var parseType=function parseType(packet,pmtPid){var pid=parsePid(packet);if(pid===0){return'pat';}else if(pid===pmtPid){return'pmt';}else if(pmtPid){return'pes';}return null;};var parsePat=function parsePat(packet){var pusi=parsePayloadUnitStartIndicator(packet);var offset=4+parseAdaptionField(packet);if(pusi){offset+=packet[offset]+1;}return(packet[offset+10]&0x1f)<<8|packet[offset+11];};var parsePmt=function parsePmt(packet){var programMapTable={};var pusi=parsePayloadUnitStartIndicator(packet);var payloadOffset=4+parseAdaptionField(packet);if(pusi){payloadOffset+=packet[payloadOffset]+1;}// PMTs can be sent ahead of the time when they should actually
// take effect. We don't believe this should ever be the case
// for HLS but we'll ignore "forward" PMT declarations if we see
// them. Future PMT declarations have the current_next_indicator
// set to zero.
if(!(packet[payloadOffset+5]&0x01)){return;}var sectionLength,tableEnd,programInfoLength;// the mapping table ends at the end of the current section
sectionLength=(packet[payloadOffset+1]&0x0f)<<8|packet[payloadOffset+2];tableEnd=3+sectionLength-4;// to determine where the table is, we have to figure out how
// long the program info descriptors are
programInfoLength=(packet[payloadOffset+10]&0x0f)<<8|packet[payloadOffset+11];// advance the offset to the first entry in the mapping table
var offset=12+programInfoLength;while(offset<tableEnd){var i=payloadOffset+offset;// add an entry that maps the elementary_pid to the stream_type
programMapTable[(packet[i+1]&0x1F)<<8|packet[i+2]]=packet[i];// move to the next table entry
// skip past the elementary stream descriptors, if present
offset+=((packet[i+3]&0x0F)<<8|packet[i+4])+5;}return programMapTable;};var parsePesType=function parsePesType(packet,programMapTable){var pid=parsePid(packet);var type=programMapTable[pid];switch(type){case StreamTypes$1.H264_STREAM_TYPE:return'video';case StreamTypes$1.ADTS_STREAM_TYPE:return'audio';case StreamTypes$1.METADATA_STREAM_TYPE:return'timed-metadata';default:return null;}};var parsePesTime=function parsePesTime(packet){var pusi=parsePayloadUnitStartIndicator(packet);if(!pusi){return null;}var offset=4+parseAdaptionField(packet);if(offset>=packet.byteLength){// From the H 222.0 MPEG-TS spec
// "For transport stream packets carrying PES packets, stuffing is needed when there
//  is insufficient PES packet data to completely fill the transport stream packet
//  payload bytes. Stuffing is accomplished by defining an adaptation field longer than
//  the sum of the lengths of the data elements in it, so that the payload bytes
//  remaining after the adaptation field exactly accommodates the available PES packet
//  data."
//
// If the offset is >= the length of the packet, then the packet contains no data
// and instead is just adaption field stuffing bytes
return null;}var pes=null;var ptsDtsFlags;// PES packets may be annotated with a PTS value, or a PTS value
// and a DTS value. Determine what combination of values is
// available to work with.
ptsDtsFlags=packet[offset+7];// PTS and DTS are normally stored as a 33-bit number.  Javascript
// performs all bitwise operations on 32-bit integers but javascript
// supports a much greater range (52-bits) of integer using standard
// mathematical operations.
// We construct a 31-bit value using bitwise operators over the 31
// most significant bits and then multiply by 4 (equal to a left-shift
// of 2) before we add the final 2 least significant bits of the
// timestamp (equal to an OR.)
if(ptsDtsFlags&0xC0){pes={};// the PTS and DTS are not written out directly. For information
// on how they are encoded, see
// http://dvd.sourceforge.net/dvdinfo/pes-hdr.html
pes.pts=(packet[offset+9]&0x0E)<<27|(packet[offset+10]&0xFF)<<20|(packet[offset+11]&0xFE)<<12|(packet[offset+12]&0xFF)<<5|(packet[offset+13]&0xFE)>>>3;pes.pts*=4;// Left shift by 2
pes.pts+=(packet[offset+13]&0x06)>>>1;// OR by the two LSBs
pes.dts=pes.pts;if(ptsDtsFlags&0x40){pes.dts=(packet[offset+14]&0x0E)<<27|(packet[offset+15]&0xFF)<<20|(packet[offset+16]&0xFE)<<12|(packet[offset+17]&0xFF)<<5|(packet[offset+18]&0xFE)>>>3;pes.dts*=4;// Left shift by 2
pes.dts+=(packet[offset+18]&0x06)>>>1;// OR by the two LSBs
}}return pes;};var parseNalUnitType=function parseNalUnitType(type){switch(type){case 0x05:return'slice_layer_without_partitioning_rbsp_idr';case 0x06:return'sei_rbsp';case 0x07:return'seq_parameter_set_rbsp';case 0x08:return'pic_parameter_set_rbsp';case 0x09:return'access_unit_delimiter_rbsp';default:return null;}};var videoPacketContainsKeyFrame=function videoPacketContainsKeyFrame(packet){var offset=4+parseAdaptionField(packet);var frameBuffer=packet.subarray(offset);var frameI=0;var frameSyncPoint=0;var foundKeyFrame=false;var nalType;// advance the sync point to a NAL start, if necessary
for(;frameSyncPoint<frameBuffer.byteLength-3;frameSyncPoint++){if(frameBuffer[frameSyncPoint+2]===1){// the sync point is properly aligned
frameI=frameSyncPoint+5;break;}}while(frameI<frameBuffer.byteLength){// look at the current byte to determine if we've hit the end of
// a NAL unit boundary
switch(frameBuffer[frameI]){case 0:// skip past non-sync sequences
if(frameBuffer[frameI-1]!==0){frameI+=2;break;}else if(frameBuffer[frameI-2]!==0){frameI++;break;}if(frameSyncPoint+3!==frameI-2){nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}}// drop trailing zeroes
do{frameI++;}while(frameBuffer[frameI]!==1&&frameI<frameBuffer.length);frameSyncPoint=frameI-2;frameI+=3;break;case 1:// skip past non-sync sequences
if(frameBuffer[frameI-1]!==0||frameBuffer[frameI-2]!==0){frameI+=3;break;}nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}frameSyncPoint=frameI-2;frameI+=3;break;default:// the current byte isn't a one or zero, so it cannot be part
// of a sync sequence
frameI+=3;break;}}frameBuffer=frameBuffer.subarray(frameSyncPoint);frameI-=frameSyncPoint;frameSyncPoint=0;// parse the final nal
if(frameBuffer&&frameBuffer.byteLength>3){nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}}return foundKeyFrame;};var probe$1={parseType:parseType,parsePat:parsePat,parsePmt:parsePmt,parsePayloadUnitStartIndicator:parsePayloadUnitStartIndicator,parsePesType:parsePesType,parsePesTime:parsePesTime,videoPacketContainsKeyFrame:videoPacketContainsKeyFrame};/**
         * mux.js
         *
         * Copyright (c) Brightcove
         * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE
         *
         * Parse mpeg2 transport stream packets to extract basic timing information
         */var StreamTypes=streamTypes;var handleRollover=timestampRolloverStream.handleRollover;var probe={};probe.ts=probe$1;probe.aac=utils;var ONE_SECOND_IN_TS=clock$2.ONE_SECOND_IN_TS;var MP2T_PACKET_LENGTH=188,// bytes
SYNC_BYTE=0x47;/**
         * walks through segment data looking for pat and pmt packets to parse out
         * program map table information
         */var parsePsi_=function parsePsi_(bytes,pmt){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type;while(endIndex<bytes.byteLength){// Look for a pair of start and end sync bytes in the data..
if(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet
packet=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pat':pmt.pid=probe.ts.parsePat(packet);break;case'pmt':var table=probe.ts.parsePmt(packet);pmt.table=pmt.table||{};Object.keys(table).forEach(function(key){pmt.table[key]=table[key];});break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex++;endIndex++;}};/**
         * walks through the segment data from the start and end to get timing information
         * for the first and last audio pes packets
         */var parseAudioPes_=function parseAudioPes_(bytes,pmt,result){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type,pesType,pusi,parsed;var endLoop=false;// Start walking from start of segment to get first audio packet
while(endIndex<=bytes.byteLength){// Look for a pair of start and end sync bytes in the data..
if(bytes[startIndex]===SYNC_BYTE&&(bytes[endIndex]===SYNC_BYTE||endIndex===bytes.byteLength)){// We found a packet
packet=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='audio'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='audio';result.audio.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex++;endIndex++;}// Start walking from end of segment to get last audio packet
endIndex=bytes.byteLength;startIndex=endIndex-MP2T_PACKET_LENGTH;endLoop=false;while(startIndex>=0){// Look for a pair of start and end sync bytes in the data..
if(bytes[startIndex]===SYNC_BYTE&&(bytes[endIndex]===SYNC_BYTE||endIndex===bytes.byteLength)){// We found a packet
packet=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='audio'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='audio';result.audio.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex-=MP2T_PACKET_LENGTH;endIndex-=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex--;endIndex--;}};/**
         * walks through the segment data from the start and end to get timing information
         * for the first and last video pes packets as well as timing information for the first
         * key frame.
         */var parseVideoPes_=function parseVideoPes_(bytes,pmt,result){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type,pesType,pusi,parsed,frame,i,pes;var endLoop=false;var currentFrame={data:[],size:0};// Start walking from start of segment to get first video packet
while(endIndex<bytes.byteLength){// Look for a pair of start and end sync bytes in the data..
if(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet
packet=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='video'){if(pusi&&!endLoop){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='video';result.video.push(parsed);endLoop=true;}}if(!result.firstKeyFrame){if(pusi){if(currentFrame.size!==0){frame=new Uint8Array(currentFrame.size);i=0;while(currentFrame.data.length){pes=currentFrame.data.shift();frame.set(pes,i);i+=pes.byteLength;}if(probe.ts.videoPacketContainsKeyFrame(frame)){var firstKeyFrame=probe.ts.parsePesTime(frame);// PTS/DTS may not be available. Simply *not* setting
// the keyframe seems to work fine with HLS playback
// and definitely preferable to a crash with TypeError...
if(firstKeyFrame){result.firstKeyFrame=firstKeyFrame;result.firstKeyFrame.type='video';}else{// eslint-disable-next-line
console.warn('Failed to extract PTS/DTS from PES at first keyframe. '+'This could be an unusual TS segment, or else mux.js did not '+'parse your TS segment correctly. If you know your TS '+'segments do contain PTS/DTS on keyframes please file a bug '+'report! You can try ffprobe to double check for yourself.');}}currentFrame.size=0;}}currentFrame.data.push(packet);currentFrame.size+=packet.byteLength;}}break;}if(endLoop&&result.firstKeyFrame){break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex++;endIndex++;}// Start walking from end of segment to get last video packet
endIndex=bytes.byteLength;startIndex=endIndex-MP2T_PACKET_LENGTH;endLoop=false;while(startIndex>=0){// Look for a pair of start and end sync bytes in the data..
if(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet
packet=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='video'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='video';result.video.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex-=MP2T_PACKET_LENGTH;endIndex-=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step
// forward one byte at a time until we find a pair of sync bytes that denote
// a packet
startIndex--;endIndex--;}};/**
         * Adjusts the timestamp information for the segment to account for
         * rollover and convert to seconds based on pes packet timescale (90khz clock)
         */var adjustTimestamp_=function adjustTimestamp_(segmentInfo,baseTimestamp){if(segmentInfo.audio&&segmentInfo.audio.length){var audioBaseTimestamp=baseTimestamp;if(typeof audioBaseTimestamp==='undefined'||isNaN(audioBaseTimestamp)){audioBaseTimestamp=segmentInfo.audio[0].dts;}segmentInfo.audio.forEach(function(info){info.dts=handleRollover(info.dts,audioBaseTimestamp);info.pts=handleRollover(info.pts,audioBaseTimestamp);// time in seconds
info.dtsTime=info.dts/ONE_SECOND_IN_TS;info.ptsTime=info.pts/ONE_SECOND_IN_TS;});}if(segmentInfo.video&&segmentInfo.video.length){var videoBaseTimestamp=baseTimestamp;if(typeof videoBaseTimestamp==='undefined'||isNaN(videoBaseTimestamp)){videoBaseTimestamp=segmentInfo.video[0].dts;}segmentInfo.video.forEach(function(info){info.dts=handleRollover(info.dts,videoBaseTimestamp);info.pts=handleRollover(info.pts,videoBaseTimestamp);// time in seconds
info.dtsTime=info.dts/ONE_SECOND_IN_TS;info.ptsTime=info.pts/ONE_SECOND_IN_TS;});if(segmentInfo.firstKeyFrame){var frame=segmentInfo.firstKeyFrame;frame.dts=handleRollover(frame.dts,videoBaseTimestamp);frame.pts=handleRollover(frame.pts,videoBaseTimestamp);// time in seconds
frame.dtsTime=frame.dts/ONE_SECOND_IN_TS;frame.ptsTime=frame.pts/ONE_SECOND_IN_TS;}}};/**
         * inspects the aac data stream for start and end time information
         */var inspectAac_=function inspectAac_(bytes){var endLoop=false,audioCount=0,sampleRate=null,timestamp=null,frameSize=0,byteIndex=0,packet;while(bytes.length-byteIndex>=3){var type=probe.aac.parseType(bytes,byteIndex);switch(type){case'timed-metadata':// Exit early because we don't have enough to parse
// the ID3 tag header
if(bytes.length-byteIndex<10){endLoop=true;break;}frameSize=probe.aac.parseId3TagSize(bytes,byteIndex);// Exit early if we don't have enough in the buffer
// to emit a full packet
if(frameSize>bytes.length){endLoop=true;break;}if(timestamp===null){packet=bytes.subarray(byteIndex,byteIndex+frameSize);timestamp=probe.aac.parseAacTimestamp(packet);}byteIndex+=frameSize;break;case'audio':// Exit early because we don't have enough to parse
// the ADTS frame header
if(bytes.length-byteIndex<7){endLoop=true;break;}frameSize=probe.aac.parseAdtsSize(bytes,byteIndex);// Exit early if we don't have enough in the buffer
// to emit a full packet
if(frameSize>bytes.length){endLoop=true;break;}if(sampleRate===null){packet=bytes.subarray(byteIndex,byteIndex+frameSize);sampleRate=probe.aac.parseSampleRate(packet);}audioCount++;byteIndex+=frameSize;break;default:byteIndex++;break;}if(endLoop){return null;}}if(sampleRate===null||timestamp===null){return null;}var audioTimescale=ONE_SECOND_IN_TS/sampleRate;var result={audio:[{type:'audio',dts:timestamp,pts:timestamp},{type:'audio',dts:timestamp+audioCount*1024*audioTimescale,pts:timestamp+audioCount*1024*audioTimescale}]};return result;};/**
         * inspects the transport stream segment data for start and end time information
         * of the audio and video tracks (when present) as well as the first key frame's
         * start time.
         */var inspectTs_=function inspectTs_(bytes){var pmt={pid:null,table:null};var result={};parsePsi_(bytes,pmt);for(var pid in pmt.table){if(pmt.table.hasOwnProperty(pid)){var type=pmt.table[pid];switch(type){case StreamTypes.H264_STREAM_TYPE:result.video=[];parseVideoPes_(bytes,pmt,result);if(result.video.length===0){delete result.video;}break;case StreamTypes.ADTS_STREAM_TYPE:result.audio=[];parseAudioPes_(bytes,pmt,result);if(result.audio.length===0){delete result.audio;}break;}}}return result;};/**
         * Inspects segment byte data and returns an object with start and end timing information
         *
         * @param {Uint8Array} bytes The segment byte data
         * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame
         *  timestamps for rollover. This value must be in 90khz clock.
         * @return {Object} Object containing start and end frame timing info of segment.
         */var inspect=function inspect(bytes,baseTimestamp){var isAacData=probe.aac.isLikelyAacData(bytes);var result;if(isAacData){result=inspectAac_(bytes);}else{result=inspectTs_(bytes);}if(!result||!result.audio&&!result.video){return null;}adjustTimestamp_(result,baseTimestamp);return result;};var tsInspector={inspect:inspect,parseAudioPes_:parseAudioPes_};/* global self */ /**
         * Re-emits transmuxer events by converting them into messages to the
         * world outside the worker.
         *
         * @param {Object} transmuxer the transmuxer to wire events on
         * @private
         */var wireTransmuxerEvents=function wireTransmuxerEvents(self,transmuxer){transmuxer.on('data',function(segment){// transfer ownership of the underlying ArrayBuffer
// instead of doing a copy to save memory
// ArrayBuffers are transferable but generic TypedArrays are not
// @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)
var initArray=segment.initSegment;segment.initSegment={data:initArray.buffer,byteOffset:initArray.byteOffset,byteLength:initArray.byteLength};var typedArray=segment.data;segment.data=typedArray.buffer;self.postMessage({action:'data',segment:segment,byteOffset:typedArray.byteOffset,byteLength:typedArray.byteLength},[segment.data]);});transmuxer.on('done',function(data){self.postMessage({action:'done'});});transmuxer.on('gopInfo',function(gopInfo){self.postMessage({action:'gopInfo',gopInfo:gopInfo});});transmuxer.on('videoSegmentTimingInfo',function(timingInfo){var videoSegmentTimingInfo={start:{decode:clock$2.videoTsToSeconds(timingInfo.start.dts),presentation:clock$2.videoTsToSeconds(timingInfo.start.pts)},end:{decode:clock$2.videoTsToSeconds(timingInfo.end.dts),presentation:clock$2.videoTsToSeconds(timingInfo.end.pts)},baseMediaDecodeTime:clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)};if(timingInfo.prependedContentDuration){videoSegmentTimingInfo.prependedContentDuration=clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);}self.postMessage({action:'videoSegmentTimingInfo',videoSegmentTimingInfo:videoSegmentTimingInfo});});transmuxer.on('audioSegmentTimingInfo',function(timingInfo){// Note that all times for [audio/video]SegmentTimingInfo events are in video clock
var audioSegmentTimingInfo={start:{decode:clock$2.videoTsToSeconds(timingInfo.start.dts),presentation:clock$2.videoTsToSeconds(timingInfo.start.pts)},end:{decode:clock$2.videoTsToSeconds(timingInfo.end.dts),presentation:clock$2.videoTsToSeconds(timingInfo.end.pts)},baseMediaDecodeTime:clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)};if(timingInfo.prependedContentDuration){audioSegmentTimingInfo.prependedContentDuration=clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);}self.postMessage({action:'audioSegmentTimingInfo',audioSegmentTimingInfo:audioSegmentTimingInfo});});transmuxer.on('id3Frame',function(id3Frame){self.postMessage({action:'id3Frame',id3Frame:id3Frame});});transmuxer.on('caption',function(caption){self.postMessage({action:'caption',caption:caption});});transmuxer.on('trackinfo',function(trackInfo){self.postMessage({action:'trackinfo',trackInfo:trackInfo});});transmuxer.on('audioTimingInfo',function(audioTimingInfo){// convert to video TS since we prioritize video time over audio
self.postMessage({action:'audioTimingInfo',audioTimingInfo:{start:clock$2.videoTsToSeconds(audioTimingInfo.start),end:clock$2.videoTsToSeconds(audioTimingInfo.end)}});});transmuxer.on('videoTimingInfo',function(videoTimingInfo){self.postMessage({action:'videoTimingInfo',videoTimingInfo:{start:clock$2.videoTsToSeconds(videoTimingInfo.start),end:clock$2.videoTsToSeconds(videoTimingInfo.end)}});});transmuxer.on('log',function(log){self.postMessage({action:'log',log:log});});};/**
         * All incoming messages route through this hash. If no function exists
         * to handle an incoming message, then we ignore the message.
         *
         * @class MessageHandlers
         * @param {Object} options the options to initialize with
         */var MessageHandlers=/*#__PURE__*/function(){function MessageHandlers(self,options){_classCallCheck(this,MessageHandlers);this.options=options||{};this.self=self;this.init();}/**
           * initialize our web worker and wire all the events.
           */_createClass(MessageHandlers,[{key:"init",value:function init(){if(this.transmuxer){this.transmuxer.dispose();}this.transmuxer=new transmuxer.Transmuxer(this.options);wireTransmuxerEvents(this.self,this.transmuxer);}},{key:"pushMp4Captions",value:function pushMp4Captions(data){if(!this.captionParser){this.captionParser=new captionParser();this.captionParser.init();}var segment=new Uint8Array(data.data,data.byteOffset,data.byteLength);var parsed=this.captionParser.parse(segment,data.trackIds,data.timescales);this.self.postMessage({action:'mp4Captions',captions:parsed&&parsed.captions||[],logs:parsed&&parsed.logs||[],data:segment.buffer},[segment.buffer]);}},{key:"probeMp4StartTime",value:function probeMp4StartTime(_ref178){var timescales=_ref178.timescales,data=_ref178.data;var startTime=probe$2.startTime(timescales,data);this.self.postMessage({action:'probeMp4StartTime',startTime:startTime,data:data},[data.buffer]);}},{key:"probeMp4Tracks",value:function probeMp4Tracks(_ref179){var data=_ref179.data;var tracks=probe$2.tracks(data);this.self.postMessage({action:'probeMp4Tracks',tracks:tracks,data:data},[data.buffer]);}/**
           * Probes an mp4 segment for EMSG boxes containing ID3 data.
           * https://aomediacodec.github.io/id3-emsg/
           *
           * @param {Uint8Array} data segment data
           * @param {number} offset segment start time
           * @return {Object[]} an array of ID3 frames
           */},{key:"probeEmsgID3",value:function probeEmsgID3(_ref180){var data=_ref180.data,offset=_ref180.offset;var id3Frames=probe$2.getEmsgID3(data,offset);this.self.postMessage({action:'probeEmsgID3',id3Frames:id3Frames,emsgData:data},[data.buffer]);}/**
           * Probe an mpeg2-ts segment to determine the start time of the segment in it's
           * internal "media time," as well as whether it contains video and/or audio.
           *
           * @private
           * @param {Uint8Array} bytes - segment bytes
           * @param {number} baseStartTime
           *        Relative reference timestamp used when adjusting frame timestamps for rollover.
           *        This value should be in seconds, as it's converted to a 90khz clock within the
           *        function body.
           * @return {Object} The start time of the current segment in "media time" as well as
           *                  whether it contains video and/or audio
           */},{key:"probeTs",value:function probeTs(_ref181){var data=_ref181.data,baseStartTime=_ref181.baseStartTime;var tsStartTime=typeof baseStartTime==='number'&&!isNaN(baseStartTime)?baseStartTime*clock$2.ONE_SECOND_IN_TS:void 0;var timeInfo=tsInspector.inspect(data,tsStartTime);var result=null;if(timeInfo){result={// each type's time info comes back as an array of 2 times, start and end
hasVideo:timeInfo.video&&timeInfo.video.length===2||false,hasAudio:timeInfo.audio&&timeInfo.audio.length===2||false};if(result.hasVideo){result.videoStart=timeInfo.video[0].ptsTime;}if(result.hasAudio){result.audioStart=timeInfo.audio[0].ptsTime;}}this.self.postMessage({action:'probeTs',result:result,data:data},[data.buffer]);}},{key:"clearAllMp4Captions",value:function clearAllMp4Captions(){if(this.captionParser){this.captionParser.clearAllCaptions();}}},{key:"clearParsedMp4Captions",value:function clearParsedMp4Captions(){if(this.captionParser){this.captionParser.clearParsedCaptions();}}/**
           * Adds data (a ts segment) to the start of the transmuxer pipeline for
           * processing.
           *
           * @param {ArrayBuffer} data data to push into the muxer
           */},{key:"push",value:function push(data){// Cast array buffer to correct type for transmuxer
var segment=new Uint8Array(data.data,data.byteOffset,data.byteLength);this.transmuxer.push(segment);}/**
           * Recreate the transmuxer so that the next segment added via `push`
           * start with a fresh transmuxer.
           */},{key:"reset",value:function reset(){this.transmuxer.reset();}/**
           * Set the value that will be used as the `baseMediaDecodeTime` time for the
           * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`
           * set relative to the first based on the PTS values.
           *
           * @param {Object} data used to set the timestamp offset in the muxer
           */},{key:"setTimestampOffset",value:function setTimestampOffset(data){var timestampOffset=data.timestampOffset||0;this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));}},{key:"setAudioAppendStart",value:function setAudioAppendStart(data){this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));}},{key:"setRemux",value:function setRemux(data){this.transmuxer.setRemux(data.remux);}/**
           * Forces the pipeline to finish processing the last segment and emit it's
           * results.
           *
           * @param {Object} data event data, not really used
           */},{key:"flush",value:function flush(data){this.transmuxer.flush();// transmuxed done action is fired after both audio/video pipelines are flushed
self.postMessage({action:'done',type:'transmuxed'});}},{key:"endTimeline",value:function endTimeline(){this.transmuxer.endTimeline();// transmuxed endedtimeline action is fired after both audio/video pipelines end their
// timelines
self.postMessage({action:'endedtimeline',type:'transmuxed'});}},{key:"alignGopsWith",value:function alignGopsWith(data){this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());}}]);return MessageHandlers;}();/**
         * Our web worker interface so that things can talk to mux.js
         * that will be running in a web worker. the scope is passed to this by
         * webworkify.
         *
         * @param {Object} self the scope for the web worker
         */self.onmessage=function(event){if(event.data.action==='init'&&event.data.options){this.messageHandlers=new MessageHandlers(self,event.data.options);return;}if(!this.messageHandlers){this.messageHandlers=new MessageHandlers(self);}if(event.data&&event.data.action&&event.data.action!=='init'){if(this.messageHandlers[event.data.action]){this.messageHandlers[event.data.action](event.data);}}};}));var TransmuxWorker=factory(workerCode$1);/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */var handleData_=function handleData_(event,transmuxedData,callback){var _event$data$segment=event.data.segment,type=_event$data$segment.type,initSegment=_event$data$segment.initSegment,captions=_event$data$segment.captions,captionStreams=_event$data$segment.captionStreams,metadata=_event$data$segment.metadata,videoFrameDtsTime=_event$data$segment.videoFrameDtsTime,videoFramePtsTime=_event$data$segment.videoFramePtsTime;transmuxedData.buffer.push({captions:captions,captionStreams:captionStreams,metadata:metadata});var boxes=event.data.segment.boxes||{data:event.data.segment.data};var result={type:type,// cast ArrayBuffer to TypedArray
data:new Uint8Array(boxes.data,boxes.data.byteOffset,boxes.data.byteLength),initSegment:new Uint8Array(initSegment.data,initSegment.byteOffset,initSegment.byteLength)};if(typeof videoFrameDtsTime!=='undefined'){result.videoFrameDtsTime=videoFrameDtsTime;}if(typeof videoFramePtsTime!=='undefined'){result.videoFramePtsTime=videoFramePtsTime;}callback(result);};var handleDone_=function handleDone_(_ref182){var transmuxedData=_ref182.transmuxedData,callback=_ref182.callback;// Previously we only returned data on data events,
// not on done events. Clear out the buffer to keep that consistent.
transmuxedData.buffer=[];// all buffers should have been flushed from the muxer, so start processing anything we
// have received
callback(transmuxedData);};var handleGopInfo_=function handleGopInfo_(event,transmuxedData){transmuxedData.gopInfo=event.data.gopInfo;};var processTransmux=function processTransmux(options){var transmuxer=options.transmuxer,bytes=options.bytes,audioAppendStart=options.audioAppendStart,gopsToAlignWith=options.gopsToAlignWith,remux=options.remux,onData=options.onData,onTrackInfo=options.onTrackInfo,onAudioTimingInfo=options.onAudioTimingInfo,onVideoTimingInfo=options.onVideoTimingInfo,onVideoSegmentTimingInfo=options.onVideoSegmentTimingInfo,onAudioSegmentTimingInfo=options.onAudioSegmentTimingInfo,onId3=options.onId3,onCaptions=options.onCaptions,onDone=options.onDone,onEndedTimeline=options.onEndedTimeline,onTransmuxerLog=options.onTransmuxerLog,isEndOfTimeline=options.isEndOfTimeline;var transmuxedData={buffer:[]};var waitForEndedTimelineEvent=isEndOfTimeline;var handleMessage=function handleMessage(event){if(transmuxer.currentTransmux!==options){// disposed
return;}if(event.data.action==='data'){handleData_(event,transmuxedData,onData);}if(event.data.action==='trackinfo'){onTrackInfo(event.data.trackInfo);}if(event.data.action==='gopInfo'){handleGopInfo_(event,transmuxedData);}if(event.data.action==='audioTimingInfo'){onAudioTimingInfo(event.data.audioTimingInfo);}if(event.data.action==='videoTimingInfo'){onVideoTimingInfo(event.data.videoTimingInfo);}if(event.data.action==='videoSegmentTimingInfo'){onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);}if(event.data.action==='audioSegmentTimingInfo'){onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);}if(event.data.action==='id3Frame'){onId3([event.data.id3Frame],event.data.id3Frame.dispatchType);}if(event.data.action==='caption'){onCaptions(event.data.caption);}if(event.data.action==='endedtimeline'){waitForEndedTimelineEvent=false;onEndedTimeline();}if(event.data.action==='log'){onTransmuxerLog(event.data.log);}// wait for the transmuxed event since we may have audio and video
if(event.data.type!=='transmuxed'){return;}// If the "endedtimeline" event has not yet fired, and this segment represents the end
// of a timeline, that means there may still be data events before the segment
// processing can be considerred complete. In that case, the final event should be
// an "endedtimeline" event with the type "transmuxed."
if(waitForEndedTimelineEvent){return;}transmuxer.onmessage=null;handleDone_({transmuxedData:transmuxedData,callback:onDone});/* eslint-disable no-use-before-define */dequeue(transmuxer);/* eslint-enable */};transmuxer.onmessage=handleMessage;if(audioAppendStart){transmuxer.postMessage({action:'setAudioAppendStart',appendStart:audioAppendStart});}// allow empty arrays to be passed to clear out GOPs
if(Array.isArray(gopsToAlignWith)){transmuxer.postMessage({action:'alignGopsWith',gopsToAlignWith:gopsToAlignWith});}if(typeof remux!=='undefined'){transmuxer.postMessage({action:'setRemux',remux:remux});}if(bytes.byteLength){var buffer=bytes instanceof ArrayBuffer?bytes:bytes.buffer;var byteOffset=bytes instanceof ArrayBuffer?0:bytes.byteOffset;transmuxer.postMessage({action:'push',// Send the typed-array of data as an ArrayBuffer so that
// it can be sent as a "Transferable" and avoid the costly
// memory copy
data:buffer,// To recreate the original typed-array, we need information
// about what portion of the ArrayBuffer it was a view into
byteOffset:byteOffset,byteLength:bytes.byteLength},[buffer]);}if(isEndOfTimeline){transmuxer.postMessage({action:'endTimeline'});}// even if we didn't push any bytes, we have to make sure we flush in case we reached
// the end of the segment
transmuxer.postMessage({action:'flush'});};var dequeue=function dequeue(transmuxer){transmuxer.currentTransmux=null;if(transmuxer.transmuxQueue.length){transmuxer.currentTransmux=transmuxer.transmuxQueue.shift();if(typeof transmuxer.currentTransmux==='function'){transmuxer.currentTransmux();}else{processTransmux(transmuxer.currentTransmux);}}};var processAction=function processAction(transmuxer,action){transmuxer.postMessage({action:action});dequeue(transmuxer);};var enqueueAction=function enqueueAction(action,transmuxer){if(!transmuxer.currentTransmux){transmuxer.currentTransmux=action;processAction(transmuxer,action);return;}transmuxer.transmuxQueue.push(processAction.bind(null,transmuxer,action));};var reset=function reset(transmuxer){enqueueAction('reset',transmuxer);};var endTimeline=function endTimeline(transmuxer){enqueueAction('endTimeline',transmuxer);};var transmux=function transmux(options){if(!options.transmuxer.currentTransmux){options.transmuxer.currentTransmux=options;processTransmux(options);return;}options.transmuxer.transmuxQueue.push(options);};var createTransmuxer=function createTransmuxer(options){var transmuxer=new TransmuxWorker();transmuxer.currentTransmux=null;transmuxer.transmuxQueue=[];var term=transmuxer.terminate;transmuxer.terminate=function(){transmuxer.currentTransmux=null;transmuxer.transmuxQueue.length=0;return term.call(transmuxer);};transmuxer.postMessage({action:'init',options:options});return transmuxer;};var segmentTransmuxer={reset:reset,endTimeline:endTimeline,transmux:transmux,createTransmuxer:createTransmuxer};var workerCallback=function workerCallback(options){var transmuxer=options.transmuxer;var endAction=options.endAction||options.action;var callback=options.callback;var message=_extends$2({},options,{endAction:null,transmuxer:null,callback:null});var listenForEndEvent=function listenForEndEvent(event){if(event.data.action!==endAction){return;}transmuxer.removeEventListener('message',listenForEndEvent);// transfer ownership of bytes back to us.
if(event.data.data){event.data.data=new Uint8Array(event.data.data,options.byteOffset||0,options.byteLength||event.data.data.byteLength);if(options.data){options.data=event.data.data;}}callback(event.data);};transmuxer.addEventListener('message',listenForEndEvent);if(options.data){var _isArrayBuffer=options.data instanceof ArrayBuffer;message.byteOffset=_isArrayBuffer?0:options.data.byteOffset;message.byteLength=options.data.byteLength;var transfers=[_isArrayBuffer?options.data:options.data.buffer];transmuxer.postMessage(message,transfers);}else{transmuxer.postMessage(message);}};var REQUEST_ERRORS={FAILURE:2,TIMEOUT:-101,ABORTED:-102};/**
       * Abort all requests
       *
       * @param {Object} activeXhrs - an object that tracks all XHR requests
       */var abortAll=function abortAll(activeXhrs){activeXhrs.forEach(function(xhr){xhr.abort();});};/**
       * Gather important bandwidth stats once a request has completed
       *
       * @param {Object} request - the XHR request from which to gather stats
       */var getRequestStats=function getRequestStats(request){return{bandwidth:request.bandwidth,bytesReceived:request.bytesReceived||0,roundTripTime:request.roundTripTime||0};};/**
       * If possible gather bandwidth stats as a request is in
       * progress
       *
       * @param {Event} progressEvent - an event object from an XHR's progress event
       */var getProgressStats=function getProgressStats(progressEvent){var request=progressEvent.target;var roundTripTime=Date.now()-request.requestTime;var stats={bandwidth:Infinity,bytesReceived:0,roundTripTime:roundTripTime||0};stats.bytesReceived=progressEvent.loaded;// This can result in Infinity if stats.roundTripTime is 0 but that is ok
// because we should only use bandwidth stats on progress to determine when
// abort a request early due to insufficient bandwidth
stats.bandwidth=Math.floor(stats.bytesReceived/stats.roundTripTime*8*1000);return stats;};/**
       * Handle all error conditions in one place and return an object
       * with all the information
       *
       * @param {Error|null} error - if non-null signals an error occured with the XHR
       * @param {Object} request -  the XHR request that possibly generated the error
       */var handleErrors=function handleErrors(error,request){if(request.timedout){return{status:request.status,message:'HLS request timed-out at URL: '+request.uri,code:REQUEST_ERRORS.TIMEOUT,xhr:request};}if(request.aborted){return{status:request.status,message:'HLS request aborted at URL: '+request.uri,code:REQUEST_ERRORS.ABORTED,xhr:request};}if(error){return{status:request.status,message:'HLS request errored at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request};}if(request.responseType==='arraybuffer'&&request.response.byteLength===0){return{status:request.status,message:'Empty HLS response at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request};}return null;};/**
       * Handle responses for key data and convert the key data to the correct format
       * for the decryption step later
       *
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Array} objects - objects to add the key bytes to.
       * @param {Function} finishProcessingFn - a callback to execute to continue processing
       *                                        this request
       */var handleKeyResponse=function handleKeyResponse(segment,objects,finishProcessingFn){return function(error,request){var response=request.response;var errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}if(response.byteLength!==16){return finishProcessingFn({status:request.status,message:'Invalid HLS key at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request},segment);}var view=new DataView(response);var bytes=new Uint32Array([view.getUint32(0),view.getUint32(4),view.getUint32(8),view.getUint32(12)]);for(var _i181=0;_i181<objects.length;_i181++){objects[_i181].bytes=bytes;}return finishProcessingFn(null,segment);};};var parseInitSegment=function parseInitSegment(segment,_callback){var type=detectContainerForBytes(segment.map.bytes);// TODO: We should also handle ts init segments here, but we
// only know how to parse mp4 init segments at the moment
if(type!=='mp4'){var uri=segment.map.resolvedUri||segment.map.uri;var mediaType=type||'unknown';return _callback({internal:true,message:"Found unsupported ".concat(mediaType," container for initialization segment at URL: ").concat(uri),code:REQUEST_ERRORS.FAILURE,metadata:{errorType:videojs.Error.UnsupportedMediaInitialization,mediaType:mediaType}});}workerCallback({action:'probeMp4Tracks',data:segment.map.bytes,transmuxer:segment.transmuxer,callback:function callback(_ref183){var tracks=_ref183.tracks,data=_ref183.data;// transfer bytes back to us
segment.map.bytes=data;tracks.forEach(function(track){segment.map.tracks=segment.map.tracks||{};// only support one track of each type for now
if(segment.map.tracks[track.type]){return;}segment.map.tracks[track.type]=track;if(typeof track.id==='number'&&track.timescale){segment.map.timescales=segment.map.timescales||{};segment.map.timescales[track.id]=track.timescale;}});return _callback(null);}});};/**
       * Handle init-segment responses
       *
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Function} finishProcessingFn - a callback to execute to continue processing
       *                                        this request
       */var handleInitSegmentResponse=function handleInitSegmentResponse(_ref184){var segment=_ref184.segment,finishProcessingFn=_ref184.finishProcessingFn;return function(error,request){var errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}var bytes=new Uint8Array(request.response);// init segment is encypted, we will have to wait
// until the key request is done to decrypt.
if(segment.map.key){segment.map.encryptedBytes=bytes;return finishProcessingFn(null,segment);}segment.map.bytes=bytes;parseInitSegment(segment,function(parseError){if(parseError){parseError.xhr=request;parseError.status=request.status;return finishProcessingFn(parseError,segment);}finishProcessingFn(null,segment);});};};/**
       * Response handler for segment-requests being sure to set the correct
       * property depending on whether the segment is encryped or not
       * Also records and keeps track of stats that are used for ABR purposes
       *
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Function} finishProcessingFn - a callback to execute to continue processing
       *                                        this request
       */var handleSegmentResponse=function handleSegmentResponse(_ref185){var segment=_ref185.segment,finishProcessingFn=_ref185.finishProcessingFn,responseType=_ref185.responseType;return function(error,request){var errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}var newBytes=// although responseText "should" exist, this guard serves to prevent an error being
// thrown for two primary cases:
// 1. the mime type override stops working, or is not implemented for a specific
//    browser
// 2. when using mock XHR libraries like sinon that do not allow the override behavior
responseType==='arraybuffer'||!request.responseText?request.response:stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar||0));segment.stats=getRequestStats(request);if(segment.key){segment.encryptedBytes=new Uint8Array(newBytes);}else{segment.bytes=new Uint8Array(newBytes);}return finishProcessingFn(null,segment);};};var transmuxAndNotify=function transmuxAndNotify(_ref186){var segment=_ref186.segment,bytes=_ref186.bytes,trackInfoFn=_ref186.trackInfoFn,timingInfoFn=_ref186.timingInfoFn,videoSegmentTimingInfoFn=_ref186.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref186.audioSegmentTimingInfoFn,id3Fn=_ref186.id3Fn,captionsFn=_ref186.captionsFn,isEndOfTimeline=_ref186.isEndOfTimeline,endedTimelineFn=_ref186.endedTimelineFn,dataFn=_ref186.dataFn,doneFn=_ref186.doneFn,onTransmuxerLog=_ref186.onTransmuxerLog;var fmp4Tracks=segment.map&&segment.map.tracks||{};var isMuxed=Boolean(fmp4Tracks.audio&&fmp4Tracks.video);// Keep references to each function so we can null them out after we're done with them.
// One reason for this is that in the case of full segments, we want to trust start
// times from the probe, rather than the transmuxer.
var audioStartFn=timingInfoFn.bind(null,segment,'audio','start');var audioEndFn=timingInfoFn.bind(null,segment,'audio','end');var videoStartFn=timingInfoFn.bind(null,segment,'video','start');var videoEndFn=timingInfoFn.bind(null,segment,'video','end');var finish=function finish(){return transmux({bytes:bytes,transmuxer:segment.transmuxer,audioAppendStart:segment.audioAppendStart,gopsToAlignWith:segment.gopsToAlignWith,remux:isMuxed,onData:function onData(result){result.type=result.type==='combined'?'video':result.type;dataFn(segment,result);},onTrackInfo:function onTrackInfo(trackInfo){if(trackInfoFn){if(isMuxed){trackInfo.isMuxed=true;}trackInfoFn(segment,trackInfo);}},onAudioTimingInfo:function onAudioTimingInfo(audioTimingInfo){// we only want the first start value we encounter
if(audioStartFn&&typeof audioTimingInfo.start!=='undefined'){audioStartFn(audioTimingInfo.start);audioStartFn=null;}// we want to continually update the end time
if(audioEndFn&&typeof audioTimingInfo.end!=='undefined'){audioEndFn(audioTimingInfo.end);}},onVideoTimingInfo:function onVideoTimingInfo(videoTimingInfo){// we only want the first start value we encounter
if(videoStartFn&&typeof videoTimingInfo.start!=='undefined'){videoStartFn(videoTimingInfo.start);videoStartFn=null;}// we want to continually update the end time
if(videoEndFn&&typeof videoTimingInfo.end!=='undefined'){videoEndFn(videoTimingInfo.end);}},onVideoSegmentTimingInfo:function onVideoSegmentTimingInfo(videoSegmentTimingInfo){videoSegmentTimingInfoFn(videoSegmentTimingInfo);},onAudioSegmentTimingInfo:function onAudioSegmentTimingInfo(audioSegmentTimingInfo){audioSegmentTimingInfoFn(audioSegmentTimingInfo);},onId3:function onId3(id3Frames,dispatchType){id3Fn(segment,id3Frames,dispatchType);},onCaptions:function onCaptions(captions){captionsFn(segment,[captions]);},isEndOfTimeline:isEndOfTimeline,onEndedTimeline:function onEndedTimeline(){endedTimelineFn();},onTransmuxerLog:onTransmuxerLog,onDone:function onDone(result){if(!doneFn){return;}result.type=result.type==='combined'?'video':result.type;doneFn(null,segment,result);}});};// In the transmuxer, we don't yet have the ability to extract a "proper" start time.
// Meaning cached frame data may corrupt our notion of where this segment
// really starts. To get around this, probe for the info needed.
workerCallback({action:'probeTs',transmuxer:segment.transmuxer,data:bytes,baseStartTime:segment.baseStartTime,callback:function callback(data){segment.bytes=bytes=data.data;var probeResult=data.result;if(probeResult){trackInfoFn(segment,{hasAudio:probeResult.hasAudio,hasVideo:probeResult.hasVideo,isMuxed:isMuxed});trackInfoFn=null;}finish();}});};var handleSegmentBytes=function handleSegmentBytes(_ref187){var segment=_ref187.segment,bytes=_ref187.bytes,trackInfoFn=_ref187.trackInfoFn,timingInfoFn=_ref187.timingInfoFn,videoSegmentTimingInfoFn=_ref187.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref187.audioSegmentTimingInfoFn,id3Fn=_ref187.id3Fn,captionsFn=_ref187.captionsFn,isEndOfTimeline=_ref187.isEndOfTimeline,endedTimelineFn=_ref187.endedTimelineFn,dataFn=_ref187.dataFn,doneFn=_ref187.doneFn,onTransmuxerLog=_ref187.onTransmuxerLog;var bytesAsUint8Array=new Uint8Array(bytes);// TODO:
// We should have a handler that fetches the number of bytes required
// to check if something is fmp4. This will allow us to save bandwidth
// because we can only exclude a playlist and abort requests
// by codec after trackinfo triggers.
if(isLikelyFmp4MediaSegment(bytesAsUint8Array)){segment.isFmp4=true;var tracks=segment.map.tracks;var trackInfo={isFmp4:true,hasVideo:!!tracks.video,hasAudio:!!tracks.audio};// if we have a audio track, with a codec that is not set to
// encrypted audio
if(tracks.audio&&tracks.audio.codec&&tracks.audio.codec!=='enca'){trackInfo.audioCodec=tracks.audio.codec;}// if we have a video track, with a codec that is not set to
// encrypted video
if(tracks.video&&tracks.video.codec&&tracks.video.codec!=='encv'){trackInfo.videoCodec=tracks.video.codec;}if(tracks.video&&tracks.audio){trackInfo.isMuxed=true;}// since we don't support appending fmp4 data on progress, we know we have the full
// segment here
trackInfoFn(segment,trackInfo);// The probe doesn't provide the segment end time, so only callback with the start
// time. The end time can be roughly calculated by the receiver using the duration.
//
// Note that the start time returned by the probe reflects the baseMediaDecodeTime, as
// that is the true start of the segment (where the playback engine should begin
// decoding).
var finishLoading=function finishLoading(captions,id3Frames){// if the track still has audio at this point it is only possible
// for it to be audio only. See `tracks.video && tracks.audio` if statement
// above.
// we make sure to use segment.bytes here as that
dataFn(segment,{data:bytesAsUint8Array,type:trackInfo.hasAudio&&!trackInfo.isMuxed?'audio':'video'});if(id3Frames&&id3Frames.length){id3Fn(segment,id3Frames);}if(captions&&captions.length){captionsFn(segment,captions);}doneFn(null,segment,{});};workerCallback({action:'probeMp4StartTime',timescales:segment.map.timescales,data:bytesAsUint8Array,transmuxer:segment.transmuxer,callback:function callback(_ref188){var data=_ref188.data,startTime=_ref188.startTime;// transfer bytes back to us
bytes=data.buffer;segment.bytes=bytesAsUint8Array=data;if(trackInfo.hasAudio&&!trackInfo.isMuxed){timingInfoFn(segment,'audio','start',startTime);}if(trackInfo.hasVideo){timingInfoFn(segment,'video','start',startTime);}workerCallback({action:'probeEmsgID3',data:bytesAsUint8Array,transmuxer:segment.transmuxer,offset:startTime,callback:function callback(_ref189){var emsgData=_ref189.emsgData,id3Frames=_ref189.id3Frames;// transfer bytes back to us
bytes=emsgData.buffer;segment.bytes=bytesAsUint8Array=emsgData;// Run through the CaptionParser in case there are captions.
// Initialize CaptionParser if it hasn't been yet
if(!tracks.video||!emsgData.byteLength||!segment.transmuxer){finishLoading(undefined,id3Frames);return;}workerCallback({action:'pushMp4Captions',endAction:'mp4Captions',transmuxer:segment.transmuxer,data:bytesAsUint8Array,timescales:segment.map.timescales,trackIds:[tracks.video.id],callback:function callback(message){// transfer bytes back to us
bytes=message.data.buffer;segment.bytes=bytesAsUint8Array=message.data;message.logs.forEach(function(log){onTransmuxerLog(merge(log,{stream:'mp4CaptionParser'}));});finishLoading(message.captions,id3Frames);}});}});}});return;}// VTT or other segments that don't need processing
if(!segment.transmuxer){doneFn(null,segment,{});return;}if(typeof segment.container==='undefined'){segment.container=detectContainerForBytes(bytesAsUint8Array);}if(segment.container!=='ts'&&segment.container!=='aac'){trackInfoFn(segment,{hasAudio:false,hasVideo:false});doneFn(null,segment,{});return;}// ts or aac
transmuxAndNotify({segment:segment,bytes:bytes,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn,doneFn:doneFn,onTransmuxerLog:onTransmuxerLog});};var decrypt=function decrypt(_ref190,callback){var id=_ref190.id,key=_ref190.key,encryptedBytes=_ref190.encryptedBytes,decryptionWorker=_ref190.decryptionWorker;var decryptionHandler=function decryptionHandler(event){if(event.data.source===id){decryptionWorker.removeEventListener('message',decryptionHandler);var decrypted=event.data.decrypted;callback(new Uint8Array(decrypted.bytes,decrypted.byteOffset,decrypted.byteLength));}};decryptionWorker.addEventListener('message',decryptionHandler);var keyBytes;if(key.bytes.slice){keyBytes=key.bytes.slice();}else{keyBytes=new Uint32Array(Array.prototype.slice.call(key.bytes));}// incrementally decrypt the bytes
decryptionWorker.postMessage(createTransferableMessage({source:id,encrypted:encryptedBytes,key:keyBytes,iv:key.iv}),[encryptedBytes.buffer,keyBytes.buffer]);};/**
       * Decrypt the segment via the decryption web worker
       *
       * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption
       *                                       routines
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Function} trackInfoFn - a callback that receives track info
       * @param {Function} timingInfoFn - a callback that receives timing info
       * @param {Function} videoSegmentTimingInfoFn
       *                   a callback that receives video timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} audioSegmentTimingInfoFn
       *                   a callback that receives audio timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {boolean}  isEndOfTimeline
       *                   true if this segment represents the last segment in a timeline
       * @param {Function} endedTimelineFn
       *                   a callback made when a timeline is ended, will only be called if
       *                   isEndOfTimeline is true
       * @param {Function} dataFn - a callback that is executed when segment bytes are available
       *                            and ready to use
       * @param {Function} doneFn - a callback that is executed after decryption has completed
       */var decryptSegment=function decryptSegment(_ref191){var decryptionWorker=_ref191.decryptionWorker,segment=_ref191.segment,trackInfoFn=_ref191.trackInfoFn,timingInfoFn=_ref191.timingInfoFn,videoSegmentTimingInfoFn=_ref191.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref191.audioSegmentTimingInfoFn,id3Fn=_ref191.id3Fn,captionsFn=_ref191.captionsFn,isEndOfTimeline=_ref191.isEndOfTimeline,endedTimelineFn=_ref191.endedTimelineFn,dataFn=_ref191.dataFn,doneFn=_ref191.doneFn,onTransmuxerLog=_ref191.onTransmuxerLog;decrypt({id:segment.requestId,key:segment.key,encryptedBytes:segment.encryptedBytes,decryptionWorker:decryptionWorker},function(decryptedBytes){segment.bytes=decryptedBytes;handleSegmentBytes({segment:segment,bytes:segment.bytes,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn,doneFn:doneFn,onTransmuxerLog:onTransmuxerLog});});};/**
       * This function waits for all XHRs to finish (with either success or failure)
       * before continueing processing via it's callback. The function gathers errors
       * from each request into a single errors array so that the error status for
       * each request can be examined later.
       *
       * @param {Object} activeXhrs - an object that tracks all XHR requests
       * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption
       *                                       routines
       * @param {Function} trackInfoFn - a callback that receives track info
       * @param {Function} timingInfoFn - a callback that receives timing info
       * @param {Function} videoSegmentTimingInfoFn
       *                   a callback that receives video timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} audioSegmentTimingInfoFn
       *                   a callback that receives audio timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} id3Fn - a callback that receives ID3 metadata
       * @param {Function} captionsFn - a callback that receives captions
       * @param {boolean}  isEndOfTimeline
       *                   true if this segment represents the last segment in a timeline
       * @param {Function} endedTimelineFn
       *                   a callback made when a timeline is ended, will only be called if
       *                   isEndOfTimeline is true
       * @param {Function} dataFn - a callback that is executed when segment bytes are available
       *                            and ready to use
       * @param {Function} doneFn - a callback that is executed after all resources have been
       *                            downloaded and any decryption completed
       */var waitForCompletion=function waitForCompletion(_ref192){var activeXhrs=_ref192.activeXhrs,decryptionWorker=_ref192.decryptionWorker,trackInfoFn=_ref192.trackInfoFn,timingInfoFn=_ref192.timingInfoFn,videoSegmentTimingInfoFn=_ref192.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref192.audioSegmentTimingInfoFn,id3Fn=_ref192.id3Fn,captionsFn=_ref192.captionsFn,isEndOfTimeline=_ref192.isEndOfTimeline,endedTimelineFn=_ref192.endedTimelineFn,dataFn=_ref192.dataFn,doneFn=_ref192.doneFn,onTransmuxerLog=_ref192.onTransmuxerLog;var count=0;var didError=false;return function(error,segment){if(didError){return;}if(error){didError=true;// If there are errors, we have to abort any outstanding requests
abortAll(activeXhrs);// Even though the requests above are aborted, and in theory we could wait until we
// handle the aborted events from those requests, there are some cases where we may
// never get an aborted event. For instance, if the network connection is lost and
// there were two requests, the first may have triggered an error immediately, while
// the second request remains unsent. In that case, the aborted algorithm will not
// trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method
//
// We also can't rely on the ready state of the XHR, since the request that
// triggered the connection error may also show as a ready state of 0 (unsent).
// Therefore, we have to finish this group of requests immediately after the first
// seen error.
return doneFn(error,segment);}count+=1;if(count===activeXhrs.length){var segmentFinish=function segmentFinish(){if(segment.encryptedBytes){return decryptSegment({decryptionWorker:decryptionWorker,segment:segment,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn,doneFn:doneFn,onTransmuxerLog:onTransmuxerLog});}// Otherwise, everything is ready just continue
handleSegmentBytes({segment:segment,bytes:segment.bytes,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn,doneFn:doneFn,onTransmuxerLog:onTransmuxerLog});};// Keep track of when *all* of the requests have completed
segment.endOfAllRequests=Date.now();if(segment.map&&segment.map.encryptedBytes&&!segment.map.bytes){return decrypt({decryptionWorker:decryptionWorker,// add -init to the "id" to differentiate between segment
// and init segment decryption, just in case they happen
// at the same time at some point in the future.
id:segment.requestId+'-init',encryptedBytes:segment.map.encryptedBytes,key:segment.map.key},function(decryptedBytes){segment.map.bytes=decryptedBytes;parseInitSegment(segment,function(parseError){if(parseError){abortAll(activeXhrs);return doneFn(parseError,segment);}segmentFinish();});});}segmentFinish();}};};/**
       * Calls the abort callback if any request within the batch was aborted. Will only call
       * the callback once per batch of requests, even if multiple were aborted.
       *
       * @param {Object} loadendState - state to check to see if the abort function was called
       * @param {Function} abortFn - callback to call for abort
       */var handleLoadEnd=function handleLoadEnd(_ref193){var loadendState=_ref193.loadendState,abortFn=_ref193.abortFn;return function(event){var request=event.target;if(request.aborted&&abortFn&&!loadendState.calledAbortFn){abortFn();loadendState.calledAbortFn=true;}};};/**
       * Simple progress event callback handler that gathers some stats before
       * executing a provided callback with the `segment` object
       *
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Function} progressFn - a callback that is executed each time a progress event
       *                                is received
       * @param {Function} trackInfoFn - a callback that receives track info
       * @param {Function} timingInfoFn - a callback that receives timing info
       * @param {Function} videoSegmentTimingInfoFn
       *                   a callback that receives video timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} audioSegmentTimingInfoFn
       *                   a callback that receives audio timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {boolean}  isEndOfTimeline
       *                   true if this segment represents the last segment in a timeline
       * @param {Function} endedTimelineFn
       *                   a callback made when a timeline is ended, will only be called if
       *                   isEndOfTimeline is true
       * @param {Function} dataFn - a callback that is executed when segment bytes are available
       *                            and ready to use
       * @param {Event} event - the progress event object from XMLHttpRequest
       */var handleProgress=function handleProgress(_ref194){var segment=_ref194.segment,progressFn=_ref194.progressFn,trackInfoFn=_ref194.trackInfoFn,timingInfoFn=_ref194.timingInfoFn,videoSegmentTimingInfoFn=_ref194.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref194.audioSegmentTimingInfoFn,id3Fn=_ref194.id3Fn,captionsFn=_ref194.captionsFn,isEndOfTimeline=_ref194.isEndOfTimeline,endedTimelineFn=_ref194.endedTimelineFn,dataFn=_ref194.dataFn;return function(event){var request=event.target;if(request.aborted){return;}segment.stats=merge(segment.stats,getProgressStats(event));// record the time that we receive the first byte of data
if(!segment.stats.firstBytesReceivedAt&&segment.stats.bytesReceived){segment.stats.firstBytesReceivedAt=Date.now();}return progressFn(event,segment);};};/**
       * Load all resources and does any processing necessary for a media-segment
       *
       * Features:
       *   decrypts the media-segment if it has a key uri and an iv
       *   aborts *all* requests if *any* one request fails
       *
       * The segment object, at minimum, has the following format:
       * {
       *   resolvedUri: String,
       *   [transmuxer]: Object,
       *   [byterange]: {
       *     offset: Number,
       *     length: Number
       *   },
       *   [key]: {
       *     resolvedUri: String
       *     [byterange]: {
       *       offset: Number,
       *       length: Number
       *     },
       *     iv: {
       *       bytes: Uint32Array
       *     }
       *   },
       *   [map]: {
       *     resolvedUri: String,
       *     [byterange]: {
       *       offset: Number,
       *       length: Number
       *     },
       *     [bytes]: Uint8Array
       *   }
       * }
       * ...where [name] denotes optional properties
       *
       * @param {Function} xhr - an instance of the xhr wrapper in xhr.js
       * @param {Object} xhrOptions - the base options to provide to all xhr requests
       * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128
       *                                       decryption routines
       * @param {Object} segment - a simplified copy of the segmentInfo object
       *                           from SegmentLoader
       * @param {Function} abortFn - a callback called (only once) if any piece of a request was
       *                             aborted
       * @param {Function} progressFn - a callback that receives progress events from the main
       *                                segment's xhr request
       * @param {Function} trackInfoFn - a callback that receives track info
       * @param {Function} timingInfoFn - a callback that receives timing info
       * @param {Function} videoSegmentTimingInfoFn
       *                   a callback that receives video timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} audioSegmentTimingInfoFn
       *                   a callback that receives audio timing info based on media times and
       *                   any adjustments made by the transmuxer
       * @param {Function} id3Fn - a callback that receives ID3 metadata
       * @param {Function} captionsFn - a callback that receives captions
       * @param {boolean}  isEndOfTimeline
       *                   true if this segment represents the last segment in a timeline
       * @param {Function} endedTimelineFn
       *                   a callback made when a timeline is ended, will only be called if
       *                   isEndOfTimeline is true
       * @param {Function} dataFn - a callback that receives data from the main segment's xhr
       *                            request, transmuxed if needed
       * @param {Function} doneFn - a callback that is executed only once all requests have
       *                            succeeded or failed
       * @return {Function} a function that, when invoked, immediately aborts all
       *                     outstanding requests
       */var mediaSegmentRequest=function mediaSegmentRequest(_ref195){var xhr=_ref195.xhr,xhrOptions=_ref195.xhrOptions,decryptionWorker=_ref195.decryptionWorker,segment=_ref195.segment,abortFn=_ref195.abortFn,progressFn=_ref195.progressFn,trackInfoFn=_ref195.trackInfoFn,timingInfoFn=_ref195.timingInfoFn,videoSegmentTimingInfoFn=_ref195.videoSegmentTimingInfoFn,audioSegmentTimingInfoFn=_ref195.audioSegmentTimingInfoFn,id3Fn=_ref195.id3Fn,captionsFn=_ref195.captionsFn,isEndOfTimeline=_ref195.isEndOfTimeline,endedTimelineFn=_ref195.endedTimelineFn,dataFn=_ref195.dataFn,doneFn=_ref195.doneFn,onTransmuxerLog=_ref195.onTransmuxerLog;var activeXhrs=[];var finishProcessingFn=waitForCompletion({activeXhrs:activeXhrs,decryptionWorker:decryptionWorker,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn,doneFn:doneFn,onTransmuxerLog:onTransmuxerLog});// optionally, request the decryption key
if(segment.key&&!segment.key.bytes){var objects=[segment.key];if(segment.map&&!segment.map.bytes&&segment.map.key&&segment.map.key.resolvedUri===segment.key.resolvedUri){objects.push(segment.map.key);}var keyRequestOptions=merge(xhrOptions,{uri:segment.key.resolvedUri,responseType:'arraybuffer',requestType:'segment-key'});var keyRequestCallback=handleKeyResponse(segment,objects,finishProcessingFn);var keyXhr=xhr(keyRequestOptions,keyRequestCallback);activeXhrs.push(keyXhr);}// optionally, request the associated media init segment
if(segment.map&&!segment.map.bytes){var differentMapKey=segment.map.key&&(!segment.key||segment.key.resolvedUri!==segment.map.key.resolvedUri);if(differentMapKey){var mapKeyRequestOptions=merge(xhrOptions,{uri:segment.map.key.resolvedUri,responseType:'arraybuffer',requestType:'segment-key'});var mapKeyRequestCallback=handleKeyResponse(segment,[segment.map.key],finishProcessingFn);var mapKeyXhr=xhr(mapKeyRequestOptions,mapKeyRequestCallback);activeXhrs.push(mapKeyXhr);}var initSegmentOptions=merge(xhrOptions,{uri:segment.map.resolvedUri,responseType:'arraybuffer',headers:segmentXhrHeaders(segment.map),requestType:'segment-media-initialization'});var initSegmentRequestCallback=handleInitSegmentResponse({segment:segment,finishProcessingFn:finishProcessingFn});var initSegmentXhr=xhr(initSegmentOptions,initSegmentRequestCallback);activeXhrs.push(initSegmentXhr);}var segmentRequestOptions=merge(xhrOptions,{uri:segment.part&&segment.part.resolvedUri||segment.resolvedUri,responseType:'arraybuffer',headers:segmentXhrHeaders(segment),requestType:'segment'});var segmentRequestCallback=handleSegmentResponse({segment:segment,finishProcessingFn:finishProcessingFn,responseType:segmentRequestOptions.responseType});var segmentXhr=xhr(segmentRequestOptions,segmentRequestCallback);segmentXhr.addEventListener('progress',handleProgress({segment:segment,progressFn:progressFn,trackInfoFn:trackInfoFn,timingInfoFn:timingInfoFn,videoSegmentTimingInfoFn:videoSegmentTimingInfoFn,audioSegmentTimingInfoFn:audioSegmentTimingInfoFn,id3Fn:id3Fn,captionsFn:captionsFn,isEndOfTimeline:isEndOfTimeline,endedTimelineFn:endedTimelineFn,dataFn:dataFn}));activeXhrs.push(segmentXhr);// since all parts of the request must be considered, but should not make callbacks
// multiple times, provide a shared state object
var loadendState={};activeXhrs.forEach(function(activeXhr){activeXhr.addEventListener('loadend',handleLoadEnd({loadendState:loadendState,abortFn:abortFn}));});return function(){return abortAll(activeXhrs);};};/**
       * @file - codecs.js - Handles tasks regarding codec strings such as translating them to
       * codec strings, or translating codec strings into objects that can be examined.
       */var logFn$1=logger('CodecUtils');/**
       * Returns a set of codec strings parsed from the playlist or the default
       * codec strings if no codecs were specified in the playlist
       *
       * @param {Playlist} media the current media playlist
       * @return {Object} an object with the video and audio codecs
       */var getCodecs=function getCodecs(media){// if the codecs were explicitly specified, use them instead of the
// defaults
var mediaAttributes=media.attributes||{};if(mediaAttributes.CODECS){return parseCodecs(mediaAttributes.CODECS);}};var isMaat=function isMaat(main,media){var mediaAttributes=media.attributes||{};return main&&main.mediaGroups&&main.mediaGroups.AUDIO&&mediaAttributes.AUDIO&&main.mediaGroups.AUDIO[mediaAttributes.AUDIO];};var isMuxed=function isMuxed(main,media){if(!isMaat(main,media)){return true;}var mediaAttributes=media.attributes||{};var audioGroup=main.mediaGroups.AUDIO[mediaAttributes.AUDIO];for(var groupId in audioGroup){// If an audio group has a URI (the case for HLS, as HLS will use external playlists),
// or there are listed playlists (the case for DASH, as the manifest will have already
// provided all of the details necessary to generate the audio playlist, as opposed to
// HLS' externally requested playlists), then the content is demuxed.
if(!audioGroup[groupId].uri&&!audioGroup[groupId].playlists){return true;}}return false;};var unwrapCodecList=function unwrapCodecList(codecList){var codecs={};codecList.forEach(function(_ref196){var mediaType=_ref196.mediaType,type=_ref196.type,details=_ref196.details;codecs[mediaType]=codecs[mediaType]||[];codecs[mediaType].push(translateLegacyCodec("".concat(type).concat(details)));});Object.keys(codecs).forEach(function(mediaType){if(codecs[mediaType].length>1){logFn$1("multiple ".concat(mediaType," codecs found as attributes: ").concat(codecs[mediaType].join(', '),". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs."));codecs[mediaType]=null;return;}codecs[mediaType]=codecs[mediaType][0];});return codecs;};var codecCount=function codecCount(codecObj){var count=0;if(codecObj.audio){count++;}if(codecObj.video){count++;}return count;};/**
       * Calculates the codec strings for a working configuration of
       * SourceBuffers to play variant streams in a main playlist. If
       * there is no possible working configuration, an empty object will be
       * returned.
       *
       * @param main {Object} the m3u8 object for the main playlist
       * @param media {Object} the m3u8 object for the variant playlist
       * @return {Object} the codec strings.
       *
       * @private
       */var codecsForPlaylist=function codecsForPlaylist(main,media){var mediaAttributes=media.attributes||{};var codecInfo=unwrapCodecList(getCodecs(media)||[]);// HLS with multiple-audio tracks must always get an audio codec.
// Put another way, there is no way to have a video-only multiple-audio HLS!
if(isMaat(main,media)&&!codecInfo.audio){if(!isMuxed(main,media)){// It is possible for codecs to be specified on the audio media group playlist but
// not on the rendition playlist. This is mostly the case for DASH, where audio and
// video are always separate (and separately specified).
var defaultCodecs=unwrapCodecList(codecsFromDefault(main,mediaAttributes.AUDIO)||[]);if(defaultCodecs.audio){codecInfo.audio=defaultCodecs.audio;}}}return codecInfo;};var logFn=logger('PlaylistSelector');var representationToString=function representationToString(representation){if(!representation||!representation.playlist){return;}var playlist=representation.playlist;return JSON.stringify({id:playlist.id,bandwidth:representation.bandwidth,width:representation.width,height:representation.height,codecs:playlist.attributes&&playlist.attributes.CODECS||''});};// Utilities
/**
       * Returns the CSS value for the specified property on an element
       * using `getComputedStyle`. Firefox has a long-standing issue where
       * getComputedStyle() may return null when running in an iframe with
       * `display: none`.
       *
       * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397
       * @param {HTMLElement} el the htmlelement to work on
       * @param {string} the proprety to get the style for
       */var safeGetComputedStyle=function safeGetComputedStyle(el,property){if(!el){return'';}var result=window_1.getComputedStyle(el);if(!result){return'';}return result[property];};/**
       * Resuable stable sort function
       *
       * @param {Playlists} array
       * @param {Function} sortFn Different comparators
       * @function stableSort
       */var stableSort=function stableSort(array,sortFn){var newArray=array.slice();array.sort(function(left,right){var cmp=sortFn(left,right);if(cmp===0){return newArray.indexOf(left)-newArray.indexOf(right);}return cmp;});};/**
       * A comparator function to sort two playlist object by bandwidth.
       *
       * @param {Object} left a media playlist object
       * @param {Object} right a media playlist object
       * @return {number} Greater than zero if the bandwidth attribute of
       * left is greater than the corresponding attribute of right. Less
       * than zero if the bandwidth of right is greater than left and
       * exactly zero if the two are equal.
       */var comparePlaylistBandwidth=function comparePlaylistBandwidth(left,right){var leftBandwidth;var rightBandwidth;if(left.attributes.BANDWIDTH){leftBandwidth=left.attributes.BANDWIDTH;}leftBandwidth=leftBandwidth||window_1.Number.MAX_VALUE;if(right.attributes.BANDWIDTH){rightBandwidth=right.attributes.BANDWIDTH;}rightBandwidth=rightBandwidth||window_1.Number.MAX_VALUE;return leftBandwidth-rightBandwidth;};/**
       * A comparator function to sort two playlist object by resolution (width).
       *
       * @param {Object} left a media playlist object
       * @param {Object} right a media playlist object
       * @return {number} Greater than zero if the resolution.width attribute of
       * left is greater than the corresponding attribute of right. Less
       * than zero if the resolution.width of right is greater than left and
       * exactly zero if the two are equal.
       */var comparePlaylistResolution=function comparePlaylistResolution(left,right){var leftWidth;var rightWidth;if(left.attributes.RESOLUTION&&left.attributes.RESOLUTION.width){leftWidth=left.attributes.RESOLUTION.width;}leftWidth=leftWidth||window_1.Number.MAX_VALUE;if(right.attributes.RESOLUTION&&right.attributes.RESOLUTION.width){rightWidth=right.attributes.RESOLUTION.width;}rightWidth=rightWidth||window_1.Number.MAX_VALUE;// NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions
// have the same media dimensions/ resolution
if(leftWidth===rightWidth&&left.attributes.BANDWIDTH&&right.attributes.BANDWIDTH){return left.attributes.BANDWIDTH-right.attributes.BANDWIDTH;}return leftWidth-rightWidth;};/**
       * Chooses the appropriate media playlist based on bandwidth and player size
       *
       * @param {Object} main
       *        Object representation of the main manifest
       * @param {number} playerBandwidth
       *        Current calculated bandwidth of the player
       * @param {number} playerWidth
       *        Current width of the player element (should account for the device pixel ratio)
       * @param {number} playerHeight
       *        Current height of the player element (should account for the device pixel ratio)
       * @param {boolean} limitRenditionByPlayerDimensions
       *        True if the player width and height should be used during the selection, false otherwise
       * @param {Object} playlistController
       *        the current playlistController object
       * @return {Playlist} the highest bitrate playlist less than the
       * currently detected bandwidth, accounting for some amount of
       * bandwidth variance
       */var simpleSelector=function simpleSelector(main,playerBandwidth,playerWidth,playerHeight,limitRenditionByPlayerDimensions,playlistController){// If we end up getting called before `main` is available, exit early
if(!main){return;}var options={bandwidth:playerBandwidth,width:playerWidth,height:playerHeight,limitRenditionByPlayerDimensions:limitRenditionByPlayerDimensions};var playlists=main.playlists;// if playlist is audio only, select between currently active audio group playlists.
if(Playlist.isAudioOnly(main)){playlists=playlistController.getAudioTrackPlaylists_();// add audioOnly to options so that we log audioOnly: true
// at the buttom of this function for debugging.
options.audioOnly=true;}// convert the playlists to an intermediary representation to make comparisons easier
var sortedPlaylistReps=playlists.map(function(playlist){var bandwidth;var width=playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.width;var height=playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.height;bandwidth=playlist.attributes&&playlist.attributes.BANDWIDTH;bandwidth=bandwidth||window_1.Number.MAX_VALUE;return{bandwidth:bandwidth,width:width,height:height,playlist:playlist};});stableSort(sortedPlaylistReps,function(left,right){return left.bandwidth-right.bandwidth;});// filter out any playlists that have been excluded due to
// incompatible configurations
sortedPlaylistReps=sortedPlaylistReps.filter(function(rep){return!Playlist.isIncompatible(rep.playlist);});// filter out any playlists that have been disabled manually through the representations
// api or excluded temporarily due to playback errors.
var enabledPlaylistReps=sortedPlaylistReps.filter(function(rep){return Playlist.isEnabled(rep.playlist);});if(!enabledPlaylistReps.length){// if there are no enabled playlists, then they have all been excluded or disabled
// by the user through the representations api. In this case, ignore exclusion and
// fallback to what the user wants by using playlists the user has not disabled.
enabledPlaylistReps=sortedPlaylistReps.filter(function(rep){return!Playlist.isDisabled(rep.playlist);});}// filter out any variant that has greater effective bitrate
// than the current estimated bandwidth
var bandwidthPlaylistReps=enabledPlaylistReps.filter(function(rep){return rep.bandwidth*Config.BANDWIDTH_VARIANCE<playerBandwidth;});var highestRemainingBandwidthRep=bandwidthPlaylistReps[bandwidthPlaylistReps.length-1];// get all of the renditions with the same (highest) bandwidth
// and then taking the very first element
var bandwidthBestRep=bandwidthPlaylistReps.filter(function(rep){return rep.bandwidth===highestRemainingBandwidthRep.bandwidth;})[0];// if we're not going to limit renditions by player size, make an early decision.
if(limitRenditionByPlayerDimensions===false){var _chosenRep=bandwidthBestRep||enabledPlaylistReps[0]||sortedPlaylistReps[0];if(_chosenRep&&_chosenRep.playlist){var type='sortedPlaylistReps';if(bandwidthBestRep){type='bandwidthBestRep';}if(enabledPlaylistReps[0]){type='enabledPlaylistReps';}logFn("choosing ".concat(representationToString(_chosenRep)," using ").concat(type," with options"),options);return _chosenRep.playlist;}logFn('could not choose a playlist with options',options);return null;}// filter out playlists without resolution information
var haveResolution=bandwidthPlaylistReps.filter(function(rep){return rep.width&&rep.height;});// sort variants by resolution
stableSort(haveResolution,function(left,right){return left.width-right.width;});// if we have the exact resolution as the player use it
var resolutionBestRepList=haveResolution.filter(function(rep){return rep.width===playerWidth&&rep.height===playerHeight;});highestRemainingBandwidthRep=resolutionBestRepList[resolutionBestRepList.length-1];// ensure that we pick the highest bandwidth variant that have exact resolution
var resolutionBestRep=resolutionBestRepList.filter(function(rep){return rep.bandwidth===highestRemainingBandwidthRep.bandwidth;})[0];var resolutionPlusOneList;var resolutionPlusOneSmallest;var resolutionPlusOneRep;// find the smallest variant that is larger than the player
// if there is no match of exact resolution
if(!resolutionBestRep){resolutionPlusOneList=haveResolution.filter(function(rep){return rep.width>playerWidth||rep.height>playerHeight;});// find all the variants have the same smallest resolution
resolutionPlusOneSmallest=resolutionPlusOneList.filter(function(rep){return rep.width===resolutionPlusOneList[0].width&&rep.height===resolutionPlusOneList[0].height;});// ensure that we also pick the highest bandwidth variant that
// is just-larger-than the video player
highestRemainingBandwidthRep=resolutionPlusOneSmallest[resolutionPlusOneSmallest.length-1];resolutionPlusOneRep=resolutionPlusOneSmallest.filter(function(rep){return rep.bandwidth===highestRemainingBandwidthRep.bandwidth;})[0];}var leastPixelDiffRep;// If this selector proves to be better than others,
// resolutionPlusOneRep and resolutionBestRep and all
// the code involving them should be removed.
if(playlistController.leastPixelDiffSelector){// find the variant that is closest to the player's pixel size
var leastPixelDiffList=haveResolution.map(function(rep){rep.pixelDiff=Math.abs(rep.width-playerWidth)+Math.abs(rep.height-playerHeight);return rep;});// get the highest bandwidth, closest resolution playlist
stableSort(leastPixelDiffList,function(left,right){// sort by highest bandwidth if pixelDiff is the same
if(left.pixelDiff===right.pixelDiff){return right.bandwidth-left.bandwidth;}return left.pixelDiff-right.pixelDiff;});leastPixelDiffRep=leastPixelDiffList[0];}// fallback chain of variants
var chosenRep=leastPixelDiffRep||resolutionPlusOneRep||resolutionBestRep||bandwidthBestRep||enabledPlaylistReps[0]||sortedPlaylistReps[0];if(chosenRep&&chosenRep.playlist){var _type2='sortedPlaylistReps';if(leastPixelDiffRep){_type2='leastPixelDiffRep';}else if(resolutionPlusOneRep){_type2='resolutionPlusOneRep';}else if(resolutionBestRep){_type2='resolutionBestRep';}else if(bandwidthBestRep){_type2='bandwidthBestRep';}else if(enabledPlaylistReps[0]){_type2='enabledPlaylistReps';}logFn("choosing ".concat(representationToString(chosenRep)," using ").concat(_type2," with options"),options);return chosenRep.playlist;}logFn('could not choose a playlist with options',options);return null;};/**
       * Chooses the appropriate media playlist based on the most recent
       * bandwidth estimate and the player size.
       *
       * Expects to be called within the context of an instance of VhsHandler
       *
       * @return {Playlist} the highest bitrate playlist less than the
       * currently detected bandwidth, accounting for some amount of
       * bandwidth variance
       */var lastBandwidthSelector=function lastBandwidthSelector(){var pixelRatio=this.useDevicePixelRatio?window_1.devicePixelRatio||1:1;if(!isNaN(this.customPixelRatio)){pixelRatio=this.customPixelRatio;}return simpleSelector(this.playlists.main,this.systemBandwidth,parseInt(safeGetComputedStyle(this.tech_.el(),'width'),10)*pixelRatio,parseInt(safeGetComputedStyle(this.tech_.el(),'height'),10)*pixelRatio,this.limitRenditionByPlayerDimensions,this.playlistController_);};/**
       * Chooses the appropriate media playlist based on an
       * exponential-weighted moving average of the bandwidth after
       * filtering for player size.
       *
       * Expects to be called within the context of an instance of VhsHandler
       *
       * @param {number} decay - a number between 0 and 1. Higher values of
       * this parameter will cause previous bandwidth estimates to lose
       * significance more quickly.
       * @return {Function} a function which can be invoked to create a new
       * playlist selector function.
       * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average
       */var movingAverageBandwidthSelector=function movingAverageBandwidthSelector(decay){var average=-1;var lastSystemBandwidth=-1;if(decay<0||decay>1){throw new Error('Moving average bandwidth decay must be between 0 and 1.');}return function(){var pixelRatio=this.useDevicePixelRatio?window_1.devicePixelRatio||1:1;if(!isNaN(this.customPixelRatio)){pixelRatio=this.customPixelRatio;}if(average<0){average=this.systemBandwidth;lastSystemBandwidth=this.systemBandwidth;}// stop the average value from decaying for every 250ms
// when the systemBandwidth is constant
// and
// stop average from setting to a very low value when the
// systemBandwidth becomes 0 in case of chunk cancellation
if(this.systemBandwidth>0&&this.systemBandwidth!==lastSystemBandwidth){average=decay*this.systemBandwidth+(1-decay)*average;lastSystemBandwidth=this.systemBandwidth;}return simpleSelector(this.playlists.main,average,parseInt(safeGetComputedStyle(this.tech_.el(),'width'),10)*pixelRatio,parseInt(safeGetComputedStyle(this.tech_.el(),'height'),10)*pixelRatio,this.limitRenditionByPlayerDimensions,this.playlistController_);};};/**
       * Chooses the appropriate media playlist based on the potential to rebuffer
       *
       * @param {Object} settings
       *        Object of information required to use this selector
       * @param {Object} settings.main
       *        Object representation of the main manifest
       * @param {number} settings.currentTime
       *        The current time of the player
       * @param {number} settings.bandwidth
       *        Current measured bandwidth
       * @param {number} settings.duration
       *        Duration of the media
       * @param {number} settings.segmentDuration
       *        Segment duration to be used in round trip time calculations
       * @param {number} settings.timeUntilRebuffer
       *        Time left in seconds until the player has to rebuffer
       * @param {number} settings.currentTimeline
       *        The current timeline segments are being loaded from
       * @param {SyncController} settings.syncController
       *        SyncController for determining if we have a sync point for a given playlist
       * @return {Object|null}
       *         {Object} return.playlist
       *         The highest bandwidth playlist with the least amount of rebuffering
       *         {Number} return.rebufferingImpact
       *         The amount of time in seconds switching to this playlist will rebuffer. A
       *         negative value means that switching will cause zero rebuffering.
       */var minRebufferMaxBandwidthSelector=function minRebufferMaxBandwidthSelector(settings){var main=settings.main,currentTime=settings.currentTime,bandwidth=settings.bandwidth,duration=settings.duration,segmentDuration=settings.segmentDuration,timeUntilRebuffer=settings.timeUntilRebuffer,currentTimeline=settings.currentTimeline,syncController=settings.syncController;// filter out any playlists that have been excluded due to
// incompatible configurations
var compatiblePlaylists=main.playlists.filter(function(playlist){return!Playlist.isIncompatible(playlist);});// filter out any playlists that have been disabled manually through the representations
// api or excluded temporarily due to playback errors.
var enabledPlaylists=compatiblePlaylists.filter(Playlist.isEnabled);if(!enabledPlaylists.length){// if there are no enabled playlists, then they have all been excluded or disabled
// by the user through the representations api. In this case, ignore exclusion and
// fallback to what the user wants by using playlists the user has not disabled.
enabledPlaylists=compatiblePlaylists.filter(function(playlist){return!Playlist.isDisabled(playlist);});}var bandwidthPlaylists=enabledPlaylists.filter(Playlist.hasAttribute.bind(null,'BANDWIDTH'));var rebufferingEstimates=bandwidthPlaylists.map(function(playlist){var syncPoint=syncController.getSyncPoint(playlist,duration,currentTimeline,currentTime);// If there is no sync point for this playlist, switching to it will require a
// sync request first. This will double the request time
var numRequests=syncPoint?1:2;var requestTimeEstimate=Playlist.estimateSegmentRequestTime(segmentDuration,bandwidth,playlist);var rebufferingImpact=requestTimeEstimate*numRequests-timeUntilRebuffer;return{playlist:playlist,rebufferingImpact:rebufferingImpact};});var noRebufferingPlaylists=rebufferingEstimates.filter(function(estimate){return estimate.rebufferingImpact<=0;});// Sort by bandwidth DESC
stableSort(noRebufferingPlaylists,function(a,b){return comparePlaylistBandwidth(b.playlist,a.playlist);});if(noRebufferingPlaylists.length){return noRebufferingPlaylists[0];}stableSort(rebufferingEstimates,function(a,b){return a.rebufferingImpact-b.rebufferingImpact;});return rebufferingEstimates[0]||null;};/**
       * Chooses the appropriate media playlist, which in this case is the lowest bitrate
       * one with video.  If no renditions with video exist, return the lowest audio rendition.
       *
       * Expects to be called within the context of an instance of VhsHandler
       *
       * @return {Object|null}
       *         {Object} return.playlist
       *         The lowest bitrate playlist that contains a video codec.  If no such rendition
       *         exists pick the lowest audio rendition.
       */var lowestBitrateCompatibleVariantSelector=function lowestBitrateCompatibleVariantSelector(){var _this198=this;// filter out any playlists that have been excluded due to
// incompatible configurations or playback errors
var playlists=this.playlists.main.playlists.filter(Playlist.isEnabled);// Sort ascending by bitrate
stableSort(playlists,function(a,b){return comparePlaylistBandwidth(a,b);});// Parse and assume that playlists with no video codec have no video
// (this is not necessarily true, although it is generally true).
//
// If an entire manifest has no valid videos everything will get filtered
// out.
var playlistsWithVideo=playlists.filter(function(playlist){return!!codecsForPlaylist(_this198.playlists.main,playlist).video;});return playlistsWithVideo[0]||null;};/**
       * Combine all segments into a single Uint8Array
       *
       * @param {Object} segmentObj
       * @return {Uint8Array} concatenated bytes
       * @private
       */var concatSegments=function concatSegments(segmentObj){var offset=0;var tempBuffer;if(segmentObj.bytes){tempBuffer=new Uint8Array(segmentObj.bytes);// combine the individual segments into one large typed-array
segmentObj.segments.forEach(function(segment){tempBuffer.set(segment,offset);offset+=segment.byteLength;});}return tempBuffer;};/**
       * Example:
       * https://host.com/path1/path2/path3/segment.ts?arg1=val1
       * -->
       * path3/segment.ts
       *
       * @param resolvedUri
       * @return {string}
       */function compactSegmentUrlDescription(resolvedUri){try{return new URL(resolvedUri).pathname.split('/').slice(-2).join('/');}catch(e){return'';}}/**
       * @file text-tracks.js
       */ /**
       * Create captions text tracks on video.js if they do not exist
       *
       * @param {Object} inbandTextTracks a reference to current inbandTextTracks
       * @param {Object} tech the video.js tech
       * @param {Object} captionStream the caption stream to create
       * @private
       */var createCaptionsTrackIfNotExists=function createCaptionsTrackIfNotExists(inbandTextTracks,tech,captionStream){if(!inbandTextTracks[captionStream]){tech.trigger({type:'usage',name:'vhs-608'});var instreamId=captionStream;// we need to translate SERVICEn for 708 to how mux.js currently labels them
if(/^cc708_/.test(captionStream)){instreamId='SERVICE'+captionStream.split('_')[1];}var track=tech.textTracks().getTrackById(instreamId);if(track){// Resuse an existing track with a CC# id because this was
// very likely created by videojs-contrib-hls from information
// in the m3u8 for us to use
inbandTextTracks[captionStream]=track;}else{// This section gets called when we have caption services that aren't specified in the manifest.
// Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.
var captionServices=tech.options_.vhs&&tech.options_.vhs.captionServices||{};var label=captionStream;var language=captionStream;var def=false;var captionService=captionServices[instreamId];if(captionService){label=captionService.label;language=captionService.language;def=captionService.default;}// Otherwise, create a track with the default `CC#` label and
// without a language
inbandTextTracks[captionStream]=tech.addRemoteTextTrack({kind:'captions',id:instreamId,// TODO: investigate why this doesn't seem to turn the caption on by default
default:def,label:label,language:language},false).track;}}};/**
       * Add caption text track data to a source handler given an array of captions
       *
       * @param {Object}
       *   @param {Object} inbandTextTracks the inband text tracks
       *   @param {number} timestampOffset the timestamp offset of the source buffer
       *   @param {Array} captionArray an array of caption data
       * @private
       */var addCaptionData=function addCaptionData(_ref197){var inbandTextTracks=_ref197.inbandTextTracks,captionArray=_ref197.captionArray,timestampOffset=_ref197.timestampOffset;if(!captionArray){return;}var Cue=window_1.WebKitDataCue||window_1.VTTCue;captionArray.forEach(function(caption){var track=caption.stream;// in CEA 608 captions, video.js/mux.js sends a content array
// with positioning data
if(caption.content){caption.content.forEach(function(value){var cue=new Cue(caption.startTime+timestampOffset,caption.endTime+timestampOffset,value.text);cue.line=value.line;cue.align='left';cue.position=value.position;cue.positionAlign='line-left';inbandTextTracks[track].addCue(cue);});}else{// otherwise, a text value with combined captions is sent
inbandTextTracks[track].addCue(new Cue(caption.startTime+timestampOffset,caption.endTime+timestampOffset,caption.text));}});};/**
       * Define properties on a cue for backwards compatability,
       * but warn the user that the way that they are using it
       * is depricated and will be removed at a later date.
       *
       * @param {Cue} cue the cue to add the properties on
       * @private
       */var deprecateOldCue=function deprecateOldCue(cue){Object.defineProperties(cue.frame,{id:{get:function get(){videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');return cue.value.key;}},value:{get:function get(){videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');return cue.value.data;}},privateData:{get:function get(){videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');return cue.value.data;}}});};/**
       * Add metadata text track data to a source handler given an array of metadata
       *
       * @param {Object}
       *   @param {Object} inbandTextTracks the inband text tracks
       *   @param {Array} metadataArray an array of meta data
       *   @param {number} timestampOffset the timestamp offset of the source buffer
       *   @param {number} videoDuration the duration of the video
       * @private
       */var addMetadata=function addMetadata(_ref198){var inbandTextTracks=_ref198.inbandTextTracks,metadataArray=_ref198.metadataArray,timestampOffset=_ref198.timestampOffset,videoDuration=_ref198.videoDuration;if(!metadataArray){return;}var Cue=window_1.WebKitDataCue||window_1.VTTCue;var metadataTrack=inbandTextTracks.metadataTrack_;if(!metadataTrack){return;}metadataArray.forEach(function(metadata){var time=metadata.cueTime+timestampOffset;// if time isn't a finite number between 0 and Infinity, like NaN,
// ignore this bit of metadata.
// This likely occurs when you have an non-timed ID3 tag like TIT2,
// which is the "Title/Songname/Content description" frame
if(typeof time!=='number'||window_1.isNaN(time)||time<0||!(time<Infinity)){return;}// If we have no frames, we can't create a cue.
if(!metadata.frames||!metadata.frames.length){return;}metadata.frames.forEach(function(frame){var cue=new Cue(time,time,frame.value||frame.url||frame.data||'');cue.frame=frame;cue.value=frame;deprecateOldCue(cue);metadataTrack.addCue(cue);});});if(!metadataTrack.cues||!metadataTrack.cues.length){return;}// Updating the metadeta cues so that
// the endTime of each cue is the startTime of the next cue
// the endTime of last cue is the duration of the video
var cues=metadataTrack.cues;var cuesArray=[];// Create a copy of the TextTrackCueList...
// ...disregarding cues with a falsey value
for(var _i182=0;_i182<cues.length;_i182++){if(cues[_i182]){cuesArray.push(cues[_i182]);}}// Group cues by their startTime value
var cuesGroupedByStartTime=cuesArray.reduce(function(obj,cue){var timeSlot=obj[cue.startTime]||[];timeSlot.push(cue);obj[cue.startTime]=timeSlot;return obj;},{});// Sort startTimes by ascending order
var sortedStartTimes=Object.keys(cuesGroupedByStartTime).sort(function(a,b){return Number(a)-Number(b);});// Map each cue group's endTime to the next group's startTime
sortedStartTimes.forEach(function(startTime,idx){var cueGroup=cuesGroupedByStartTime[startTime];var finiteDuration=isFinite(videoDuration)?videoDuration:startTime;var nextTime=Number(sortedStartTimes[idx+1])||finiteDuration;// Map each cue's endTime the next group's startTime
cueGroup.forEach(function(cue){cue.endTime=nextTime;});});};// object for mapping daterange attributes
var dateRangeAttr={id:'ID',class:'CLASS',startDate:'START-DATE',duration:'DURATION',endDate:'END-DATE',endOnNext:'END-ON-NEXT',plannedDuration:'PLANNED-DURATION',scte35Out:'SCTE35-OUT',scte35In:'SCTE35-IN'};var dateRangeKeysToOmit=new Set(['id','class','startDate','duration','endDate','endOnNext','startTime','endTime','processDateRange']);/**
       * Add DateRange metadata text track to a source handler given an array of metadata
       *
       * @param {Object}
       *   @param {Object} inbandTextTracks the inband text tracks
       *   @param {Array} dateRanges parsed media playlist
       * @private
       */var addDateRangeMetadata=function addDateRangeMetadata(_ref199){var inbandTextTracks=_ref199.inbandTextTracks,dateRanges=_ref199.dateRanges;var metadataTrack=inbandTextTracks.metadataTrack_;if(!metadataTrack){return;}var Cue=window_1.WebKitDataCue||window_1.VTTCue;dateRanges.forEach(function(dateRange){// we generate multiple cues for each date range with different attributes
for(var _i183=0,_Object$keys2=Object.keys(dateRange);_i183<_Object$keys2.length;_i183++){var key=_Object$keys2[_i183];if(dateRangeKeysToOmit.has(key)){continue;}var cue=new Cue(dateRange.startTime,dateRange.endTime,'');cue.id=dateRange.id;cue.type='com.apple.quicktime.HLS';cue.value={key:dateRangeAttr[key],data:dateRange[key]};if(key==='scte35Out'||key==='scte35In'){cue.value.data=new Uint8Array(cue.value.data.match(/[\da-f]{2}/gi)).buffer;}metadataTrack.addCue(cue);}dateRange.processDateRange();});};/**
       * Create metadata text track on video.js if it does not exist
       *
       * @param {Object} inbandTextTracks a reference to current inbandTextTracks
       * @param {string} dispatchType the inband metadata track dispatch type
       * @param {Object} tech the video.js tech
       * @private
       */var createMetadataTrackIfNotExists=function createMetadataTrackIfNotExists(inbandTextTracks,dispatchType,tech){if(inbandTextTracks.metadataTrack_){return;}inbandTextTracks.metadataTrack_=tech.addRemoteTextTrack({kind:'metadata',label:'Timed Metadata'},false).track;if(!videojs.browser.IS_ANY_SAFARI){inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType=dispatchType;}};/**
       * Remove cues from a track on video.js.
       *
       * @param {Double} start start of where we should remove the cue
       * @param {Double} end end of where the we should remove the cue
       * @param {Object} track the text track to remove the cues from
       * @private
       */var removeCuesFromTrack=function removeCuesFromTrack(start,end,track){var i;var cue;if(!track){return;}if(!track.cues){return;}i=track.cues.length;while(i--){cue=track.cues[i];// Remove any cue within the provided start and end time
if(cue.startTime>=start&&cue.endTime<=end){track.removeCue(cue);}}};/**
       * Remove duplicate cues from a track on video.js (a cue is considered a
       * duplicate if it has the same time interval and text as another)
       *
       * @param {Object} track the text track to remove the duplicate cues from
       * @private
       */var removeDuplicateCuesFromTrack=function removeDuplicateCuesFromTrack(track){var cues=track.cues;if(!cues){return;}var uniqueCues={};for(var _i184=cues.length-1;_i184>=0;_i184--){var cue=cues[_i184];var cueKey="".concat(cue.startTime,"-").concat(cue.endTime,"-").concat(cue.text);if(uniqueCues[cueKey]){track.removeCue(cue);}else{uniqueCues[cueKey]=cue;}}};/**
       * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in
       * front of current time.
       *
       * @param {Array} buffer
       *        The current buffer of gop information
       * @param {number} currentTime
       *        The current time
       * @param {Double} mapping
       *        Offset to map display time to stream presentation time
       * @return {Array}
       *         List of gops considered safe to append over
       */var gopsSafeToAlignWith=function gopsSafeToAlignWith(buffer,currentTime,mapping){if(typeof currentTime==='undefined'||currentTime===null||!buffer.length){return[];}// pts value for current time + 3 seconds to give a bit more wiggle room
var currentTimePts=Math.ceil((currentTime-mapping+3)*clock.ONE_SECOND_IN_TS);var i;for(i=0;i<buffer.length;i++){if(buffer[i].pts>currentTimePts){break;}}return buffer.slice(i);};/**
       * Appends gop information (timing and byteLength) received by the transmuxer for the
       * gops appended in the last call to appendBuffer
       *
       * @param {Array} buffer
       *        The current buffer of gop information
       * @param {Array} gops
       *        List of new gop information
       * @param {boolean} replace
       *        If true, replace the buffer with the new gop information. If false, append the
       *        new gop information to the buffer in the right location of time.
       * @return {Array}
       *         Updated list of gop information
       */var updateGopBuffer=function updateGopBuffer(buffer,gops,replace){if(!gops.length){return buffer;}if(replace){// If we are in safe append mode, then completely overwrite the gop buffer
// with the most recent appeneded data. This will make sure that when appending
// future segments, we only try to align with gops that are both ahead of current
// time and in the last segment appended.
return gops.slice();}var start=gops[0].pts;var i=0;for(i;i<buffer.length;i++){if(buffer[i].pts>=start){break;}}return buffer.slice(0,i).concat(gops);};/**
       * Removes gop information in buffer that overlaps with provided start and end
       *
       * @param {Array} buffer
       *        The current buffer of gop information
       * @param {Double} start
       *        position to start the remove at
       * @param {Double} end
       *        position to end the remove at
       * @param {Double} mapping
       *        Offset to map display time to stream presentation time
       */var removeGopBuffer=function removeGopBuffer(buffer,start,end,mapping){var startPts=Math.ceil((start-mapping)*clock.ONE_SECOND_IN_TS);var endPts=Math.ceil((end-mapping)*clock.ONE_SECOND_IN_TS);var updatedBuffer=buffer.slice();var i=buffer.length;while(i--){if(buffer[i].pts<=endPts){break;}}if(i===-1){// no removal because end of remove range is before start of buffer
return updatedBuffer;}var j=i+1;while(j--){if(buffer[j].pts<=startPts){break;}}// clamp remove range start to 0 index
j=Math.max(j,0);updatedBuffer.splice(j,i-j+1);return updatedBuffer;};var shallowEqual=function shallowEqual(a,b){// if both are undefined
// or one or the other is undefined
// they are not equal
if(!a&&!b||!a&&b||a&&!b){return false;}// they are the same object and thus, equal
if(a===b){return true;}// sort keys so we can make sure they have
// all the same keys later.
var akeys=Object.keys(a).sort();var bkeys=Object.keys(b).sort();// different number of keys, not equal
if(akeys.length!==bkeys.length){return false;}for(var _i185=0;_i185<akeys.length;_i185++){var key=akeys[_i185];// different sorted keys, not equal
if(key!==bkeys[_i185]){return false;}// different values, not equal
if(a[key]!==b[key]){return false;}}return true;};// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror
var QUOTA_EXCEEDED_ERR=22;/**
       * The segment loader has no recourse except to fetch a segment in the
       * current playlist and use the internal timestamps in that segment to
       * generate a syncPoint. This function returns a good candidate index
       * for that process.
       *
       * @param {Array} segments - the segments array from a playlist.
       * @return {number} An index of a segment from the playlist to load
       */var getSyncSegmentCandidate=function getSyncSegmentCandidate(currentTimeline,segments,targetTime){segments=segments||[];var timelineSegments=[];var time=0;for(var _i186=0;_i186<segments.length;_i186++){var segment=segments[_i186];if(currentTimeline===segment.timeline){timelineSegments.push(_i186);time+=segment.duration;if(time>targetTime){return _i186;}}}if(timelineSegments.length===0){return 0;}// default to the last timeline segment
return timelineSegments[timelineSegments.length-1];};// In the event of a quota exceeded error, keep at least one second of back buffer. This
// number was arbitrarily chosen and may be updated in the future, but seemed reasonable
// as a start to prevent any potential issues with removing content too close to the
// playhead.
var MIN_BACK_BUFFER=1;// in ms
var CHECK_BUFFER_DELAY=500;var finite=function finite(num){return typeof num==='number'&&isFinite(num);};// With most content hovering around 30fps, if a segment has a duration less than a half
// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will
// not accurately reflect the rest of the content.
var MIN_SEGMENT_DURATION_TO_SAVE_STATS=1/60;var illegalMediaSwitch=function illegalMediaSwitch(loaderType,startingMedia,trackInfo){// Although these checks should most likely cover non 'main' types, for now it narrows
// the scope of our checks.
if(loaderType!=='main'||!startingMedia||!trackInfo){return null;}if(!trackInfo.hasAudio&&!trackInfo.hasVideo){return'Neither audio nor video found in segment.';}if(startingMedia.hasVideo&&!trackInfo.hasVideo){return'Only audio found in segment when we expected video.'+' We can\'t switch to audio only from a stream that had video.'+' To get rid of this message, please add codec information to the manifest.';}if(!startingMedia.hasVideo&&trackInfo.hasVideo){return'Video found in segment when we expected only audio.'+' We can\'t switch to a stream with video from an audio only stream.'+' To get rid of this message, please add codec information to the manifest.';}return null;};/**
       * Calculates a time value that is safe to remove from the back buffer without interrupting
       * playback.
       *
       * @param {TimeRange} seekable
       *        The current seekable range
       * @param {number} currentTime
       *        The current time of the player
       * @param {number} targetDuration
       *        The target duration of the current playlist
       * @return {number}
       *         Time that is safe to remove from the back buffer without interrupting playback
       */var safeBackBufferTrimTime=function safeBackBufferTrimTime(seekable,currentTime,targetDuration){// 30 seconds before the playhead provides a safe default for trimming.
//
// Choosing a reasonable default is particularly important for high bitrate content and
// VOD videos/live streams with large windows, as the buffer may end up overfilled and
// throw an APPEND_BUFFER_ERR.
var trimTime=currentTime-Config.BACK_BUFFER_LENGTH;if(seekable.length){// Some live playlists may have a shorter window of content than the full allowed back
// buffer. For these playlists, don't save content that's no longer within the window.
trimTime=Math.max(trimTime,seekable.start(0));}// Don't remove within target duration of the current time to avoid the possibility of
// removing the GOP currently being played, as removing it can cause playback stalls.
var maxTrimTime=currentTime-targetDuration;return Math.min(maxTrimTime,trimTime);};var segmentInfoString=function segmentInfoString(segmentInfo){var startOfSegment=segmentInfo.startOfSegment,duration=segmentInfo.duration,segment=segmentInfo.segment,part=segmentInfo.part,_segmentInfo$playlist=segmentInfo.playlist,seq=_segmentInfo$playlist.mediaSequence,id=_segmentInfo$playlist.id,_segmentInfo$playlist2=_segmentInfo$playlist.segments,segments=_segmentInfo$playlist2===void 0?[]:_segmentInfo$playlist2,index=segmentInfo.mediaIndex,partIndex=segmentInfo.partIndex,timeline=segmentInfo.timeline;var segmentLen=segments.length-1;var selection='mediaIndex/partIndex increment';if(segmentInfo.getMediaInfoForTime){selection="getMediaInfoForTime (".concat(segmentInfo.getMediaInfoForTime,")");}else if(segmentInfo.isSyncRequest){selection='getSyncSegmentCandidate (isSyncRequest)';}if(segmentInfo.independent){selection+=" with independent ".concat(segmentInfo.independent);}var hasPartIndex=typeof partIndex==='number';var name=segmentInfo.segment.uri?'segment':'pre-segment';var zeroBasedPartCount=hasPartIndex?getKnownPartCount({preloadSegment:segment})-1:0;return"".concat(name," [").concat(seq+index,"/").concat(seq+segmentLen,"]")+(hasPartIndex?" part [".concat(partIndex,"/").concat(zeroBasedPartCount,"]"):'')+" segment start/end [".concat(segment.start," => ").concat(segment.end,"]")+(hasPartIndex?" part start/end [".concat(part.start," => ").concat(part.end,"]"):'')+" startOfSegment [".concat(startOfSegment,"]")+" duration [".concat(duration,"]")+" timeline [".concat(timeline,"]")+" selected by [".concat(selection,"]")+" playlist [".concat(id,"]");};var timingInfoPropertyForMedia=function timingInfoPropertyForMedia(mediaType){return"".concat(mediaType,"TimingInfo");};/**
       * Returns the timestamp offset to use for the segment.
       *
       * @param {number} segmentTimeline
       *        The timeline of the segment
       * @param {number} currentTimeline
       *        The timeline currently being followed by the loader
       * @param {number} startOfSegment
       *        The estimated segment start
       * @param {TimeRange[]} buffered
       *        The loader's buffer
       * @param {boolean} overrideCheck
       *        If true, no checks are made to see if the timestamp offset value should be set,
       *        but sets it directly to a value.
       *
       * @return {number|null}
       *         Either a number representing a new timestamp offset, or null if the segment is
       *         part of the same timeline
       */var timestampOffsetForSegment=function timestampOffsetForSegment(_ref200){var segmentTimeline=_ref200.segmentTimeline,currentTimeline=_ref200.currentTimeline,startOfSegment=_ref200.startOfSegment,buffered=_ref200.buffered,overrideCheck=_ref200.overrideCheck;// Check to see if we are crossing a discontinuity to see if we need to set the
// timestamp offset on the transmuxer and source buffer.
//
// Previously, we changed the timestampOffset if the start of this segment was less than
// the currently set timestampOffset, but this isn't desirable as it can produce bad
// behavior, especially around long running live streams.
if(!overrideCheck&&segmentTimeline===currentTimeline){return null;}// When changing renditions, it's possible to request a segment on an older timeline. For
// instance, given two renditions with the following:
//
// #EXTINF:10
// segment1
// #EXT-X-DISCONTINUITY
// #EXTINF:10
// segment2
// #EXTINF:10
// segment3
//
// And the current player state:
//
// current time: 8
// buffer: 0 => 20
//
// The next segment on the current rendition would be segment3, filling the buffer from
// 20s onwards. However, if a rendition switch happens after segment2 was requested,
// then the next segment to be requested will be segment1 from the new rendition in
// order to fill time 8 and onwards. Using the buffered end would result in repeated
// content (since it would position segment1 of the new rendition starting at 20s). This
// case can be identified when the new segment's timeline is a prior value. Instead of
// using the buffered end, the startOfSegment can be used, which, hopefully, will be
// more accurate to the actual start time of the segment.
if(segmentTimeline<currentTimeline){return startOfSegment;}// segmentInfo.startOfSegment used to be used as the timestamp offset, however, that
// value uses the end of the last segment if it is available. While this value
// should often be correct, it's better to rely on the buffered end, as the new
// content post discontinuity should line up with the buffered end as if it were
// time 0 for the new content.
return buffered.length?buffered.end(buffered.length-1):startOfSegment;};/**
       * Returns whether or not the loader should wait for a timeline change from the timeline
       * change controller before processing the segment.
       *
       * Primary timing in VHS goes by video. This is different from most media players, as
       * audio is more often used as the primary timing source. For the foreseeable future, VHS
       * will continue to use video as the primary timing source, due to the current logic and
       * expectations built around it.

       * Since the timing follows video, in order to maintain sync, the video loader is
       * responsible for setting both audio and video source buffer timestamp offsets.
       *
       * Setting different values for audio and video source buffers could lead to
       * desyncing. The following examples demonstrate some of the situations where this
       * distinction is important. Note that all of these cases involve demuxed content. When
       * content is muxed, the audio and video are packaged together, therefore syncing
       * separate media playlists is not an issue.
       *
       * CASE 1: Audio prepares to load a new timeline before video:
       *
       * Timeline:       0                 1
       * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Audio Loader:                     ^
       * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Video Loader              ^
       *
       * In the above example, the audio loader is preparing to load the 6th segment, the first
       * after a discontinuity, while the video loader is still loading the 5th segment, before
       * the discontinuity.
       *
       * If the audio loader goes ahead and loads and appends the 6th segment before the video
       * loader crosses the discontinuity, then when appended, the 6th audio segment will use
       * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,
       * the audio loader must provide the audioAppendStart value to trim the content in the
       * transmuxer, and that value relies on the audio timestamp offset. Since the audio
       * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the
       * segment until that value is provided.
       *
       * CASE 2: Video prepares to load a new timeline before audio:
       *
       * Timeline:       0                 1
       * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Audio Loader:             ^
       * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Video Loader                      ^
       *
       * In the above example, the video loader is preparing to load the 6th segment, the first
       * after a discontinuity, while the audio loader is still loading the 5th segment, before
       * the discontinuity.
       *
       * If the video loader goes ahead and loads and appends the 6th segment, then once the
       * segment is loaded and processed, both the video and audio timestamp offsets will be
       * set, since video is used as the primary timing source. This is to ensure content lines
       * up appropriately, as any modifications to the video timing are reflected by audio when
       * the video loader sets the audio and video timestamp offsets to the same value. However,
       * setting the timestamp offset for audio before audio has had a chance to change
       * timelines will likely lead to desyncing, as the audio loader will append segment 5 with
       * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.
       *
       * CASE 3: When seeking, audio prepares to load a new timeline before video
       *
       * Timeline:       0                 1
       * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Audio Loader:           ^
       * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9
       * Video Loader            ^
       *
       * In the above example, both audio and video loaders are loading segments from timeline
       * 0, but imagine that the seek originated from timeline 1.
       *
       * When seeking to a new timeline, the timestamp offset will be set based on the expected
       * segment start of the loaded video segment. In order to maintain sync, the audio loader
       * must wait for the video loader to load its segment and update both the audio and video
       * timestamp offsets before it may load and append its own segment. This is the case
       * whether the seek results in a mismatched segment request (e.g., the audio loader
       * chooses to load segment 3 and the video loader chooses to load segment 4) or the
       * loaders choose to load the same segment index from each playlist, as the segments may
       * not be aligned perfectly, even for matching segment indexes.
       *
       * @param {Object} timelinechangeController
       * @param {number} currentTimeline
       *        The timeline currently being followed by the loader
       * @param {number} segmentTimeline
       *        The timeline of the segment being loaded
       * @param {('main'|'audio')} loaderType
       *        The loader type
       * @param {boolean} audioDisabled
       *        Whether the audio is disabled for the loader. This should only be true when the
       *        loader may have muxed audio in its segment, but should not append it, e.g., for
       *        the main loader when an alternate audio playlist is active.
       *
       * @return {boolean}
       *         Whether the loader should wait for a timeline change from the timeline change
       *         controller before processing the segment
       */var shouldWaitForTimelineChange=function shouldWaitForTimelineChange(_ref201){var timelineChangeController=_ref201.timelineChangeController,currentTimeline=_ref201.currentTimeline,segmentTimeline=_ref201.segmentTimeline,loaderType=_ref201.loaderType,audioDisabled=_ref201.audioDisabled;if(currentTimeline===segmentTimeline){return false;}if(loaderType==='audio'){var lastMainTimelineChange=timelineChangeController.lastTimelineChange({type:'main'});// Audio loader should wait if:
//
// * main hasn't had a timeline change yet (thus has not loaded its first segment)
// * main hasn't yet changed to the timeline audio is looking to load
return!lastMainTimelineChange||lastMainTimelineChange.to!==segmentTimeline;}// The main loader only needs to wait for timeline changes if there's demuxed audio.
// Otherwise, there's nothing to wait for, since audio would be muxed into the main
// loader's segments (or the content is audio/video only and handled by the main
// loader).
if(loaderType==='main'&&audioDisabled){var pendingAudioTimelineChange=timelineChangeController.pendingTimelineChange({type:'audio'});// Main loader should wait for the audio loader if audio is not pending a timeline
// change to the current timeline.
//
// Since the main loader is responsible for setting the timestamp offset for both
// audio and video, the main loader must wait for audio to be about to change to its
// timeline before setting the offset, otherwise, if audio is behind in loading,
// segments from the previous timeline would be adjusted by the new timestamp offset.
//
// This requirement means that video will not cross a timeline until the audio is
// about to cross to it, so that way audio and video will always cross the timeline
// together.
//
// In addition to normal timeline changes, these rules also apply to the start of a
// stream (going from a non-existent timeline, -1, to timeline 0). It's important
// that these rules apply to the first timeline change because if they did not, it's
// possible that the main loader will cross two timelines before the audio loader has
// crossed one. Logic may be implemented to handle the startup as a special case, but
// it's easier to simply treat all timeline changes the same.
if(pendingAudioTimelineChange&&pendingAudioTimelineChange.to===segmentTimeline){return false;}return true;}return false;};var mediaDuration=function mediaDuration(timingInfos){var maxDuration=0;['video','audio'].forEach(function(type){var typeTimingInfo=timingInfos["".concat(type,"TimingInfo")];if(!typeTimingInfo){return;}var start=typeTimingInfo.start,end=typeTimingInfo.end;var duration;if(typeof start==='bigint'||typeof end==='bigint'){duration=window_1.BigInt(end)-window_1.BigInt(start);}else if(typeof start==='number'&&typeof end==='number'){duration=end-start;}if(typeof duration!=='undefined'&&duration>maxDuration){maxDuration=duration;}});// convert back to a number if it is lower than MAX_SAFE_INTEGER
// as we only need BigInt when we are above that.
if(typeof maxDuration==='bigint'&&maxDuration<Number.MAX_SAFE_INTEGER){maxDuration=Number(maxDuration);}return maxDuration;};var segmentTooLong=function segmentTooLong(_ref202){var segmentDuration=_ref202.segmentDuration,maxDuration=_ref202.maxDuration;// 0 duration segments are most likely due to metadata only segments or a lack of
// information.
if(!segmentDuration){return false;}// For HLS:
//
// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1
// The EXTINF duration of each Media Segment in the Playlist
// file, when rounded to the nearest integer, MUST be less than or equal
// to the target duration; longer segments can trigger playback stalls
// or other errors.
//
// For DASH, the mpd-parser uses the largest reported segment duration as the target
// duration. Although that reported duration is occasionally approximate (i.e., not
// exact), a strict check may report that a segment is too long more often in DASH.
return Math.round(segmentDuration)>maxDuration+TIME_FUDGE_FACTOR;};var getTroublesomeSegmentDurationMessage=function getTroublesomeSegmentDurationMessage(segmentInfo,sourceType){// Right now we aren't following DASH's timing model exactly, so only perform
// this check for HLS content.
if(sourceType!=='hls'){return null;}var segmentDuration=mediaDuration({audioTimingInfo:segmentInfo.audioTimingInfo,videoTimingInfo:segmentInfo.videoTimingInfo});// Don't report if we lack information.
//
// If the segment has a duration of 0 it is either a lack of information or a
// metadata only segment and shouldn't be reported here.
if(!segmentDuration){return null;}var targetDuration=segmentInfo.playlist.targetDuration;var isSegmentWayTooLong=segmentTooLong({segmentDuration:segmentDuration,maxDuration:targetDuration*2});var isSegmentSlightlyTooLong=segmentTooLong({segmentDuration:segmentDuration,maxDuration:targetDuration});var segmentTooLongMessage="Segment with index ".concat(segmentInfo.mediaIndex," ")+"from playlist ".concat(segmentInfo.playlist.id," ")+"has a duration of ".concat(segmentDuration," ")+"when the reported duration is ".concat(segmentInfo.duration," ")+"and the target duration is ".concat(targetDuration,". ")+'For HLS content, a duration in excess of the target duration may result in '+'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for '+'more details: '+'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';if(isSegmentWayTooLong||isSegmentSlightlyTooLong){return{severity:isSegmentWayTooLong?'warn':'info',message:segmentTooLongMessage};}return null;};/**
       * An object that manages segment loading and appending.
       *
       * @class SegmentLoader
       * @param {Object} options required and optional options
       * @extends videojs.EventTarget
       */var SegmentLoader=/*#__PURE__*/function(_videojs$EventTarget2){_inherits(SegmentLoader,_videojs$EventTarget2);var _super96=_createSuper(SegmentLoader);function SegmentLoader(settings){var _this199;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,SegmentLoader);_this199=_super96.call(this);// check pre-conditions
if(!settings){throw new TypeError('Initialization settings are required');}if(typeof settings.currentTime!=='function'){throw new TypeError('No currentTime getter specified');}if(!settings.mediaSource){throw new TypeError('No MediaSource specified');}// public properties
_this199.bandwidth=settings.bandwidth;_this199.throughput={rate:0,count:0};_this199.roundTrip=NaN;_this199.resetStats_();_this199.mediaIndex=null;_this199.partIndex=null;// private settings
_this199.hasPlayed_=settings.hasPlayed;_this199.currentTime_=settings.currentTime;_this199.seekable_=settings.seekable;_this199.seeking_=settings.seeking;_this199.duration_=settings.duration;_this199.mediaSource_=settings.mediaSource;_this199.vhs_=settings.vhs;_this199.loaderType_=settings.loaderType;_this199.currentMediaInfo_=void 0;_this199.startingMediaInfo_=void 0;_this199.segmentMetadataTrack_=settings.segmentMetadataTrack;_this199.goalBufferLength_=settings.goalBufferLength;_this199.sourceType_=settings.sourceType;_this199.sourceUpdater_=settings.sourceUpdater;_this199.inbandTextTracks_=settings.inbandTextTracks;_this199.state_='INIT';_this199.timelineChangeController_=settings.timelineChangeController;_this199.shouldSaveSegmentTimingInfo_=true;_this199.parse708captions_=settings.parse708captions;_this199.useDtsForTimestampOffset_=settings.useDtsForTimestampOffset;_this199.captionServices_=settings.captionServices;_this199.exactManifestTimings=settings.exactManifestTimings;_this199.addMetadataToTextTrack=settings.addMetadataToTextTrack;// private instance variables
_this199.checkBufferTimeout_=null;_this199.error_=void 0;_this199.currentTimeline_=-1;_this199.shouldForceTimestampOffsetAfterResync_=false;_this199.pendingSegment_=null;_this199.xhrOptions_=null;_this199.pendingSegments_=[];_this199.audioDisabled_=false;_this199.isPendingTimestampOffset_=false;// TODO possibly move gopBuffer and timeMapping info to a separate controller
_this199.gopBuffer_=[];_this199.timeMapping_=0;_this199.safeAppend_=false;_this199.appendInitSegment_={audio:true,video:true};_this199.playlistOfLastInitSegment_={audio:null,video:null};_this199.callQueue_=[];// If the segment loader prepares to load a segment, but does not have enough
// information yet to start the loading process (e.g., if the audio loader wants to
// load a segment from the next timeline but the main loader hasn't yet crossed that
// timeline), then the load call will be added to the queue until it is ready to be
// processed.
_this199.loadQueue_=[];_this199.metadataQueue_={id3:[],caption:[]};_this199.waitingOnRemove_=false;_this199.quotaExceededErrorRetryTimeout_=null;// Fragmented mp4 playback
_this199.activeInitSegmentId_=null;_this199.initSegments_={};// HLSe playback
_this199.cacheEncryptionKeys_=settings.cacheEncryptionKeys;_this199.keyCache_={};_this199.decrypter_=settings.decrypter;// Manages the tracking and generation of sync-points, mappings
// between a time in the display time and a segment index within
// a playlist
_this199.syncController_=settings.syncController;_this199.syncPoint_={segmentIndex:0,time:0};_this199.transmuxer_=_this199.createTransmuxer_();_this199.triggerSyncInfoUpdate_=function(){return _this199.trigger('syncinfoupdate');};_this199.syncController_.on('syncinfoupdate',_this199.triggerSyncInfoUpdate_);_this199.mediaSource_.addEventListener('sourceopen',function(){if(!_this199.isEndOfStream_()){_this199.ended_=false;}});// ...for determining the fetch location
_this199.fetchAtBuffer_=false;_this199.logger_=logger("SegmentLoader[".concat(_this199.loaderType_,"]"));Object.defineProperty(_assertThisInitialized2(_this199),'state',{get:function get(){return this.state_;},set:function set(newState){if(newState!==this.state_){this.logger_("".concat(this.state_," -> ").concat(newState));this.state_=newState;this.trigger('statechange');}}});_this199.sourceUpdater_.on('ready',function(){if(_this199.hasEnoughInfoToAppend_()){_this199.processCallQueue_();}});// Only the main loader needs to listen for pending timeline changes, as the main
// loader should wait for audio to be ready to change its timeline so that both main
// and audio timelines change together. For more details, see the
// shouldWaitForTimelineChange function.
if(_this199.loaderType_==='main'){_this199.timelineChangeController_.on('pendingtimelinechange',function(){if(_this199.hasEnoughInfoToAppend_()){_this199.processCallQueue_();}});}// The main loader only listens on pending timeline changes, but the audio loader,
// since its loads follow main, needs to listen on timeline changes. For more details,
// see the shouldWaitForTimelineChange function.
if(_this199.loaderType_==='audio'){_this199.timelineChangeController_.on('timelinechange',function(){if(_this199.hasEnoughInfoToLoad_()){_this199.processLoadQueue_();}if(_this199.hasEnoughInfoToAppend_()){_this199.processCallQueue_();}});}return _this199;}/**
         * TODO: Current sync controller consists of many hls-specific strategies
         * media sequence sync is also hls-specific, and we would like to be protocol-agnostic on this level
         * this should be a part of the sync-controller and sync controller should expect different strategy list based on the protocol.
         *
         * @return {MediaSequenceSync|null}
         * @private
         */_createClass(SegmentLoader,[{key:"mediaSequenceSync_",get:function get(){return this.syncController_.getMediaSequenceSync(this.loaderType_);}},{key:"createTransmuxer_",value:function createTransmuxer_(){return segmentTransmuxer.createTransmuxer({remux:false,alignGopsAtEnd:this.safeAppend_,keepOriginalTimestamps:true,parse708captions:this.parse708captions_,captionServices:this.captionServices_});}/**
         * reset all of our media stats
         *
         * @private
         */},{key:"resetStats_",value:function resetStats_(){this.mediaBytesTransferred=0;this.mediaRequests=0;this.mediaRequestsAborted=0;this.mediaRequestsTimedout=0;this.mediaRequestsErrored=0;this.mediaTransferDuration=0;this.mediaSecondsLoaded=0;this.mediaAppends=0;}/**
         * dispose of the SegmentLoader and reset to the default state
         */},{key:"dispose",value:function dispose(){this.trigger('dispose');this.state='DISPOSED';this.pause();this.abort_();if(this.transmuxer_){this.transmuxer_.terminate();}this.resetStats_();if(this.checkBufferTimeout_){window_1.clearTimeout(this.checkBufferTimeout_);}if(this.syncController_&&this.triggerSyncInfoUpdate_){this.syncController_.off('syncinfoupdate',this.triggerSyncInfoUpdate_);}this.off();}},{key:"setAudio",value:function setAudio(enable){this.audioDisabled_=!enable;if(enable){this.appendInitSegment_.audio=true;}else{// remove current track audio if it gets disabled
this.sourceUpdater_.removeAudio(0,this.duration_());}}/**
         * abort anything that is currently doing on with the SegmentLoader
         * and reset to a default state
         */},{key:"abort",value:function abort(){if(this.state!=='WAITING'){if(this.pendingSegment_){this.pendingSegment_=null;}return;}this.abort_();// We aborted the requests we were waiting on, so reset the loader's state to READY
// since we are no longer "waiting" on any requests. XHR callback is not always run
// when the request is aborted. This will prevent the loader from being stuck in the
// WAITING state indefinitely.
this.state='READY';// don't wait for buffer check timeouts to begin fetching the
// next segment
if(!this.paused()){this.monitorBuffer_();}}/**
         * abort all pending xhr requests and null any pending segements
         *
         * @private
         */},{key:"abort_",value:function abort_(){if(this.pendingSegment_&&this.pendingSegment_.abortRequests){this.pendingSegment_.abortRequests();}// clear out the segment being processed
this.pendingSegment_=null;this.callQueue_=[];this.loadQueue_=[];this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);this.waitingOnRemove_=false;window_1.clearTimeout(this.quotaExceededErrorRetryTimeout_);this.quotaExceededErrorRetryTimeout_=null;}},{key:"checkForAbort_",value:function checkForAbort_(requestId){// If the state is APPENDING, then aborts will not modify the state, meaning the first
// callback that happens should reset the state to READY so that loading can continue.
if(this.state==='APPENDING'&&!this.pendingSegment_){this.state='READY';return true;}if(!this.pendingSegment_||this.pendingSegment_.requestId!==requestId){return true;}return false;}/**
         * set an error on the segment loader and null out any pending segements
         *
         * @param {Error} error the error to set on the SegmentLoader
         * @return {Error} the error that was set or that is currently set
         */},{key:"error",value:function error(_error2){if(typeof _error2!=='undefined'){this.logger_('error occurred:',_error2);this.error_=_error2;}this.pendingSegment_=null;return this.error_;}},{key:"endOfStream",value:function endOfStream(){this.ended_=true;if(this.transmuxer_){// need to clear out any cached data to prepare for the new segment
segmentTransmuxer.reset(this.transmuxer_);}this.gopBuffer_.length=0;this.pause();this.trigger('ended');}/**
         * Indicates which time ranges are buffered
         *
         * @return {TimeRange}
         *         TimeRange object representing the current buffered ranges
         */},{key:"buffered_",value:function buffered_(){var trackInfo=this.getMediaInfo_();if(!this.sourceUpdater_||!trackInfo){return createTimeRanges();}if(this.loaderType_==='main'){var hasAudio=trackInfo.hasAudio,hasVideo=trackInfo.hasVideo,_isMuxed=trackInfo.isMuxed;if(hasVideo&&hasAudio&&!this.audioDisabled_&&!_isMuxed){return this.sourceUpdater_.buffered();}if(hasVideo){return this.sourceUpdater_.videoBuffered();}}// One case that can be ignored for now is audio only with alt audio,
// as we don't yet have proper support for that.
return this.sourceUpdater_.audioBuffered();}/**
         * Gets and sets init segment for the provided map
         *
         * @param {Object} map
         *        The map object representing the init segment to get or set
         * @param {boolean=} set
         *        If true, the init segment for the provided map should be saved
         * @return {Object}
         *         map object for desired init segment
         */},{key:"initSegmentForMap",value:function initSegmentForMap(map){var set=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!map){return null;}var id=initSegmentId(map);var storedMap=this.initSegments_[id];if(set&&!storedMap&&map.bytes){this.initSegments_[id]=storedMap={resolvedUri:map.resolvedUri,byterange:map.byterange,bytes:map.bytes,tracks:map.tracks,timescales:map.timescales};}return storedMap||map;}/**
         * Gets and sets key for the provided key
         *
         * @param {Object} key
         *        The key object representing the key to get or set
         * @param {boolean=} set
         *        If true, the key for the provided key should be saved
         * @return {Object}
         *         Key object for desired key
         */},{key:"segmentKey",value:function segmentKey(key){var set=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!key){return null;}var id=segmentKeyId(key);var storedKey=this.keyCache_[id];// TODO: We should use the HTTP Expires header to invalidate our cache per
// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3
if(this.cacheEncryptionKeys_&&set&&!storedKey&&key.bytes){this.keyCache_[id]=storedKey={resolvedUri:key.resolvedUri,bytes:key.bytes};}var result={resolvedUri:(storedKey||key).resolvedUri};if(storedKey){result.bytes=storedKey.bytes;}return result;}/**
         * Returns true if all configuration required for loading is present, otherwise false.
         *
         * @return {boolean} True if the all configuration is ready for loading
         * @private
         */},{key:"couldBeginLoading_",value:function couldBeginLoading_(){return this.playlist_&&!this.paused();}/**
         * load a playlist and start to fill the buffer
         */},{key:"load",value:function load(){// un-pause
this.monitorBuffer_();// if we don't have a playlist yet, keep waiting for one to be
// specified
if(!this.playlist_){return;}// if all the configuration is ready, initialize and begin loading
if(this.state==='INIT'&&this.couldBeginLoading_()){return this.init_();}// if we're in the middle of processing a segment already, don't
// kick off an additional segment request
if(!this.couldBeginLoading_()||this.state!=='READY'&&this.state!=='INIT'){return;}this.state='READY';}/**
         * Once all the starting parameters have been specified, begin
         * operation. This method should only be invoked from the INIT
         * state.
         *
         * @private
         */},{key:"init_",value:function init_(){this.state='READY';// if this is the audio segment loader, and it hasn't been inited before, then any old
// audio data from the muxed content should be removed
this.resetEverything();return this.monitorBuffer_();}/**
         * set a playlist on the segment loader
         *
         * @param {PlaylistLoader} media the playlist to set on the segment loader
         */},{key:"playlist",value:function playlist(newPlaylist){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!newPlaylist){return;}var oldPlaylist=this.playlist_;var segmentInfo=this.pendingSegment_;this.playlist_=newPlaylist;this.xhrOptions_=options;// when we haven't started playing yet, the start of a live playlist
// is always our zero-time so force a sync update each time the playlist
// is refreshed from the server
//
// Use the INIT state to determine if playback has started, as the playlist sync info
// should be fixed once requests begin (as sync points are generated based on sync
// info), but not before then.
if(this.state==='INIT'){newPlaylist.syncInfo={mediaSequence:newPlaylist.mediaSequence,time:0};// Setting the date time mapping means mapping the program date time (if available)
// to time 0 on the player's timeline. The playlist's syncInfo serves a similar
// purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can
// be updated as the playlist is refreshed before the loader starts loading, the
// program date time mapping needs to be updated as well.
//
// This mapping is only done for the main loader because a program date time should
// map equivalently between playlists.
if(this.loaderType_==='main'){this.syncController_.setDateTimeMappingForStart(newPlaylist);}}var oldId=null;if(oldPlaylist){if(oldPlaylist.id){oldId=oldPlaylist.id;}else if(oldPlaylist.uri){oldId=oldPlaylist.uri;}}this.logger_("playlist update [".concat(oldId," => ").concat(newPlaylist.id||newPlaylist.uri,"]"));if(this.mediaSequenceSync_){this.mediaSequenceSync_.update(newPlaylist,this.currentTime_());this.logger_("Playlist update:\ncurrentTime: ".concat(this.currentTime_(),"\nbufferedEnd: ").concat(lastBufferedEnd(this.buffered_()),"\n"),this.mediaSequenceSync_.diagnostics);}// in VOD, this is always a rendition switch (or we updated our syncInfo above)
// in LIVE, we always want to update with new playlists (including refreshes)
this.trigger('syncinfoupdate');// if we were unpaused but waiting for a playlist, start
// buffering now
if(this.state==='INIT'&&this.couldBeginLoading_()){return this.init_();}if(!oldPlaylist||oldPlaylist.uri!==newPlaylist.uri){if(this.mediaIndex!==null){// we must reset/resync the segment loader when we switch renditions and
// the segment loader is already synced to the previous rendition
// We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_
// to false, resulting in fetching segments at currentTime and causing repeated
// same-segment requests on playlist change. This erroneously drives up the playback watcher
// stalled segment count, as re-requesting segments at the currentTime or browser cached segments
// will not change the buffer.
// Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201
var isLLHLS=!newPlaylist.endList&&typeof newPlaylist.partTargetDuration==='number';if(isLLHLS){this.resetLoader();}else{this.resyncLoader();}}this.currentMediaInfo_=void 0;this.trigger('playlistupdate');// the rest of this function depends on `oldPlaylist` being defined
return;}// we reloaded the same playlist so we are in a live scenario
// and we will likely need to adjust the mediaIndex
var mediaSequenceDiff=newPlaylist.mediaSequence-oldPlaylist.mediaSequence;this.logger_("live window shift [".concat(mediaSequenceDiff,"]"));// update the mediaIndex on the SegmentLoader
// this is important because we can abort a request and this value must be
// equal to the last appended mediaIndex
if(this.mediaIndex!==null){this.mediaIndex-=mediaSequenceDiff;// this can happen if we are going to load the first segment, but get a playlist
// update during that. mediaIndex would go from 0 to -1 if mediaSequence in the
// new playlist was incremented by 1.
if(this.mediaIndex<0){this.mediaIndex=null;this.partIndex=null;}else{var segment=this.playlist_.segments[this.mediaIndex];// partIndex should remain the same for the same segment
// unless parts fell off of the playlist for this segment.
// In that case we need to reset partIndex and resync
if(this.partIndex&&(!segment.parts||!segment.parts.length||!segment.parts[this.partIndex])){var mediaIndex=this.mediaIndex;this.logger_("currently processing part (index ".concat(this.partIndex,") no longer exists."));this.resetLoader();// We want to throw away the partIndex and the data associated with it,
// as the part was dropped from our current playlists segment.
// The mediaIndex will still be valid so keep that around.
this.mediaIndex=mediaIndex;}}}// update the mediaIndex on the SegmentInfo object
// this is important because we will update this.mediaIndex with this value
// in `handleAppendsDone_` after the segment has been successfully appended
if(segmentInfo){segmentInfo.mediaIndex-=mediaSequenceDiff;if(segmentInfo.mediaIndex<0){segmentInfo.mediaIndex=null;segmentInfo.partIndex=null;}else{// we need to update the referenced segment so that timing information is
// saved for the new playlist's segment, however, if the segment fell off the
// playlist, we can leave the old reference and just lose the timing info
if(segmentInfo.mediaIndex>=0){segmentInfo.segment=newPlaylist.segments[segmentInfo.mediaIndex];}if(segmentInfo.partIndex>=0&&segmentInfo.segment.parts){segmentInfo.part=segmentInfo.segment.parts[segmentInfo.partIndex];}}}this.syncController_.saveExpiredSegmentInfo(oldPlaylist,newPlaylist);}/**
         * Prevent the loader from fetching additional segments. If there
         * is a segment request outstanding, it will finish processing
         * before the loader halts. A segment loader can be unpaused by
         * calling load().
         */},{key:"pause",value:function pause(){if(this.checkBufferTimeout_){window_1.clearTimeout(this.checkBufferTimeout_);this.checkBufferTimeout_=null;}}/**
         * Returns whether the segment loader is fetching additional
         * segments when given the opportunity. This property can be
         * modified through calls to pause() and load().
         */},{key:"paused",value:function paused(){return this.checkBufferTimeout_===null;}/**
         * Delete all the buffered data and reset the SegmentLoader
         *
         * @param {Function} [done] an optional callback to be executed when the remove
         * operation is complete
         */},{key:"resetEverything",value:function resetEverything(done){this.ended_=false;this.activeInitSegmentId_=null;this.appendInitSegment_={audio:true,video:true};this.resetLoader();// remove from 0, the earliest point, to Infinity, to signify removal of everything.
// VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,
// we then clamp the value to duration if necessary.
this.remove(0,Infinity,done);// clears fmp4 captions
if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearAllMp4Captions'});// reset the cache in the transmuxer
this.transmuxer_.postMessage({action:'reset'});}}/**
         * Force the SegmentLoader to resync and start loading around the currentTime instead
         * of starting at the end of the buffer
         *
         * Useful for fast quality changes
         */},{key:"resetLoader",value:function resetLoader(){this.fetchAtBuffer_=false;if(this.mediaSequenceSync_){this.mediaSequenceSync_.resetAppendedStatus();}this.resyncLoader();}/**
         * Force the SegmentLoader to restart synchronization and make a conservative guess
         * before returning to the simple walk-forward method
         */},{key:"resyncLoader",value:function resyncLoader(){if(this.transmuxer_){// need to clear out any cached data to prepare for the new segment
segmentTransmuxer.reset(this.transmuxer_);}this.mediaIndex=null;this.partIndex=null;this.syncPoint_=null;this.isPendingTimestampOffset_=false;// this is mainly to sync timing-info when switching between renditions with and without timestamp-rollover,
// so we don't want it for DASH or fragmented mp4 segments.
var isFmp4=this.currentMediaInfo_&&this.currentMediaInfo_.isFmp4;var isHlsTs=this.sourceType_==='hls'&&!isFmp4;if(isHlsTs){this.shouldForceTimestampOffsetAfterResync_=true;}this.callQueue_=[];this.loadQueue_=[];this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];this.abort();if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearParsedMp4Captions'});}}/**
         * Remove any data in the source buffer between start and end times
         *
         * @param {number} start - the start time of the region to remove from the buffer
         * @param {number} end - the end time of the region to remove from the buffer
         * @param {Function} [done] - an optional callback to be executed when the remove
         * @param {boolean} force - force all remove operations to happen
         * operation is complete
         */},{key:"remove",value:function remove(start,end){var done=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(){};var force=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// clamp end to duration if we need to remove everything.
// This is due to a browser bug that causes issues if we remove to Infinity.
// videojs/videojs-contrib-hls#1225
if(end===Infinity){end=this.duration_();}// skip removes that would throw an error
// commonly happens during a rendition switch at the start of a video
// from start 0 to end 0
if(end<=start){this.logger_('skipping remove because end ${end} is <= start ${start}');return;}if(!this.sourceUpdater_||!this.getMediaInfo_()){this.logger_('skipping remove because no source updater or starting media info');// nothing to remove if we haven't processed any media
return;}// set it to one to complete this function's removes
var removesRemaining=1;var removeFinished=function removeFinished(){removesRemaining--;if(removesRemaining===0){done();}};if(force||!this.audioDisabled_){removesRemaining++;this.sourceUpdater_.removeAudio(start,end,removeFinished);}// While it would be better to only remove video if the main loader has video, this
// should be safe with audio only as removeVideo will call back even if there's no
// video buffer.
//
// In theory we can check to see if there's video before calling the remove, but in
// the event that we're switching between renditions and from video to audio only
// (when we add support for that), we may need to clear the video contents despite
// what the new media will contain.
if(force||this.loaderType_==='main'){this.gopBuffer_=removeGopBuffer(this.gopBuffer_,start,end,this.timeMapping_);removesRemaining++;this.sourceUpdater_.removeVideo(start,end,removeFinished);}// remove any captions and ID3 tags
for(var track in this.inbandTextTracks_){removeCuesFromTrack(start,end,this.inbandTextTracks_[track]);}removeCuesFromTrack(start,end,this.segmentMetadataTrack_);// finished this function's removes
removeFinished();}/**
         * (re-)schedule monitorBufferTick_ to run as soon as possible
         *
         * @private
         */},{key:"monitorBuffer_",value:function monitorBuffer_(){if(this.checkBufferTimeout_){window_1.clearTimeout(this.checkBufferTimeout_);}this.checkBufferTimeout_=window_1.setTimeout(this.monitorBufferTick_.bind(this),1);}/**
         * As long as the SegmentLoader is in the READY state, periodically
         * invoke fillBuffer_().
         *
         * @private
         */},{key:"monitorBufferTick_",value:function monitorBufferTick_(){if(this.state==='READY'){this.fillBuffer_();}if(this.checkBufferTimeout_){window_1.clearTimeout(this.checkBufferTimeout_);}this.checkBufferTimeout_=window_1.setTimeout(this.monitorBufferTick_.bind(this),CHECK_BUFFER_DELAY);}/**
         * fill the buffer with segements unless the sourceBuffers are
         * currently updating
         *
         * Note: this function should only ever be called by monitorBuffer_
         * and never directly
         *
         * @private
         */},{key:"fillBuffer_",value:function fillBuffer_(){// TODO since the source buffer maintains a queue, and we shouldn't call this function
// except when we're ready for the next segment, this check can most likely be removed
if(this.sourceUpdater_.updating()){return;}// see if we need to begin loading immediately
var segmentInfo=this.chooseNextRequest_();if(!segmentInfo){return;}if(typeof segmentInfo.timestampOffset==='number'){this.isPendingTimestampOffset_=false;this.timelineChangeController_.pendingTimelineChange({type:this.loaderType_,from:this.currentTimeline_,to:segmentInfo.timeline});}this.loadSegment_(segmentInfo);}/**
         * Determines if we should call endOfStream on the media source based
         * on the state of the buffer or if appened segment was the final
         * segment in the playlist.
         *
         * @param {number} [mediaIndex] the media index of segment we last appended
         * @param {Object} [playlist] a media playlist object
         * @return {boolean} do we need to call endOfStream on the MediaSource
         */},{key:"isEndOfStream_",value:function isEndOfStream_(){var mediaIndex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.mediaIndex;var playlist=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.playlist_;var partIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.partIndex;if(!playlist||!this.mediaSource_){return false;}var segment=typeof mediaIndex==='number'&&playlist.segments[mediaIndex];// mediaIndex is zero based but length is 1 based
var appendedLastSegment=mediaIndex+1===playlist.segments.length;// true if there are no parts, or this is the last part.
var appendedLastPart=!segment||!segment.parts||partIndex+1===segment.parts.length;// if we've buffered to the end of the video, we need to call endOfStream
// so that MediaSources can trigger the `ended` event when it runs out of
// buffered data instead of waiting for me
return playlist.endList&&this.mediaSource_.readyState==='open'&&appendedLastSegment&&appendedLastPart;}/**
         * Determines what request should be made given current segment loader state.
         *
         * @return {Object} a request object that describes the segment/part to load
         */},{key:"chooseNextRequest_",value:function chooseNextRequest_(){var buffered=this.buffered_();var bufferedEnd=lastBufferedEnd(buffered)||0;var bufferedTime=timeAheadOf(buffered,this.currentTime_());var preloaded=!this.hasPlayed_()&&bufferedTime>=1;var haveEnoughBuffer=bufferedTime>=this.goalBufferLength_();var segments=this.playlist_.segments;// return no segment if:
// 1. we don't have segments
// 2. The video has not yet played and we already downloaded a segment
// 3. we already have enough buffered time
if(!segments.length||preloaded||haveEnoughBuffer){return null;}this.syncPoint_=this.syncPoint_||this.syncController_.getSyncPoint(this.playlist_,this.duration_(),this.currentTimeline_,this.currentTime_(),this.loaderType_);var next={partIndex:null,mediaIndex:null,startOfSegment:null,playlist:this.playlist_,isSyncRequest:Boolean(!this.syncPoint_)};if(next.isSyncRequest){next.mediaIndex=getSyncSegmentCandidate(this.currentTimeline_,segments,bufferedEnd);this.logger_("choose next request. Can not find sync point. Fallback to media Index: ".concat(next.mediaIndex));}else if(this.mediaIndex!==null){var segment=segments[this.mediaIndex];var partIndex=typeof this.partIndex==='number'?this.partIndex:-1;next.startOfSegment=segment.end?segment.end:bufferedEnd;if(segment.parts&&segment.parts[partIndex+1]){next.mediaIndex=this.mediaIndex;next.partIndex=partIndex+1;}else{next.mediaIndex=this.mediaIndex+1;}}else{var segmentIndex;var _partIndex;var startTime;var targetTime=this.fetchAtBuffer_?bufferedEnd:this.currentTime_();if(this.mediaSequenceSync_){this.logger_("chooseNextRequest_ request after Quality Switch:\nFor TargetTime: ".concat(targetTime,".\nCurrentTime: ").concat(this.currentTime_(),"\nBufferedEnd: ").concat(bufferedEnd,"\nFetch At Buffer: ").concat(this.fetchAtBuffer_,"\n"),this.mediaSequenceSync_.diagnostics);}if(this.mediaSequenceSync_&&this.mediaSequenceSync_.isReliable){var syncInfo=this.getSyncInfoFromMediaSequenceSync_(targetTime);if(!syncInfo){this.logger_('chooseNextRequest_ - no sync info found using media sequence sync');// no match
return null;}this.logger_("chooseNextRequest_ mediaSequence syncInfo (".concat(syncInfo.start," --> ").concat(syncInfo.end,")"));segmentIndex=syncInfo.segmentIndex;_partIndex=syncInfo.partIndex;startTime=syncInfo.start;}else{this.logger_('chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.');// fallback
var mediaInfoForTime=Playlist.getMediaInfoForTime({exactManifestTimings:this.exactManifestTimings,playlist:this.playlist_,currentTime:targetTime,startingPartIndex:this.syncPoint_.partIndex,startingSegmentIndex:this.syncPoint_.segmentIndex,startTime:this.syncPoint_.time});segmentIndex=mediaInfoForTime.segmentIndex;_partIndex=mediaInfoForTime.partIndex;startTime=mediaInfoForTime.startTime;}next.getMediaInfoForTime=this.fetchAtBuffer_?"bufferedEnd ".concat(targetTime):"currentTime ".concat(targetTime);next.mediaIndex=segmentIndex;next.startOfSegment=startTime;next.partIndex=_partIndex;this.logger_("choose next request. Playlist switched and we have a sync point. Media Index: ".concat(next.mediaIndex," "));}var nextSegment=segments[next.mediaIndex];var nextPart=nextSegment&&typeof next.partIndex==='number'&&nextSegment.parts&&nextSegment.parts[next.partIndex];// if the next segment index is invalid or
// the next partIndex is invalid do not choose a next segment.
if(!nextSegment||typeof next.partIndex==='number'&&!nextPart){return null;}// if the next segment has parts, and we don't have a partIndex.
// Set partIndex to 0
if(typeof next.partIndex!=='number'&&nextSegment.parts){next.partIndex=0;nextPart=nextSegment.parts[0];}// independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,
// it applies to each segment in each media playlist.
// https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1
var hasIndependentSegments=this.vhs_.playlists&&this.vhs_.playlists.main&&this.vhs_.playlists.main.independentSegments||this.playlist_.independentSegments;// if we have no buffered data then we need to make sure
// that the next part we append is "independent" if possible.
// So we check if the previous part is independent, and request
// it if it is.
if(!bufferedTime&&nextPart&&!hasIndependentSegments&&!nextPart.independent){if(next.partIndex===0){var lastSegment=segments[next.mediaIndex-1];var lastSegmentLastPart=lastSegment.parts&&lastSegment.parts.length&&lastSegment.parts[lastSegment.parts.length-1];if(lastSegmentLastPart&&lastSegmentLastPart.independent){next.mediaIndex-=1;next.partIndex=lastSegment.parts.length-1;next.independent='previous segment';}}else if(nextSegment.parts[next.partIndex-1].independent){next.partIndex-=1;next.independent='previous part';}}var ended=this.mediaSource_&&this.mediaSource_.readyState==='ended';// do not choose a next segment if all of the following:
// 1. this is the last segment in the playlist
// 2. end of stream has been called on the media source already
// 3. the player is not seeking
if(next.mediaIndex>=segments.length-1&&ended&&!this.seeking_()){return null;}if(this.shouldForceTimestampOffsetAfterResync_){this.shouldForceTimestampOffsetAfterResync_=false;next.forceTimestampOffset=true;this.logger_('choose next request. Force timestamp offset after loader resync');}return this.generateSegmentInfo_(next);}},{key:"getSyncInfoFromMediaSequenceSync_",value:function getSyncInfoFromMediaSequenceSync_(targetTime){if(!this.mediaSequenceSync_){return null;}// we should pull the target time to the least available time if we drop out of sync for any reason
var finalTargetTime=Math.max(targetTime,this.mediaSequenceSync_.start);if(targetTime!==finalTargetTime){this.logger_("getSyncInfoFromMediaSequenceSync_. Pulled target time from ".concat(targetTime," to ").concat(finalTargetTime));}var mediaSequenceSyncInfo=this.mediaSequenceSync_.getSyncInfoForTime(finalTargetTime);if(!mediaSequenceSyncInfo){// no match at all
return null;}if(!mediaSequenceSyncInfo.isAppended){// has a perfect match
return mediaSequenceSyncInfo;}// has match, but segment was already appended.
// attempt to auto-advance to the nearest next segment:
var nextMediaSequenceSyncInfo=this.mediaSequenceSync_.getSyncInfoForTime(mediaSequenceSyncInfo.end);if(!nextMediaSequenceSyncInfo){// no match at all
return null;}if(nextMediaSequenceSyncInfo.isAppended){this.logger_('getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!');}// got match with the nearest next segment
return nextMediaSequenceSyncInfo;}},{key:"generateSegmentInfo_",value:function generateSegmentInfo_(options){var independent=options.independent,playlist=options.playlist,mediaIndex=options.mediaIndex,startOfSegment=options.startOfSegment,isSyncRequest=options.isSyncRequest,partIndex=options.partIndex,forceTimestampOffset=options.forceTimestampOffset,getMediaInfoForTime=options.getMediaInfoForTime;var segment=playlist.segments[mediaIndex];var part=typeof partIndex==='number'&&segment.parts[partIndex];var segmentInfo={requestId:'segment-loader-'+Math.random(),// resolve the segment URL relative to the playlist
uri:part&&part.resolvedUri||segment.resolvedUri,// the segment's mediaIndex at the time it was requested
mediaIndex:mediaIndex,partIndex:part?partIndex:null,// whether or not to update the SegmentLoader's state with this
// segment's mediaIndex
isSyncRequest:isSyncRequest,startOfSegment:startOfSegment,// the segment's playlist
playlist:playlist,// unencrypted bytes of the segment
bytes:null,// when a key is defined for this segment, the encrypted bytes
encryptedBytes:null,// The target timestampOffset for this segment when we append it
// to the source buffer
timestampOffset:null,// The timeline that the segment is in
timeline:segment.timeline,// The expected duration of the segment in seconds
duration:part&&part.duration||segment.duration,// retain the segment in case the playlist updates while doing an async process
segment:segment,part:part,byteLength:0,transmuxer:this.transmuxer_,// type of getMediaInfoForTime that was used to get this segment
getMediaInfoForTime:getMediaInfoForTime,independent:independent};var overrideCheck=typeof forceTimestampOffset!=='undefined'?forceTimestampOffset:this.isPendingTimestampOffset_;segmentInfo.timestampOffset=this.timestampOffsetForSegment_({segmentTimeline:segment.timeline,currentTimeline:this.currentTimeline_,startOfSegment:startOfSegment,buffered:this.buffered_(),overrideCheck:overrideCheck});var audioBufferedEnd=lastBufferedEnd(this.sourceUpdater_.audioBuffered());if(typeof audioBufferedEnd==='number'){// since the transmuxer is using the actual timing values, but the buffer is
// adjusted by the timestamp offset, we must adjust the value here
segmentInfo.audioAppendStart=audioBufferedEnd-this.sourceUpdater_.audioTimestampOffset();}if(this.sourceUpdater_.videoBuffered().length){segmentInfo.gopsToAlignWith=gopsSafeToAlignWith(this.gopBuffer_,// since the transmuxer is using the actual timing values, but the time is
// adjusted by the timestmap offset, we must adjust the value here
this.currentTime_()-this.sourceUpdater_.videoTimestampOffset(),this.timeMapping_);}return segmentInfo;}// get the timestampoffset for a segment,
// added so that vtt segment loader can override and prevent
// adding timestamp offsets.
},{key:"timestampOffsetForSegment_",value:function timestampOffsetForSegment_(options){return timestampOffsetForSegment(options);}/**
         * Determines if the network has enough bandwidth to complete the current segment
         * request in a timely manner. If not, the request will be aborted early and bandwidth
         * updated to trigger a playlist switch.
         *
         * @param {Object} stats
         *        Object containing stats about the request timing and size
         * @private
         */},{key:"earlyAbortWhenNeeded_",value:function earlyAbortWhenNeeded_(stats){if(this.vhs_.tech_.paused()||// Don't abort if the current playlist is on the lowestEnabledRendition
// TODO: Replace using timeout with a boolean indicating whether this playlist is
//       the lowestEnabledRendition.
!this.xhrOptions_.timeout||// Don't abort if we have no bandwidth information to estimate segment sizes
!this.playlist_.attributes.BANDWIDTH){return;}// Wait at least 1 second since the first byte of data has been received before
// using the calculated bandwidth from the progress event to allow the bitrate
// to stabilize
if(Date.now()-(stats.firstBytesReceivedAt||Date.now())<1000){return;}var currentTime=this.currentTime_();var measuredBandwidth=stats.bandwidth;var segmentDuration=this.pendingSegment_.duration;var requestTimeRemaining=Playlist.estimateSegmentRequestTime(segmentDuration,measuredBandwidth,this.playlist_,stats.bytesReceived);// Subtract 1 from the timeUntilRebuffer so we still consider an early abort
// if we are only left with less than 1 second when the request completes.
// A negative timeUntilRebuffering indicates we are already rebuffering
var timeUntilRebuffer$1=timeUntilRebuffer(this.buffered_(),currentTime,this.vhs_.tech_.playbackRate())-1;// Only consider aborting early if the estimated time to finish the download
// is larger than the estimated time until the player runs out of forward buffer
if(requestTimeRemaining<=timeUntilRebuffer$1){return;}var switchCandidate=minRebufferMaxBandwidthSelector({main:this.vhs_.playlists.main,currentTime:currentTime,bandwidth:measuredBandwidth,duration:this.duration_(),segmentDuration:segmentDuration,timeUntilRebuffer:timeUntilRebuffer$1,currentTimeline:this.currentTimeline_,syncController:this.syncController_});if(!switchCandidate){return;}var rebufferingImpact=requestTimeRemaining-timeUntilRebuffer$1;var timeSavedBySwitching=rebufferingImpact-switchCandidate.rebufferingImpact;var minimumTimeSaving=0.5;// If we are already rebuffering, increase the amount of variance we add to the
// potential round trip time of the new request so that we are not too aggressive
// with switching to a playlist that might save us a fraction of a second.
if(timeUntilRebuffer$1<=TIME_FUDGE_FACTOR){minimumTimeSaving=1;}if(!switchCandidate.playlist||switchCandidate.playlist.uri===this.playlist_.uri||timeSavedBySwitching<minimumTimeSaving){return;}// set the bandwidth to that of the desired playlist being sure to scale by
// BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it
// don't trigger a bandwidthupdate as the bandwidth is artifial
this.bandwidth=switchCandidate.playlist.attributes.BANDWIDTH*Config.BANDWIDTH_VARIANCE+1;this.trigger('earlyabort');}},{key:"handleAbort_",value:function handleAbort_(segmentInfo){this.logger_("Aborting ".concat(segmentInfoString(segmentInfo)));this.mediaRequestsAborted+=1;}/**
         * XHR `progress` event handler
         *
         * @param {Event}
         *        The XHR `progress` event
         * @param {Object} simpleSegment
         *        A simplified segment object copy
         * @private
         */},{key:"handleProgress_",value:function handleProgress_(event,simpleSegment){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}this.trigger('progress');}},{key:"handleTrackInfo_",value:function handleTrackInfo_(simpleSegment,trackInfo){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}if(this.checkForIllegalMediaSwitch(trackInfo)){return;}trackInfo=trackInfo||{};// When we have track info, determine what media types this loader is dealing with.
// Guard against cases where we're not getting track info at all until we are
// certain that all streams will provide it.
if(!shallowEqual(this.currentMediaInfo_,trackInfo)){this.appendInitSegment_={audio:true,video:true};this.startingMediaInfo_=trackInfo;this.currentMediaInfo_=trackInfo;this.logger_('trackinfo update',trackInfo);this.trigger('trackinfo');}// trackinfo may cause an abort if the trackinfo
// causes a codec change to an unsupported codec.
if(this.checkForAbort_(simpleSegment.requestId)){return;}// set trackinfo on the pending segment so that
// it can append.
this.pendingSegment_.trackInfo=trackInfo;// check if any calls were waiting on the track info
if(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}}},{key:"handleTimingInfo_",value:function handleTimingInfo_(simpleSegment,mediaType,timeType,time){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}var segmentInfo=this.pendingSegment_;var timingInfoProperty=timingInfoPropertyForMedia(mediaType);segmentInfo[timingInfoProperty]=segmentInfo[timingInfoProperty]||{};segmentInfo[timingInfoProperty][timeType]=time;this.logger_("timinginfo: ".concat(mediaType," - ").concat(timeType," - ").concat(time));// check if any calls were waiting on the timing info
if(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}}},{key:"handleCaptions_",value:function handleCaptions_(simpleSegment,captionData){var _this200=this;this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}// This could only happen with fmp4 segments, but
// should still not happen in general
if(captionData.length===0){this.logger_('SegmentLoader received no captions from a caption event');return;}var segmentInfo=this.pendingSegment_;// Wait until we have some video data so that caption timing
// can be adjusted by the timestamp offset
if(!segmentInfo.hasAppendedData_){this.metadataQueue_.caption.push(this.handleCaptions_.bind(this,simpleSegment,captionData));return;}var timestampOffset=this.sourceUpdater_.videoTimestampOffset()===null?this.sourceUpdater_.audioTimestampOffset():this.sourceUpdater_.videoTimestampOffset();var captionTracks={};// get total start/end and captions for each track/stream
captionData.forEach(function(caption){// caption.stream is actually a track name...
// set to the existing values in tracks or default values
captionTracks[caption.stream]=captionTracks[caption.stream]||{// Infinity, as any other value will be less than this
startTime:Infinity,captions:[],// 0 as an other value will be more than this
endTime:0};var captionTrack=captionTracks[caption.stream];captionTrack.startTime=Math.min(captionTrack.startTime,caption.startTime+timestampOffset);captionTrack.endTime=Math.max(captionTrack.endTime,caption.endTime+timestampOffset);captionTrack.captions.push(caption);});Object.keys(captionTracks).forEach(function(trackName){var _captionTracks$trackN=captionTracks[trackName],startTime=_captionTracks$trackN.startTime,endTime=_captionTracks$trackN.endTime,captions=_captionTracks$trackN.captions;var inbandTextTracks=_this200.inbandTextTracks_;_this200.logger_("adding cues from ".concat(startTime," -> ").concat(endTime," for ").concat(trackName));createCaptionsTrackIfNotExists(inbandTextTracks,_this200.vhs_.tech_,trackName);// clear out any cues that start and end at the same time period for the same track.
// We do this because a rendition change that also changes the timescale for captions
// will result in captions being re-parsed for certain segments. If we add them again
// without clearing we will have two of the same captions visible.
removeCuesFromTrack(startTime,endTime,inbandTextTracks[trackName]);addCaptionData({captionArray:captions,inbandTextTracks:inbandTextTracks,timestampOffset:timestampOffset});});// Reset stored captions since we added parsed
// captions to a text track at this point
if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearParsedMp4Captions'});}}},{key:"handleId3_",value:function handleId3_(simpleSegment,id3Frames,dispatchType){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}var segmentInfo=this.pendingSegment_;// we need to have appended data in order for the timestamp offset to be set
if(!segmentInfo.hasAppendedData_){this.metadataQueue_.id3.push(this.handleId3_.bind(this,simpleSegment,id3Frames,dispatchType));return;}this.addMetadataToTextTrack(dispatchType,id3Frames,this.duration_());}},{key:"processMetadataQueue_",value:function processMetadataQueue_(){this.metadataQueue_.id3.forEach(function(fn){return fn();});this.metadataQueue_.caption.forEach(function(fn){return fn();});this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];}},{key:"processCallQueue_",value:function processCallQueue_(){var callQueue=this.callQueue_;// Clear out the queue before the queued functions are run, since some of the
// functions may check the length of the load queue and default to pushing themselves
// back onto the queue.
this.callQueue_=[];callQueue.forEach(function(fun){return fun();});}},{key:"processLoadQueue_",value:function processLoadQueue_(){var loadQueue=this.loadQueue_;// Clear out the queue before the queued functions are run, since some of the
// functions may check the length of the load queue and default to pushing themselves
// back onto the queue.
this.loadQueue_=[];loadQueue.forEach(function(fun){return fun();});}/**
         * Determines whether the loader has enough info to load the next segment.
         *
         * @return {boolean}
         *         Whether or not the loader has enough info to load the next segment
         */},{key:"hasEnoughInfoToLoad_",value:function hasEnoughInfoToLoad_(){// Since primary timing goes by video, only the audio loader potentially needs to wait
// to load.
if(this.loaderType_!=='audio'){return true;}var segmentInfo=this.pendingSegment_;// A fill buffer must have already run to establish a pending segment before there's
// enough info to load.
if(!segmentInfo){return false;}// The first segment can and should be loaded immediately so that source buffers are
// created together (before appending). Source buffer creation uses the presence of
// audio and video data to determine whether to create audio/video source buffers, and
// uses processed (transmuxed or parsed) media to determine the types required.
if(!this.getCurrentMediaInfo_()){return true;}if(// Technically, instead of waiting to load a segment on timeline changes, a segment
// can be requested and downloaded and only wait before it is transmuxed or parsed.
// But in practice, there are a few reasons why it is better to wait until a loader
// is ready to append that segment before requesting and downloading:
//
// 1. Because audio and main loaders cross discontinuities together, if this loader
//    is waiting for the other to catch up, then instead of requesting another
//    segment and using up more bandwidth, by not yet loading, more bandwidth is
//    allotted to the loader currently behind.
// 2. media-segment-request doesn't have to have logic to consider whether a segment
// is ready to be processed or not, isolating the queueing behavior to the loader.
// 3. The audio loader bases some of its segment properties on timing information
//    provided by the main loader, meaning that, if the logic for waiting on
//    processing was in media-segment-request, then it would also need to know how
//    to re-generate the segment information after the main loader caught up.
shouldWaitForTimelineChange({timelineChangeController:this.timelineChangeController_,currentTimeline:this.currentTimeline_,segmentTimeline:segmentInfo.timeline,loaderType:this.loaderType_,audioDisabled:this.audioDisabled_})){return false;}return true;}},{key:"getCurrentMediaInfo_",value:function getCurrentMediaInfo_(){var segmentInfo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.pendingSegment_;return segmentInfo&&segmentInfo.trackInfo||this.currentMediaInfo_;}},{key:"getMediaInfo_",value:function getMediaInfo_(){var segmentInfo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.pendingSegment_;return this.getCurrentMediaInfo_(segmentInfo)||this.startingMediaInfo_;}},{key:"getPendingSegmentPlaylist",value:function getPendingSegmentPlaylist(){return this.pendingSegment_?this.pendingSegment_.playlist:null;}},{key:"hasEnoughInfoToAppend_",value:function hasEnoughInfoToAppend_(){if(!this.sourceUpdater_.ready()){return false;}// If content needs to be removed or the loader is waiting on an append reattempt,
// then no additional content should be appended until the prior append is resolved.
if(this.waitingOnRemove_||this.quotaExceededErrorRetryTimeout_){return false;}var segmentInfo=this.pendingSegment_;var trackInfo=this.getCurrentMediaInfo_();// no segment to append any data for or
// we do not have information on this specific
// segment yet
if(!segmentInfo||!trackInfo){return false;}var hasAudio=trackInfo.hasAudio,hasVideo=trackInfo.hasVideo,isMuxed=trackInfo.isMuxed;if(hasVideo&&!segmentInfo.videoTimingInfo){return false;}// muxed content only relies on video timing information for now.
if(hasAudio&&!this.audioDisabled_&&!isMuxed&&!segmentInfo.audioTimingInfo){return false;}if(shouldWaitForTimelineChange({timelineChangeController:this.timelineChangeController_,currentTimeline:this.currentTimeline_,segmentTimeline:segmentInfo.timeline,loaderType:this.loaderType_,audioDisabled:this.audioDisabled_})){return false;}return true;}},{key:"handleData_",value:function handleData_(simpleSegment,result){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}// If there's anything in the call queue, then this data came later and should be
// executed after the calls currently queued.
if(this.callQueue_.length||!this.hasEnoughInfoToAppend_()){this.callQueue_.push(this.handleData_.bind(this,simpleSegment,result));return;}var segmentInfo=this.pendingSegment_;// update the time mapping so we can translate from display time to media time
this.setTimeMapping_(segmentInfo.timeline);// for tracking overall stats
this.updateMediaSecondsLoaded_(segmentInfo.part||segmentInfo.segment);// Note that the state isn't changed from loading to appending. This is because abort
// logic may change behavior depending on the state, and changing state too early may
// inflate our estimates of bandwidth. In the future this should be re-examined to
// note more granular states.
// don't process and append data if the mediaSource is closed
if(this.mediaSource_.readyState==='closed'){return;}// if this request included an initialization segment, save that data
// to the initSegment cache
if(simpleSegment.map){simpleSegment.map=this.initSegmentForMap(simpleSegment.map,true);// move over init segment properties to media request
segmentInfo.segment.map=simpleSegment.map;}// if this request included a segment key, save that data in the cache
if(simpleSegment.key){this.segmentKey(simpleSegment.key,true);}segmentInfo.isFmp4=simpleSegment.isFmp4;segmentInfo.timingInfo=segmentInfo.timingInfo||{};if(segmentInfo.isFmp4){this.trigger('fmp4');segmentInfo.timingInfo.start=segmentInfo[timingInfoPropertyForMedia(result.type)].start;}else{var trackInfo=this.getCurrentMediaInfo_();var useVideoTimingInfo=this.loaderType_==='main'&&trackInfo&&trackInfo.hasVideo;var firstVideoFrameTimeForData;if(useVideoTimingInfo){firstVideoFrameTimeForData=segmentInfo.videoTimingInfo.start;}// Segment loader knows more about segment timing than the transmuxer (in certain
// aspects), so make any changes required for a more accurate start time.
// Don't set the end time yet, as the segment may not be finished processing.
segmentInfo.timingInfo.start=this.trueSegmentStart_({currentStart:segmentInfo.timingInfo.start,playlist:segmentInfo.playlist,mediaIndex:segmentInfo.mediaIndex,currentVideoTimestampOffset:this.sourceUpdater_.videoTimestampOffset(),useVideoTimingInfo:useVideoTimingInfo,firstVideoFrameTimeForData:firstVideoFrameTimeForData,videoTimingInfo:segmentInfo.videoTimingInfo,audioTimingInfo:segmentInfo.audioTimingInfo});}// Init segments for audio and video only need to be appended in certain cases. Now
// that data is about to be appended, we can check the final cases to determine
// whether we should append an init segment.
this.updateAppendInitSegmentStatus(segmentInfo,result.type);// Timestamp offset should be updated once we get new data and have its timing info,
// as we use the start of the segment to offset the best guess (playlist provided)
// timestamp offset.
this.updateSourceBufferTimestampOffset_(segmentInfo);// if this is a sync request we need to determine whether it should
// be appended or not.
if(segmentInfo.isSyncRequest){// first save/update our timing info for this segment.
// this is what allows us to choose an accurate segment
// and the main reason we make a sync request.
this.updateTimingInfoEnd_(segmentInfo);this.syncController_.saveSegmentTimingInfo({segmentInfo:segmentInfo,shouldSaveTimelineMapping:this.loaderType_==='main'});var _next6=this.chooseNextRequest_();// If the sync request isn't the segment that would be requested next
// after taking into account its timing info, do not append it.
if(_next6.mediaIndex!==segmentInfo.mediaIndex||_next6.partIndex!==segmentInfo.partIndex){this.logger_('sync segment was incorrect, not appending');return;}// otherwise append it like any other segment as our guess was correct.
this.logger_('sync segment was correct, appending');}// Save some state so that in the future anything waiting on first append (and/or
// timestamp offset(s)) can process immediately. While the extra state isn't optimal,
// we need some notion of whether the timestamp offset or other relevant information
// has had a chance to be set.
segmentInfo.hasAppendedData_=true;// Now that the timestamp offset should be set, we can append any waiting ID3 tags.
this.processMetadataQueue_();this.appendData_(segmentInfo,result);}},{key:"updateAppendInitSegmentStatus",value:function updateAppendInitSegmentStatus(segmentInfo,type){// alt audio doesn't manage timestamp offset
if(this.loaderType_==='main'&&typeof segmentInfo.timestampOffset==='number'&&// in the case that we're handling partial data, we don't want to append an init
// segment for each chunk
!segmentInfo.changedTimestampOffset){// if the timestamp offset changed, the timeline may have changed, so we have to re-
// append init segments
this.appendInitSegment_={audio:true,video:true};}if(this.playlistOfLastInitSegment_[type]!==segmentInfo.playlist){// make sure we append init segment on playlist changes, in case the media config
// changed
this.appendInitSegment_[type]=true;}}},{key:"getInitSegmentAndUpdateState_",value:function getInitSegmentAndUpdateState_(_ref203){var type=_ref203.type,initSegment=_ref203.initSegment,map=_ref203.map,playlist=_ref203.playlist;// "The EXT-X-MAP tag specifies how to obtain the Media Initialization Section
// (Section 3) required to parse the applicable Media Segments.  It applies to every
// Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag
// or until the end of the playlist."
// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5
if(map){var id=initSegmentId(map);if(this.activeInitSegmentId_===id){// don't need to re-append the init segment if the ID matches
return null;}// a map-specified init segment takes priority over any transmuxed (or otherwise
// obtained) init segment
//
// this also caches the init segment for later use
initSegment=this.initSegmentForMap(map,true).bytes;this.activeInitSegmentId_=id;}// We used to always prepend init segments for video, however, that shouldn't be
// necessary. Instead, we should only append on changes, similar to what we've always
// done for audio. This is more important (though may not be that important) for
// frame-by-frame appending for LHLS, simply because of the increased quantity of
// appends.
if(initSegment&&this.appendInitSegment_[type]){// Make sure we track the playlist that we last used for the init segment, so that
// we can re-append the init segment in the event that we get data from a new
// playlist. Discontinuities and track changes are handled in other sections.
this.playlistOfLastInitSegment_[type]=playlist;// Disable future init segment appends for this type. Until a change is necessary.
this.appendInitSegment_[type]=false;// we need to clear out the fmp4 active init segment id, since
// we are appending the muxer init segment
this.activeInitSegmentId_=null;return initSegment;}return null;}},{key:"handleQuotaExceededError_",value:function handleQuotaExceededError_(_ref204,error){var _this201=this;var segmentInfo=_ref204.segmentInfo,type=_ref204.type,bytes=_ref204.bytes;var audioBuffered=this.sourceUpdater_.audioBuffered();var videoBuffered=this.sourceUpdater_.videoBuffered();// For now we're ignoring any notion of gaps in the buffer, but they, in theory,
// should be cleared out during the buffer removals. However, log in case it helps
// debug.
if(audioBuffered.length>1){this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: '+timeRangesToArray(audioBuffered).join(', '));}if(videoBuffered.length>1){this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: '+timeRangesToArray(videoBuffered).join(', '));}var audioBufferStart=audioBuffered.length?audioBuffered.start(0):0;var audioBufferEnd=audioBuffered.length?audioBuffered.end(audioBuffered.length-1):0;var videoBufferStart=videoBuffered.length?videoBuffered.start(0):0;var videoBufferEnd=videoBuffered.length?videoBuffered.end(videoBuffered.length-1):0;if(audioBufferEnd-audioBufferStart<=MIN_BACK_BUFFER&&videoBufferEnd-videoBufferStart<=MIN_BACK_BUFFER){// Can't remove enough buffer to make room for new segment (or the browser doesn't
// allow for appends of segments this size). In the future, it may be possible to
// split up the segment and append in pieces, but for now, error out this playlist
// in an attempt to switch to a more manageable rendition.
this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to '+'buffer, triggering an error. '+"Appended byte length: ".concat(bytes.byteLength,", ")+"audio buffer: ".concat(timeRangesToArray(audioBuffered).join(', '),", ")+"video buffer: ".concat(timeRangesToArray(videoBuffered).join(', '),", "));this.error({message:'Quota exceeded error with append of a single segment of content',excludeUntil:Infinity,metadata:{errorType:videojs.Error.SegmentExceedsSourceBufferQuota}});this.trigger('error');return;}// To try to resolve the quota exceeded error, clear back buffer and retry. This means
// that the segment-loader should block on future events until this one is handled, so
// that it doesn't keep moving onto further segments. Adding the call to the call
// queue will prevent further appends until waitingOnRemove_ and
// quotaExceededErrorRetryTimeout_ are cleared.
//
// Note that this will only block the current loader. In the case of demuxed content,
// the other load may keep filling as fast as possible. In practice, this should be
// OK, as it is a rare case when either audio has a high enough bitrate to fill up a
// source buffer, or video fills without enough room for audio to append (and without
// the availability of clearing out seconds of back buffer to make room for audio).
// But it might still be good to handle this case in the future as a TODO.
this.waitingOnRemove_=true;this.callQueue_.push(this.appendToSourceBuffer_.bind(this,{segmentInfo:segmentInfo,type:type,bytes:bytes}));var currentTime=this.currentTime_();// Try to remove as much audio and video as possible to make room for new content
// before retrying.
var timeToRemoveUntil=currentTime-MIN_BACK_BUFFER;this.logger_("On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ".concat(timeToRemoveUntil));this.remove(0,timeToRemoveUntil,function(){_this201.logger_("On QUOTA_EXCEEDED_ERR, retrying append in ".concat(MIN_BACK_BUFFER,"s"));_this201.waitingOnRemove_=false;// wait the length of time alotted in the back buffer to prevent wasted
// attempts (since we can't clear less than the minimum)
_this201.quotaExceededErrorRetryTimeout_=window_1.setTimeout(function(){_this201.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');_this201.quotaExceededErrorRetryTimeout_=null;_this201.processCallQueue_();},MIN_BACK_BUFFER*1000);},true);}},{key:"handleAppendError_",value:function handleAppendError_(_ref205,error){var segmentInfo=_ref205.segmentInfo,type=_ref205.type,bytes=_ref205.bytes;// if there's no error, nothing to do
if(!error){return;}if(error.code===QUOTA_EXCEEDED_ERR){this.handleQuotaExceededError_({segmentInfo:segmentInfo,type:type,bytes:bytes});// A quota exceeded error should be recoverable with a future re-append, so no need
// to trigger an append error.
return;}this.logger_('Received non QUOTA_EXCEEDED_ERR on append',error);// If an append errors, we often can't recover.
// (see https://w3c.github.io/media-source/#sourcebuffer-append-error).
//
// Trigger a special error so that it can be handled separately from normal,
// recoverable errors.
this.error({message:"".concat(type," append of ").concat(bytes.length,"b failed for segment ")+"#".concat(segmentInfo.mediaIndex," in playlist ").concat(segmentInfo.playlist.id),metadata:{errorType:videojs.Error.SegmentAppendError}});this.trigger('appenderror');}},{key:"appendToSourceBuffer_",value:function appendToSourceBuffer_(_ref206){var segmentInfo=_ref206.segmentInfo,type=_ref206.type,initSegment=_ref206.initSegment,data=_ref206.data,bytes=_ref206.bytes;// If this is a re-append, bytes were already created and don't need to be recreated
if(!bytes){var segments=[data];var byteLength=data.byteLength;if(initSegment){// if the media initialization segment is changing, append it before the content
// segment
segments.unshift(initSegment);byteLength+=initSegment.byteLength;}// Technically we should be OK appending the init segment separately, however, we
// haven't yet tested that, and prepending is how we have always done things.
bytes=concatSegments({bytes:byteLength,segments:segments});}this.sourceUpdater_.appendBuffer({segmentInfo:segmentInfo,type:type,bytes:bytes},this.handleAppendError_.bind(this,{segmentInfo:segmentInfo,type:type,bytes:bytes}));}},{key:"handleSegmentTimingInfo_",value:function handleSegmentTimingInfo_(type,requestId,segmentTimingInfo){if(!this.pendingSegment_||requestId!==this.pendingSegment_.requestId){return;}var segment=this.pendingSegment_.segment;var timingInfoProperty="".concat(type,"TimingInfo");if(!segment[timingInfoProperty]){segment[timingInfoProperty]={};}segment[timingInfoProperty].transmuxerPrependedSeconds=segmentTimingInfo.prependedContentDuration||0;segment[timingInfoProperty].transmuxedPresentationStart=segmentTimingInfo.start.presentation;segment[timingInfoProperty].transmuxedDecodeStart=segmentTimingInfo.start.decode;segment[timingInfoProperty].transmuxedPresentationEnd=segmentTimingInfo.end.presentation;segment[timingInfoProperty].transmuxedDecodeEnd=segmentTimingInfo.end.decode;// mainly used as a reference for debugging
segment[timingInfoProperty].baseMediaDecodeTime=segmentTimingInfo.baseMediaDecodeTime;}},{key:"appendData_",value:function appendData_(segmentInfo,result){var type=result.type,data=result.data;if(!data||!data.byteLength){return;}if(type==='audio'&&this.audioDisabled_){return;}var initSegment=this.getInitSegmentAndUpdateState_({type:type,initSegment:result.initSegment,playlist:segmentInfo.playlist,map:segmentInfo.isFmp4?segmentInfo.segment.map:null});this.appendToSourceBuffer_({segmentInfo:segmentInfo,type:type,initSegment:initSegment,data:data});}/**
         * load a specific segment from a request into the buffer
         *
         * @private
         */},{key:"loadSegment_",value:function loadSegment_(segmentInfo){var _this202=this;this.state='WAITING';this.pendingSegment_=segmentInfo;this.trimBackBuffer_(segmentInfo);if(typeof segmentInfo.timestampOffset==='number'){if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearAllMp4Captions'});}}if(!this.hasEnoughInfoToLoad_()){this.loadQueue_.push(function(){// regenerate the audioAppendStart, timestampOffset, etc as they
// may have changed since this function was added to the queue.
var options=_extends$2({},segmentInfo,{forceTimestampOffset:true});_extends$2(segmentInfo,_this202.generateSegmentInfo_(options));_this202.isPendingTimestampOffset_=false;_this202.updateTransmuxerAndRequestSegment_(segmentInfo);});return;}this.updateTransmuxerAndRequestSegment_(segmentInfo);}},{key:"updateTransmuxerAndRequestSegment_",value:function updateTransmuxerAndRequestSegment_(segmentInfo){var _this203=this;// We'll update the source buffer's timestamp offset once we have transmuxed data, but
// the transmuxer still needs to be updated before then.
//
// Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp
// offset must be passed to the transmuxer for stream correcting adjustments.
if(this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)){this.gopBuffer_.length=0;// gopsToAlignWith was set before the GOP buffer was cleared
segmentInfo.gopsToAlignWith=[];this.timeMapping_=0;// reset values in the transmuxer since a discontinuity should start fresh
this.transmuxer_.postMessage({action:'reset'});this.transmuxer_.postMessage({action:'setTimestampOffset',timestampOffset:segmentInfo.timestampOffset});}var simpleSegment=this.createSimplifiedSegmentObj_(segmentInfo);var isEndOfStream=this.isEndOfStream_(segmentInfo.mediaIndex,segmentInfo.playlist,segmentInfo.partIndex);var isWalkingForward=this.mediaIndex!==null;var isDiscontinuity=segmentInfo.timeline!==this.currentTimeline_&&// currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,
// the first timeline
segmentInfo.timeline>0;var isEndOfTimeline=isEndOfStream||isWalkingForward&&isDiscontinuity;this.logger_("Requesting\n".concat(compactSegmentUrlDescription(segmentInfo.uri),"\n").concat(segmentInfoString(segmentInfo)));// If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),
// then this init segment has never been seen before and should be appended.
//
// At this point the content type (audio/video or both) is not yet known, but it should be safe to set
// both to true and leave the decision of whether to append the init segment to append time.
if(simpleSegment.map&&!simpleSegment.map.bytes){this.logger_('going to request init segment.');this.appendInitSegment_={video:true,audio:true};}segmentInfo.abortRequests=mediaSegmentRequest({xhr:this.vhs_.xhr,xhrOptions:this.xhrOptions_,decryptionWorker:this.decrypter_,segment:simpleSegment,abortFn:this.handleAbort_.bind(this,segmentInfo),progressFn:this.handleProgress_.bind(this),trackInfoFn:this.handleTrackInfo_.bind(this),timingInfoFn:this.handleTimingInfo_.bind(this),videoSegmentTimingInfoFn:this.handleSegmentTimingInfo_.bind(this,'video',segmentInfo.requestId),audioSegmentTimingInfoFn:this.handleSegmentTimingInfo_.bind(this,'audio',segmentInfo.requestId),captionsFn:this.handleCaptions_.bind(this),isEndOfTimeline:isEndOfTimeline,endedTimelineFn:function endedTimelineFn(){_this203.logger_('received endedtimeline callback');},id3Fn:this.handleId3_.bind(this),dataFn:this.handleData_.bind(this),doneFn:this.segmentRequestFinished_.bind(this),onTransmuxerLog:function onTransmuxerLog(_ref207){var message=_ref207.message,level=_ref207.level,stream=_ref207.stream;_this203.logger_("".concat(segmentInfoString(segmentInfo)," logged from transmuxer stream ").concat(stream," as a ").concat(level,": ").concat(message));}});}/**
         * trim the back buffer so that we don't have too much data
         * in the source buffer
         *
         * @private
         *
         * @param {Object} segmentInfo - the current segment
         */},{key:"trimBackBuffer_",value:function trimBackBuffer_(segmentInfo){var removeToTime=safeBackBufferTrimTime(this.seekable_(),this.currentTime_(),this.playlist_.targetDuration||10);// Chrome has a hard limit of 150MB of
// buffer and a very conservative "garbage collector"
// We manually clear out the old buffer to ensure
// we don't trigger the QuotaExceeded error
// on the source buffer during subsequent appends
if(removeToTime>0){this.remove(0,removeToTime);}}/**
         * created a simplified copy of the segment object with just the
         * information necessary to perform the XHR and decryption
         *
         * @private
         *
         * @param {Object} segmentInfo - the current segment
         * @return {Object} a simplified segment object copy
         */},{key:"createSimplifiedSegmentObj_",value:function createSimplifiedSegmentObj_(segmentInfo){var segment=segmentInfo.segment;var part=segmentInfo.part;var simpleSegment={resolvedUri:part?part.resolvedUri:segment.resolvedUri,byterange:part?part.byterange:segment.byterange,requestId:segmentInfo.requestId,transmuxer:segmentInfo.transmuxer,audioAppendStart:segmentInfo.audioAppendStart,gopsToAlignWith:segmentInfo.gopsToAlignWith,part:segmentInfo.part};var previousSegment=segmentInfo.playlist.segments[segmentInfo.mediaIndex-1];if(previousSegment&&previousSegment.timeline===segment.timeline){// The baseStartTime of a segment is used to handle rollover when probing the TS
// segment to retrieve timing information. Since the probe only looks at the media's
// times (e.g., PTS and DTS values of the segment), and doesn't consider the
// player's time (e.g., player.currentTime()), baseStartTime should reflect the
// media time as well. transmuxedDecodeEnd represents the end time of a segment, in
// seconds of media time, so should be used here. The previous segment is used since
// the end of the previous segment should represent the beginning of the current
// segment, so long as they are on the same timeline.
if(previousSegment.videoTimingInfo){simpleSegment.baseStartTime=previousSegment.videoTimingInfo.transmuxedDecodeEnd;}else if(previousSegment.audioTimingInfo){simpleSegment.baseStartTime=previousSegment.audioTimingInfo.transmuxedDecodeEnd;}}if(segment.key){// if the media sequence is greater than 2^32, the IV will be incorrect
// assuming 10s segments, that would be about 1300 years
var iv=segment.key.iv||new Uint32Array([0,0,0,segmentInfo.mediaIndex+segmentInfo.playlist.mediaSequence]);simpleSegment.key=this.segmentKey(segment.key);simpleSegment.key.iv=iv;}if(segment.map){simpleSegment.map=this.initSegmentForMap(segment.map);}return simpleSegment;}},{key:"saveTransferStats_",value:function saveTransferStats_(stats){// every request counts as a media request even if it has been aborted
// or canceled due to a timeout
this.mediaRequests+=1;if(stats){this.mediaBytesTransferred+=stats.bytesReceived;this.mediaTransferDuration+=stats.roundTripTime;}}},{key:"saveBandwidthRelatedStats_",value:function saveBandwidthRelatedStats_(duration,stats){// byteLength will be used for throughput, and should be based on bytes receieved,
// which we only know at the end of the request and should reflect total bytes
// downloaded rather than just bytes processed from components of the segment
this.pendingSegment_.byteLength=stats.bytesReceived;if(duration<MIN_SEGMENT_DURATION_TO_SAVE_STATS){this.logger_("Ignoring segment's bandwidth because its duration of ".concat(duration)+" is less than the min to record ".concat(MIN_SEGMENT_DURATION_TO_SAVE_STATS));return;}this.bandwidth=stats.bandwidth;this.roundTrip=stats.roundTripTime;}},{key:"handleTimeout_",value:function handleTimeout_(){// although the VTT segment loader bandwidth isn't really used, it's good to
// maintain functinality between segment loaders
this.mediaRequestsTimedout+=1;this.bandwidth=1;this.roundTrip=NaN;this.trigger('bandwidthupdate');this.trigger('timeout');}/**
         * Handle the callback from the segmentRequest function and set the
         * associated SegmentLoader state and errors if necessary
         *
         * @private
         */},{key:"segmentRequestFinished_",value:function segmentRequestFinished_(error,simpleSegment,result){// TODO handle special cases, e.g., muxed audio/video but only audio in the segment
// check the call queue directly since this function doesn't need to deal with any
// data, and can continue even if the source buffers are not set up and we didn't get
// any data from the segment
if(this.callQueue_.length){this.callQueue_.push(this.segmentRequestFinished_.bind(this,error,simpleSegment,result));return;}this.saveTransferStats_(simpleSegment.stats);// The request was aborted and the SegmentLoader has already been reset
if(!this.pendingSegment_){return;}// the request was aborted and the SegmentLoader has already started
// another request. this can happen when the timeout for an aborted
// request triggers due to a limitation in the XHR library
// do not count this as any sort of request or we risk double-counting
if(simpleSegment.requestId!==this.pendingSegment_.requestId){return;}// an error occurred from the active pendingSegment_ so reset everything
if(error){this.pendingSegment_=null;this.state='READY';// aborts are not a true error condition and nothing corrective needs to be done
if(error.code===REQUEST_ERRORS.ABORTED){return;}this.pause();// the error is really just that at least one of the requests timed-out
// set the bandwidth to a very low value and trigger an ABR switch to
// take emergency action
if(error.code===REQUEST_ERRORS.TIMEOUT){this.handleTimeout_();return;}// if control-flow has arrived here, then the error is real
// emit an error event to exclude the current playlist
this.mediaRequestsErrored+=1;this.error(error);this.trigger('error');return;}var segmentInfo=this.pendingSegment_;// the response was a success so set any bandwidth stats the request
// generated for ABR purposes
this.saveBandwidthRelatedStats_(segmentInfo.duration,simpleSegment.stats);segmentInfo.endOfAllRequests=simpleSegment.endOfAllRequests;if(result.gopInfo){this.gopBuffer_=updateGopBuffer(this.gopBuffer_,result.gopInfo,this.safeAppend_);}// Although we may have already started appending on progress, we shouldn't switch the
// state away from loading until we are officially done loading the segment data.
this.state='APPENDING';// used for testing
this.trigger('appending');this.waitForAppendsToComplete_(segmentInfo);}},{key:"setTimeMapping_",value:function setTimeMapping_(timeline){var timelineMapping=this.syncController_.mappingForTimeline(timeline);if(timelineMapping!==null){this.timeMapping_=timelineMapping;}}},{key:"updateMediaSecondsLoaded_",value:function updateMediaSecondsLoaded_(segment){if(typeof segment.start==='number'&&typeof segment.end==='number'){this.mediaSecondsLoaded+=segment.end-segment.start;}else{this.mediaSecondsLoaded+=segment.duration;}}},{key:"shouldUpdateTransmuxerTimestampOffset_",value:function shouldUpdateTransmuxerTimestampOffset_(timestampOffset){if(timestampOffset===null){return false;}// note that we're potentially using the same timestamp offset for both video and
// audio
if(this.loaderType_==='main'&&timestampOffset!==this.sourceUpdater_.videoTimestampOffset()){return true;}if(!this.audioDisabled_&&timestampOffset!==this.sourceUpdater_.audioTimestampOffset()){return true;}return false;}},{key:"trueSegmentStart_",value:function trueSegmentStart_(_ref208){var currentStart=_ref208.currentStart,playlist=_ref208.playlist,mediaIndex=_ref208.mediaIndex,firstVideoFrameTimeForData=_ref208.firstVideoFrameTimeForData,currentVideoTimestampOffset=_ref208.currentVideoTimestampOffset,useVideoTimingInfo=_ref208.useVideoTimingInfo,videoTimingInfo=_ref208.videoTimingInfo,audioTimingInfo=_ref208.audioTimingInfo;if(typeof currentStart!=='undefined'){// if start was set once, keep using it
return currentStart;}if(!useVideoTimingInfo){return audioTimingInfo.start;}var previousSegment=playlist.segments[mediaIndex-1];// The start of a segment should be the start of the first full frame contained
// within that segment. Since the transmuxer maintains a cache of incomplete data
// from and/or the last frame seen, the start time may reflect a frame that starts
// in the previous segment. Check for that case and ensure the start time is
// accurate for the segment.
if(mediaIndex===0||!previousSegment||typeof previousSegment.start==='undefined'||previousSegment.end!==firstVideoFrameTimeForData+currentVideoTimestampOffset){return firstVideoFrameTimeForData;}return videoTimingInfo.start;}},{key:"waitForAppendsToComplete_",value:function waitForAppendsToComplete_(segmentInfo){var trackInfo=this.getCurrentMediaInfo_(segmentInfo);if(!trackInfo){this.error({message:'No starting media returned, likely due to an unsupported media format.',playlistExclusionDuration:Infinity,metadata:{errorType:videojs.Error.SegmentUnsupportedMediaFormat}});this.trigger('error');return;}// Although transmuxing is done, appends may not yet be finished. Throw a marker
// on each queue this loader is responsible for to ensure that the appends are
// complete.
var hasAudio=trackInfo.hasAudio,hasVideo=trackInfo.hasVideo,isMuxed=trackInfo.isMuxed;var waitForVideo=this.loaderType_==='main'&&hasVideo;var waitForAudio=!this.audioDisabled_&&hasAudio&&!isMuxed;segmentInfo.waitingOnAppends=0;// segments with no data
if(!segmentInfo.hasAppendedData_){if(!segmentInfo.timingInfo&&typeof segmentInfo.timestampOffset==='number'){// When there's no audio or video data in the segment, there's no audio or video
// timing information.
//
// If there's no audio or video timing information, then the timestamp offset
// can't be adjusted to the appropriate value for the transmuxer and source
// buffers.
//
// Therefore, the next segment should be used to set the timestamp offset.
this.isPendingTimestampOffset_=true;}// override settings for metadata only segments
segmentInfo.timingInfo={start:0};segmentInfo.waitingOnAppends++;if(!this.isPendingTimestampOffset_){// update the timestampoffset
this.updateSourceBufferTimestampOffset_(segmentInfo);// make sure the metadata queue is processed even though we have
// no video/audio data.
this.processMetadataQueue_();}// append is "done" instantly with no data.
this.checkAppendsDone_(segmentInfo);return;}// Since source updater could call back synchronously, do the increments first.
if(waitForVideo){segmentInfo.waitingOnAppends++;}if(waitForAudio){segmentInfo.waitingOnAppends++;}if(waitForVideo){this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this,segmentInfo));}if(waitForAudio){this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this,segmentInfo));}}},{key:"checkAppendsDone_",value:function checkAppendsDone_(segmentInfo){if(this.checkForAbort_(segmentInfo.requestId)){return;}segmentInfo.waitingOnAppends--;if(segmentInfo.waitingOnAppends===0){this.handleAppendsDone_();}}},{key:"checkForIllegalMediaSwitch",value:function checkForIllegalMediaSwitch(trackInfo){var illegalMediaSwitchError=illegalMediaSwitch(this.loaderType_,this.getCurrentMediaInfo_(),trackInfo);if(illegalMediaSwitchError){this.error({message:illegalMediaSwitchError,playlistExclusionDuration:Infinity,metadata:{errorType:videojs.Error.SegmentSwitchError}});this.trigger('error');return true;}return false;}},{key:"updateSourceBufferTimestampOffset_",value:function updateSourceBufferTimestampOffset_(segmentInfo){if(segmentInfo.timestampOffset===null||// we don't yet have the start for whatever media type (video or audio) has
// priority, timing-wise, so we must wait
typeof segmentInfo.timingInfo.start!=='number'||// already updated the timestamp offset for this segment
segmentInfo.changedTimestampOffset||// the alt audio loader should not be responsible for setting the timestamp offset
this.loaderType_!=='main'){return;}var didChange=false;// Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that
// the timing info here comes from video. In the event that the audio is longer than
// the video, this will trim the start of the audio.
// This also trims any offset from 0 at the beginning of the media
segmentInfo.timestampOffset-=this.getSegmentStartTimeForTimestampOffsetCalculation_({videoTimingInfo:segmentInfo.segment.videoTimingInfo,audioTimingInfo:segmentInfo.segment.audioTimingInfo,timingInfo:segmentInfo.timingInfo});// In the event that there are part segment downloads, each will try to update the
// timestamp offset. Retaining this bit of state prevents us from updating in the
// future (within the same segment), however, there may be a better way to handle it.
segmentInfo.changedTimestampOffset=true;if(segmentInfo.timestampOffset!==this.sourceUpdater_.videoTimestampOffset()){this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);didChange=true;}if(segmentInfo.timestampOffset!==this.sourceUpdater_.audioTimestampOffset()){this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);didChange=true;}if(didChange){this.trigger('timestampoffset');}}},{key:"getSegmentStartTimeForTimestampOffsetCalculation_",value:function getSegmentStartTimeForTimestampOffsetCalculation_(_ref209){var videoTimingInfo=_ref209.videoTimingInfo,audioTimingInfo=_ref209.audioTimingInfo,timingInfo=_ref209.timingInfo;if(!this.useDtsForTimestampOffset_){return timingInfo.start;}if(videoTimingInfo&&typeof videoTimingInfo.transmuxedDecodeStart==='number'){return videoTimingInfo.transmuxedDecodeStart;}// handle audio only
if(audioTimingInfo&&typeof audioTimingInfo.transmuxedDecodeStart==='number'){return audioTimingInfo.transmuxedDecodeStart;}// handle content not transmuxed (e.g., MP4)
return timingInfo.start;}},{key:"updateTimingInfoEnd_",value:function updateTimingInfoEnd_(segmentInfo){segmentInfo.timingInfo=segmentInfo.timingInfo||{};var trackInfo=this.getMediaInfo_();var useVideoTimingInfo=this.loaderType_==='main'&&trackInfo&&trackInfo.hasVideo;var prioritizedTimingInfo=useVideoTimingInfo&&segmentInfo.videoTimingInfo?segmentInfo.videoTimingInfo:segmentInfo.audioTimingInfo;if(!prioritizedTimingInfo){return;}segmentInfo.timingInfo.end=typeof prioritizedTimingInfo.end==='number'?// End time may not exist in a case where we aren't parsing the full segment (one
// current example is the case of fmp4), so use the rough duration to calculate an
// end time.
prioritizedTimingInfo.end:prioritizedTimingInfo.start+segmentInfo.duration;}/**
         * callback to run when appendBuffer is finished. detects if we are
         * in a good state to do things with the data we got, or if we need
         * to wait for more
         *
         * @private
         */},{key:"handleAppendsDone_",value:function handleAppendsDone_(){// appendsdone can cause an abort
if(this.pendingSegment_){this.trigger('appendsdone');}if(!this.pendingSegment_){this.state='READY';// TODO should this move into this.checkForAbort to speed up requests post abort in
// all appending cases?
if(!this.paused()){this.monitorBuffer_();}return;}var segmentInfo=this.pendingSegment_;if(segmentInfo.part&&segmentInfo.part.syncInfo){// low-latency flow
segmentInfo.part.syncInfo.markAppended();}else if(segmentInfo.segment.syncInfo){// normal flow
segmentInfo.segment.syncInfo.markAppended();}// Now that the end of the segment has been reached, we can set the end time. It's
// best to wait until all appends are done so we're sure that the primary media is
// finished (and we have its end time).
this.updateTimingInfoEnd_(segmentInfo);if(this.shouldSaveSegmentTimingInfo_){// Timeline mappings should only be saved for the main loader. This is for multiple
// reasons:
//
// 1) Only one mapping is saved per timeline, meaning that if both the audio loader
//    and the main loader try to save the timeline mapping, whichever comes later
//    will overwrite the first. In theory this is OK, as the mappings should be the
//    same, however, it breaks for (2)
// 2) In the event of a live stream, the initial live point will make for a somewhat
//    arbitrary mapping. If audio and video streams are not perfectly in-sync, then
//    the mapping will be off for one of the streams, dependent on which one was
//    first saved (see (1)).
// 3) Primary timing goes by video in VHS, so the mapping should be video.
//
// Since the audio loader will wait for the main loader to load the first segment,
// the main loader will save the first timeline mapping, and ensure that there won't
// be a case where audio loads two segments without saving a mapping (thus leading
// to missing segment timing info).
this.syncController_.saveSegmentTimingInfo({segmentInfo:segmentInfo,shouldSaveTimelineMapping:this.loaderType_==='main'});}var segmentDurationMessage=getTroublesomeSegmentDurationMessage(segmentInfo,this.sourceType_);if(segmentDurationMessage){if(segmentDurationMessage.severity==='warn'){videojs.log.warn(segmentDurationMessage.message);}else{this.logger_(segmentDurationMessage.message);}}this.recordThroughput_(segmentInfo);this.pendingSegment_=null;this.state='READY';if(segmentInfo.isSyncRequest){this.trigger('syncinfoupdate');// if the sync request was not appended
// then it was not the correct segment.
// throw it away and use the data it gave us
// to get the correct one.
if(!segmentInfo.hasAppendedData_){this.logger_("Throwing away un-appended sync request ".concat(segmentInfoString(segmentInfo)));return;}}this.logger_("Appended ".concat(segmentInfoString(segmentInfo)));this.addSegmentMetadataCue_(segmentInfo);this.fetchAtBuffer_=true;if(this.currentTimeline_!==segmentInfo.timeline){this.timelineChangeController_.lastTimelineChange({type:this.loaderType_,from:this.currentTimeline_,to:segmentInfo.timeline});// If audio is not disabled, the main segment loader is responsible for updating
// the audio timeline as well. If the content is video only, this won't have any
// impact.
if(this.loaderType_==='main'&&!this.audioDisabled_){this.timelineChangeController_.lastTimelineChange({type:'audio',from:this.currentTimeline_,to:segmentInfo.timeline});}}this.currentTimeline_=segmentInfo.timeline;// We must update the syncinfo to recalculate the seekable range before
// the following conditional otherwise it may consider this a bad "guess"
// and attempt to resync when the post-update seekable window and live
// point would mean that this was the perfect segment to fetch
this.trigger('syncinfoupdate');var segment=segmentInfo.segment;var part=segmentInfo.part;var badSegmentGuess=segment.end&&this.currentTime_()-segment.end>segmentInfo.playlist.targetDuration*3;var badPartGuess=part&&part.end&&this.currentTime_()-part.end>segmentInfo.playlist.partTargetDuration*3;// If we previously appended a segment/part that ends more than 3 part/targetDurations before
// the currentTime_ that means that our conservative guess was too conservative.
// In that case, reset the loader state so that we try to use any information gained
// from the previous request to create a new, more accurate, sync-point.
if(badSegmentGuess||badPartGuess){this.logger_("bad ".concat(badSegmentGuess?'segment':'part'," ").concat(segmentInfoString(segmentInfo)));this.resetEverything();return;}var isWalkingForward=this.mediaIndex!==null;// Don't do a rendition switch unless we have enough time to get a sync segment
// and conservatively guess
if(isWalkingForward){this.trigger('bandwidthupdate');}this.trigger('progress');this.mediaIndex=segmentInfo.mediaIndex;this.partIndex=segmentInfo.partIndex;// any time an update finishes and the last segment is in the
// buffer, end the stream. this ensures the "ended" event will
// fire if playback reaches that point.
if(this.isEndOfStream_(segmentInfo.mediaIndex,segmentInfo.playlist,segmentInfo.partIndex)){this.endOfStream();}// used for testing
this.trigger('appended');if(segmentInfo.hasAppendedData_){this.mediaAppends++;}if(!this.paused()){this.monitorBuffer_();}}/**
         * Records the current throughput of the decrypt, transmux, and append
         * portion of the semgment pipeline. `throughput.rate` is a the cumulative
         * moving average of the throughput. `throughput.count` is the number of
         * data points in the average.
         *
         * @private
         * @param {Object} segmentInfo the object returned by loadSegment
         */},{key:"recordThroughput_",value:function recordThroughput_(segmentInfo){if(segmentInfo.duration<MIN_SEGMENT_DURATION_TO_SAVE_STATS){this.logger_("Ignoring segment's throughput because its duration of ".concat(segmentInfo.duration)+" is less than the min to record ".concat(MIN_SEGMENT_DURATION_TO_SAVE_STATS));return;}var rate=this.throughput.rate;// Add one to the time to ensure that we don't accidentally attempt to divide
// by zero in the case where the throughput is ridiculously high
var segmentProcessingTime=Date.now()-segmentInfo.endOfAllRequests+1;// Multiply by 8000 to convert from bytes/millisecond to bits/second
var segmentProcessingThroughput=Math.floor(segmentInfo.byteLength/segmentProcessingTime*8*1000);// This is just a cumulative moving average calculation:
//   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)
this.throughput.rate+=(segmentProcessingThroughput-rate)/++this.throughput.count;}/**
         * Adds a cue to the segment-metadata track with some metadata information about the
         * segment
         *
         * @private
         * @param {Object} segmentInfo
         *        the object returned by loadSegment
         * @method addSegmentMetadataCue_
         */},{key:"addSegmentMetadataCue_",value:function addSegmentMetadataCue_(segmentInfo){if(!this.segmentMetadataTrack_){return;}var segment=segmentInfo.segment;var start=segment.start;var end=segment.end;// Do not try adding the cue if the start and end times are invalid.
if(!finite(start)||!finite(end)){return;}removeCuesFromTrack(start,end,this.segmentMetadataTrack_);var Cue=window_1.WebKitDataCue||window_1.VTTCue;var value={custom:segment.custom,dateTimeObject:segment.dateTimeObject,dateTimeString:segment.dateTimeString,programDateTime:segment.programDateTime,bandwidth:segmentInfo.playlist.attributes.BANDWIDTH,resolution:segmentInfo.playlist.attributes.RESOLUTION,codecs:segmentInfo.playlist.attributes.CODECS,byteLength:segmentInfo.byteLength,uri:segmentInfo.uri,timeline:segmentInfo.timeline,playlist:segmentInfo.playlist.id,start:start,end:end};var data=JSON.stringify(value);var cue=new Cue(start,end,data);// Attach the metadata to the value property of the cue to keep consistency between
// the differences of WebKitDataCue in safari and VTTCue in other browsers
cue.value=value;this.segmentMetadataTrack_.addCue(cue);}}]);return SegmentLoader;}(videojs.EventTarget);function noop(){}var toTitleCase=function toTitleCase(string){if(typeof string!=='string'){return string;}return string.replace(/./,function(w){return w.toUpperCase();});};/**
       * @file source-updater.js
       */var bufferTypes=['video','audio'];var _updating=function updating(type,sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];return sourceBuffer&&sourceBuffer.updating||sourceUpdater.queuePending[type];};var nextQueueIndexOfType=function nextQueueIndexOfType(type,queue){for(var _i187=0;_i187<queue.length;_i187++){var queueEntry=queue[_i187];if(queueEntry.type==='mediaSource'){// If the next entry is a media source entry (uses multiple source buffers), block
// processing to allow it to go through first.
return null;}if(queueEntry.type===type){return _i187;}}return null;};var shiftQueue=function shiftQueue(type,sourceUpdater){if(sourceUpdater.queue.length===0){return;}var queueIndex=0;var queueEntry=sourceUpdater.queue[queueIndex];if(queueEntry.type==='mediaSource'){if(!sourceUpdater.updating()&&sourceUpdater.mediaSource.readyState!=='closed'){sourceUpdater.queue.shift();queueEntry.action(sourceUpdater);if(queueEntry.doneFn){queueEntry.doneFn();}// Only specific source buffer actions must wait for async updateend events. Media
// Source actions process synchronously. Therefore, both audio and video source
// buffers are now clear to process the next queue entries.
shiftQueue('audio',sourceUpdater);shiftQueue('video',sourceUpdater);}// Media Source actions require both source buffers, so if the media source action
// couldn't process yet (because one or both source buffers are busy), block other
// queue actions until both are available and the media source action can process.
return;}if(type==='mediaSource'){// If the queue was shifted by a media source action (this happens when pushing a
// media source action onto the queue), then it wasn't from an updateend event from an
// audio or video source buffer, so there's no change from previous state, and no
// processing should be done.
return;}// Media source queue entries don't need to consider whether the source updater is
// started (i.e., source buffers are created) as they don't need the source buffers, but
// source buffer queue entries do.
if(!sourceUpdater.ready()||sourceUpdater.mediaSource.readyState==='closed'||_updating(type,sourceUpdater)){return;}if(queueEntry.type!==type){queueIndex=nextQueueIndexOfType(type,sourceUpdater.queue);if(queueIndex===null){// Either there's no queue entry that uses this source buffer type in the queue, or
// there's a media source queue entry before the next entry of this type, in which
// case wait for that action to process first.
return;}queueEntry=sourceUpdater.queue[queueIndex];}sourceUpdater.queue.splice(queueIndex,1);// Keep a record that this source buffer type is in use.
//
// The queue pending operation must be set before the action is performed in the event
// that the action results in a synchronous event that is acted upon. For instance, if
// an exception is thrown that can be handled, it's possible that new actions will be
// appended to an empty queue and immediately executed, but would not have the correct
// pending information if this property was set after the action was performed.
sourceUpdater.queuePending[type]=queueEntry;queueEntry.action(type,sourceUpdater);if(!queueEntry.doneFn){// synchronous operation, process next entry
sourceUpdater.queuePending[type]=null;shiftQueue(type,sourceUpdater);return;}};var cleanupBuffer=function cleanupBuffer(type,sourceUpdater){var buffer=sourceUpdater["".concat(type,"Buffer")];var titleType=toTitleCase(type);if(!buffer){return;}buffer.removeEventListener('updateend',sourceUpdater["on".concat(titleType,"UpdateEnd_")]);buffer.removeEventListener('error',sourceUpdater["on".concat(titleType,"Error_")]);sourceUpdater.codecs[type]=null;sourceUpdater["".concat(type,"Buffer")]=null;};var inSourceBuffers=function inSourceBuffers(mediaSource,sourceBuffer){return mediaSource&&sourceBuffer&&Array.prototype.indexOf.call(mediaSource.sourceBuffers,sourceBuffer)!==-1;};var actions={appendBuffer:function appendBuffer(bytes,segmentInfo,onError){return function(type,sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_("Appending segment ".concat(segmentInfo.mediaIndex,"'s ").concat(bytes.length," bytes to ").concat(type,"Buffer"));try{sourceBuffer.appendBuffer(bytes);}catch(e){sourceUpdater.logger_("Error with code ".concat(e.code," ")+(e.code===QUOTA_EXCEEDED_ERR?'(QUOTA_EXCEEDED_ERR) ':'')+"when appending segment ".concat(segmentInfo.mediaIndex," to ").concat(type,"Buffer"));sourceUpdater.queuePending[type]=null;onError(e);}};},remove:function remove(start,end){return function(type,sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_("Removing ".concat(start," to ").concat(end," from ").concat(type,"Buffer"));try{sourceBuffer.remove(start,end);}catch(e){sourceUpdater.logger_("Remove ".concat(start," to ").concat(end," from ").concat(type,"Buffer failed"));}};},timestampOffset:function timestampOffset(offset){return function(type,sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_("Setting ".concat(type,"timestampOffset to ").concat(offset));sourceBuffer.timestampOffset=offset;};},callback:function callback(_callback2){return function(type,sourceUpdater){_callback2();};},endOfStream:function endOfStream(error){return function(sourceUpdater){if(sourceUpdater.mediaSource.readyState!=='open'){return;}sourceUpdater.logger_("Calling mediaSource endOfStream(".concat(error||'',")"));try{sourceUpdater.mediaSource.endOfStream(error);}catch(e){videojs.log.warn('Failed to call media source endOfStream',e);}};},duration:function duration(_duration4){return function(sourceUpdater){sourceUpdater.logger_("Setting mediaSource duration to ".concat(_duration4));try{sourceUpdater.mediaSource.duration=_duration4;}catch(e){videojs.log.warn('Failed to set media source duration',e);}};},abort:function abort(){return function(type,sourceUpdater){if(sourceUpdater.mediaSource.readyState!=='open'){return;}var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_("calling abort on ".concat(type,"Buffer"));try{sourceBuffer.abort();}catch(e){videojs.log.warn("Failed to abort on ".concat(type,"Buffer"),e);}};},addSourceBuffer:function addSourceBuffer(type,codec){return function(sourceUpdater){var titleType=toTitleCase(type);var mime=getMimeForCodec(codec);sourceUpdater.logger_("Adding ".concat(type,"Buffer with codec ").concat(codec," to mediaSource"));var sourceBuffer=sourceUpdater.mediaSource.addSourceBuffer(mime);sourceBuffer.addEventListener('updateend',sourceUpdater["on".concat(titleType,"UpdateEnd_")]);sourceBuffer.addEventListener('error',sourceUpdater["on".concat(titleType,"Error_")]);sourceUpdater.codecs[type]=codec;sourceUpdater["".concat(type,"Buffer")]=sourceBuffer;};},removeSourceBuffer:function removeSourceBuffer(type){return function(sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];cleanupBuffer(type,sourceUpdater);// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_("Removing ".concat(type,"Buffer with codec ").concat(sourceUpdater.codecs[type]," from mediaSource"));try{sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);}catch(e){videojs.log.warn("Failed to removeSourceBuffer ".concat(type,"Buffer"),e);}};},changeType:function changeType(codec){return function(type,sourceUpdater){var sourceBuffer=sourceUpdater["".concat(type,"Buffer")];var mime=getMimeForCodec(codec);// can't do anything if the media source / source buffer is null
// or the media source does not contain this source buffer.
if(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}// do not update codec if we don't need to.
// Only update if we change the codec base.
// For example, going from avc1.640028 to avc1.64001f does not require a changeType call.
var newCodecBase=codec.substring(0,codec.indexOf('.'));var oldCodec=sourceUpdater.codecs[type];var oldCodecBase=oldCodec.substring(0,oldCodec.indexOf('.'));if(oldCodecBase===newCodecBase){return;}sourceUpdater.logger_("changing ".concat(type,"Buffer codec from ").concat(sourceUpdater.codecs[type]," to ").concat(codec));// check if change to the provided type is supported
try{sourceBuffer.changeType(mime);sourceUpdater.codecs[type]=codec;}catch(e){videojs.log.warn("Failed to changeType on ".concat(type,"Buffer"),e);}};}};var pushQueue=function pushQueue(_ref210){var type=_ref210.type,sourceUpdater=_ref210.sourceUpdater,action=_ref210.action,doneFn=_ref210.doneFn,name=_ref210.name;sourceUpdater.queue.push({type:type,action:action,doneFn:doneFn,name:name});shiftQueue(type,sourceUpdater);};var onUpdateend=function onUpdateend(type,sourceUpdater){return function(e){// Although there should, in theory, be a pending action for any updateend receieved,
// there are some actions that may trigger updateend events without set definitions in
// the w3c spec. For instance, setting the duration on the media source may trigger
// updateend events on source buffers. This does not appear to be in the spec. As such,
// if we encounter an updateend without a corresponding pending action from our queue
// for that source buffer type, process the next action.
var bufferedRangesForType=sourceUpdater["".concat(type,"Buffered")]();var descriptiveString=bufferedRangesToString(bufferedRangesForType);sourceUpdater.logger_("received \"updateend\" event for ".concat(type," Source Buffer: "),descriptiveString);if(sourceUpdater.queuePending[type]){var doneFn=sourceUpdater.queuePending[type].doneFn;sourceUpdater.queuePending[type]=null;if(doneFn){// if there's an error, report it
doneFn(sourceUpdater["".concat(type,"Error_")]);}}shiftQueue(type,sourceUpdater);};};/**
       * A queue of callbacks to be serialized and applied when a
       * MediaSource and its associated SourceBuffers are not in the
       * updating state. It is used by the segment loader to update the
       * underlying SourceBuffers when new data is loaded, for instance.
       *
       * @class SourceUpdater
       * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from
       * @param {string} mimeType the desired MIME type of the underlying SourceBuffer
       */var SourceUpdater=/*#__PURE__*/function(_videojs$EventTarget3){_inherits(SourceUpdater,_videojs$EventTarget3);var _super97=_createSuper(SourceUpdater);function SourceUpdater(mediaSource){var _this204;_classCallCheck(this,SourceUpdater);_this204=_super97.call(this);_this204.mediaSource=mediaSource;_this204.sourceopenListener_=function(){return shiftQueue('mediaSource',_assertThisInitialized2(_this204));};_this204.mediaSource.addEventListener('sourceopen',_this204.sourceopenListener_);_this204.logger_=logger('SourceUpdater');// initial timestamp offset is 0
_this204.audioTimestampOffset_=0;_this204.videoTimestampOffset_=0;_this204.queue=[];_this204.queuePending={audio:null,video:null};_this204.delayedAudioAppendQueue_=[];_this204.videoAppendQueued_=false;_this204.codecs={};_this204.onVideoUpdateEnd_=onUpdateend('video',_assertThisInitialized2(_this204));_this204.onAudioUpdateEnd_=onUpdateend('audio',_assertThisInitialized2(_this204));_this204.onVideoError_=function(e){// used for debugging
_this204.videoError_=e;};_this204.onAudioError_=function(e){// used for debugging
_this204.audioError_=e;};_this204.createdSourceBuffers_=false;_this204.initializedEme_=false;_this204.triggeredReady_=false;return _this204;}_createClass(SourceUpdater,[{key:"initializedEme",value:function initializedEme(){this.initializedEme_=true;this.triggerReady();}},{key:"hasCreatedSourceBuffers",value:function hasCreatedSourceBuffers(){// if false, likely waiting on one of the segment loaders to get enough data to create
// source buffers
return this.createdSourceBuffers_;}},{key:"hasInitializedAnyEme",value:function hasInitializedAnyEme(){return this.initializedEme_;}},{key:"ready",value:function ready(){return this.hasCreatedSourceBuffers()&&this.hasInitializedAnyEme();}},{key:"createSourceBuffers",value:function createSourceBuffers(codecs){if(this.hasCreatedSourceBuffers()){// already created them before
return;}// the intial addOrChangeSourceBuffers will always be
// two add buffers.
this.addOrChangeSourceBuffers(codecs);this.createdSourceBuffers_=true;this.trigger('createdsourcebuffers');this.triggerReady();}},{key:"triggerReady",value:function triggerReady(){// only allow ready to be triggered once, this prevents the case
// where:
// 1. we trigger createdsourcebuffers
// 2. ie 11 synchronously initializates eme
// 3. the synchronous initialization causes us to trigger ready
// 4. We go back to the ready check in createSourceBuffers and ready is triggered again.
if(this.ready()&&!this.triggeredReady_){this.triggeredReady_=true;this.trigger('ready');}}/**
         * Add a type of source buffer to the media source.
         *
         * @param {string} type
         *        The type of source buffer to add.
         *
         * @param {string} codec
         *        The codec to add the source buffer with.
         */},{key:"addSourceBuffer",value:function addSourceBuffer(type,codec){pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.addSourceBuffer(type,codec),name:'addSourceBuffer'});}/**
         * call abort on a source buffer.
         *
         * @param {string} type
         *        The type of source buffer to call abort on.
         */},{key:"abort",value:function abort(type){pushQueue({type:type,sourceUpdater:this,action:actions.abort(type),name:'abort'});}/**
         * Call removeSourceBuffer and remove a specific type
         * of source buffer on the mediaSource.
         *
         * @param {string} type
         *        The type of source buffer to remove.
         */},{key:"removeSourceBuffer",value:function removeSourceBuffer(type){if(!this.canRemoveSourceBuffer()){videojs.log.error('removeSourceBuffer is not supported!');return;}pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.removeSourceBuffer(type),name:'removeSourceBuffer'});}/**
         * Whether or not the removeSourceBuffer function is supported
         * on the mediaSource.
         *
         * @return {boolean}
         *          if removeSourceBuffer can be called.
         */},{key:"canRemoveSourceBuffer",value:function canRemoveSourceBuffer(){// As of Firefox 83 removeSourceBuffer
// throws errors, so we report that it does not support this.
return!videojs.browser.IS_FIREFOX&&window_1.MediaSource&&window_1.MediaSource.prototype&&typeof window_1.MediaSource.prototype.removeSourceBuffer==='function';}/**
         * Whether or not the changeType function is supported
         * on our SourceBuffers.
         *
         * @return {boolean}
         *         if changeType can be called.
         */},{key:"canChangeType",value:/**
         * Whether or not the changeType function is supported
         * on our SourceBuffers.
         *
         * @return {boolean}
         *         if changeType can be called.
         */function canChangeType(){return this.constructor.canChangeType();}/**
         * Call the changeType function on a source buffer, given the code and type.
         *
         * @param {string} type
         *        The type of source buffer to call changeType on.
         *
         * @param {string} codec
         *        The codec string to change type with on the source buffer.
         */},{key:"changeType",value:function changeType(type,codec){if(!this.canChangeType()){videojs.log.error('changeType is not supported!');return;}pushQueue({type:type,sourceUpdater:this,action:actions.changeType(codec),name:'changeType'});}/**
         * Add source buffers with a codec or, if they are already created,
         * call changeType on source buffers using changeType.
         *
         * @param {Object} codecs
         *        Codecs to switch to
         */},{key:"addOrChangeSourceBuffers",value:function addOrChangeSourceBuffers(codecs){var _this205=this;if(!codecs||_typeof(codecs)!=='object'||Object.keys(codecs).length===0){throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');}Object.keys(codecs).forEach(function(type){var codec=codecs[type];if(!_this205.hasCreatedSourceBuffers()){return _this205.addSourceBuffer(type,codec);}if(_this205.canChangeType()){_this205.changeType(type,codec);}});}/**
         * Queue an update to append an ArrayBuffer.
         *
         * @param {MediaObject} object containing audioBytes and/or videoBytes
         * @param {Function} done the function to call when done
         * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data
         */},{key:"appendBuffer",value:function appendBuffer(options,doneFn){var _this206=this;var segmentInfo=options.segmentInfo,type=options.type,bytes=options.bytes;this.processedAppend_=true;if(type==='audio'&&this.videoBuffer&&!this.videoAppendQueued_){this.delayedAudioAppendQueue_.push([options,doneFn]);this.logger_("delayed audio append of ".concat(bytes.length," until video append"));return;}// In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will
// not be fired. This means that the queue will be blocked until the next action
// taken by the segment-loader. Provide a mechanism for segment-loader to handle
// these errors by calling the doneFn with the specific error.
var onError=doneFn;pushQueue({type:type,sourceUpdater:this,action:actions.appendBuffer(bytes,segmentInfo||{mediaIndex:-1},onError),doneFn:doneFn,name:'appendBuffer'});if(type==='video'){this.videoAppendQueued_=true;if(!this.delayedAudioAppendQueue_.length){return;}var queue=this.delayedAudioAppendQueue_.slice();this.logger_("queuing delayed audio ".concat(queue.length," appendBuffers"));this.delayedAudioAppendQueue_.length=0;queue.forEach(function(que){_this206.appendBuffer.apply(_this206,que);});}}/**
         * Get the audio buffer's buffered timerange.
         *
         * @return {TimeRange}
         *         The audio buffer's buffered time range
         */},{key:"audioBuffered",value:function audioBuffered(){// no media source/source buffer or it isn't in the media sources
// source buffer list
if(!inSourceBuffers(this.mediaSource,this.audioBuffer)){return createTimeRanges();}return this.audioBuffer.buffered?this.audioBuffer.buffered:createTimeRanges();}/**
         * Get the video buffer's buffered timerange.
         *
         * @return {TimeRange}
         *         The video buffer's buffered time range
         */},{key:"videoBuffered",value:function videoBuffered(){// no media source/source buffer or it isn't in the media sources
// source buffer list
if(!inSourceBuffers(this.mediaSource,this.videoBuffer)){return createTimeRanges();}return this.videoBuffer.buffered?this.videoBuffer.buffered:createTimeRanges();}/**
         * Get a combined video/audio buffer's buffered timerange.
         *
         * @return {TimeRange}
         *         the combined time range
         */},{key:"buffered",value:function buffered(){var video=inSourceBuffers(this.mediaSource,this.videoBuffer)?this.videoBuffer:null;var audio=inSourceBuffers(this.mediaSource,this.audioBuffer)?this.audioBuffer:null;if(audio&&!video){return this.audioBuffered();}if(video&&!audio){return this.videoBuffered();}return bufferIntersection(this.audioBuffered(),this.videoBuffered());}/**
         * Add a callback to the queue that will set duration on the mediaSource.
         *
         * @param {number} duration
         *        The duration to set
         *
         * @param {Function} [doneFn]
         *        function to run after duration has been set.
         */},{key:"setDuration",value:function setDuration(duration){var doneFn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:noop;// In order to set the duration on the media source, it's necessary to wait for all
// source buffers to no longer be updating. "If the updating attribute equals true on
// any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and
// abort these steps." (source: https://www.w3.org/TR/media-source/#attributes).
pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.duration(duration),name:'duration',doneFn:doneFn});}/**
         * Add a mediaSource endOfStream call to the queue
         *
         * @param {Error} [error]
         *        Call endOfStream with an error
         *
         * @param {Function} [doneFn]
         *        A function that should be called when the
         *        endOfStream call has finished.
         */},{key:"endOfStream",value:function endOfStream(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var doneFn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:noop;if(typeof error!=='string'){error=undefined;}// In order to set the duration on the media source, it's necessary to wait for all
// source buffers to no longer be updating. "If the updating attribute equals true on
// any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and
// abort these steps." (source: https://www.w3.org/TR/media-source/#attributes).
pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.endOfStream(error),name:'endOfStream',doneFn:doneFn});}/**
         * Queue an update to remove a time range from the buffer.
         *
         * @param {number} start where to start the removal
         * @param {number} end where to end the removal
         * @param {Function} [done=noop] optional callback to be executed when the remove
         * operation is complete
         * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end
         */},{key:"removeAudio",value:function removeAudio(start,end){var done=arguments.length>2&&arguments[2]!==undefined?arguments[2]:noop;if(!this.audioBuffered().length||this.audioBuffered().end(0)===0){done();return;}pushQueue({type:'audio',sourceUpdater:this,action:actions.remove(start,end),doneFn:done,name:'remove'});}/**
         * Queue an update to remove a time range from the buffer.
         *
         * @param {number} start where to start the removal
         * @param {number} end where to end the removal
         * @param {Function} [done=noop] optional callback to be executed when the remove
         * operation is complete
         * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end
         */},{key:"removeVideo",value:function removeVideo(start,end){var done=arguments.length>2&&arguments[2]!==undefined?arguments[2]:noop;if(!this.videoBuffered().length||this.videoBuffered().end(0)===0){done();return;}pushQueue({type:'video',sourceUpdater:this,action:actions.remove(start,end),doneFn:done,name:'remove'});}/**
         * Whether the underlying sourceBuffer is updating or not
         *
         * @return {boolean} the updating status of the SourceBuffer
         */},{key:"updating",value:function updating(){// the audio/video source buffer is updating
if(_updating('audio',this)||_updating('video',this)){return true;}return false;}/**
         * Set/get the timestampoffset on the audio SourceBuffer
         *
         * @return {number} the timestamp offset
         */},{key:"audioTimestampOffset",value:function audioTimestampOffset(offset){if(typeof offset!=='undefined'&&this.audioBuffer&&// no point in updating if it's the same
this.audioTimestampOffset_!==offset){pushQueue({type:'audio',sourceUpdater:this,action:actions.timestampOffset(offset),name:'timestampOffset'});this.audioTimestampOffset_=offset;}return this.audioTimestampOffset_;}/**
         * Set/get the timestampoffset on the video SourceBuffer
         *
         * @return {number} the timestamp offset
         */},{key:"videoTimestampOffset",value:function videoTimestampOffset(offset){if(typeof offset!=='undefined'&&this.videoBuffer&&// no point in updating if it's the same
this.videoTimestampOffset!==offset){pushQueue({type:'video',sourceUpdater:this,action:actions.timestampOffset(offset),name:'timestampOffset'});this.videoTimestampOffset_=offset;}return this.videoTimestampOffset_;}/**
         * Add a function to the queue that will be called
         * when it is its turn to run in the audio queue.
         *
         * @param {Function} callback
         *        The callback to queue.
         */},{key:"audioQueueCallback",value:function audioQueueCallback(callback){if(!this.audioBuffer){return;}pushQueue({type:'audio',sourceUpdater:this,action:actions.callback(callback),name:'callback'});}/**
         * Add a function to the queue that will be called
         * when it is its turn to run in the video queue.
         *
         * @param {Function} callback
         *        The callback to queue.
         */},{key:"videoQueueCallback",value:function videoQueueCallback(callback){if(!this.videoBuffer){return;}pushQueue({type:'video',sourceUpdater:this,action:actions.callback(callback),name:'callback'});}/**
         * dispose of the source updater and the underlying sourceBuffer
         */},{key:"dispose",value:function dispose(){var _this207=this;this.trigger('dispose');bufferTypes.forEach(function(type){_this207.abort(type);if(_this207.canRemoveSourceBuffer()){_this207.removeSourceBuffer(type);}else{_this207["".concat(type,"QueueCallback")](function(){return cleanupBuffer(type,_this207);});}});this.videoAppendQueued_=false;this.delayedAudioAppendQueue_.length=0;if(this.sourceopenListener_){this.mediaSource.removeEventListener('sourceopen',this.sourceopenListener_);}this.off();}}],[{key:"canChangeType",value:function canChangeType(){return window_1.SourceBuffer&&window_1.SourceBuffer.prototype&&typeof window_1.SourceBuffer.prototype.changeType==='function';}}]);return SourceUpdater;}(videojs.EventTarget);var uint8ToUtf8=function uint8ToUtf8(uintArray){return decodeURIComponent(escape(String.fromCharCode.apply(null,uintArray)));};var bufferToHexString=function bufferToHexString(buffer){var uInt8Buffer=new Uint8Array(buffer);return Array.from(uInt8Buffer).map(function(byte){return byte.toString(16).padStart(2,'0');}).join('');};/**
       * @file vtt-segment-loader.js
       */var VTT_LINE_TERMINATORS=new Uint8Array('\n\n'.split('').map(function(char){return char.charCodeAt(0);}));var NoVttJsError=/*#__PURE__*/function(_Error){_inherits(NoVttJsError,_Error);var _super98=_createSuper(NoVttJsError);function NoVttJsError(){_classCallCheck(this,NoVttJsError);return _super98.call(this,'Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');}return _createClass(NoVttJsError);}(/*#__PURE__*/_wrapNativeSuper(Error));/**
       * An object that manages segment loading and appending.
       *
       * @class VTTSegmentLoader
       * @param {Object} options required and optional options
       * @extends videojs.EventTarget
       */var VTTSegmentLoader=/*#__PURE__*/function(_SegmentLoader){_inherits(VTTSegmentLoader,_SegmentLoader);var _super99=_createSuper(VTTSegmentLoader);function VTTSegmentLoader(settings){var _this208;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,VTTSegmentLoader);_this208=_super99.call(this,settings,options);// SegmentLoader requires a MediaSource be specified or it will throw an error;
// however, VTTSegmentLoader has no need of a media source, so delete the reference
_this208.mediaSource_=null;_this208.subtitlesTrack_=null;_this208.featuresNativeTextTracks_=settings.featuresNativeTextTracks;_this208.loadVttJs=settings.loadVttJs;// The VTT segment will have its own time mappings. Saving VTT segment timing info in
// the sync controller leads to improper behavior.
_this208.shouldSaveSegmentTimingInfo_=false;return _this208;}_createClass(VTTSegmentLoader,[{key:"createTransmuxer_",value:function createTransmuxer_(){// don't need to transmux any subtitles
return null;}/**
         * Indicates which time ranges are buffered
         *
         * @return {TimeRange}
         *         TimeRange object representing the current buffered ranges
         */},{key:"buffered_",value:function buffered_(){if(!this.subtitlesTrack_||!this.subtitlesTrack_.cues||!this.subtitlesTrack_.cues.length){return createTimeRanges();}var cues=this.subtitlesTrack_.cues;var start=cues[0].startTime;var end=cues[cues.length-1].startTime;return createTimeRanges([[start,end]]);}/**
         * Gets and sets init segment for the provided map
         *
         * @param {Object} map
         *        The map object representing the init segment to get or set
         * @param {boolean=} set
         *        If true, the init segment for the provided map should be saved
         * @return {Object}
         *         map object for desired init segment
         */},{key:"initSegmentForMap",value:function initSegmentForMap(map){var set=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!map){return null;}var id=initSegmentId(map);var storedMap=this.initSegments_[id];if(set&&!storedMap&&map.bytes){// append WebVTT line terminators to the media initialization segment if it exists
// to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that
// requires two or more WebVTT line terminators between the WebVTT header and the
// rest of the file
var combinedByteLength=VTT_LINE_TERMINATORS.byteLength+map.bytes.byteLength;var combinedSegment=new Uint8Array(combinedByteLength);combinedSegment.set(map.bytes);combinedSegment.set(VTT_LINE_TERMINATORS,map.bytes.byteLength);this.initSegments_[id]=storedMap={resolvedUri:map.resolvedUri,byterange:map.byterange,bytes:combinedSegment};}return storedMap||map;}/**
         * Returns true if all configuration required for loading is present, otherwise false.
         *
         * @return {boolean} True if the all configuration is ready for loading
         * @private
         */},{key:"couldBeginLoading_",value:function couldBeginLoading_(){return this.playlist_&&this.subtitlesTrack_&&!this.paused();}/**
         * Once all the starting parameters have been specified, begin
         * operation. This method should only be invoked from the INIT
         * state.
         *
         * @private
         */},{key:"init_",value:function init_(){this.state='READY';this.resetEverything();return this.monitorBuffer_();}/**
         * Set a subtitle track on the segment loader to add subtitles to
         *
         * @param {TextTrack=} track
         *        The text track to add loaded subtitles to
         * @return {TextTrack}
         *        Returns the subtitles track
         */},{key:"track",value:function track(_track3){if(typeof _track3==='undefined'){return this.subtitlesTrack_;}this.subtitlesTrack_=_track3;// if we were unpaused but waiting for a sourceUpdater, start
// buffering now
if(this.state==='INIT'&&this.couldBeginLoading_()){this.init_();}return this.subtitlesTrack_;}/**
         * Remove any data in the source buffer between start and end times
         *
         * @param {number} start - the start time of the region to remove from the buffer
         * @param {number} end - the end time of the region to remove from the buffer
         */},{key:"remove",value:function remove(start,end){removeCuesFromTrack(start,end,this.subtitlesTrack_);}/**
         * fill the buffer with segements unless the sourceBuffers are
         * currently updating
         *
         * Note: this function should only ever be called by monitorBuffer_
         * and never directly
         *
         * @private
         */},{key:"fillBuffer_",value:function fillBuffer_(){var _this209=this;// see if we need to begin loading immediately
var segmentInfo=this.chooseNextRequest_();if(!segmentInfo){return;}if(this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline)===null){// We don't have the timestamp offset that we need to sync subtitles.
// Rerun on a timestamp offset or user interaction.
var checkTimestampOffset=function checkTimestampOffset(){_this209.state='READY';if(!_this209.paused()){// if not paused, queue a buffer check as soon as possible
_this209.monitorBuffer_();}};this.syncController_.one('timestampoffset',checkTimestampOffset);this.state='WAITING_ON_TIMELINE';return;}this.loadSegment_(segmentInfo);}// never set a timestamp offset for vtt segments.
},{key:"timestampOffsetForSegment_",value:function timestampOffsetForSegment_(){return null;}},{key:"chooseNextRequest_",value:function chooseNextRequest_(){return this.skipEmptySegments_(_get(_getPrototypeOf(VTTSegmentLoader.prototype),"chooseNextRequest_",this).call(this));}/**
         * Prevents the segment loader from requesting segments we know contain no subtitles
         * by walking forward until we find the next segment that we don't know whether it is
         * empty or not.
         *
         * @param {Object} segmentInfo
         *        a segment info object that describes the current segment
         * @return {Object}
         *         a segment info object that describes the current segment
         */},{key:"skipEmptySegments_",value:function skipEmptySegments_(segmentInfo){while(segmentInfo&&segmentInfo.segment.empty){// stop at the last possible segmentInfo
if(segmentInfo.mediaIndex+1>=segmentInfo.playlist.segments.length){segmentInfo=null;break;}segmentInfo=this.generateSegmentInfo_({playlist:segmentInfo.playlist,mediaIndex:segmentInfo.mediaIndex+1,startOfSegment:segmentInfo.startOfSegment+segmentInfo.duration,isSyncRequest:segmentInfo.isSyncRequest});}return segmentInfo;}},{key:"stopForError",value:function stopForError(error){this.error(error);this.state='READY';this.pause();this.trigger('error');}/**
         * append a decrypted segement to the SourceBuffer through a SourceUpdater
         *
         * @private
         */},{key:"segmentRequestFinished_",value:function segmentRequestFinished_(error,simpleSegment,result){var _this210=this;if(!this.subtitlesTrack_){this.state='READY';return;}this.saveTransferStats_(simpleSegment.stats);// the request was aborted
if(!this.pendingSegment_){this.state='READY';this.mediaRequestsAborted+=1;return;}if(error){if(error.code===REQUEST_ERRORS.TIMEOUT){this.handleTimeout_();}if(error.code===REQUEST_ERRORS.ABORTED){this.mediaRequestsAborted+=1;}else{this.mediaRequestsErrored+=1;}this.stopForError(error);return;}var segmentInfo=this.pendingSegment_;// although the VTT segment loader bandwidth isn't really used, it's good to
// maintain functionality between segment loaders
this.saveBandwidthRelatedStats_(segmentInfo.duration,simpleSegment.stats);// if this request included a segment key, save that data in the cache
if(simpleSegment.key){this.segmentKey(simpleSegment.key,true);}this.state='APPENDING';// used for tests
this.trigger('appending');var segment=segmentInfo.segment;if(segment.map){segment.map.bytes=simpleSegment.map.bytes;}segmentInfo.bytes=simpleSegment.bytes;// Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading
if(typeof window_1.WebVTT!=='function'&&typeof this.loadVttJs==='function'){this.state='WAITING_ON_VTTJS';// should be fine to call multiple times
// script will be loaded once but multiple listeners will be added to the queue, which is expected.
this.loadVttJs().then(function(){return _this210.segmentRequestFinished_(error,simpleSegment,result);},function(){return _this210.stopForError({message:'Error loading vtt.js',metadata:{errorType:videojs.Error.VttLoadError}});});return;}segment.requested=true;try{this.parseVTTCues_(segmentInfo);}catch(e){this.stopForError({message:e.message,metadata:{errorType:videojs.Error.VttCueParsingError}});return;}this.updateTimeMapping_(segmentInfo,this.syncController_.timelines[segmentInfo.timeline],this.playlist_);if(segmentInfo.cues.length){segmentInfo.timingInfo={start:segmentInfo.cues[0].startTime,end:segmentInfo.cues[segmentInfo.cues.length-1].endTime};}else{segmentInfo.timingInfo={start:segmentInfo.startOfSegment,end:segmentInfo.startOfSegment+segmentInfo.duration};}if(segmentInfo.isSyncRequest){this.trigger('syncinfoupdate');this.pendingSegment_=null;this.state='READY';return;}segmentInfo.byteLength=segmentInfo.bytes.byteLength;this.mediaSecondsLoaded+=segment.duration;// Create VTTCue instances for each cue in the new segment and add them to
// the subtitle track
segmentInfo.cues.forEach(function(cue){_this210.subtitlesTrack_.addCue(_this210.featuresNativeTextTracks_?new window_1.VTTCue(cue.startTime,cue.endTime,cue.text):cue);});// Remove any duplicate cues from the subtitle track. The WebVTT spec allows
// cues to have identical time-intervals, but if the text is also identical
// we can safely assume it is a duplicate that can be removed (ex. when a cue
// "overlaps" VTT segments)
removeDuplicateCuesFromTrack(this.subtitlesTrack_);this.handleAppendsDone_();}},{key:"handleData_",value:function handleData_(){// noop as we shouldn't be getting video/audio data captions
// that we do not support here.
}},{key:"updateTimingInfoEnd_",value:function updateTimingInfoEnd_(){// noop
}/**
         * Uses the WebVTT parser to parse the segment response
         *
         * @throws NoVttJsError
         *
         * @param {Object} segmentInfo
         *        a segment info object that describes the current segment
         * @private
         */},{key:"parseVTTCues_",value:function parseVTTCues_(segmentInfo){var decoder;var decodeBytesToString=false;if(typeof window_1.WebVTT!=='function'){// caller is responsible for exception handling.
throw new NoVttJsError();}if(typeof window_1.TextDecoder==='function'){decoder=new window_1.TextDecoder('utf8');}else{decoder=window_1.WebVTT.StringDecoder();decodeBytesToString=true;}var parser=new window_1.WebVTT.Parser(window_1,window_1.vttjs,decoder);segmentInfo.cues=[];segmentInfo.timestampmap={MPEGTS:0,LOCAL:0};parser.oncue=segmentInfo.cues.push.bind(segmentInfo.cues);parser.ontimestampmap=function(map){segmentInfo.timestampmap=map;};parser.onparsingerror=function(error){videojs.log.warn('Error encountered when parsing cues: '+error.message);};if(segmentInfo.segment.map){var mapData=segmentInfo.segment.map.bytes;if(decodeBytesToString){mapData=uint8ToUtf8(mapData);}parser.parse(mapData);}var segmentData=segmentInfo.bytes;if(decodeBytesToString){segmentData=uint8ToUtf8(segmentData);}parser.parse(segmentData);parser.flush();}/**
         * Updates the start and end times of any cues parsed by the WebVTT parser using
         * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping
         * from the SyncController
         *
         * @param {Object} segmentInfo
         *        a segment info object that describes the current segment
         * @param {Object} mappingObj
         *        object containing a mapping from TS to media time
         * @param {Object} playlist
         *        the playlist object containing the segment
         * @private
         */},{key:"updateTimeMapping_",value:function updateTimeMapping_(segmentInfo,mappingObj,playlist){var _this211=this;var segment=segmentInfo.segment;if(!mappingObj){// If the sync controller does not have a mapping of TS to Media Time for the
// timeline, then we don't have enough information to update the cue
// start/end times
return;}if(!segmentInfo.cues.length){// If there are no cues, we also do not have enough information to figure out
// segment timing. Mark that the segment contains no cues so we don't re-request
// an empty segment.
segment.empty=true;return;}var _segmentInfo$timestam=segmentInfo.timestampmap,MPEGTS=_segmentInfo$timestam.MPEGTS,LOCAL=_segmentInfo$timestam.LOCAL;/**
           * From the spec:
           * The MPEGTS media timestamp MUST use a 90KHz timescale,
           * even when non-WebVTT Media Segments use a different timescale.
           */var mpegTsInSeconds=MPEGTS/clock.ONE_SECOND_IN_TS;var diff=mpegTsInSeconds-LOCAL+mappingObj.mapping;segmentInfo.cues.forEach(function(cue){var duration=cue.endTime-cue.startTime;var startTime=MPEGTS===0?cue.startTime+diff:_this211.handleRollover_(cue.startTime+diff,mappingObj.time);cue.startTime=Math.max(startTime,0);cue.endTime=Math.max(startTime+duration,0);});if(!playlist.syncInfo){var firstStart=segmentInfo.cues[0].startTime;var lastStart=segmentInfo.cues[segmentInfo.cues.length-1].startTime;playlist.syncInfo={mediaSequence:playlist.mediaSequence+segmentInfo.mediaIndex,time:Math.min(firstStart,lastStart-segment.duration)};}}/**
         * MPEG-TS PES timestamps are limited to 2^33.
         * Once they reach 2^33, they roll over to 0.
         * mux.js handles PES timestamp rollover for the following scenarios:
         * [forward rollover(right)] ->
         *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0
         * [backward rollover(left)] -->
         *    we seek back to position before rollover.
         *
         * According to the HLS SPEC:
         * When synchronizing WebVTT with PES timestamps, clients SHOULD account
         * for cases where the 33-bit PES timestamps have wrapped and the WebVTT
         * cue times have not.  When the PES timestamp wraps, the WebVTT Segment
         * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT
         * time to the new (low valued) PES timestamp.
         *
         * So we want to handle rollover here and align VTT Cue start/end time to the player's time.
         */},{key:"handleRollover_",value:function handleRollover_(value,reference){if(reference===null){return value;}var valueIn90khz=value*clock.ONE_SECOND_IN_TS;var referenceIn90khz=reference*clock.ONE_SECOND_IN_TS;var offset;if(referenceIn90khz<valueIn90khz){// - 2^33
offset=-8589934592;}else{// + 2^33
offset=8589934592;}// distance(value - reference) > 2^32
while(Math.abs(valueIn90khz-referenceIn90khz)>4294967296){valueIn90khz+=offset;}return valueIn90khz/clock.ONE_SECOND_IN_TS;}}]);return VTTSegmentLoader;}(SegmentLoader);/**
       * @file ad-cue-tags.js
       */ /**
       * Searches for an ad cue that overlaps with the given mediaTime
       *
       * @param {Object} track
       *        the track to find the cue for
       *
       * @param {number} mediaTime
       *        the time to find the cue at
       *
       * @return {Object|null}
       *         the found cue or null
       */var findAdCue=function findAdCue(track,mediaTime){var cues=track.cues;for(var _i188=0;_i188<cues.length;_i188++){var cue=cues[_i188];if(mediaTime>=cue.adStartTime&&mediaTime<=cue.adEndTime){return cue;}}return null;};var updateAdCues=function updateAdCues(media,track){var offset=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(!media.segments){return;}var mediaTime=offset;var cue;for(var _i189=0;_i189<media.segments.length;_i189++){var segment=media.segments[_i189];if(!cue){// Since the cues will span for at least the segment duration, adding a fudge
// factor of half segment duration will prevent duplicate cues from being
// created when timing info is not exact (e.g. cue start time initialized
// at 10.006677, but next call mediaTime is 10.003332 )
cue=findAdCue(track,mediaTime+segment.duration/2);}if(cue){if('cueIn'in segment){// Found a CUE-IN so end the cue
cue.endTime=mediaTime;cue.adEndTime=mediaTime;mediaTime+=segment.duration;cue=null;continue;}if(mediaTime<cue.endTime){// Already processed this mediaTime for this cue
mediaTime+=segment.duration;continue;}// otherwise extend cue until a CUE-IN is found
cue.endTime+=segment.duration;}else{if('cueOut'in segment){cue=new window_1.VTTCue(mediaTime,mediaTime+segment.duration,segment.cueOut);cue.adStartTime=mediaTime;// Assumes tag format to be
// #EXT-X-CUE-OUT:30
cue.adEndTime=mediaTime+parseFloat(segment.cueOut);track.addCue(cue);}if('cueOutCont'in segment){// Entered into the middle of an ad cue
// Assumes tag formate to be
// #EXT-X-CUE-OUT-CONT:10/30
var _segment$cueOutCont$s=segment.cueOutCont.split('/').map(parseFloat),_segment$cueOutCont$s2=_slicedToArray(_segment$cueOutCont$s,2),adOffset=_segment$cueOutCont$s2[0],adTotal=_segment$cueOutCont$s2[1];cue=new window_1.VTTCue(mediaTime,mediaTime+segment.duration,'');cue.adStartTime=mediaTime-adOffset;cue.adEndTime=cue.adStartTime+adTotal;track.addCue(cue);}}mediaTime+=segment.duration;}};var SyncInfo=/*#__PURE__*/function(){/**
         * @param {number} start - media sequence start
         * @param {number} end - media sequence end
         * @param {number} segmentIndex - index for associated segment
         * @param {number|null} [partIndex] - index for associated part
         * @param {boolean} [appended] - appended indicator
         *
         */function SyncInfo(_ref211){var start=_ref211.start,end=_ref211.end,segmentIndex=_ref211.segmentIndex,_ref211$partIndex=_ref211.partIndex,partIndex=_ref211$partIndex===void 0?null:_ref211$partIndex,_ref211$appended=_ref211.appended,appended=_ref211$appended===void 0?false:_ref211$appended;_classCallCheck(this,SyncInfo);this.start_=start;this.end_=end;this.segmentIndex_=segmentIndex;this.partIndex_=partIndex;this.appended_=appended;}_createClass(SyncInfo,[{key:"isInRange",value:function isInRange(targetTime){return targetTime>=this.start&&targetTime<this.end;}},{key:"markAppended",value:function markAppended(){this.appended_=true;}},{key:"resetAppendedStatus",value:function resetAppendedStatus(){this.appended_=false;}},{key:"isAppended",get:function get(){return this.appended_;}},{key:"start",get:function get(){return this.start_;}},{key:"end",get:function get(){return this.end_;}},{key:"segmentIndex",get:function get(){return this.segmentIndex_;}},{key:"partIndex",get:function get(){return this.partIndex_;}}]);return SyncInfo;}();var SyncInfoData=/*#__PURE__*/function(){/**
         *
         * @param {SyncInfo} segmentSyncInfo - sync info for a given segment
         * @param {Array<SyncInfo>} [partsSyncInfo] - sync infos for a list of parts for a given segment
         */function SyncInfoData(segmentSyncInfo){var partsSyncInfo=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,SyncInfoData);this.segmentSyncInfo_=segmentSyncInfo;this.partsSyncInfo_=partsSyncInfo;}_createClass(SyncInfoData,[{key:"segmentSyncInfo",get:function get(){return this.segmentSyncInfo_;}},{key:"partsSyncInfo",get:function get(){return this.partsSyncInfo_;}},{key:"hasPartsSyncInfo",get:function get(){return this.partsSyncInfo_.length>0;}},{key:"resetAppendStatus",value:function resetAppendStatus(){this.segmentSyncInfo_.resetAppendedStatus();this.partsSyncInfo_.forEach(function(partSyncInfo){return partSyncInfo.resetAppendedStatus();});}}]);return SyncInfoData;}();var MediaSequenceSync=/*#__PURE__*/function(){function MediaSequenceSync(){_classCallCheck(this,MediaSequenceSync);/**
           * @type {Map<number, SyncInfoData>}
           * @protected
           */this.storage_=new Map();this.diagnostics_='';this.isReliable_=false;this.start_=-Infinity;this.end_=Infinity;}_createClass(MediaSequenceSync,[{key:"start",get:function get(){return this.start_;}},{key:"end",get:function get(){return this.end_;}},{key:"diagnostics",get:function get(){return this.diagnostics_;}},{key:"isReliable",get:function get(){return this.isReliable_;}},{key:"resetAppendedStatus",value:function resetAppendedStatus(){this.storage_.forEach(function(syncInfoData){return syncInfoData.resetAppendStatus();});}/**
         * update sync storage
         *
         * @param {Object} playlist
         * @param {number} currentTime
         *
         * @return {void}
         */},{key:"update",value:function update(playlist,currentTime){var mediaSequence=playlist.mediaSequence,segments=playlist.segments;this.isReliable_=this.isReliablePlaylist_(mediaSequence,segments);if(!this.isReliable_){return;}return this.updateStorage_(segments,mediaSequence,this.calculateBaseTime_(mediaSequence,currentTime));}/**
         * @param {number} targetTime
         * @return {SyncInfo|null}
         */},{key:"getSyncInfoForTime",value:function getSyncInfoForTime(targetTime){var _iterator15=_createForOfIteratorHelper(this.storage_.values()),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var _step15$value=_step15.value,segmentSyncInfo=_step15$value.segmentSyncInfo,partsSyncInfo=_step15$value.partsSyncInfo;// Normal segment flow:
if(!partsSyncInfo.length){if(segmentSyncInfo.isInRange(targetTime)){return segmentSyncInfo;}}else{// Low latency flow:
var _iterator16=_createForOfIteratorHelper(partsSyncInfo),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var partSyncInfo=_step16.value;if(partSyncInfo.isInRange(targetTime)){return partSyncInfo;}}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}}}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}return null;}},{key:"getSyncInfoForMediaSequence",value:function getSyncInfoForMediaSequence(mediaSequence){return this.storage_.get(mediaSequence);}},{key:"updateStorage_",value:function updateStorage_(segments,startingMediaSequence,startingTime){var _this212=this;var newStorage=new Map();var newDiagnostics='\n';var currentStart=startingTime;var currentMediaSequence=startingMediaSequence;this.start_=currentStart;segments.forEach(function(segment,segmentIndex){var prevSyncInfoData=_this212.storage_.get(currentMediaSequence);var segmentStart=currentStart;var segmentEnd=segmentStart+segment.duration;var segmentIsAppended=Boolean(prevSyncInfoData&&prevSyncInfoData.segmentSyncInfo&&prevSyncInfoData.segmentSyncInfo.isAppended);var segmentSyncInfo=new SyncInfo({start:segmentStart,end:segmentEnd,appended:segmentIsAppended,segmentIndex:segmentIndex});segment.syncInfo=segmentSyncInfo;var currentPartStart=currentStart;var partsSyncInfo=(segment.parts||[]).map(function(part,partIndex){var partStart=currentPartStart;var partEnd=currentPartStart+part.duration;var partIsAppended=Boolean(prevSyncInfoData&&prevSyncInfoData.partsSyncInfo&&prevSyncInfoData.partsSyncInfo[partIndex]&&prevSyncInfoData.partsSyncInfo[partIndex].isAppended);var partSyncInfo=new SyncInfo({start:partStart,end:partEnd,appended:partIsAppended,segmentIndex:segmentIndex,partIndex:partIndex});currentPartStart=partEnd;newDiagnostics+="Media Sequence: ".concat(currentMediaSequence,".").concat(partIndex," | Range: ").concat(partStart," --> ").concat(partEnd," | Appended: ").concat(partIsAppended,"\n");part.syncInfo=partSyncInfo;return partSyncInfo;});newStorage.set(currentMediaSequence,new SyncInfoData(segmentSyncInfo,partsSyncInfo));newDiagnostics+="".concat(compactSegmentUrlDescription(segment.resolvedUri)," | Media Sequence: ").concat(currentMediaSequence," | Range: ").concat(segmentStart," --> ").concat(segmentEnd," | Appended: ").concat(segmentIsAppended,"\n");currentMediaSequence++;currentStart=segmentEnd;});this.end_=currentStart;this.storage_=newStorage;this.diagnostics_=newDiagnostics;}},{key:"calculateBaseTime_",value:function calculateBaseTime_(mediaSequence,fallback){if(!this.storage_.size){// Initial setup flow.
return 0;}if(this.storage_.has(mediaSequence)){// Normal flow.
return this.storage_.get(mediaSequence).segmentSyncInfo.start;}// Fallback flow.
// There is a gap between last recorded playlist and a new one received.
return fallback;}},{key:"isReliablePlaylist_",value:function isReliablePlaylist_(mediaSequence,segments){return mediaSequence!==undefined&&mediaSequence!==null&&Array.isArray(segments)&&segments.length;}}]);return MediaSequenceSync;}();var DependantMediaSequenceSync=/*#__PURE__*/function(_MediaSequenceSync){_inherits(DependantMediaSequenceSync,_MediaSequenceSync);var _super100=_createSuper(DependantMediaSequenceSync);function DependantMediaSequenceSync(parent){var _this213;_classCallCheck(this,DependantMediaSequenceSync);_this213=_super100.call(this);_this213.parent_=parent;return _this213;}_createClass(DependantMediaSequenceSync,[{key:"calculateBaseTime_",value:function calculateBaseTime_(mediaSequence,fallback){if(!this.storage_.size){var info=this.parent_.getSyncInfoForMediaSequence(mediaSequence);if(info){return info.segmentSyncInfo.start;}return 0;}return _get(_getPrototypeOf(DependantMediaSequenceSync.prototype),"calculateBaseTime_",this).call(this,mediaSequence,fallback);}}]);return DependantMediaSequenceSync;}(MediaSequenceSync);/**
       * @file sync-controller.js
       */ // synchronize expired playlist segments.
// the max media sequence diff is 48 hours of live stream
// content with two second segments. Anything larger than that
// will likely be invalid.
var MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC=86400;var syncPointStrategies=[// Stategy "VOD": Handle the VOD-case where the sync-point is *always*
//                the equivalence display-time 0 === segment-index 0
{name:'VOD',run:function run(syncController,playlist,duration,currentTimeline,currentTime){if(duration!==Infinity){var syncPoint={time:0,segmentIndex:0,partIndex:null};return syncPoint;}return null;}},{name:'MediaSequence',/**
         * run media sequence strategy
         *
         * @param {SyncController} syncController
         * @param {Object} playlist
         * @param {number} duration
         * @param {number} currentTimeline
         * @param {number} currentTime
         * @param {string} type
         */run:function run(syncController,playlist,duration,currentTimeline,currentTime,type){var mediaSequenceSync=syncController.getMediaSequenceSync(type);if(!mediaSequenceSync){return null;}if(!mediaSequenceSync.isReliable){return null;}var syncInfo=mediaSequenceSync.getSyncInfoForTime(currentTime);if(!syncInfo){return null;}return{time:syncInfo.start,partIndex:syncInfo.partIndex,segmentIndex:syncInfo.segmentIndex};}},// Stategy "ProgramDateTime": We have a program-date-time tag in this playlist
{name:'ProgramDateTime',run:function run(syncController,playlist,duration,currentTimeline,currentTime){if(!Object.keys(syncController.timelineToDatetimeMappings).length){return null;}var syncPoint=null;var lastDistance=null;var partsAndSegments=getPartsAndSegments(playlist);currentTime=currentTime||0;for(var _i190=0;_i190<partsAndSegments.length;_i190++){// start from the end and loop backwards for live
// or start from the front and loop forwards for non-live
var _index7=playlist.endList||currentTime===0?_i190:partsAndSegments.length-(_i190+1);var partAndSegment=partsAndSegments[_index7];var segment=partAndSegment.segment;var datetimeMapping=syncController.timelineToDatetimeMappings[segment.timeline];if(!datetimeMapping||!segment.dateTimeObject){continue;}var segmentTime=segment.dateTimeObject.getTime()/1000;var start=segmentTime+datetimeMapping;// take part duration into account.
if(segment.parts&&typeof partAndSegment.partIndex==='number'){for(var _z=0;_z<partAndSegment.partIndex;_z++){start+=segment.parts[_z].duration;}}var distance=Math.abs(currentTime-start);// Once the distance begins to increase, or if distance is 0, we have passed
// currentTime and can stop looking for better candidates
if(lastDistance!==null&&(distance===0||lastDistance<distance)){break;}lastDistance=distance;syncPoint={time:start,segmentIndex:partAndSegment.segmentIndex,partIndex:partAndSegment.partIndex};}return syncPoint;}},// Stategy "Segment": We have a known time mapping for a timeline and a
//                    segment in the current timeline with timing data
{name:'Segment',run:function run(syncController,playlist,duration,currentTimeline,currentTime){var syncPoint=null;var lastDistance=null;currentTime=currentTime||0;var partsAndSegments=getPartsAndSegments(playlist);for(var _i191=0;_i191<partsAndSegments.length;_i191++){// start from the end and loop backwards for live
// or start from the front and loop forwards for non-live
var _index8=playlist.endList||currentTime===0?_i191:partsAndSegments.length-(_i191+1);var partAndSegment=partsAndSegments[_index8];var segment=partAndSegment.segment;var start=partAndSegment.part&&partAndSegment.part.start||segment&&segment.start;if(segment.timeline===currentTimeline&&typeof start!=='undefined'){var distance=Math.abs(currentTime-start);// Once the distance begins to increase, we have passed
// currentTime and can stop looking for better candidates
if(lastDistance!==null&&lastDistance<distance){break;}if(!syncPoint||lastDistance===null||lastDistance>=distance){lastDistance=distance;syncPoint={time:start,segmentIndex:partAndSegment.segmentIndex,partIndex:partAndSegment.partIndex};}}}return syncPoint;}},// Stategy "Discontinuity": We have a discontinuity with a known
//                          display-time
{name:'Discontinuity',run:function run(syncController,playlist,duration,currentTimeline,currentTime){var syncPoint=null;currentTime=currentTime||0;if(playlist.discontinuityStarts&&playlist.discontinuityStarts.length){var lastDistance=null;for(var _i192=0;_i192<playlist.discontinuityStarts.length;_i192++){var segmentIndex=playlist.discontinuityStarts[_i192];var discontinuity=playlist.discontinuitySequence+_i192+1;var discontinuitySync=syncController.discontinuities[discontinuity];if(discontinuitySync){var distance=Math.abs(currentTime-discontinuitySync.time);// Once the distance begins to increase, we have passed
// currentTime and can stop looking for better candidates
if(lastDistance!==null&&lastDistance<distance){break;}if(!syncPoint||lastDistance===null||lastDistance>=distance){lastDistance=distance;syncPoint={time:discontinuitySync.time,segmentIndex:segmentIndex,partIndex:null};}}}}return syncPoint;}},// Stategy "Playlist": We have a playlist with a known mapping of
//                     segment index to display time
{name:'Playlist',run:function run(syncController,playlist,duration,currentTimeline,currentTime){if(playlist.syncInfo){var syncPoint={time:playlist.syncInfo.time,segmentIndex:playlist.syncInfo.mediaSequence-playlist.mediaSequence,partIndex:null};return syncPoint;}return null;}}];var SyncController=/*#__PURE__*/function(_videojs$EventTarget4){_inherits(SyncController,_videojs$EventTarget4);var _super101=_createSuper(SyncController);function SyncController(){var _this214;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,SyncController);_this214=_super101.call(this);// ...for synching across variants
_this214.timelines=[];_this214.discontinuities=[];_this214.timelineToDatetimeMappings={};// TODO: this map should be only available for HLS. Since only HLS has MediaSequence.
//  For some reason this map helps with syncing between quality switch for MPEG-DASH as well.
//  Moreover if we disable this map for MPEG-DASH - quality switch will be broken.
//  MPEG-DASH should have its own separate sync strategy
var main=new MediaSequenceSync();var audio=new DependantMediaSequenceSync(main);var vtt=new DependantMediaSequenceSync(main);_this214.mediaSequenceStorage_={main:main,audio:audio,vtt:vtt};_this214.logger_=logger('SyncController');return _this214;}/**
         *
         * @param {string} loaderType
         * @return {MediaSequenceSync|null}
         */_createClass(SyncController,[{key:"getMediaSequenceSync",value:function getMediaSequenceSync(loaderType){return this.mediaSequenceStorage_[loaderType]||null;}/**
         * Find a sync-point for the playlist specified
         *
         * A sync-point is defined as a known mapping from display-time to
         * a segment-index in the current playlist.
         *
         * @param {Playlist} playlist
         *        The playlist that needs a sync-point
         * @param {number} duration
         *        Duration of the MediaSource (Infinite if playing a live source)
         * @param {number} currentTimeline
         *        The last timeline from which a segment was loaded
         * @param {number} currentTime
         *        Current player's time
         * @param {string} type
         *        Segment loader type
         * @return {Object}
         *          A sync-point object
         */},{key:"getSyncPoint",value:function getSyncPoint(playlist,duration,currentTimeline,currentTime,type){// Always use VOD sync point for VOD
if(duration!==Infinity){var vodSyncPointStrategy=syncPointStrategies.find(function(_ref212){var name=_ref212.name;return name==='VOD';});return vodSyncPointStrategy.run(this,playlist,duration);}var syncPoints=this.runStrategies_(playlist,duration,currentTimeline,currentTime,type);if(!syncPoints.length){// Signal that we need to attempt to get a sync-point manually
// by fetching a segment in the playlist and constructing
// a sync-point from that information
return null;}// If we have exact match just return it instead of finding the nearest distance
var _iterator17=_createForOfIteratorHelper(syncPoints),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var syncPointInfo=_step17.value;var syncPoint=syncPointInfo.syncPoint,strategy=syncPointInfo.strategy;var segmentIndex=syncPoint.segmentIndex,time=syncPoint.time;if(segmentIndex<0){continue;}var selectedSegment=playlist.segments[segmentIndex];var start=time;var _end8=start+selectedSegment.duration;this.logger_("Strategy: ".concat(strategy,". Current time: ").concat(currentTime,". selected segment: ").concat(segmentIndex,". Time: [").concat(start," -> ").concat(_end8,"]}"));if(currentTime>=start&&currentTime<_end8){this.logger_('Found sync point with exact match: ',syncPoint);return syncPoint;}}// Now find the sync-point that is closest to the currentTime because
// that should result in the most accurate guess about which segment
// to fetch
}catch(err){_iterator17.e(err);}finally{_iterator17.f();}return this.selectSyncPoint_(syncPoints,{key:'time',value:currentTime});}/**
         * Calculate the amount of time that has expired off the playlist during playback
         *
         * @param {Playlist} playlist
         *        Playlist object to calculate expired from
         * @param {number} duration
         *        Duration of the MediaSource (Infinity if playling a live source)
         * @return {number|null}
         *          The amount of time that has expired off the playlist during playback. Null
         *          if no sync-points for the playlist can be found.
         */},{key:"getExpiredTime",value:function getExpiredTime(playlist,duration){if(!playlist||!playlist.segments){return null;}var syncPoints=this.runStrategies_(playlist,duration,playlist.discontinuitySequence,0);// Without sync-points, there is not enough information to determine the expired time
if(!syncPoints.length){return null;}var syncPoint=this.selectSyncPoint_(syncPoints,{key:'segmentIndex',value:0});// If the sync-point is beyond the start of the playlist, we want to subtract the
// duration from index 0 to syncPoint.segmentIndex instead of adding.
if(syncPoint.segmentIndex>0){syncPoint.time*=-1;}return Math.abs(syncPoint.time+sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:syncPoint.segmentIndex,endIndex:0}));}/**
         * Runs each sync-point strategy and returns a list of sync-points returned by the
         * strategies
         *
         * @private
         * @param {Playlist} playlist
         *        The playlist that needs a sync-point
         * @param {number} duration
         *        Duration of the MediaSource (Infinity if playing a live source)
         * @param {number} currentTimeline
         *        The last timeline from which a segment was loaded
         * @param {number} currentTime
         *        Current player's time
         * @param {string} type
         *        Segment loader type
         * @return {Array}
         *          A list of sync-point objects
         */},{key:"runStrategies_",value:function runStrategies_(playlist,duration,currentTimeline,currentTime,type){var syncPoints=[];// Try to find a sync-point in by utilizing various strategies...
for(var _i193=0;_i193<syncPointStrategies.length;_i193++){var strategy=syncPointStrategies[_i193];var syncPoint=strategy.run(this,playlist,duration,currentTimeline,currentTime,type);if(syncPoint){syncPoint.strategy=strategy.name;syncPoints.push({strategy:strategy.name,syncPoint:syncPoint});}}return syncPoints;}/**
         * Selects the sync-point nearest the specified target
         *
         * @private
         * @param {Array} syncPoints
         *        List of sync-points to select from
         * @param {Object} target
         *        Object specifying the property and value we are targeting
         * @param {string} target.key
         *        Specifies the property to target. Must be either 'time' or 'segmentIndex'
         * @param {number} target.value
         *        The value to target for the specified key.
         * @return {Object}
         *          The sync-point nearest the target
         */},{key:"selectSyncPoint_",value:function selectSyncPoint_(syncPoints,target){var bestSyncPoint=syncPoints[0].syncPoint;var bestDistance=Math.abs(syncPoints[0].syncPoint[target.key]-target.value);var bestStrategy=syncPoints[0].strategy;for(var _i194=1;_i194<syncPoints.length;_i194++){var newDistance=Math.abs(syncPoints[_i194].syncPoint[target.key]-target.value);if(newDistance<bestDistance){bestDistance=newDistance;bestSyncPoint=syncPoints[_i194].syncPoint;bestStrategy=syncPoints[_i194].strategy;}}this.logger_("syncPoint for [".concat(target.key,": ").concat(target.value,"] chosen with strategy")+" [".concat(bestStrategy,"]: [time:").concat(bestSyncPoint.time,",")+" segmentIndex:".concat(bestSyncPoint.segmentIndex)+(typeof bestSyncPoint.partIndex==='number'?",partIndex:".concat(bestSyncPoint.partIndex):'')+']');return bestSyncPoint;}/**
         * Save any meta-data present on the segments when segments leave
         * the live window to the playlist to allow for synchronization at the
         * playlist level later.
         *
         * @param {Playlist} oldPlaylist - The previous active playlist
         * @param {Playlist} newPlaylist - The updated and most current playlist
         */},{key:"saveExpiredSegmentInfo",value:function saveExpiredSegmentInfo(oldPlaylist,newPlaylist){var mediaSequenceDiff=newPlaylist.mediaSequence-oldPlaylist.mediaSequence;// Ignore large media sequence gaps
if(mediaSequenceDiff>MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC){videojs.log.warn("Not saving expired segment info. Media sequence gap ".concat(mediaSequenceDiff," is too large."));return;}// When a segment expires from the playlist and it has a start time
// save that information as a possible sync-point reference in future
for(var _i195=mediaSequenceDiff-1;_i195>=0;_i195--){var lastRemovedSegment=oldPlaylist.segments[_i195];if(lastRemovedSegment&&typeof lastRemovedSegment.start!=='undefined'){newPlaylist.syncInfo={mediaSequence:oldPlaylist.mediaSequence+_i195,time:lastRemovedSegment.start};this.logger_("playlist refresh sync: [time:".concat(newPlaylist.syncInfo.time,",")+" mediaSequence: ".concat(newPlaylist.syncInfo.mediaSequence,"]"));this.trigger('syncinfoupdate');break;}}}/**
         * Save the mapping from playlist's ProgramDateTime to display. This should only happen
         * before segments start to load.
         *
         * @param {Playlist} playlist - The currently active playlist
         */},{key:"setDateTimeMappingForStart",value:function setDateTimeMappingForStart(playlist){// It's possible for the playlist to be updated before playback starts, meaning time
// zero is not yet set. If, during these playlist refreshes, a discontinuity is
// crossed, then the old time zero mapping (for the prior timeline) would be retained
// unless the mappings are cleared.
this.timelineToDatetimeMappings={};if(playlist.segments&&playlist.segments.length&&playlist.segments[0].dateTimeObject){var firstSegment=playlist.segments[0];var playlistTimestamp=firstSegment.dateTimeObject.getTime()/1000;this.timelineToDatetimeMappings[firstSegment.timeline]=-playlistTimestamp;}}/**
         * Calculates and saves timeline mappings, playlist sync info, and segment timing values
         * based on the latest timing information.
         *
         * @param {Object} options
         *        Options object
         * @param {SegmentInfo} options.segmentInfo
         *        The current active request information
         * @param {boolean} options.shouldSaveTimelineMapping
         *        If there's a timeline change, determines if the timeline mapping should be
         *        saved for timeline mapping and program date time mappings.
         */},{key:"saveSegmentTimingInfo",value:function saveSegmentTimingInfo(_ref213){var segmentInfo=_ref213.segmentInfo,shouldSaveTimelineMapping=_ref213.shouldSaveTimelineMapping;var didCalculateSegmentTimeMapping=this.calculateSegmentTimeMapping_(segmentInfo,segmentInfo.timingInfo,shouldSaveTimelineMapping);var segment=segmentInfo.segment;if(didCalculateSegmentTimeMapping){this.saveDiscontinuitySyncInfo_(segmentInfo);// If the playlist does not have sync information yet, record that information
// now with segment timing information
if(!segmentInfo.playlist.syncInfo){segmentInfo.playlist.syncInfo={mediaSequence:segmentInfo.playlist.mediaSequence+segmentInfo.mediaIndex,time:segment.start};}}var dateTime=segment.dateTimeObject;if(segment.discontinuity&&shouldSaveTimelineMapping&&dateTime){this.timelineToDatetimeMappings[segment.timeline]=-(dateTime.getTime()/1000);}}},{key:"timestampOffsetForTimeline",value:function timestampOffsetForTimeline(timeline){if(typeof this.timelines[timeline]==='undefined'){return null;}return this.timelines[timeline].time;}},{key:"mappingForTimeline",value:function mappingForTimeline(timeline){if(typeof this.timelines[timeline]==='undefined'){return null;}return this.timelines[timeline].mapping;}/**
         * Use the "media time" for a segment to generate a mapping to "display time" and
         * save that display time to the segment.
         *
         * @private
         * @param {SegmentInfo} segmentInfo
         *        The current active request information
         * @param {Object} timingInfo
         *        The start and end time of the current segment in "media time"
         * @param {boolean} shouldSaveTimelineMapping
         *        If there's a timeline change, determines if the timeline mapping should be
         *        saved in timelines.
         * @return {boolean}
         *          Returns false if segment time mapping could not be calculated
         */},{key:"calculateSegmentTimeMapping_",value:function calculateSegmentTimeMapping_(segmentInfo,timingInfo,shouldSaveTimelineMapping){// TODO: remove side effects
var segment=segmentInfo.segment;var part=segmentInfo.part;var mappingObj=this.timelines[segmentInfo.timeline];var start;var end;if(typeof segmentInfo.timestampOffset==='number'){mappingObj={time:segmentInfo.startOfSegment,mapping:segmentInfo.startOfSegment-timingInfo.start};if(shouldSaveTimelineMapping){this.timelines[segmentInfo.timeline]=mappingObj;this.trigger('timestampoffset');this.logger_("time mapping for timeline ".concat(segmentInfo.timeline,": ")+"[time: ".concat(mappingObj.time,"] [mapping: ").concat(mappingObj.mapping,"]"));}start=segmentInfo.startOfSegment;end=timingInfo.end+mappingObj.mapping;}else if(mappingObj){start=timingInfo.start+mappingObj.mapping;end=timingInfo.end+mappingObj.mapping;}else{return false;}if(part){part.start=start;part.end=end;}// If we don't have a segment start yet or the start value we got
// is less than our current segment.start value, save a new start value.
// We have to do this because parts will have segment timing info saved
// multiple times and we want segment start to be the earliest part start
// value for that segment.
if(!segment.start||start<segment.start){segment.start=start;}segment.end=end;return true;}/**
         * Each time we have discontinuity in the playlist, attempt to calculate the location
         * in display of the start of the discontinuity and save that. We also save an accuracy
         * value so that we save values with the most accuracy (closest to 0.)
         *
         * @private
         * @param {SegmentInfo} segmentInfo - The current active request information
         */},{key:"saveDiscontinuitySyncInfo_",value:function saveDiscontinuitySyncInfo_(segmentInfo){var playlist=segmentInfo.playlist;var segment=segmentInfo.segment;// If the current segment is a discontinuity then we know exactly where
// the start of the range and it's accuracy is 0 (greater accuracy values
// mean more approximation)
if(segment.discontinuity){this.discontinuities[segment.timeline]={time:segment.start,accuracy:0};}else if(playlist.discontinuityStarts&&playlist.discontinuityStarts.length){// Search for future discontinuities that we can provide better timing
// information for and save that information for sync purposes
for(var _i196=0;_i196<playlist.discontinuityStarts.length;_i196++){var segmentIndex=playlist.discontinuityStarts[_i196];var discontinuity=playlist.discontinuitySequence+_i196+1;var mediaIndexDiff=segmentIndex-segmentInfo.mediaIndex;var accuracy=Math.abs(mediaIndexDiff);if(!this.discontinuities[discontinuity]||this.discontinuities[discontinuity].accuracy>accuracy){var time=void 0;if(mediaIndexDiff<0){time=segment.start-sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:segmentInfo.mediaIndex,endIndex:segmentIndex});}else{time=segment.end+sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:segmentInfo.mediaIndex+1,endIndex:segmentIndex});}this.discontinuities[discontinuity]={time:time,accuracy:accuracy};}}}}},{key:"dispose",value:function dispose(){this.trigger('dispose');this.off();}}]);return SyncController;}(videojs.EventTarget);/**
       * The TimelineChangeController acts as a source for segment loaders to listen for and
       * keep track of latest and pending timeline changes. This is useful to ensure proper
       * sync, as each loader may need to make a consideration for what timeline the other
       * loader is on before making changes which could impact the other loader's media.
       *
       * @class TimelineChangeController
       * @extends videojs.EventTarget
       */var TimelineChangeController=/*#__PURE__*/function(_videojs$EventTarget5){_inherits(TimelineChangeController,_videojs$EventTarget5);var _super102=_createSuper(TimelineChangeController);function TimelineChangeController(){var _this215;_classCallCheck(this,TimelineChangeController);_this215=_super102.call(this);_this215.pendingTimelineChanges_={};_this215.lastTimelineChanges_={};return _this215;}_createClass(TimelineChangeController,[{key:"clearPendingTimelineChange",value:function clearPendingTimelineChange(type){this.pendingTimelineChanges_[type]=null;this.trigger('pendingtimelinechange');}},{key:"pendingTimelineChange",value:function pendingTimelineChange(_ref214){var type=_ref214.type,from=_ref214.from,to=_ref214.to;if(typeof from==='number'&&typeof to==='number'){this.pendingTimelineChanges_[type]={type:type,from:from,to:to};this.trigger('pendingtimelinechange');}return this.pendingTimelineChanges_[type];}},{key:"lastTimelineChange",value:function lastTimelineChange(_ref215){var type=_ref215.type,from=_ref215.from,to=_ref215.to;if(typeof from==='number'&&typeof to==='number'){this.lastTimelineChanges_[type]={type:type,from:from,to:to};delete this.pendingTimelineChanges_[type];this.trigger('timelinechange');}return this.lastTimelineChanges_[type];}},{key:"dispose",value:function dispose(){this.trigger('dispose');this.pendingTimelineChanges_={};this.lastTimelineChanges_={};this.off();}}]);return TimelineChangeController;}(videojs.EventTarget);/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */var workerCode=transform(getWorkerString(function(){/**
         * @file stream.js
         */ /**
         * A lightweight readable stream implemention that handles event dispatching.
         *
         * @class Stream
         */var Stream=/*#__PURE__*/function(){function Stream(){this.listeners={};}/**
           * Add a listener for a specified event type.
           *
           * @param {string} type the event name
           * @param {Function} listener the callback to be invoked when an event of
           * the specified type occurs
           */var _proto=Stream.prototype;_proto.on=function on(type,listener){if(!this.listeners[type]){this.listeners[type]=[];}this.listeners[type].push(listener);}/**
           * Remove a listener for a specified event type.
           *
           * @param {string} type the event name
           * @param {Function} listener  a function previously registered for this
           * type of event through `on`
           * @return {boolean} if we could turn it off or not
           */;_proto.off=function off(type,listener){if(!this.listeners[type]){return false;}var index=this.listeners[type].indexOf(listener);// TODO: which is better?
// In Video.js we slice listener functions
// on trigger so that it does not mess up the order
// while we loop through.
//
// Here we slice on off so that the loop in trigger
// can continue using it's old reference to loop without
// messing up the order.
this.listeners[type]=this.listeners[type].slice(0);this.listeners[type].splice(index,1);return index>-1;}/**
           * Trigger an event of the specified type on this stream. Any additional
           * arguments to this function are passed as parameters to event listeners.
           *
           * @param {string} type the event name
           */;_proto.trigger=function trigger(type){var callbacks=this.listeners[type];if(!callbacks){return;}// Slicing the arguments on every invocation of this method
// can add a significant amount of overhead. Avoid the
// intermediate object creation for the common case of a
// single callback argument
if(arguments.length===2){var length=callbacks.length;for(var i=0;i<length;++i){callbacks[i].call(this,arguments[1]);}}else{var args=Array.prototype.slice.call(arguments,1);var _length=callbacks.length;for(var _i=0;_i<_length;++_i){callbacks[_i].apply(this,args);}}}/**
           * Destroys the stream and cleans up.
           */;_proto.dispose=function dispose(){this.listeners={};}/**
           * Forwards all `data` events on this stream to the destination stream. The
           * destination stream should provide a method `push` to receive the data
           * events as they arrive.
           *
           * @param {Stream} destination the stream that will receive all `data` events
           * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options
           */;_proto.pipe=function pipe(destination){this.on('data',function(data){destination.push(data);});};return Stream;}();/*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */ /**
         * Returns the subarray of a Uint8Array without PKCS#7 padding.
         *
         * @param padded {Uint8Array} unencrypted bytes that have been padded
         * @return {Uint8Array} the unpadded bytes
         * @see http://tools.ietf.org/html/rfc5652
         */function unpad(padded){return padded.subarray(0,padded.byteLength-padded[padded.byteLength-1]);}/*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */ /**
         * @file aes.js
         *
         * This file contains an adaptation of the AES decryption algorithm
         * from the Standford Javascript Cryptography Library. That work is
         * covered by the following copyright and permissions notice:
         *
         * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.
         * All rights reserved.
         *
         * Redistribution and use in source and binary forms, with or without
         * modification, are permitted provided that the following conditions are
         * met:
         *
         * 1. Redistributions of source code must retain the above copyright
         *    notice, this list of conditions and the following disclaimer.
         *
         * 2. Redistributions in binary form must reproduce the above
         *    copyright notice, this list of conditions and the following
         *    disclaimer in the documentation and/or other materials provided
         *    with the distribution.
         *
         * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
         * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
         * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
         * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE
         * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
         * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
         * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
         * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
         * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
         * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
         * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
         *
         * The views and conclusions contained in the software and documentation
         * are those of the authors and should not be interpreted as representing
         * official policies, either expressed or implied, of the authors.
         */ /**
         * Expand the S-box tables.
         *
         * @private
         */var precompute=function precompute(){var tables=[[[],[],[],[],[]],[[],[],[],[],[]]];var encTable=tables[0];var decTable=tables[1];var sbox=encTable[4];var sboxInv=decTable[4];var i;var x;var xInv;var d=[];var th=[];var x2;var x4;var x8;var s;var tEnc;var tDec;// Compute double and third tables
for(i=0;i<256;i++){th[(d[i]=i<<1^(i>>7)*283)^i]=i;}for(x=xInv=0;!sbox[x];x^=x2||1,xInv=th[xInv]||1){// Compute sbox
s=xInv^xInv<<1^xInv<<2^xInv<<3^xInv<<4;s=s>>8^s&255^99;sbox[x]=s;sboxInv[s]=x;// Compute MixColumns
x8=d[x4=d[x2=d[x]]];tDec=x8*0x1010101^x4*0x10001^x2*0x101^x*0x1010100;tEnc=d[s]*0x101^s*0x1010100;for(i=0;i<4;i++){encTable[i][x]=tEnc=tEnc<<24^tEnc>>>8;decTable[i][s]=tDec=tDec<<24^tDec>>>8;}}// Compactify. Considerable speedup on Firefox.
for(i=0;i<5;i++){encTable[i]=encTable[i].slice(0);decTable[i]=decTable[i].slice(0);}return tables;};var aesTables=null;/**
         * Schedule out an AES key for both encryption and decryption. This
         * is a low-level class. Use a cipher mode to do bulk encryption.
         *
         * @class AES
         * @param key {Array} The key as an array of 4, 6 or 8 words.
         */var AES=/*#__PURE__*/function(){function AES(key){_classCallCheck(this,AES);/**
            * The expanded S-box and inverse S-box tables. These will be computed
            * on the client so that we don't have to send them down the wire.
            *
            * There are two tables, _tables[0] is for encryption and
            * _tables[1] is for decryption.
            *
            * The first 4 sub-tables are the expanded S-box with MixColumns. The
            * last (_tables[01][4]) is the S-box itself.
            *
            * @private
            */ // if we have yet to precompute the S-box tables
// do so now
if(!aesTables){aesTables=precompute();}// then make a copy of that object for use
this._tables=[[aesTables[0][0].slice(),aesTables[0][1].slice(),aesTables[0][2].slice(),aesTables[0][3].slice(),aesTables[0][4].slice()],[aesTables[1][0].slice(),aesTables[1][1].slice(),aesTables[1][2].slice(),aesTables[1][3].slice(),aesTables[1][4].slice()]];var i;var j;var tmp;var sbox=this._tables[0][4];var decTable=this._tables[1];var keyLen=key.length;var rcon=1;if(keyLen!==4&&keyLen!==6&&keyLen!==8){throw new Error('Invalid aes key size');}var encKey=key.slice(0);var decKey=[];this._key=[encKey,decKey];// schedule encryption keys
for(i=keyLen;i<4*keyLen+28;i++){tmp=encKey[i-1];// apply sbox
if(i%keyLen===0||keyLen===8&&i%keyLen===4){tmp=sbox[tmp>>>24]<<24^sbox[tmp>>16&255]<<16^sbox[tmp>>8&255]<<8^sbox[tmp&255];// shift rows and add rcon
if(i%keyLen===0){tmp=tmp<<8^tmp>>>24^rcon<<24;rcon=rcon<<1^(rcon>>7)*283;}}encKey[i]=encKey[i-keyLen]^tmp;}// schedule decryption keys
for(j=0;i;j++,i--){tmp=encKey[j&3?i:i-4];if(i<=4||j<4){decKey[j]=tmp;}else{decKey[j]=decTable[0][sbox[tmp>>>24]]^decTable[1][sbox[tmp>>16&255]]^decTable[2][sbox[tmp>>8&255]]^decTable[3][sbox[tmp&255]];}}}/**
           * Decrypt 16 bytes, specified as four 32-bit words.
           *
           * @param {number} encrypted0 the first word to decrypt
           * @param {number} encrypted1 the second word to decrypt
           * @param {number} encrypted2 the third word to decrypt
           * @param {number} encrypted3 the fourth word to decrypt
           * @param {Int32Array} out the array to write the decrypted words
           * into
           * @param {number} offset the offset into the output array to start
           * writing results
           * @return {Array} The plaintext.
           */_createClass(AES,[{key:"decrypt",value:function decrypt(encrypted0,encrypted1,encrypted2,encrypted3,out,offset){var key=this._key[1];// state variables a,b,c,d are loaded with pre-whitened data
var a=encrypted0^key[0];var b=encrypted3^key[1];var c=encrypted2^key[2];var d=encrypted1^key[3];var a2;var b2;var c2;// key.length === 2 ?
var nInnerRounds=key.length/4-2;var i;var kIndex=4;var table=this._tables[1];// load up the tables
var table0=table[0];var table1=table[1];var table2=table[2];var table3=table[3];var sbox=table[4];// Inner rounds. Cribbed from OpenSSL.
for(i=0;i<nInnerRounds;i++){a2=table0[a>>>24]^table1[b>>16&255]^table2[c>>8&255]^table3[d&255]^key[kIndex];b2=table0[b>>>24]^table1[c>>16&255]^table2[d>>8&255]^table3[a&255]^key[kIndex+1];c2=table0[c>>>24]^table1[d>>16&255]^table2[a>>8&255]^table3[b&255]^key[kIndex+2];d=table0[d>>>24]^table1[a>>16&255]^table2[b>>8&255]^table3[c&255]^key[kIndex+3];kIndex+=4;a=a2;b=b2;c=c2;}// Last round.
for(i=0;i<4;i++){out[(3&-i)+offset]=sbox[a>>>24]<<24^sbox[b>>16&255]<<16^sbox[c>>8&255]<<8^sbox[d&255]^key[kIndex++];a2=a;a=b;b=c;c=d;d=a2;}}}]);return AES;}();/**
         * @file async-stream.js
         */ /**
         * A wrapper around the Stream class to use setTimeout
         * and run stream "jobs" Asynchronously
         *
         * @class AsyncStream
         * @extends Stream
         */var AsyncStream=/*#__PURE__*/function(_Stream4){_inherits(AsyncStream,_Stream4);var _super103=_createSuper(AsyncStream);function AsyncStream(){var _this216;_classCallCheck(this,AsyncStream);_this216=_super103.call(this,Stream);_this216.jobs=[];_this216.delay=1;_this216.timeout_=null;return _this216;}/**
           * process an async job
           *
           * @private
           */_createClass(AsyncStream,[{key:"processJob_",value:function processJob_(){this.jobs.shift()();if(this.jobs.length){this.timeout_=setTimeout(this.processJob_.bind(this),this.delay);}else{this.timeout_=null;}}/**
           * push a job into the stream
           *
           * @param {Function} job the job to push into the stream
           */},{key:"push",value:function push(job){this.jobs.push(job);if(!this.timeout_){this.timeout_=setTimeout(this.processJob_.bind(this),this.delay);}}}]);return AsyncStream;}(Stream);/**
         * @file decrypter.js
         *
         * An asynchronous implementation of AES-128 CBC decryption with
         * PKCS#7 padding.
         */ /**
         * Convert network-order (big-endian) bytes into their little-endian
         * representation.
         */var ntoh=function ntoh(word){return word<<24|(word&0xff00)<<8|(word&0xff0000)>>8|word>>>24;};/**
         * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.
         *
         * @param {Uint8Array} encrypted the encrypted bytes
         * @param {Uint32Array} key the bytes of the decryption key
         * @param {Uint32Array} initVector the initialization vector (IV) to
         * use for the first round of CBC.
         * @return {Uint8Array} the decrypted bytes
         *
         * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard
         * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29
         * @see https://tools.ietf.org/html/rfc2315
         */var decrypt=function decrypt(encrypted,key,initVector){// word-level access to the encrypted bytes
var encrypted32=new Int32Array(encrypted.buffer,encrypted.byteOffset,encrypted.byteLength>>2);var decipher=new AES(Array.prototype.slice.call(key));// byte and word-level access for the decrypted output
var decrypted=new Uint8Array(encrypted.byteLength);var decrypted32=new Int32Array(decrypted.buffer);// temporary variables for working with the IV, encrypted, and
// decrypted data
var init0;var init1;var init2;var init3;var encrypted0;var encrypted1;var encrypted2;var encrypted3;// iteration variable
var wordIx;// pull out the words of the IV to ensure we don't modify the
// passed-in reference and easier access
init0=initVector[0];init1=initVector[1];init2=initVector[2];init3=initVector[3];// decrypt four word sequences, applying cipher-block chaining (CBC)
// to each decrypted block
for(wordIx=0;wordIx<encrypted32.length;wordIx+=4){// convert big-endian (network order) words into little-endian
// (javascript order)
encrypted0=ntoh(encrypted32[wordIx]);encrypted1=ntoh(encrypted32[wordIx+1]);encrypted2=ntoh(encrypted32[wordIx+2]);encrypted3=ntoh(encrypted32[wordIx+3]);// decrypt the block
decipher.decrypt(encrypted0,encrypted1,encrypted2,encrypted3,decrypted32,wordIx);// XOR with the IV, and restore network byte-order to obtain the
// plaintext
decrypted32[wordIx]=ntoh(decrypted32[wordIx]^init0);decrypted32[wordIx+1]=ntoh(decrypted32[wordIx+1]^init1);decrypted32[wordIx+2]=ntoh(decrypted32[wordIx+2]^init2);decrypted32[wordIx+3]=ntoh(decrypted32[wordIx+3]^init3);// setup the IV for the next round
init0=encrypted0;init1=encrypted1;init2=encrypted2;init3=encrypted3;}return decrypted;};/**
         * The `Decrypter` class that manages decryption of AES
         * data through `AsyncStream` objects and the `decrypt`
         * function
         *
         * @param {Uint8Array} encrypted the encrypted bytes
         * @param {Uint32Array} key the bytes of the decryption key
         * @param {Uint32Array} initVector the initialization vector (IV) to
         * @param {Function} done the function to run when done
         * @class Decrypter
         */var Decrypter=/*#__PURE__*/function(){function Decrypter(encrypted,key,initVector,done){_classCallCheck(this,Decrypter);var step=Decrypter.STEP;var encrypted32=new Int32Array(encrypted.buffer);var decrypted=new Uint8Array(encrypted.byteLength);var i=0;this.asyncStream_=new AsyncStream();// split up the encryption job and do the individual chunks asynchronously
this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i,i+step),key,initVector,decrypted));for(i=step;i<encrypted32.length;i+=step){initVector=new Uint32Array([ntoh(encrypted32[i-4]),ntoh(encrypted32[i-3]),ntoh(encrypted32[i-2]),ntoh(encrypted32[i-1])]);this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i,i+step),key,initVector,decrypted));}// invoke the done() callback when everything is finished
this.asyncStream_.push(function(){// remove pkcs#7 padding from the decrypted bytes
done(null,unpad(decrypted));});}/**
           * a getter for step the maximum number of bytes to process at one time
           *
           * @return {number} the value of step 32000
           */_createClass(Decrypter,[{key:"decryptChunk_",value:/**
           * @private
           */function decryptChunk_(encrypted,key,initVector,decrypted){return function(){var bytes=decrypt(encrypted,key,initVector);decrypted.set(bytes,encrypted.byteOffset);};}}],[{key:"STEP",get:function get(){// 4 * 8000;
return 32000;}}]);return Decrypter;}();var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};var win;if(typeof window!=="undefined"){win=window;}else if(typeof commonjsGlobal!=="undefined"){win=commonjsGlobal;}else if(typeof self!=="undefined"){win=self;}else{win={};}var window_1=win;var isArrayBufferView=function isArrayBufferView(obj){if(ArrayBuffer.isView==='function'){return ArrayBuffer.isView(obj);}return obj&&obj.buffer instanceof ArrayBuffer;};var BigInt=window_1.BigInt||Number;[BigInt('0x1'),BigInt('0x100'),BigInt('0x10000'),BigInt('0x1000000'),BigInt('0x100000000'),BigInt('0x10000000000'),BigInt('0x1000000000000'),BigInt('0x100000000000000'),BigInt('0x10000000000000000')];(function(){var a=new Uint16Array([0xFFCC]);var b=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);if(b[0]===0xFF){return'big';}if(b[0]===0xCC){return'little';}return'unknown';})();/**
         * Creates an object for sending to a web worker modifying properties that are TypedArrays
         * into a new object with seperated properties for the buffer, byteOffset, and byteLength.
         *
         * @param {Object} message
         *        Object of properties and values to send to the web worker
         * @return {Object}
         *         Modified message with TypedArray values expanded
         * @function createTransferableMessage
         */var createTransferableMessage=function createTransferableMessage(message){var transferable={};Object.keys(message).forEach(function(key){var value=message[key];if(isArrayBufferView(value)){transferable[key]={bytes:value.buffer,byteOffset:value.byteOffset,byteLength:value.byteLength};}else{transferable[key]=value;}});return transferable;};/* global self */ /**
         * Our web worker interface so that things can talk to aes-decrypter
         * that will be running in a web worker. the scope is passed to this by
         * webworkify.
         */self.onmessage=function(event){var data=event.data;var encrypted=new Uint8Array(data.encrypted.bytes,data.encrypted.byteOffset,data.encrypted.byteLength);var key=new Uint32Array(data.key.bytes,data.key.byteOffset,data.key.byteLength/4);var iv=new Uint32Array(data.iv.bytes,data.iv.byteOffset,data.iv.byteLength/4);/* eslint-disable no-new, handle-callback-err */new Decrypter(encrypted,key,iv,function(err,bytes){self.postMessage(createTransferableMessage({source:data.source,decrypted:bytes}),[bytes.buffer]);});/* eslint-enable */};}));var Decrypter=factory(workerCode);/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */ /**
       * Convert the properties of an HLS track into an audioTrackKind.
       *
       * @private
       */var audioTrackKind_=function audioTrackKind_(properties){var kind=properties.default?'main':'alternative';if(properties.characteristics&&properties.characteristics.indexOf('public.accessibility.describes-video')>=0){kind='main-desc';}return kind;};/**
       * Pause provided segment loader and playlist loader if active
       *
       * @param {SegmentLoader} segmentLoader
       *        SegmentLoader to pause
       * @param {Object} mediaType
       *        Active media type
       * @function stopLoaders
       */var stopLoaders=function stopLoaders(segmentLoader,mediaType){segmentLoader.abort();segmentLoader.pause();if(mediaType&&mediaType.activePlaylistLoader){mediaType.activePlaylistLoader.pause();mediaType.activePlaylistLoader=null;}};/**
       * Start loading provided segment loader and playlist loader
       *
       * @param {PlaylistLoader} playlistLoader
       *        PlaylistLoader to start loading
       * @param {Object} mediaType
       *        Active media type
       * @function startLoaders
       */var startLoaders=function startLoaders(playlistLoader,mediaType){// Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the
// playlist loader
mediaType.activePlaylistLoader=playlistLoader;playlistLoader.load();};/**
       * Returns a function to be called when the media group changes. It performs a
       * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a
       * change of group is merely a rendition switch of the same content at another encoding,
       * rather than a change of content, such as switching audio from English to Spanish.
       *
       * @param {string} type
       *        MediaGroup type
       * @param {Object} settings
       *        Object containing required information for media groups
       * @return {Function}
       *         Handler for a non-destructive resync of SegmentLoader when the active media
       *         group changes.
       * @function onGroupChanged
       */var onGroupChanged=function onGroupChanged(type,settings){return function(){var _settings$segmentLoad=settings.segmentLoaders,segmentLoader=_settings$segmentLoad[type],mainSegmentLoader=_settings$segmentLoad.main,mediaType=settings.mediaTypes[type];var activeTrack=mediaType.activeTrack();var activeGroup=mediaType.getActiveGroup();var previousActiveLoader=mediaType.activePlaylistLoader;var lastGroup=mediaType.lastGroup_;// the group did not change do nothing
if(activeGroup&&lastGroup&&activeGroup.id===lastGroup.id){return;}mediaType.lastGroup_=activeGroup;mediaType.lastTrack_=activeTrack;stopLoaders(segmentLoader,mediaType);if(!activeGroup||activeGroup.isMainPlaylist){// there is no group active or active group is a main playlist and won't change
return;}if(!activeGroup.playlistLoader){if(previousActiveLoader){// The previous group had a playlist loader but the new active group does not
// this means we are switching from demuxed to muxed audio. In this case we want to
// do a destructive reset of the main segment loader and not restart the audio
// loaders.
mainSegmentLoader.resetEverything();}return;}// Non-destructive resync
segmentLoader.resyncLoader();startLoaders(activeGroup.playlistLoader,mediaType);};};var onGroupChanging=function onGroupChanging(type,settings){return function(){var segmentLoader=settings.segmentLoaders[type],mediaType=settings.mediaTypes[type];mediaType.lastGroup_=null;segmentLoader.abort();segmentLoader.pause();};};/**
       * Returns a function to be called when the media track changes. It performs a
       * destructive reset of the SegmentLoader to ensure we start loading as close to
       * currentTime as possible.
       *
       * @param {string} type
       *        MediaGroup type
       * @param {Object} settings
       *        Object containing required information for media groups
       * @return {Function}
       *         Handler for a destructive reset of SegmentLoader when the active media
       *         track changes.
       * @function onTrackChanged
       */var onTrackChanged=function onTrackChanged(type,settings){return function(){var mainPlaylistLoader=settings.mainPlaylistLoader,_settings$segmentLoad2=settings.segmentLoaders,segmentLoader=_settings$segmentLoad2[type],mainSegmentLoader=_settings$segmentLoad2.main,mediaType=settings.mediaTypes[type];var activeTrack=mediaType.activeTrack();var activeGroup=mediaType.getActiveGroup();var previousActiveLoader=mediaType.activePlaylistLoader;var lastTrack=mediaType.lastTrack_;// track did not change, do nothing
if(lastTrack&&activeTrack&&lastTrack.id===activeTrack.id){return;}mediaType.lastGroup_=activeGroup;mediaType.lastTrack_=activeTrack;stopLoaders(segmentLoader,mediaType);if(!activeGroup){// there is no group active so we do not want to restart loaders
return;}if(activeGroup.isMainPlaylist){// track did not change, do nothing
if(!activeTrack||!lastTrack||activeTrack.id===lastTrack.id){return;}var pc=settings.vhs.playlistController_;var newPlaylist=pc.selectPlaylist();// media will not change do nothing
if(pc.media()===newPlaylist){return;}mediaType.logger_("track change. Switching main audio from ".concat(lastTrack.id," to ").concat(activeTrack.id));mainPlaylistLoader.pause();mainSegmentLoader.resetEverything();pc.fastQualityChange_(newPlaylist);return;}if(type==='AUDIO'){if(!activeGroup.playlistLoader){// when switching from demuxed audio/video to muxed audio/video (noted by no
// playlist loader for the audio group), we want to do a destructive reset of the
// main segment loader and not restart the audio loaders
mainSegmentLoader.setAudio(true);// don't have to worry about disabling the audio of the audio segment loader since
// it should be stopped
mainSegmentLoader.resetEverything();return;}// although the segment loader is an audio segment loader, call the setAudio
// function to ensure it is prepared to re-append the init segment (or handle other
// config changes)
segmentLoader.setAudio(true);mainSegmentLoader.setAudio(false);}if(previousActiveLoader===activeGroup.playlistLoader){// Nothing has actually changed. This can happen because track change events can fire
// multiple times for a "single" change. One for enabling the new active track, and
// one for disabling the track that was active
startLoaders(activeGroup.playlistLoader,mediaType);return;}if(segmentLoader.track){// For WebVTT, set the new text track in the segmentloader
segmentLoader.track(activeTrack);}// destructive reset
segmentLoader.resetEverything();startLoaders(activeGroup.playlistLoader,mediaType);};};var onError={/**
         * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters
         * an error.
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @return {Function}
         *         Error handler. Logs warning (or error if the playlist is excluded) to
         *         console and switches back to default audio track.
         * @function onError.AUDIO
         */AUDIO:function AUDIO(type,settings){return function(){var mediaType=settings.mediaTypes[type],excludePlaylist=settings.excludePlaylist;// switch back to default audio track
var activeTrack=mediaType.activeTrack();var activeGroup=mediaType.activeGroup();var id=(activeGroup.filter(function(group){return group.default;})[0]||activeGroup[0]).id;var defaultTrack=mediaType.tracks[id];if(activeTrack===defaultTrack){// Default track encountered an error. All we can do now is exclude the current
// rendition and hope another will switch audio groups
excludePlaylist({error:{message:'Problem encountered loading the default audio track.'}});return;}videojs.log.warn('Problem encountered loading the alternate audio track.'+'Switching back to default.');for(var trackId in mediaType.tracks){mediaType.tracks[trackId].enabled=mediaType.tracks[trackId]===defaultTrack;}mediaType.onTrackChanged();};},/**
         * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters
         * an error.
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @return {Function}
         *         Error handler. Logs warning to console and disables the active subtitle track
         * @function onError.SUBTITLES
         */SUBTITLES:function SUBTITLES(type,settings){return function(){var mediaType=settings.mediaTypes[type];videojs.log.warn('Problem encountered loading the subtitle track.'+'Disabling subtitle track.');var track=mediaType.activeTrack();if(track){track.mode='disabled';}mediaType.onTrackChanged();};}};var setupListeners={/**
         * Setup event listeners for audio playlist loader
         *
         * @param {string} type
         *        MediaGroup type
         * @param {PlaylistLoader|null} playlistLoader
         *        PlaylistLoader to register listeners on
         * @param {Object} settings
         *        Object containing required information for media groups
         * @function setupListeners.AUDIO
         */AUDIO:function AUDIO(type,playlistLoader,settings){if(!playlistLoader){// no playlist loader means audio will be muxed with the video
return;}var tech=settings.tech,requestOptions=settings.requestOptions,segmentLoader=settings.segmentLoaders[type];playlistLoader.on('loadedmetadata',function(){var media=playlistLoader.media();segmentLoader.playlist(media,requestOptions);// if the video is already playing, or if this isn't a live video and preload
// permits, start downloading segments
if(!tech.paused()||media.endList&&tech.preload()!=='none'){segmentLoader.load();}});playlistLoader.on('loadedplaylist',function(){segmentLoader.playlist(playlistLoader.media(),requestOptions);// If the player isn't paused, ensure that the segment loader is running
if(!tech.paused()){segmentLoader.load();}});playlistLoader.on('error',onError[type](type,settings));},/**
         * Setup event listeners for subtitle playlist loader
         *
         * @param {string} type
         *        MediaGroup type
         * @param {PlaylistLoader|null} playlistLoader
         *        PlaylistLoader to register listeners on
         * @param {Object} settings
         *        Object containing required information for media groups
         * @function setupListeners.SUBTITLES
         */SUBTITLES:function SUBTITLES(type,playlistLoader,settings){var tech=settings.tech,requestOptions=settings.requestOptions,segmentLoader=settings.segmentLoaders[type],mediaType=settings.mediaTypes[type];playlistLoader.on('loadedmetadata',function(){var media=playlistLoader.media();segmentLoader.playlist(media,requestOptions);segmentLoader.track(mediaType.activeTrack());// if the video is already playing, or if this isn't a live video and preload
// permits, start downloading segments
if(!tech.paused()||media.endList&&tech.preload()!=='none'){segmentLoader.load();}});playlistLoader.on('loadedplaylist',function(){segmentLoader.playlist(playlistLoader.media(),requestOptions);// If the player isn't paused, ensure that the segment loader is running
if(!tech.paused()){segmentLoader.load();}});playlistLoader.on('error',onError[type](type,settings));}};var initialize={/**
         * Setup PlaylistLoaders and AudioTracks for the audio groups
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @function initialize.AUDIO
         */'AUDIO':function AUDIO(type,settings){var vhs=settings.vhs,sourceType=settings.sourceType,segmentLoader=settings.segmentLoaders[type],requestOptions=settings.requestOptions,mediaGroups=settings.main.mediaGroups,_settings$mediaTypes$=settings.mediaTypes[type],groups=_settings$mediaTypes$.groups,tracks=_settings$mediaTypes$.tracks,logger_=_settings$mediaTypes$.logger_,mainPlaylistLoader=settings.mainPlaylistLoader;var audioOnlyMain=isAudioOnly(mainPlaylistLoader.main);// force a default if we have none
if(!mediaGroups[type]||Object.keys(mediaGroups[type]).length===0){mediaGroups[type]={main:{default:{default:true}}};if(audioOnlyMain){mediaGroups[type].main.default.playlists=mainPlaylistLoader.main.playlists;}}for(var groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(var variantLabel in mediaGroups[type][groupId]){var _properties=mediaGroups[type][groupId][variantLabel];var playlistLoader=void 0;if(audioOnlyMain){logger_("AUDIO group '".concat(groupId,"' label '").concat(variantLabel,"' is a main playlist"));_properties.isMainPlaylist=true;playlistLoader=null;// if vhs-json was provided as the source, and the media playlist was resolved,
// use the resolved media playlist object
}else if(sourceType==='vhs-json'&&_properties.playlists){playlistLoader=new PlaylistLoader(_properties.playlists[0],vhs,requestOptions);}else if(_properties.resolvedUri){playlistLoader=new PlaylistLoader(_properties.resolvedUri,vhs,requestOptions);// TODO: dash isn't the only type with properties.playlists
// should we even have properties.playlists in this check.
}else if(_properties.playlists&&sourceType==='dash'){playlistLoader=new DashPlaylistLoader(_properties.playlists[0],vhs,requestOptions,mainPlaylistLoader);}else{// no resolvedUri means the audio is muxed with the video when using this
// audio track
playlistLoader=null;}_properties=merge({id:variantLabel,playlistLoader:playlistLoader},_properties);setupListeners[type](type,_properties.playlistLoader,settings);groups[groupId].push(_properties);if(typeof tracks[variantLabel]==='undefined'){var track=new videojs.AudioTrack({id:variantLabel,kind:audioTrackKind_(_properties),enabled:false,language:_properties.language,default:_properties.default,label:variantLabel});tracks[variantLabel]=track;}}}// setup single error event handler for the segment loader
segmentLoader.on('error',onError[type](type,settings));},/**
         * Setup PlaylistLoaders and TextTracks for the subtitle groups
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @function initialize.SUBTITLES
         */'SUBTITLES':function SUBTITLES(type,settings){var tech=settings.tech,vhs=settings.vhs,sourceType=settings.sourceType,segmentLoader=settings.segmentLoaders[type],requestOptions=settings.requestOptions,mediaGroups=settings.main.mediaGroups,_settings$mediaTypes$2=settings.mediaTypes[type],groups=_settings$mediaTypes$2.groups,tracks=_settings$mediaTypes$2.tracks,mainPlaylistLoader=settings.mainPlaylistLoader;for(var groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(var variantLabel in mediaGroups[type][groupId]){if(!vhs.options_.useForcedSubtitles&&mediaGroups[type][groupId][variantLabel].forced){// Subtitle playlists with the forced attribute are not selectable in Safari.
// According to Apple's HLS Authoring Specification:
//   If content has forced subtitles and regular subtitles in a given language,
//   the regular subtitles track in that language MUST contain both the forced
//   subtitles and the regular subtitles for that language.
// Because of this requirement and that Safari does not add forced subtitles,
// forced subtitles are skipped here to maintain consistent experience across
// all platforms
continue;}var _properties2=mediaGroups[type][groupId][variantLabel];var playlistLoader=void 0;if(sourceType==='hls'){playlistLoader=new PlaylistLoader(_properties2.resolvedUri,vhs,requestOptions);}else if(sourceType==='dash'){var playlists=_properties2.playlists.filter(function(p){return p.excludeUntil!==Infinity;});if(!playlists.length){return;}playlistLoader=new DashPlaylistLoader(_properties2.playlists[0],vhs,requestOptions,mainPlaylistLoader);}else if(sourceType==='vhs-json'){playlistLoader=new PlaylistLoader(// if the vhs-json object included the media playlist, use the media playlist
// as provided, otherwise use the resolved URI to load the playlist
_properties2.playlists?_properties2.playlists[0]:_properties2.resolvedUri,vhs,requestOptions);}_properties2=merge({id:variantLabel,playlistLoader:playlistLoader},_properties2);setupListeners[type](type,_properties2.playlistLoader,settings);groups[groupId].push(_properties2);if(typeof tracks[variantLabel]==='undefined'){var track=tech.addRemoteTextTrack({id:variantLabel,kind:'subtitles',default:_properties2.default&&_properties2.autoselect,language:_properties2.language,label:variantLabel},false).track;tracks[variantLabel]=track;}}}// setup single error event handler for the segment loader
segmentLoader.on('error',onError[type](type,settings));},/**
         * Setup TextTracks for the closed-caption groups
         *
         * @param {String} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @function initialize['CLOSED-CAPTIONS']
         */'CLOSED-CAPTIONS':function CLOSEDCAPTIONS(type,settings){var tech=settings.tech,mediaGroups=settings.main.mediaGroups,_settings$mediaTypes$3=settings.mediaTypes[type],groups=_settings$mediaTypes$3.groups,tracks=_settings$mediaTypes$3.tracks;for(var groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(var variantLabel in mediaGroups[type][groupId]){var _properties3=mediaGroups[type][groupId][variantLabel];// Look for either 608 (CCn) or 708 (SERVICEn) caption services
if(!/^(?:CC|SERVICE)/.test(_properties3.instreamId)){continue;}var captionServices=tech.options_.vhs&&tech.options_.vhs.captionServices||{};var newProps={label:variantLabel,language:_properties3.language,instreamId:_properties3.instreamId,default:_properties3.default&&_properties3.autoselect};if(captionServices[newProps.instreamId]){newProps=merge(newProps,captionServices[newProps.instreamId]);}if(newProps.default===undefined){delete newProps.default;}// No PlaylistLoader is required for Closed-Captions because the captions are
// embedded within the video stream
groups[groupId].push(merge({id:variantLabel},_properties3));if(typeof tracks[variantLabel]==='undefined'){var track=tech.addRemoteTextTrack({id:newProps.instreamId,kind:'captions',default:newProps.default,language:newProps.language,label:newProps.label},false).track;tracks[variantLabel]=track;}}}}};var groupMatch=function groupMatch(list,media){for(var _i197=0;_i197<list.length;_i197++){if(playlistMatch(media,list[_i197])){return true;}if(list[_i197].playlists&&groupMatch(list[_i197].playlists,media)){return true;}}return false;};/**
       * Returns a function used to get the active group of the provided type
       *
       * @param {string} type
       *        MediaGroup type
       * @param {Object} settings
       *        Object containing required information for media groups
       * @return {Function}
       *         Function that returns the active media group for the provided type. Takes an
       *         optional parameter {TextTrack} track. If no track is provided, a list of all
       *         variants in the group, otherwise the variant corresponding to the provided
       *         track is returned.
       * @function activeGroup
       */var activeGroup=function activeGroup(type,settings){return function(track){var mainPlaylistLoader=settings.mainPlaylistLoader,groups=settings.mediaTypes[type].groups;var media=mainPlaylistLoader.media();if(!media){return null;}var variants=null;// set to variants to main media active group
if(media.attributes[type]){variants=groups[media.attributes[type]];}var groupKeys=Object.keys(groups);if(!variants){// find the mainPlaylistLoader media
// that is in a media group if we are dealing
// with audio only
if(type==='AUDIO'&&groupKeys.length>1&&isAudioOnly(settings.main)){for(var _i198=0;_i198<groupKeys.length;_i198++){var groupPropertyList=groups[groupKeys[_i198]];if(groupMatch(groupPropertyList,media)){variants=groupPropertyList;break;}}// use the main group if it exists
}else if(groups.main){variants=groups.main;// only one group, use that one
}else if(groupKeys.length===1){variants=groups[groupKeys[0]];}}if(typeof track==='undefined'){return variants;}if(track===null||!variants){// An active track was specified so a corresponding group is expected. track === null
// means no track is currently active so there is no corresponding group
return null;}return variants.filter(function(props){return props.id===track.id;})[0]||null;};};var activeTrack={/**
         * Returns a function used to get the active track of type provided
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @return {Function}
         *         Function that returns the active media track for the provided type. Returns
         *         null if no track is active
         * @function activeTrack.AUDIO
         */AUDIO:function AUDIO(type,settings){return function(){var tracks=settings.mediaTypes[type].tracks;for(var id in tracks){if(tracks[id].enabled){return tracks[id];}}return null;};},/**
         * Returns a function used to get the active track of type provided
         *
         * @param {string} type
         *        MediaGroup type
         * @param {Object} settings
         *        Object containing required information for media groups
         * @return {Function}
         *         Function that returns the active media track for the provided type. Returns
         *         null if no track is active
         * @function activeTrack.SUBTITLES
         */SUBTITLES:function SUBTITLES(type,settings){return function(){var tracks=settings.mediaTypes[type].tracks;for(var id in tracks){if(tracks[id].mode==='showing'||tracks[id].mode==='hidden'){return tracks[id];}}return null;};}};var getActiveGroup=function getActiveGroup(type,_ref216){var mediaTypes=_ref216.mediaTypes;return function(){var activeTrack_=mediaTypes[type].activeTrack();if(!activeTrack_){return null;}return mediaTypes[type].activeGroup(activeTrack_);};};/**
       * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,
       * Closed-Captions) specified in the main manifest.
       *
       * @param {Object} settings
       *        Object containing required information for setting up the media groups
       * @param {Tech} settings.tech
       *        The tech of the player
       * @param {Object} settings.requestOptions
       *        XHR request options used by the segment loaders
       * @param {PlaylistLoader} settings.mainPlaylistLoader
       *        PlaylistLoader for the main source
       * @param {VhsHandler} settings.vhs
       *        VHS SourceHandler
       * @param {Object} settings.main
       *        The parsed main manifest
       * @param {Object} settings.mediaTypes
       *        Object to store the loaders, tracks, and utility methods for each media type
       * @param {Function} settings.excludePlaylist
       *        Excludes the current rendition and forces a rendition switch.
       * @function setupMediaGroups
       */var setupMediaGroups=function setupMediaGroups(settings){['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(type){initialize[type](type,settings);});var mediaTypes=settings.mediaTypes,mainPlaylistLoader=settings.mainPlaylistLoader,tech=settings.tech,vhs=settings.vhs,_settings$segmentLoad3=settings.segmentLoaders,audioSegmentLoader=_settings$segmentLoad3['AUDIO'],mainSegmentLoader=_settings$segmentLoad3.main;// setup active group and track getters and change event handlers
['AUDIO','SUBTITLES'].forEach(function(type){mediaTypes[type].activeGroup=activeGroup(type,settings);mediaTypes[type].activeTrack=activeTrack[type](type,settings);mediaTypes[type].onGroupChanged=onGroupChanged(type,settings);mediaTypes[type].onGroupChanging=onGroupChanging(type,settings);mediaTypes[type].onTrackChanged=onTrackChanged(type,settings);mediaTypes[type].getActiveGroup=getActiveGroup(type,settings);});// DO NOT enable the default subtitle or caption track.
// DO enable the default audio track
var audioGroup=mediaTypes.AUDIO.activeGroup();if(audioGroup){var groupId=(audioGroup.filter(function(group){return group.default;})[0]||audioGroup[0]).id;mediaTypes.AUDIO.tracks[groupId].enabled=true;mediaTypes.AUDIO.onGroupChanged();mediaTypes.AUDIO.onTrackChanged();var activeAudioGroup=mediaTypes.AUDIO.getActiveGroup();// a similar check for handling setAudio on each loader is run again each time the
// track is changed, but needs to be handled here since the track may not be considered
// changed on the first call to onTrackChanged
if(!activeAudioGroup.playlistLoader){// either audio is muxed with video or the stream is audio only
mainSegmentLoader.setAudio(true);}else{// audio is demuxed
mainSegmentLoader.setAudio(false);audioSegmentLoader.setAudio(true);}}mainPlaylistLoader.on('mediachange',function(){['AUDIO','SUBTITLES'].forEach(function(type){return mediaTypes[type].onGroupChanged();});});mainPlaylistLoader.on('mediachanging',function(){['AUDIO','SUBTITLES'].forEach(function(type){return mediaTypes[type].onGroupChanging();});});// custom audio track change event handler for usage event
var onAudioTrackChanged=function onAudioTrackChanged(){mediaTypes.AUDIO.onTrackChanged();tech.trigger({type:'usage',name:'vhs-audio-change'});};tech.audioTracks().addEventListener('change',onAudioTrackChanged);tech.remoteTextTracks().addEventListener('change',mediaTypes.SUBTITLES.onTrackChanged);vhs.on('dispose',function(){tech.audioTracks().removeEventListener('change',onAudioTrackChanged);tech.remoteTextTracks().removeEventListener('change',mediaTypes.SUBTITLES.onTrackChanged);});// clear existing audio tracks and add the ones we just created
tech.clearTracks('audio');for(var id in mediaTypes.AUDIO.tracks){tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);}};/**
       * Creates skeleton object used to store the loaders, tracks, and utility methods for each
       * media type
       *
       * @return {Object}
       *         Object to store the loaders, tracks, and utility methods for each media type
       * @function createMediaTypes
       */var createMediaTypes=function createMediaTypes(){var mediaTypes={};['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(type){mediaTypes[type]={groups:{},tracks:{},activePlaylistLoader:null,activeGroup:noop,activeTrack:noop,getActiveGroup:noop,onGroupChanged:noop,onTrackChanged:noop,lastTrack_:null,logger_:logger("MediaGroups[".concat(type,"]"))};});return mediaTypes;};/**
       * A utility class for setting properties and maintaining the state of the content steering manifest.
       *
       * Content Steering manifest format:
       * VERSION: number (required) currently only version 1 is supported.
       * TTL: number in seconds (optional) until the next content steering manifest reload.
       * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.
       * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.
       * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.
       */var SteeringManifest=/*#__PURE__*/function(){function SteeringManifest(){_classCallCheck(this,SteeringManifest);this.priority_=[];this.pathwayClones_=new Map();}_createClass(SteeringManifest,[{key:"version",get:function get(){return this.version_;},set:function set(number){// Only version 1 is currently supported for both DASH and HLS.
if(number===1){this.version_=number;}}},{key:"ttl",get:function get(){return this.ttl_;},set:function set(seconds){// TTL = time-to-live, default = 300 seconds.
this.ttl_=seconds||300;}},{key:"reloadUri",get:function get(){return this.reloadUri_;},set:function set(uri){if(uri){// reload URI can be relative to the previous reloadUri.
this.reloadUri_=resolveUrl(this.reloadUri_,uri);}}},{key:"priority",get:function get(){return this.priority_;},set:function set(array){// priority must be non-empty and unique values.
if(array&&array.length){this.priority_=array;}}},{key:"pathwayClones",get:function get(){return this.pathwayClones_;},set:function set(array){// pathwayClones must be non-empty.
if(array&&array.length){this.pathwayClones_=new Map(array.map(function(clone){return[clone.ID,clone];}));}}}]);return SteeringManifest;}();/**
       * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.
       * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and
       * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.
       * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf
       *
       * @param {function} xhr for making a network request from the browser.
       * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.
       */var ContentSteeringController=/*#__PURE__*/function(_videojs$EventTarget6){_inherits(ContentSteeringController,_videojs$EventTarget6);var _super104=_createSuper(ContentSteeringController);function ContentSteeringController(xhr,bandwidth){var _this217;_classCallCheck(this,ContentSteeringController);_this217=_super104.call(this);_this217.currentPathway=null;_this217.defaultPathway=null;_this217.queryBeforeStart=false;_this217.availablePathways_=new Set();_this217.steeringManifest=new SteeringManifest();_this217.proxyServerUrl_=null;_this217.manifestType_=null;_this217.ttlTimeout_=null;_this217.request_=null;_this217.currentPathwayClones=new Map();_this217.nextPathwayClones=new Map();_this217.excludedSteeringManifestURLs=new Set();_this217.logger_=logger('Content Steering');_this217.xhr_=xhr;_this217.getBandwidth_=bandwidth;return _this217;}/**
         * Assigns the content steering tag properties to the steering controller
         *
         * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url
         * @param {Object} steeringTag the content steering tag from the main manifest
         */_createClass(ContentSteeringController,[{key:"assignTagProperties",value:function assignTagProperties(baseUrl,steeringTag){this.manifestType_=steeringTag.serverUri?'HLS':'DASH';// serverUri is HLS serverURL is DASH
var steeringUri=steeringTag.serverUri||steeringTag.serverURL;if(!steeringUri){this.logger_("steering manifest URL is ".concat(steeringUri,", cannot request steering manifest."));this.trigger('error');return;}// Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.
if(steeringUri.startsWith('data:')){this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',')+1));return;}// reloadUri is the resolution of the main manifest URL and steering URL.
this.steeringManifest.reloadUri=resolveUrl(baseUrl,steeringUri);// pathwayId is HLS defaultServiceLocation is DASH
this.defaultPathway=steeringTag.pathwayId||steeringTag.defaultServiceLocation;// currently only DASH supports the following properties on <ContentSteering> tags.
this.queryBeforeStart=steeringTag.queryBeforeStart;this.proxyServerUrl_=steeringTag.proxyServerURL;// trigger a steering event if we have a pathway from the content steering tag.
// this tells VHS which segment pathway to start with.
// If queryBeforeStart is true we need to wait for the steering manifest response.
if(this.defaultPathway&&!this.queryBeforeStart){this.trigger('content-steering');}}/**
         * Requests the content steering manifest and parse the response. This should only be called after
         * assignTagProperties was called with a content steering tag.
         *
         * @param {string} initialUri The optional uri to make the request with.
         *    If set, the request should be made with exactly what is passed in this variable.
         *    This scenario should only happen once on initalization.
         */},{key:"requestSteeringManifest",value:function requestSteeringManifest(initial){var _this218=this;var reloadUri=this.steeringManifest.reloadUri;if(!reloadUri){return;}// We currently don't support passing MPD query parameters directly to the content steering URL as this requires
// ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.
// This request URI accounts for manifest URIs that have been excluded.
var uri=initial?reloadUri:this.getRequestURI(reloadUri);// If there are no valid manifest URIs, we should stop content steering.
if(!uri){this.logger_('No valid content steering manifest URIs. Stopping content steering.');this.trigger('error');this.dispose();return;}this.request_=this.xhr_({uri:uri,requestType:'content-steering-manifest'},function(error,errorInfo){if(error){// If the client receives HTTP 410 Gone in response to a manifest request,
// it MUST NOT issue another request for that URI for the remainder of the
// playback session. It MAY continue to use the most-recently obtained set
// of Pathways.
if(errorInfo.status===410){_this218.logger_("manifest request 410 ".concat(error,"."));_this218.logger_("There will be no more content steering requests to ".concat(uri," this session."));_this218.excludedSteeringManifestURLs.add(uri);return;}// If the client receives HTTP 429 Too Many Requests with a Retry-After
// header in response to a manifest request, it SHOULD wait until the time
// specified by the Retry-After header to reissue the request.
if(errorInfo.status===429){var retrySeconds=errorInfo.responseHeaders['retry-after'];_this218.logger_("manifest request 429 ".concat(error,"."));_this218.logger_("content steering will retry in ".concat(retrySeconds," seconds."));_this218.startTTLTimeout_(parseInt(retrySeconds,10));return;}// If the Steering Manifest cannot be loaded and parsed correctly, the
// client SHOULD continue to use the previous values and attempt to reload
// it after waiting for the previously-specified TTL (or 5 minutes if
// none).
_this218.logger_("manifest failed to load ".concat(error,"."));_this218.startTTLTimeout_();return;}var steeringManifestJson=JSON.parse(_this218.request_.responseText);_this218.assignSteeringProperties_(steeringManifestJson);_this218.startTTLTimeout_();});}/**
         * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.
         *
         * @param {string} steeringUrl the steering manifest url
         * @return the steering manifest url to a proxy server with all parameters set
         */},{key:"setProxyServerUrl_",value:function setProxyServerUrl_(steeringUrl){var steeringUrlObject=new window_1.URL(steeringUrl);var proxyServerUrlObject=new window_1.URL(this.proxyServerUrl_);proxyServerUrlObject.searchParams.set('url',encodeURI(steeringUrlObject.toString()));return this.setSteeringParams_(proxyServerUrlObject.toString());}/**
         * Decodes and parses the data uri encoded steering manifest
         *
         * @param {string} dataUri the data uri to be decoded and parsed.
         */},{key:"decodeDataUriManifest_",value:function decodeDataUriManifest_(dataUri){var steeringManifestJson=JSON.parse(window_1.atob(dataUri));this.assignSteeringProperties_(steeringManifestJson);}/**
         * Set the HLS or DASH content steering manifest request query parameters. For example:
         * _HLS_pathway="<CURRENT-PATHWAY-ID>" and _HLS_throughput=<THROUGHPUT>
         * _DASH_pathway and _DASH_throughput
         *
         * @param {string} uri to add content steering server parameters to.
         * @return a new uri as a string with the added steering query parameters.
         */},{key:"setSteeringParams_",value:function setSteeringParams_(url){var urlObject=new window_1.URL(url);var path=this.getPathway();var networkThroughput=this.getBandwidth_();if(path){var pathwayKey="_".concat(this.manifestType_,"_pathway");urlObject.searchParams.set(pathwayKey,path);}if(networkThroughput){var throughputKey="_".concat(this.manifestType_,"_throughput");urlObject.searchParams.set(throughputKey,networkThroughput);}return urlObject.toString();}/**
         * Assigns the current steering manifest properties and to the SteeringManifest object
         *
         * @param {Object} steeringJson the raw JSON steering manifest
         */},{key:"assignSteeringProperties_",value:function assignSteeringProperties_(steeringJson){var _this219=this;this.steeringManifest.version=steeringJson.VERSION;if(!this.steeringManifest.version){this.logger_("manifest version is ".concat(steeringJson.VERSION,", which is not supported."));this.trigger('error');return;}this.steeringManifest.ttl=steeringJson.TTL;this.steeringManifest.reloadUri=steeringJson['RELOAD-URI'];// HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional
this.steeringManifest.priority=steeringJson['PATHWAY-PRIORITY']||steeringJson['SERVICE-LOCATION-PRIORITY'];// Pathway clones to be created/updated in HLS.
// See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/
this.steeringManifest.pathwayClones=steeringJson['PATHWAY-CLONES'];this.nextPathwayClones=this.steeringManifest.pathwayClones;// 1. apply first pathway from the array.
// 2. if first pathway doesn't exist in manifest, try next pathway.
//    a. if all pathways are exhausted, ignore the steering manifest priority.
// 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.
//    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,
//       the excluded pathway will be ignored.
//       See excludePathway usage in excludePlaylist().
// If there are no available pathways, we need to stop content steering.
if(!this.availablePathways_.size){this.logger_('There are no available pathways for content steering. Ending content steering.');this.trigger('error');this.dispose();}var chooseNextPathway=function chooseNextPathway(pathwaysByPriority){var _iterator18=_createForOfIteratorHelper(pathwaysByPriority),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var path=_step18.value;if(_this219.availablePathways_.has(path)){return path;}}// If no pathway matches, ignore the manifest and choose the first available.
}catch(err){_iterator18.e(err);}finally{_iterator18.f();}return _toConsumableArray(_this219.availablePathways_)[0];};var nextPathway=chooseNextPathway(this.steeringManifest.priority);if(this.currentPathway!==nextPathway){this.currentPathway=nextPathway;this.trigger('content-steering');}}/**
         * Returns the pathway to use for steering decisions
         *
         * @return {string} returns the current pathway or the default
         */},{key:"getPathway",value:function getPathway(){return this.currentPathway||this.defaultPathway;}/**
         * Chooses the manifest request URI based on proxy URIs and server URLs.
         * Also accounts for exclusion on certain manifest URIs.
         *
         * @param {string} reloadUri the base uri before parameters
         *
         * @return {string} the final URI for the request to the manifest server.
         */},{key:"getRequestURI",value:function getRequestURI(reloadUri){var _this220=this;if(!reloadUri){return null;}var isExcluded=function isExcluded(uri){return _this220.excludedSteeringManifestURLs.has(uri);};if(this.proxyServerUrl_){var proxyURI=this.setProxyServerUrl_(reloadUri);if(!isExcluded(proxyURI)){return proxyURI;}}var steeringURI=this.setSteeringParams_(reloadUri);if(!isExcluded(steeringURI)){return steeringURI;}// Return nothing if all valid manifest URIs are excluded.
return null;}/**
         * Start the timeout for re-requesting the steering manifest at the TTL interval.
         *
         * @param {number} ttl time in seconds of the timeout. Defaults to the
         *        ttl interval in the steering manifest
         */},{key:"startTTLTimeout_",value:function startTTLTimeout_(){var _this221=this;var ttl=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.steeringManifest.ttl;// 300 (5 minutes) is the default value.
var ttlMS=ttl*1000;this.ttlTimeout_=window_1.setTimeout(function(){_this221.requestSteeringManifest();},ttlMS);}/**
         * Clear the TTL timeout if necessary.
         */},{key:"clearTTLTimeout_",value:function clearTTLTimeout_(){window_1.clearTimeout(this.ttlTimeout_);this.ttlTimeout_=null;}/**
         * aborts any current steering xhr and sets the current request object to null
         */},{key:"abort",value:function abort(){if(this.request_){this.request_.abort();}this.request_=null;}/**
         * aborts steering requests clears the ttl timeout and resets all properties.
         */},{key:"dispose",value:function dispose(){this.off('content-steering');this.off('error');this.abort();this.clearTTLTimeout_();this.currentPathway=null;this.defaultPathway=null;this.queryBeforeStart=null;this.proxyServerUrl_=null;this.manifestType_=null;this.ttlTimeout_=null;this.request_=null;this.excludedSteeringManifestURLs=new Set();this.availablePathways_=new Set();this.steeringManifest=new SteeringManifest();}/**
         * adds a pathway to the available pathways set
         *
         * @param {string} pathway the pathway string to add
         */},{key:"addAvailablePathway",value:function addAvailablePathway(pathway){if(pathway){this.availablePathways_.add(pathway);}}/**
         * Clears all pathways from the available pathways set
         */},{key:"clearAvailablePathways",value:function clearAvailablePathways(){this.availablePathways_.clear();}/**
         * Removes a pathway from the available pathways set.
         */},{key:"excludePathway",value:function excludePathway(pathway){return this.availablePathways_.delete(pathway);}/**
         * Checks the refreshed DASH manifest content steering tag for changes.
         *
         * @param {string} baseURL new steering tag on DASH manifest refresh
         * @param {Object} newTag the new tag to check for changes
         * @return a true or false whether the new tag has different values
         */},{key:"didDASHTagChange",value:function didDASHTagChange(baseURL,newTag){return!newTag&&this.steeringManifest.reloadUri||newTag&&(resolveUrl(baseURL,newTag.serverURL)!==this.steeringManifest.reloadUri||newTag.defaultServiceLocation!==this.defaultPathway||newTag.queryBeforeStart!==this.queryBeforeStart||newTag.proxyServerURL!==this.proxyServerUrl_);}},{key:"getAvailablePathways",value:function getAvailablePathways(){return this.availablePathways_;}}]);return ContentSteeringController;}(videojs.EventTarget);/**
       * @file playlist-controller.js
       */var ABORT_EARLY_EXCLUSION_SECONDS=10;var Vhs$1;// SegmentLoader stats that need to have each loader's
// values summed to calculate the final value
var loaderStats=['mediaRequests','mediaRequestsAborted','mediaRequestsTimedout','mediaRequestsErrored','mediaTransferDuration','mediaBytesTransferred','mediaAppends'];var sumLoaderStat=function sumLoaderStat(stat){return this.audioSegmentLoader_[stat]+this.mainSegmentLoader_[stat];};var shouldSwitchToMedia=function shouldSwitchToMedia(_ref217){var currentPlaylist=_ref217.currentPlaylist,buffered=_ref217.buffered,currentTime=_ref217.currentTime,nextPlaylist=_ref217.nextPlaylist,bufferLowWaterLine=_ref217.bufferLowWaterLine,bufferHighWaterLine=_ref217.bufferHighWaterLine,duration=_ref217.duration,bufferBasedABR=_ref217.bufferBasedABR,log=_ref217.log;// we have no other playlist to switch to
if(!nextPlaylist){videojs.log.warn('We received no playlist to switch to. Please check your stream.');return false;}var sharedLogLine="allowing switch ".concat(currentPlaylist&&currentPlaylist.id||'null'," -> ").concat(nextPlaylist.id);if(!currentPlaylist){log("".concat(sharedLogLine," as current playlist is not set"));return true;}// no need to switch if playlist is the same
if(nextPlaylist.id===currentPlaylist.id){return false;}// determine if current time is in a buffered range.
var isBuffered=Boolean(findRange(buffered,currentTime).length);// If the playlist is live, then we want to not take low water line into account.
// This is because in LIVE, the player plays 3 segments from the end of the
// playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble
// in those segments, a viewer will never experience a rendition upswitch.
if(!currentPlaylist.endList){// For LLHLS live streams, don't switch renditions before playback has started, as it almost
// doubles the time to first playback.
if(!isBuffered&&typeof currentPlaylist.partTargetDuration==='number'){log("not ".concat(sharedLogLine," as current playlist is live llhls, but currentTime isn't in buffered."));return false;}log("".concat(sharedLogLine," as current playlist is live"));return true;}var forwardBuffer=timeAheadOf(buffered,currentTime);var maxBufferLowWaterLine=bufferBasedABR?Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE:Config.MAX_BUFFER_LOW_WATER_LINE;// For the same reason as LIVE, we ignore the low water line when the VOD
// duration is below the max potential low water line
if(duration<maxBufferLowWaterLine){log("".concat(sharedLogLine," as duration < max low water line (").concat(duration," < ").concat(maxBufferLowWaterLine,")"));return true;}var nextBandwidth=nextPlaylist.attributes.BANDWIDTH;var currBandwidth=currentPlaylist.attributes.BANDWIDTH;// when switching down, if our buffer is lower than the high water line,
// we can switch down
if(nextBandwidth<currBandwidth&&(!bufferBasedABR||forwardBuffer<bufferHighWaterLine)){var logLine="".concat(sharedLogLine," as next bandwidth < current bandwidth (").concat(nextBandwidth," < ").concat(currBandwidth,")");if(bufferBasedABR){logLine+=" and forwardBuffer < bufferHighWaterLine (".concat(forwardBuffer," < ").concat(bufferHighWaterLine,")");}log(logLine);return true;}// and if our buffer is higher than the low water line,
// we can switch up
if((!bufferBasedABR||nextBandwidth>currBandwidth)&&forwardBuffer>=bufferLowWaterLine){var _logLine="".concat(sharedLogLine," as forwardBuffer >= bufferLowWaterLine (").concat(forwardBuffer," >= ").concat(bufferLowWaterLine,")");if(bufferBasedABR){_logLine+=" and next bandwidth > current bandwidth (".concat(nextBandwidth," > ").concat(currBandwidth,")");}log(_logLine);return true;}log("not ".concat(sharedLogLine," as no switching criteria met"));return false;};/**
       * the main playlist controller controller all interactons
       * between playlists and segmentloaders. At this time this mainly
       * involves a main playlist and a series of audio playlists
       * if they are available
       *
       * @class PlaylistController
       * @extends videojs.EventTarget
       */var PlaylistController=/*#__PURE__*/function(_videojs$EventTarget7){_inherits(PlaylistController,_videojs$EventTarget7);var _super105=_createSuper(PlaylistController);function PlaylistController(options){var _this222;_classCallCheck(this,PlaylistController);_this222=_super105.call(this);var src=options.src,withCredentials=options.withCredentials,tech=options.tech,bandwidth=options.bandwidth,externVhs=options.externVhs,useCueTags=options.useCueTags,playlistExclusionDuration=options.playlistExclusionDuration,enableLowInitialPlaylist=options.enableLowInitialPlaylist,sourceType=options.sourceType,cacheEncryptionKeys=options.cacheEncryptionKeys,bufferBasedABR=options.bufferBasedABR,leastPixelDiffSelector=options.leastPixelDiffSelector,captionServices=options.captionServices;if(!src){throw new Error('A non-empty playlist URL or JSON manifest string is required');}var maxPlaylistRetries=options.maxPlaylistRetries;if(maxPlaylistRetries===null||typeof maxPlaylistRetries==='undefined'){maxPlaylistRetries=Infinity;}Vhs$1=externVhs;_this222.bufferBasedABR=Boolean(bufferBasedABR);_this222.leastPixelDiffSelector=Boolean(leastPixelDiffSelector);_this222.withCredentials=withCredentials;_this222.tech_=tech;_this222.vhs_=tech.vhs;_this222.sourceType_=sourceType;_this222.useCueTags_=useCueTags;_this222.playlistExclusionDuration=playlistExclusionDuration;_this222.maxPlaylistRetries=maxPlaylistRetries;_this222.enableLowInitialPlaylist=enableLowInitialPlaylist;if(_this222.useCueTags_){_this222.cueTagsTrack_=_this222.tech_.addTextTrack('metadata','ad-cues');_this222.cueTagsTrack_.inBandMetadataTrackDispatchType='';}_this222.requestOptions_={withCredentials:withCredentials,maxPlaylistRetries:maxPlaylistRetries,timeout:null};_this222.on('error',_this222.pauseLoading);_this222.mediaTypes_=createMediaTypes();_this222.mediaSource=new window_1.MediaSource();_this222.handleDurationChange_=_this222.handleDurationChange_.bind(_assertThisInitialized2(_this222));_this222.handleSourceOpen_=_this222.handleSourceOpen_.bind(_assertThisInitialized2(_this222));_this222.handleSourceEnded_=_this222.handleSourceEnded_.bind(_assertThisInitialized2(_this222));_this222.mediaSource.addEventListener('durationchange',_this222.handleDurationChange_);// load the media source into the player
_this222.mediaSource.addEventListener('sourceopen',_this222.handleSourceOpen_);_this222.mediaSource.addEventListener('sourceended',_this222.handleSourceEnded_);// we don't have to handle sourceclose since dispose will handle termination of
// everything, and the MediaSource should not be detached without a proper disposal
_this222.seekable_=createTimeRanges();_this222.hasPlayed_=false;_this222.syncController_=new SyncController(options);_this222.segmentMetadataTrack_=tech.addRemoteTextTrack({kind:'metadata',label:'segment-metadata'},false).track;_this222.decrypter_=new Decrypter();_this222.sourceUpdater_=new SourceUpdater(_this222.mediaSource);_this222.inbandTextTracks_={};_this222.timelineChangeController_=new TimelineChangeController();_this222.keyStatusMap_=new Map();var segmentLoaderSettings={vhs:_this222.vhs_,parse708captions:options.parse708captions,useDtsForTimestampOffset:options.useDtsForTimestampOffset,captionServices:captionServices,mediaSource:_this222.mediaSource,currentTime:_this222.tech_.currentTime.bind(_this222.tech_),seekable:function seekable(){return _this222.seekable();},seeking:function seeking(){return _this222.tech_.seeking();},duration:function duration(){return _this222.duration();},hasPlayed:function hasPlayed(){return _this222.hasPlayed_;},goalBufferLength:function goalBufferLength(){return _this222.goalBufferLength();},bandwidth:bandwidth,syncController:_this222.syncController_,decrypter:_this222.decrypter_,sourceType:_this222.sourceType_,inbandTextTracks:_this222.inbandTextTracks_,cacheEncryptionKeys:cacheEncryptionKeys,sourceUpdater:_this222.sourceUpdater_,timelineChangeController:_this222.timelineChangeController_,exactManifestTimings:options.exactManifestTimings,addMetadataToTextTrack:_this222.addMetadataToTextTrack.bind(_assertThisInitialized2(_this222))};// The source type check not only determines whether a special DASH playlist loader
// should be used, but also covers the case where the provided src is a vhs-json
// manifest object (instead of a URL). In the case of vhs-json, the default
// PlaylistLoader should be used.
_this222.mainPlaylistLoader_=_this222.sourceType_==='dash'?new DashPlaylistLoader(src,_this222.vhs_,merge(_this222.requestOptions_,{addMetadataToTextTrack:_this222.addMetadataToTextTrack.bind(_assertThisInitialized2(_this222))})):new PlaylistLoader(src,_this222.vhs_,merge(_this222.requestOptions_,{addDateRangesToTextTrack:_this222.addDateRangesToTextTrack_.bind(_assertThisInitialized2(_this222))}));_this222.setupMainPlaylistLoaderListeners_();// setup segment loaders
// combined audio/video or just video when alternate audio track is selected
_this222.mainSegmentLoader_=new SegmentLoader(merge(segmentLoaderSettings,{segmentMetadataTrack:_this222.segmentMetadataTrack_,loaderType:'main'}),options);// alternate audio track
_this222.audioSegmentLoader_=new SegmentLoader(merge(segmentLoaderSettings,{loaderType:'audio'}),options);_this222.subtitleSegmentLoader_=new VTTSegmentLoader(merge(segmentLoaderSettings,{loaderType:'vtt',featuresNativeTextTracks:_this222.tech_.featuresNativeTextTracks,loadVttJs:function loadVttJs(){return new Promise(function(resolve,reject){function onLoad(){tech.off('vttjserror',onError);resolve();}function onError(){tech.off('vttjsloaded',onLoad);reject();}tech.one('vttjsloaded',onLoad);tech.one('vttjserror',onError);// safe to call multiple times, script will be loaded only once:
tech.addWebVttScript_();});}}),options);var getBandwidth=function getBandwidth(){return _this222.mainSegmentLoader_.bandwidth;};_this222.contentSteeringController_=new ContentSteeringController(_this222.vhs_.xhr,getBandwidth);_this222.setupSegmentLoaderListeners_();if(_this222.bufferBasedABR){_this222.mainPlaylistLoader_.one('loadedplaylist',function(){return _this222.startABRTimer_();});_this222.tech_.on('pause',function(){return _this222.stopABRTimer_();});_this222.tech_.on('play',function(){return _this222.startABRTimer_();});}// Create SegmentLoader stat-getters
// mediaRequests_
// mediaRequestsAborted_
// mediaRequestsTimedout_
// mediaRequestsErrored_
// mediaTransferDuration_
// mediaBytesTransferred_
// mediaAppends_
loaderStats.forEach(function(stat){_this222[stat+'_']=sumLoaderStat.bind(_assertThisInitialized2(_this222),stat);});_this222.logger_=logger('pc');_this222.triggeredFmp4Usage=false;if(_this222.tech_.preload()==='none'){_this222.loadOnPlay_=function(){_this222.loadOnPlay_=null;_this222.mainPlaylistLoader_.load();};_this222.tech_.one('play',_this222.loadOnPlay_);}else{_this222.mainPlaylistLoader_.load();}_this222.timeToLoadedData__=-1;_this222.mainAppendsToLoadedData__=-1;_this222.audioAppendsToLoadedData__=-1;var event=_this222.tech_.preload()==='none'?'play':'loadstart';// start the first frame timer on loadstart or play (for preload none)
_this222.tech_.one(event,function(){var timeToLoadedDataStart=Date.now();_this222.tech_.one('loadeddata',function(){_this222.timeToLoadedData__=Date.now()-timeToLoadedDataStart;_this222.mainAppendsToLoadedData__=_this222.mainSegmentLoader_.mediaAppends;_this222.audioAppendsToLoadedData__=_this222.audioSegmentLoader_.mediaAppends;});});return _this222;}_createClass(PlaylistController,[{key:"mainAppendsToLoadedData_",value:function mainAppendsToLoadedData_(){return this.mainAppendsToLoadedData__;}},{key:"audioAppendsToLoadedData_",value:function audioAppendsToLoadedData_(){return this.audioAppendsToLoadedData__;}},{key:"appendsToLoadedData_",value:function appendsToLoadedData_(){var main=this.mainAppendsToLoadedData_();var audio=this.audioAppendsToLoadedData_();if(main===-1||audio===-1){return-1;}return main+audio;}},{key:"timeToLoadedData_",value:function timeToLoadedData_(){return this.timeToLoadedData__;}/**
         * Run selectPlaylist and switch to the new playlist if we should
         *
         * @param {string} [reason=abr] a reason for why the ABR check is made
         * @private
         */},{key:"checkABR_",value:function checkABR_(){var reason=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'abr';var nextPlaylist=this.selectPlaylist();if(nextPlaylist&&this.shouldSwitchToMedia_(nextPlaylist)){this.switchMedia_(nextPlaylist,reason);}}},{key:"switchMedia_",value:function switchMedia_(playlist,cause,delay){var oldMedia=this.media();var oldId=oldMedia&&(oldMedia.id||oldMedia.uri);var newId=playlist&&(playlist.id||playlist.uri);if(oldId&&oldId!==newId){this.logger_("switch media ".concat(oldId," -> ").concat(newId," from ").concat(cause));this.tech_.trigger({type:'usage',name:"vhs-rendition-change-".concat(cause)});}this.mainPlaylistLoader_.media(playlist,delay);}/**
         * A function that ensures we switch our playlists inside of `mediaTypes`
         * to match the current `serviceLocation` provided by the contentSteering controller.
         * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.
         *
         * This should only be called on a DASH playback scenario while using content steering.
         * This is necessary due to differences in how media in HLS manifests are generally tied to
         * a video playlist, where in DASH that is not always the case.
         */},{key:"switchMediaForDASHContentSteering_",value:function switchMediaForDASHContentSteering_(){var _this223=this;['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(function(type){var mediaType=_this223.mediaTypes_[type];var activeGroup=mediaType?mediaType.activeGroup():null;var pathway=_this223.contentSteeringController_.getPathway();if(activeGroup&&pathway){// activeGroup can be an array or a single group
var mediaPlaylists=activeGroup.length?activeGroup[0].playlists:activeGroup.playlists;var dashMediaPlaylists=mediaPlaylists.filter(function(p){return p.attributes.serviceLocation===pathway;});// Switch the current active playlist to the correct CDN
if(dashMediaPlaylists.length){_this223.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);}}});}/**
         * Start a timer that periodically calls checkABR_
         *
         * @private
         */},{key:"startABRTimer_",value:function startABRTimer_(){var _this224=this;this.stopABRTimer_();this.abrTimer_=window_1.setInterval(function(){return _this224.checkABR_();},250);}/**
         * Stop the timer that periodically calls checkABR_
         *
         * @private
         */},{key:"stopABRTimer_",value:function stopABRTimer_(){// if we're scrubbing, we don't need to pause.
// This getter will be added to Video.js in version 7.11.
if(this.tech_.scrubbing&&this.tech_.scrubbing()){return;}window_1.clearInterval(this.abrTimer_);this.abrTimer_=null;}/**
         * Get a list of playlists for the currently selected audio playlist
         *
         * @return {Array} the array of audio playlists
         */},{key:"getAudioTrackPlaylists_",value:function getAudioTrackPlaylists_(){var main=this.main();var defaultPlaylists=main&&main.playlists||[];// if we don't have any audio groups then we can only
// assume that the audio tracks are contained in main
// playlist array, use that or an empty array.
if(!main||!main.mediaGroups||!main.mediaGroups.AUDIO){return defaultPlaylists;}var AUDIO=main.mediaGroups.AUDIO;var groupKeys=Object.keys(AUDIO);var track;// get the current active track
if(Object.keys(this.mediaTypes_.AUDIO.groups).length){track=this.mediaTypes_.AUDIO.activeTrack();// or get the default track from main if mediaTypes_ isn't setup yet
}else{// default group is `main` or just the first group.
var defaultGroup=AUDIO.main||groupKeys.length&&AUDIO[groupKeys[0]];for(var label in defaultGroup){if(defaultGroup[label].default){track={label:label};break;}}}// no active track no playlists.
if(!track){return defaultPlaylists;}var playlists=[];// get all of the playlists that are possible for the
// active track.
for(var group in AUDIO){if(AUDIO[group][track.label]){var _properties4=AUDIO[group][track.label];if(_properties4.playlists&&_properties4.playlists.length){playlists.push.apply(playlists,_properties4.playlists);}else if(_properties4.uri){playlists.push(_properties4);}else if(main.playlists.length){// if an audio group does not have a uri
// see if we have main playlists that use it as a group.
// if we do then add those to the playlists list.
for(var _i199=0;_i199<main.playlists.length;_i199++){var playlist=main.playlists[_i199];if(playlist.attributes&&playlist.attributes.AUDIO&&playlist.attributes.AUDIO===group){playlists.push(playlist);}}}}}if(!playlists.length){return defaultPlaylists;}return playlists;}/**
         * Register event handlers on the main playlist loader. A helper
         * function for construction time.
         *
         * @private
         */},{key:"setupMainPlaylistLoaderListeners_",value:function setupMainPlaylistLoaderListeners_(){var _this225=this;this.mainPlaylistLoader_.on('loadedmetadata',function(){var media=_this225.mainPlaylistLoader_.media();var requestTimeout=media.targetDuration*1.5*1000;// If we don't have any more available playlists, we don't want to
// timeout the request.
if(isLowestEnabledRendition(_this225.mainPlaylistLoader_.main,_this225.mainPlaylistLoader_.media())){_this225.requestOptions_.timeout=0;}else{_this225.requestOptions_.timeout=requestTimeout;}// if this isn't a live video and preload permits, start
// downloading segments
if(media.endList&&_this225.tech_.preload()!=='none'){_this225.mainSegmentLoader_.playlist(media,_this225.requestOptions_);_this225.mainSegmentLoader_.load();}setupMediaGroups({sourceType:_this225.sourceType_,segmentLoaders:{AUDIO:_this225.audioSegmentLoader_,SUBTITLES:_this225.subtitleSegmentLoader_,main:_this225.mainSegmentLoader_},tech:_this225.tech_,requestOptions:_this225.requestOptions_,mainPlaylistLoader:_this225.mainPlaylistLoader_,vhs:_this225.vhs_,main:_this225.main(),mediaTypes:_this225.mediaTypes_,excludePlaylist:_this225.excludePlaylist.bind(_this225)});_this225.triggerPresenceUsage_(_this225.main(),media);_this225.setupFirstPlay();if(!_this225.mediaTypes_.AUDIO.activePlaylistLoader||_this225.mediaTypes_.AUDIO.activePlaylistLoader.media()){_this225.trigger('selectedinitialmedia');}else{// We must wait for the active audio playlist loader to
// finish setting up before triggering this event so the
// representations API and EME setup is correct
_this225.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata',function(){_this225.trigger('selectedinitialmedia');});}});this.mainPlaylistLoader_.on('loadedplaylist',function(){if(_this225.loadOnPlay_){_this225.tech_.off('play',_this225.loadOnPlay_);}var updatedPlaylist=_this225.mainPlaylistLoader_.media();if(!updatedPlaylist){// Add content steering listeners on first load and init.
_this225.attachContentSteeringListeners_();_this225.initContentSteeringController_();// exclude any variants that are not supported by the browser before selecting
// an initial media as the playlist selectors do not consider browser support
_this225.excludeUnsupportedVariants_();var selectedMedia;if(_this225.enableLowInitialPlaylist){selectedMedia=_this225.selectInitialPlaylist();}if(!selectedMedia){selectedMedia=_this225.selectPlaylist();}if(!selectedMedia||!_this225.shouldSwitchToMedia_(selectedMedia)){return;}_this225.initialMedia_=selectedMedia;_this225.switchMedia_(_this225.initialMedia_,'initial');// Under the standard case where a source URL is provided, loadedplaylist will
// fire again since the playlist will be requested. In the case of vhs-json
// (where the manifest object is provided as the source), when the media
// playlist's `segments` list is already available, a media playlist won't be
// requested, and loadedplaylist won't fire again, so the playlist handler must be
// called on its own here.
var haveJsonSource=_this225.sourceType_==='vhs-json'&&_this225.initialMedia_.segments;if(!haveJsonSource){return;}updatedPlaylist=_this225.initialMedia_;}_this225.handleUpdatedMediaPlaylist(updatedPlaylist);});this.mainPlaylistLoader_.on('error',function(){var error=_this225.mainPlaylistLoader_.error;_this225.excludePlaylist({playlistToExclude:error.playlist,error:error});});this.mainPlaylistLoader_.on('mediachanging',function(){_this225.mainSegmentLoader_.abort();_this225.mainSegmentLoader_.pause();});this.mainPlaylistLoader_.on('mediachange',function(){var media=_this225.mainPlaylistLoader_.media();var requestTimeout=media.targetDuration*1.5*1000;// If we don't have any more available playlists, we don't want to
// timeout the request.
if(isLowestEnabledRendition(_this225.mainPlaylistLoader_.main,_this225.mainPlaylistLoader_.media())){_this225.requestOptions_.timeout=0;}else{_this225.requestOptions_.timeout=requestTimeout;}if(_this225.sourceType_==='dash'){// we don't want to re-request the same hls playlist right after it was changed
_this225.mainPlaylistLoader_.load();}// TODO: Create a new event on the PlaylistLoader that signals
// that the segments have changed in some way and use that to
// update the SegmentLoader instead of doing it twice here and
// on `loadedplaylist`
_this225.mainSegmentLoader_.pause();_this225.mainSegmentLoader_.playlist(media,_this225.requestOptions_);if(_this225.waitingForFastQualityPlaylistReceived_){_this225.runFastQualitySwitch_();}else{_this225.mainSegmentLoader_.load();}_this225.tech_.trigger({type:'mediachange',bubbles:true});});this.mainPlaylistLoader_.on('playlistunchanged',function(){var updatedPlaylist=_this225.mainPlaylistLoader_.media();// ignore unchanged playlists that have already been
// excluded for not-changing. We likely just have a really slowly updating
// playlist.
if(updatedPlaylist.lastExcludeReason_==='playlist-unchanged'){return;}var playlistOutdated=_this225.stuckAtPlaylistEnd_(updatedPlaylist);if(playlistOutdated){// Playlist has stopped updating and we're stuck at its end. Try to
// exclude it and switch to another playlist in the hope that that
// one is updating (and give the player a chance to re-adjust to the
// safe live point).
_this225.excludePlaylist({error:{message:'Playlist no longer updating.',reason:'playlist-unchanged'}});// useful for monitoring QoS
_this225.tech_.trigger('playliststuck');}});this.mainPlaylistLoader_.on('renditiondisabled',function(){_this225.tech_.trigger({type:'usage',name:'vhs-rendition-disabled'});});this.mainPlaylistLoader_.on('renditionenabled',function(){_this225.tech_.trigger({type:'usage',name:'vhs-rendition-enabled'});});}/**
         * Given an updated media playlist (whether it was loaded for the first time, or
         * refreshed for live playlists), update any relevant properties and state to reflect
         * changes in the media that should be accounted for (e.g., cues and duration).
         *
         * @param {Object} updatedPlaylist the updated media playlist object
         *
         * @private
         */},{key:"handleUpdatedMediaPlaylist",value:function handleUpdatedMediaPlaylist(updatedPlaylist){if(this.useCueTags_){this.updateAdCues_(updatedPlaylist);}// TODO: Create a new event on the PlaylistLoader that signals
// that the segments have changed in some way and use that to
// update the SegmentLoader instead of doing it twice here and
// on `mediachange`
this.mainSegmentLoader_.pause();this.mainSegmentLoader_.playlist(updatedPlaylist,this.requestOptions_);if(this.waitingForFastQualityPlaylistReceived_){this.runFastQualitySwitch_();}this.updateDuration(!updatedPlaylist.endList);// If the player isn't paused, ensure that the segment loader is running,
// as it is possible that it was temporarily stopped while waiting for
// a playlist (e.g., in case the playlist errored and we re-requested it).
if(!this.tech_.paused()){this.mainSegmentLoader_.load();if(this.audioSegmentLoader_){this.audioSegmentLoader_.load();}}}/**
         * A helper function for triggerring presence usage events once per source
         *
         * @private
         */},{key:"triggerPresenceUsage_",value:function triggerPresenceUsage_(main,media){var mediaGroups=main.mediaGroups||{};var defaultDemuxed=true;var audioGroupKeys=Object.keys(mediaGroups.AUDIO);for(var mediaGroup in mediaGroups.AUDIO){for(var label in mediaGroups.AUDIO[mediaGroup]){var _properties5=mediaGroups.AUDIO[mediaGroup][label];if(!_properties5.uri){defaultDemuxed=false;}}}if(defaultDemuxed){this.tech_.trigger({type:'usage',name:'vhs-demuxed'});}if(Object.keys(mediaGroups.SUBTITLES).length){this.tech_.trigger({type:'usage',name:'vhs-webvtt'});}if(Vhs$1.Playlist.isAes(media)){this.tech_.trigger({type:'usage',name:'vhs-aes'});}if(audioGroupKeys.length&&Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length>1){this.tech_.trigger({type:'usage',name:'vhs-alternate-audio'});}if(this.useCueTags_){this.tech_.trigger({type:'usage',name:'vhs-playlist-cue-tags'});}}},{key:"shouldSwitchToMedia_",value:function shouldSwitchToMedia_(nextPlaylist){var currentPlaylist=this.mainPlaylistLoader_.media()||this.mainPlaylistLoader_.pendingMedia_;var currentTime=this.tech_.currentTime();var bufferLowWaterLine=this.bufferLowWaterLine();var bufferHighWaterLine=this.bufferHighWaterLine();var buffered=this.tech_.buffered();return shouldSwitchToMedia({buffered:buffered,currentTime:currentTime,currentPlaylist:currentPlaylist,nextPlaylist:nextPlaylist,bufferLowWaterLine:bufferLowWaterLine,bufferHighWaterLine:bufferHighWaterLine,duration:this.duration(),bufferBasedABR:this.bufferBasedABR,log:this.logger_});}/**
         * Register event handlers on the segment loaders. A helper function
         * for construction time.
         *
         * @private
         */},{key:"setupSegmentLoaderListeners_",value:function setupSegmentLoaderListeners_(){var _this226=this;this.mainSegmentLoader_.on('bandwidthupdate',function(){// Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's
// useful to check to see if a rendition switch should be made.
_this226.checkABR_('bandwidthupdate');_this226.tech_.trigger('bandwidthupdate');});this.mainSegmentLoader_.on('timeout',function(){if(_this226.bufferBasedABR){// If a rendition change is needed, then it would've be done on `bandwidthupdate`.
// Here the only consideration is that for buffer based ABR there's no guarantee
// of an immediate switch (since the bandwidth is averaged with a timeout
// bandwidth value of 1), so force a load on the segment loader to keep it going.
_this226.mainSegmentLoader_.load();}});// `progress` events are not reliable enough of a bandwidth measure to trigger buffer
// based ABR.
if(!this.bufferBasedABR){this.mainSegmentLoader_.on('progress',function(){_this226.trigger('progress');});}this.mainSegmentLoader_.on('error',function(){var error=_this226.mainSegmentLoader_.error();_this226.excludePlaylist({playlistToExclude:error.playlist,error:error});});this.mainSegmentLoader_.on('appenderror',function(){_this226.error=_this226.mainSegmentLoader_.error_;_this226.trigger('error');});this.mainSegmentLoader_.on('syncinfoupdate',function(){_this226.onSyncInfoUpdate_();});this.mainSegmentLoader_.on('timestampoffset',function(){_this226.tech_.trigger({type:'usage',name:'vhs-timestamp-offset'});});this.audioSegmentLoader_.on('syncinfoupdate',function(){_this226.onSyncInfoUpdate_();});this.audioSegmentLoader_.on('appenderror',function(){_this226.error=_this226.audioSegmentLoader_.error_;_this226.trigger('error');});this.mainSegmentLoader_.on('ended',function(){_this226.logger_('main segment loader ended');_this226.onEndOfStream();});this.mainSegmentLoader_.on('earlyabort',function(event){// never try to early abort with the new ABR algorithm
if(_this226.bufferBasedABR){return;}_this226.delegateLoaders_('all',['abort']);_this226.excludePlaylist({error:{message:'Aborted early because there isn\'t enough bandwidth to complete '+'the request without rebuffering.'},playlistExclusionDuration:ABORT_EARLY_EXCLUSION_SECONDS});});var updateCodecs=function updateCodecs(){if(!_this226.sourceUpdater_.hasCreatedSourceBuffers()){return _this226.tryToCreateSourceBuffers_();}var codecs=_this226.getCodecsOrExclude_();// no codecs means that the playlist was excluded
if(!codecs){return;}_this226.sourceUpdater_.addOrChangeSourceBuffers(codecs);};this.mainSegmentLoader_.on('trackinfo',updateCodecs);this.audioSegmentLoader_.on('trackinfo',updateCodecs);this.mainSegmentLoader_.on('fmp4',function(){if(!_this226.triggeredFmp4Usage){_this226.tech_.trigger({type:'usage',name:'vhs-fmp4'});_this226.triggeredFmp4Usage=true;}});this.audioSegmentLoader_.on('fmp4',function(){if(!_this226.triggeredFmp4Usage){_this226.tech_.trigger({type:'usage',name:'vhs-fmp4'});_this226.triggeredFmp4Usage=true;}});this.audioSegmentLoader_.on('ended',function(){_this226.logger_('audioSegmentLoader ended');_this226.onEndOfStream();});}},{key:"mediaSecondsLoaded_",value:function mediaSecondsLoaded_(){return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded+this.mainSegmentLoader_.mediaSecondsLoaded);}/**
         * Call load on our SegmentLoaders
         */},{key:"load",value:function load(){this.mainSegmentLoader_.load();if(this.mediaTypes_.AUDIO.activePlaylistLoader){this.audioSegmentLoader_.load();}if(this.mediaTypes_.SUBTITLES.activePlaylistLoader){this.subtitleSegmentLoader_.load();}}/**
         * Re-tune playback quality level for the current player
         * conditions. This method will perform destructive actions like removing
         * already buffered content in order to readjust the currently active
         * playlist quickly. This is good for manual quality changes
         *
         * @private
         */},{key:"fastQualityChange_",value:function fastQualityChange_(){var media=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.selectPlaylist();if(media&&media===this.mainPlaylistLoader_.media()){this.logger_('skipping fastQualityChange because new media is same as old');return;}this.switchMedia_(media,'fast-quality');// we would like to avoid race condition when we call fastQuality,
// reset everything and start loading segments from prev segments instead of new because new playlist is not received yet
this.waitingForFastQualityPlaylistReceived_=true;}},{key:"runFastQualitySwitch_",value:function runFastQualitySwitch_(){var _this227=this;this.waitingForFastQualityPlaylistReceived_=false;// Delete all buffered data to allow an immediate quality switch, then seek to give
// the browser a kick to remove any cached frames from the previous rendtion (.04 seconds
// ahead was roughly the minimum that will accomplish this across a variety of content
// in IE and Edge, but seeking in place is sufficient on all other browsers)
// Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/
// Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904
this.mainSegmentLoader_.pause();this.mainSegmentLoader_.resetEverything(function(){_this227.tech_.setCurrentTime(_this227.tech_.currentTime());});// don't need to reset audio as it is reset when media changes
}/**
         * Begin playback.
         */},{key:"play",value:function play(){if(this.setupFirstPlay()){return;}if(this.tech_.ended()){this.tech_.setCurrentTime(0);}if(this.hasPlayed_){this.load();}var seekable=this.tech_.seekable();// if the viewer has paused and we fell out of the live window,
// seek forward to the live point
if(this.tech_.duration()===Infinity){if(this.tech_.currentTime()<seekable.start(0)){return this.tech_.setCurrentTime(seekable.end(seekable.length-1));}}}/**
         * Seek to the latest media position if this is a live video and the
         * player and video are loaded and initialized.
         */},{key:"setupFirstPlay",value:function setupFirstPlay(){var media=this.mainPlaylistLoader_.media();// Check that everything is ready to begin buffering for the first call to play
//  If 1) there is no active media
//     2) the player is paused
//     3) the first play has already been setup
// then exit early
if(!media||this.tech_.paused()||this.hasPlayed_){return false;}// when the video is a live stream and/or has a start time
if(!media.endList||media.start){var _seekable=this.seekable();if(!_seekable.length){// without a seekable range, the player cannot seek to begin buffering at the
// live or start point
return false;}var seekableEnd=_seekable.end(0);var startPoint=seekableEnd;if(media.start){var offset=media.start.timeOffset;if(offset<0){startPoint=Math.max(seekableEnd+offset,_seekable.start(0));}else{startPoint=Math.min(seekableEnd,offset);}}// trigger firstplay to inform the source handler to ignore the next seek event
this.trigger('firstplay');// seek to the live point
this.tech_.setCurrentTime(startPoint);}this.hasPlayed_=true;// we can begin loading now that everything is ready
this.load();return true;}/**
         * handle the sourceopen event on the MediaSource
         *
         * @private
         */},{key:"handleSourceOpen_",value:function handleSourceOpen_(){// Only attempt to create the source buffer if none already exist.
// handleSourceOpen is also called when we are "re-opening" a source buffer
// after `endOfStream` has been called (in response to a seek for instance)
this.tryToCreateSourceBuffers_();// if autoplay is enabled, begin playback. This is duplicative of
// code in video.js but is required because play() must be invoked
// *after* the media source has opened.
if(this.tech_.autoplay()){var playPromise=this.tech_.play();// Catch/silence error when a pause interrupts a play request
// on browsers which return a promise
if(typeof playPromise!=='undefined'&&typeof playPromise.then==='function'){playPromise.then(null,function(e){});}}this.trigger('sourceopen');}/**
         * handle the sourceended event on the MediaSource
         *
         * @private
         */},{key:"handleSourceEnded_",value:function handleSourceEnded_(){if(!this.inbandTextTracks_.metadataTrack_){return;}var cues=this.inbandTextTracks_.metadataTrack_.cues;if(!cues||!cues.length){return;}var duration=this.duration();cues[cues.length-1].endTime=isNaN(duration)||Math.abs(duration)===Infinity?Number.MAX_VALUE:duration;}/**
         * handle the durationchange event on the MediaSource
         *
         * @private
         */},{key:"handleDurationChange_",value:function handleDurationChange_(){this.tech_.trigger('durationchange');}/**
         * Calls endOfStream on the media source when all active stream types have called
         * endOfStream
         *
         * @param {string} streamType
         *        Stream type of the segment loader that called endOfStream
         * @private
         */},{key:"onEndOfStream",value:function onEndOfStream(){var isEndOfStream=this.mainSegmentLoader_.ended_;if(this.mediaTypes_.AUDIO.activePlaylistLoader){var mainMediaInfo=this.mainSegmentLoader_.getCurrentMediaInfo_();// if the audio playlist loader exists, then alternate audio is active
if(!mainMediaInfo||mainMediaInfo.hasVideo){// if we do not know if the main segment loader contains video yet or if we
// definitively know the main segment loader contains video, then we need to wait
// for both main and audio segment loaders to call endOfStream
isEndOfStream=isEndOfStream&&this.audioSegmentLoader_.ended_;}else{// otherwise just rely on the audio loader
isEndOfStream=this.audioSegmentLoader_.ended_;}}if(!isEndOfStream){return;}this.stopABRTimer_();this.sourceUpdater_.endOfStream();}/**
         * Check if a playlist has stopped being updated
         *
         * @param {Object} playlist the media playlist object
         * @return {boolean} whether the playlist has stopped being updated or not
         */},{key:"stuckAtPlaylistEnd_",value:function stuckAtPlaylistEnd_(playlist){var seekable=this.seekable();if(!seekable.length){// playlist doesn't have enough information to determine whether we are stuck
return false;}var expired=this.syncController_.getExpiredTime(playlist,this.duration());if(expired===null){return false;}// does not use the safe live end to calculate playlist end, since we
// don't want to say we are stuck while there is still content
var absolutePlaylistEnd=Vhs$1.Playlist.playlistEnd(playlist,expired);var currentTime=this.tech_.currentTime();var buffered=this.tech_.buffered();if(!buffered.length){// return true if the playhead reached the absolute end of the playlist
return absolutePlaylistEnd-currentTime<=SAFE_TIME_DELTA;}var bufferedEnd=buffered.end(buffered.length-1);// return true if there is too little buffer left and buffer has reached absolute
// end of playlist
return bufferedEnd-currentTime<=SAFE_TIME_DELTA&&absolutePlaylistEnd-bufferedEnd<=SAFE_TIME_DELTA;}/**
         * Exclude a playlist for a set amount of time, making it unavailable for selection by
         * the rendition selection algorithm, then force a new playlist (rendition) selection.
         *
         * @param {Object=} playlistToExclude
         *                  the playlist to exclude, defaults to the currently selected playlist
         * @param {Object=} error
         *                  an optional error
         * @param {number=} playlistExclusionDuration
         *                  an optional number of seconds to exclude the playlist
         */},{key:"excludePlaylist",value:function excludePlaylist(_ref218){var _this228=this;var _ref218$playlistToExc=_ref218.playlistToExclude,playlistToExclude=_ref218$playlistToExc===void 0?this.mainPlaylistLoader_.media():_ref218$playlistToExc,_ref218$error=_ref218.error,error=_ref218$error===void 0?{}:_ref218$error,playlistExclusionDuration=_ref218.playlistExclusionDuration;// If the `error` was generated by the playlist loader, it will contain
// the playlist we were trying to load (but failed) and that should be
// excluded instead of the currently selected playlist which is likely
// out-of-date in this scenario
playlistToExclude=playlistToExclude||this.mainPlaylistLoader_.media();playlistExclusionDuration=playlistExclusionDuration||error.playlistExclusionDuration||this.playlistExclusionDuration;// If there is no current playlist, then an error occurred while we were
// trying to load the main OR while we were disposing of the tech
if(!playlistToExclude){this.error=error;if(this.mediaSource.readyState!=='open'){this.trigger('error');}else{this.sourceUpdater_.endOfStream('network');}return;}playlistToExclude.playlistErrors_++;var playlists=this.mainPlaylistLoader_.main.playlists;var enabledPlaylists=playlists.filter(isEnabled);var isFinalRendition=enabledPlaylists.length===1&&enabledPlaylists[0]===playlistToExclude;// Don't exclude the only playlist unless it was excluded
// forever
if(playlists.length===1&&playlistExclusionDuration!==Infinity){videojs.log.warn("Problem encountered with playlist ".concat(playlistToExclude.id,". ")+'Trying again since it is the only playlist.');this.tech_.trigger('retryplaylist');// if this is a final rendition, we should delay
return this.mainPlaylistLoader_.load(isFinalRendition);}if(isFinalRendition){// If we're content steering, try other pathways.
if(this.main().contentSteering){var pathway=this.pathwayAttribute_(playlistToExclude);// Ignore at least 1 steering manifest refresh.
var reIncludeDelay=this.contentSteeringController_.steeringManifest.ttl*1000;this.contentSteeringController_.excludePathway(pathway);this.excludeThenChangePathway_();setTimeout(function(){_this228.contentSteeringController_.addAvailablePathway(pathway);},reIncludeDelay);return;}// Since we're on the final non-excluded playlist, and we're about to exclude
// it, instead of erring the player or retrying this playlist, clear out the current
// exclusion list. This allows other playlists to be attempted in case any have been
// fixed.
var reincluded=false;playlists.forEach(function(playlist){// skip current playlist which is about to be excluded
if(playlist===playlistToExclude){return;}var excludeUntil=playlist.excludeUntil;// a playlist cannot be reincluded if it wasn't excluded to begin with.
if(typeof excludeUntil!=='undefined'&&excludeUntil!==Infinity){reincluded=true;delete playlist.excludeUntil;}});if(reincluded){videojs.log.warn('Removing other playlists from the exclusion list because the last '+'rendition is about to be excluded.');// Technically we are retrying a playlist, in that we are simply retrying a previous
// playlist. This is needed for users relying on the retryplaylist event to catch a
// case where the player might be stuck and looping through "dead" playlists.
this.tech_.trigger('retryplaylist');}}// Exclude this playlist
var excludeUntil;if(playlistToExclude.playlistErrors_>this.maxPlaylistRetries){excludeUntil=Infinity;}else{excludeUntil=Date.now()+playlistExclusionDuration*1000;}playlistToExclude.excludeUntil=excludeUntil;if(error.reason){playlistToExclude.lastExcludeReason_=error.reason;}this.tech_.trigger('excludeplaylist');this.tech_.trigger({type:'usage',name:'vhs-rendition-excluded'});// TODO: only load a new playlist if we're excluding the current playlist
// If this function was called with a playlist that's not the current active playlist
// (e.g., media().id !== playlistToExclude.id),
// then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.
var nextPlaylist=this.selectPlaylist();if(!nextPlaylist){this.error='Playback cannot continue. No available working or supported playlists.';this.trigger('error');return;}var logFn=error.internal?this.logger_:videojs.log.warn;var errorMessage=error.message?' '+error.message:'';logFn("".concat(error.internal?'Internal problem':'Problem'," encountered with playlist ").concat(playlistToExclude.id,".")+"".concat(errorMessage," Switching to playlist ").concat(nextPlaylist.id,"."));// if audio group changed reset audio loaders
if(nextPlaylist.attributes.AUDIO!==playlistToExclude.attributes.AUDIO){this.delegateLoaders_('audio',['abort','pause']);}// if subtitle group changed reset subtitle loaders
if(nextPlaylist.attributes.SUBTITLES!==playlistToExclude.attributes.SUBTITLES){this.delegateLoaders_('subtitle',['abort','pause']);}this.delegateLoaders_('main',['abort','pause']);var delayDuration=nextPlaylist.targetDuration/2*1000||5*1000;var shouldDelay=typeof nextPlaylist.lastRequest==='number'&&Date.now()-nextPlaylist.lastRequest<=delayDuration;// delay if it's a final rendition or if the last refresh is sooner than half targetDuration
return this.switchMedia_(nextPlaylist,'exclude',isFinalRendition||shouldDelay);}/**
         * Pause all segment/playlist loaders
         */},{key:"pauseLoading",value:function pauseLoading(){this.delegateLoaders_('all',['abort','pause']);this.stopABRTimer_();}/**
         * Call a set of functions in order on playlist loaders, segment loaders,
         * or both types of loaders.
         *
         * @param {string} filter
         *        Filter loaders that should call fnNames using a string. Can be:
         *        * all - run on all loaders
         *        * audio - run on all audio loaders
         *        * subtitle - run on all subtitle loaders
         *        * main - run on the main loaders
         *
         * @param {Array|string} fnNames
         *        A string or array of function names to call.
         */},{key:"delegateLoaders_",value:function delegateLoaders_(filter,fnNames){var _this229=this;var loaders=[];var dontFilterPlaylist=filter==='all';if(dontFilterPlaylist||filter==='main'){loaders.push(this.mainPlaylistLoader_);}var mediaTypes=[];if(dontFilterPlaylist||filter==='audio'){mediaTypes.push('AUDIO');}if(dontFilterPlaylist||filter==='subtitle'){mediaTypes.push('CLOSED-CAPTIONS');mediaTypes.push('SUBTITLES');}mediaTypes.forEach(function(mediaType){var loader=_this229.mediaTypes_[mediaType]&&_this229.mediaTypes_[mediaType].activePlaylistLoader;if(loader){loaders.push(loader);}});['main','audio','subtitle'].forEach(function(name){var loader=_this229["".concat(name,"SegmentLoader_")];if(loader&&(filter===name||filter==='all')){loaders.push(loader);}});loaders.forEach(function(loader){return fnNames.forEach(function(fnName){if(typeof loader[fnName]==='function'){loader[fnName]();}});});}/**
         * set the current time on all segment loaders
         *
         * @param {TimeRange} currentTime the current time to set
         * @return {TimeRange} the current time
         */},{key:"setCurrentTime",value:function setCurrentTime(currentTime){var buffered=findRange(this.tech_.buffered(),currentTime);if(!(this.mainPlaylistLoader_&&this.mainPlaylistLoader_.media())){// return immediately if the metadata is not ready yet
return 0;}// it's clearly an edge-case but don't thrown an error if asked to
// seek within an empty playlist
if(!this.mainPlaylistLoader_.media().segments){return 0;}// if the seek location is already buffered, continue buffering as usual
if(buffered&&buffered.length){return currentTime;}// cancel outstanding requests so we begin buffering at the new
// location
this.mainSegmentLoader_.pause();this.mainSegmentLoader_.resetEverything();if(this.mediaTypes_.AUDIO.activePlaylistLoader){this.audioSegmentLoader_.pause();this.audioSegmentLoader_.resetEverything();}if(this.mediaTypes_.SUBTITLES.activePlaylistLoader){this.subtitleSegmentLoader_.pause();this.subtitleSegmentLoader_.resetEverything();}// start segment loader loading in case they are paused
this.load();}/**
         * get the current duration
         *
         * @return {TimeRange} the duration
         */},{key:"duration",value:function duration(){if(!this.mainPlaylistLoader_){return 0;}var media=this.mainPlaylistLoader_.media();if(!media){// no playlists loaded yet, so can't determine a duration
return 0;}// Don't rely on the media source for duration in the case of a live playlist since
// setting the native MediaSource's duration to infinity ends up with consequences to
// seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.
//
// This is resolved in the spec by https://github.com/w3c/media-source/pull/92,
// however, few browsers have support for setLiveSeekableRange()
// https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange
//
// Until a time when the duration of the media source can be set to infinity, and a
// seekable range specified across browsers, just return Infinity.
if(!media.endList){return Infinity;}// Since this is a VOD video, it is safe to rely on the media source's duration (if
// available). If it's not available, fall back to a playlist-calculated estimate.
if(this.mediaSource){return this.mediaSource.duration;}return Vhs$1.Playlist.duration(media);}/**
         * check the seekable range
         *
         * @return {TimeRange} the seekable range
         */},{key:"seekable",value:function seekable(){return this.seekable_;}},{key:"onSyncInfoUpdate_",value:function onSyncInfoUpdate_(){var audioSeekable;// TODO check for creation of both source buffers before updating seekable
//
// A fix was made to this function where a check for
// this.sourceUpdater_.hasCreatedSourceBuffers
// was added to ensure that both source buffers were created before seekable was
// updated. However, it originally had a bug where it was checking for a true and
// returning early instead of checking for false. Setting it to check for false to
// return early though created other issues. A call to play() would check for seekable
// end without verifying that a seekable range was present. In addition, even checking
// for that didn't solve some issues, as handleFirstPlay is sometimes worked around
// due to a media update calling load on the segment loaders, skipping a seek to live,
// thereby starting live streams at the beginning of the stream rather than at the end.
//
// This conditional should be fixed to wait for the creation of two source buffers at
// the same time as the other sections of code are fixed to properly seek to live and
// not throw an error due to checking for a seekable end when no seekable range exists.
//
// For now, fall back to the older behavior, with the understanding that the seekable
// range may not be completely correct, leading to a suboptimal initial live point.
if(!this.mainPlaylistLoader_){return;}var media=this.mainPlaylistLoader_.media();if(!media){return;}var expired=this.syncController_.getExpiredTime(media,this.duration());if(expired===null){// not enough information to update seekable
return;}var main=this.mainPlaylistLoader_.main;var mainSeekable=Vhs$1.Playlist.seekable(media,expired,Vhs$1.Playlist.liveEdgeDelay(main,media));if(mainSeekable.length===0){return;}if(this.mediaTypes_.AUDIO.activePlaylistLoader){media=this.mediaTypes_.AUDIO.activePlaylistLoader.media();expired=this.syncController_.getExpiredTime(media,this.duration());if(expired===null){return;}audioSeekable=Vhs$1.Playlist.seekable(media,expired,Vhs$1.Playlist.liveEdgeDelay(main,media));if(audioSeekable.length===0){return;}}var oldEnd;var oldStart;if(this.seekable_&&this.seekable_.length){oldEnd=this.seekable_.end(0);oldStart=this.seekable_.start(0);}if(!audioSeekable){// seekable has been calculated based on buffering video data so it
// can be returned directly
this.seekable_=mainSeekable;}else if(audioSeekable.start(0)>mainSeekable.end(0)||mainSeekable.start(0)>audioSeekable.end(0)){// seekables are pretty far off, rely on main
this.seekable_=mainSeekable;}else{this.seekable_=createTimeRanges([[audioSeekable.start(0)>mainSeekable.start(0)?audioSeekable.start(0):mainSeekable.start(0),audioSeekable.end(0)<mainSeekable.end(0)?audioSeekable.end(0):mainSeekable.end(0)]]);}// seekable is the same as last time
if(this.seekable_&&this.seekable_.length){if(this.seekable_.end(0)===oldEnd&&this.seekable_.start(0)===oldStart){return;}}this.logger_("seekable updated [".concat(printableRange(this.seekable_),"]"));this.tech_.trigger('seekablechanged');}/**
         * Update the player duration
         */},{key:"updateDuration",value:function updateDuration(isLive){if(this.updateDuration_){this.mediaSource.removeEventListener('sourceopen',this.updateDuration_);this.updateDuration_=null;}if(this.mediaSource.readyState!=='open'){this.updateDuration_=this.updateDuration.bind(this,isLive);this.mediaSource.addEventListener('sourceopen',this.updateDuration_);return;}if(isLive){var _seekable2=this.seekable();if(!_seekable2.length){return;}// Even in the case of a live playlist, the native MediaSource's duration should not
// be set to Infinity (even though this would be expected for a live playlist), since
// setting the native MediaSource's duration to infinity ends up with consequences to
// seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.
//
// This is resolved in the spec by https://github.com/w3c/media-source/pull/92,
// however, few browsers have support for setLiveSeekableRange()
// https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange
//
// Until a time when the duration of the media source can be set to infinity, and a
// seekable range specified across browsers, the duration should be greater than or
// equal to the last possible seekable value.
// MediaSource duration starts as NaN
// It is possible (and probable) that this case will never be reached for many
// sources, since the MediaSource reports duration as the highest value without
// accounting for timestamp offset. For example, if the timestamp offset is -100 and
// we buffered times 0 to 100 with real times of 100 to 200, even though current
// time will be between 0 and 100, the native media source may report the duration
// as 200. However, since we report duration separate from the media source (as
// Infinity), and as long as the native media source duration value is greater than
// our reported seekable range, seeks will work as expected. The large number as
// duration for live is actually a strategy used by some players to work around the
// issue of live seekable ranges cited above.
if(isNaN(this.mediaSource.duration)||this.mediaSource.duration<_seekable2.end(_seekable2.length-1)){this.sourceUpdater_.setDuration(_seekable2.end(_seekable2.length-1));}return;}var buffered=this.tech_.buffered();var duration=Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());if(buffered.length>0){duration=Math.max(duration,buffered.end(buffered.length-1));}if(this.mediaSource.duration!==duration){this.sourceUpdater_.setDuration(duration);}}/**
         * dispose of the PlaylistController and everything
         * that it controls
         */},{key:"dispose",value:function dispose(){var _this230=this;this.trigger('dispose');this.decrypter_.terminate();this.mainPlaylistLoader_.dispose();this.mainSegmentLoader_.dispose();this.contentSteeringController_.dispose();this.keyStatusMap_.clear();if(this.loadOnPlay_){this.tech_.off('play',this.loadOnPlay_);}['AUDIO','SUBTITLES'].forEach(function(type){var groups=_this230.mediaTypes_[type].groups;for(var id in groups){groups[id].forEach(function(group){if(group.playlistLoader){group.playlistLoader.dispose();}});}});this.audioSegmentLoader_.dispose();this.subtitleSegmentLoader_.dispose();this.sourceUpdater_.dispose();this.timelineChangeController_.dispose();this.stopABRTimer_();if(this.updateDuration_){this.mediaSource.removeEventListener('sourceopen',this.updateDuration_);}this.mediaSource.removeEventListener('durationchange',this.handleDurationChange_);// load the media source into the player
this.mediaSource.removeEventListener('sourceopen',this.handleSourceOpen_);this.mediaSource.removeEventListener('sourceended',this.handleSourceEnded_);this.off();}/**
         * return the main playlist object if we have one
         *
         * @return {Object} the main playlist object that we parsed
         */},{key:"main",value:function main(){return this.mainPlaylistLoader_.main;}/**
         * return the currently selected playlist
         *
         * @return {Object} the currently selected playlist object that we parsed
         */},{key:"media",value:function media(){// playlist loader will not return media if it has not been fully loaded
return this.mainPlaylistLoader_.media()||this.initialMedia_;}},{key:"areMediaTypesKnown_",value:function areMediaTypesKnown_(){var usingAudioLoader=!!this.mediaTypes_.AUDIO.activePlaylistLoader;var hasMainMediaInfo=!!this.mainSegmentLoader_.getCurrentMediaInfo_();// if we are not using an audio loader, then we have audio media info
// otherwise check on the segment loader.
var hasAudioMediaInfo=!usingAudioLoader?true:!!this.audioSegmentLoader_.getCurrentMediaInfo_();// one or both loaders has not loaded sufficently to get codecs
if(!hasMainMediaInfo||!hasAudioMediaInfo){return false;}return true;}},{key:"getCodecsOrExclude_",value:function getCodecsOrExclude_(){var _this231=this;var media={main:this.mainSegmentLoader_.getCurrentMediaInfo_()||{},audio:this.audioSegmentLoader_.getCurrentMediaInfo_()||{}};var playlist=this.mainSegmentLoader_.getPendingSegmentPlaylist()||this.media();// set "main" media equal to video
media.video=media.main;var playlistCodecs=codecsForPlaylist(this.main(),playlist);var codecs={};var usingAudioLoader=!!this.mediaTypes_.AUDIO.activePlaylistLoader;if(media.main.hasVideo){codecs.video=playlistCodecs.video||media.main.videoCodec||DEFAULT_VIDEO_CODEC;}if(media.main.isMuxed){codecs.video+=",".concat(playlistCodecs.audio||media.main.audioCodec||DEFAULT_AUDIO_CODEC);}if(media.main.hasAudio&&!media.main.isMuxed||media.audio.hasAudio||usingAudioLoader){codecs.audio=playlistCodecs.audio||media.main.audioCodec||media.audio.audioCodec||DEFAULT_AUDIO_CODEC;// set audio isFmp4 so we use the correct "supports" function below
media.audio.isFmp4=media.main.hasAudio&&!media.main.isMuxed?media.main.isFmp4:media.audio.isFmp4;}// no codecs, no playback.
if(!codecs.audio&&!codecs.video){this.excludePlaylist({playlistToExclude:playlist,error:{message:'Could not determine codecs for playlist.'},playlistExclusionDuration:Infinity});return;}// fmp4 relies on browser support, while ts relies on muxer support
var supportFunction=function supportFunction(isFmp4,codec){return isFmp4?browserSupportsCodec(codec):muxerSupportsCodec(codec);};var unsupportedCodecs={};var unsupportedAudio;['video','audio'].forEach(function(type){if(codecs.hasOwnProperty(type)&&!supportFunction(media[type].isFmp4,codecs[type])){var supporter=media[type].isFmp4?'browser':'muxer';unsupportedCodecs[supporter]=unsupportedCodecs[supporter]||[];unsupportedCodecs[supporter].push(codecs[type]);if(type==='audio'){unsupportedAudio=supporter;}}});if(usingAudioLoader&&unsupportedAudio&&playlist.attributes.AUDIO){var audioGroup=playlist.attributes.AUDIO;this.main().playlists.forEach(function(variant){var variantAudioGroup=variant.attributes&&variant.attributes.AUDIO;if(variantAudioGroup===audioGroup&&variant!==playlist){variant.excludeUntil=Infinity;}});this.logger_("excluding audio group ".concat(audioGroup," as ").concat(unsupportedAudio," does not support codec(s): \"").concat(codecs.audio,"\""));}// if we have any unsupported codecs exclude this playlist.
if(Object.keys(unsupportedCodecs).length){var message=Object.keys(unsupportedCodecs).reduce(function(acc,supporter){if(acc){acc+=', ';}acc+="".concat(supporter," does not support codec(s): \"").concat(unsupportedCodecs[supporter].join(','),"\"");return acc;},'')+'.';this.excludePlaylist({playlistToExclude:playlist,error:{internal:true,message:message},playlistExclusionDuration:Infinity});return;}// check if codec switching is happening
if(this.sourceUpdater_.hasCreatedSourceBuffers()&&!this.sourceUpdater_.canChangeType()){var switchMessages=[];['video','audio'].forEach(function(type){var newCodec=(parseCodecs(_this231.sourceUpdater_.codecs[type]||'')[0]||{}).type;var oldCodec=(parseCodecs(codecs[type]||'')[0]||{}).type;if(newCodec&&oldCodec&&newCodec.toLowerCase()!==oldCodec.toLowerCase()){switchMessages.push("\"".concat(_this231.sourceUpdater_.codecs[type],"\" -> \"").concat(codecs[type],"\""));}});if(switchMessages.length){this.excludePlaylist({playlistToExclude:playlist,error:{message:"Codec switching not supported: ".concat(switchMessages.join(', '),"."),internal:true},playlistExclusionDuration:Infinity});return;}}// TODO: when using the muxer shouldn't we just return
// the codecs that the muxer outputs?
return codecs;}/**
         * Create source buffers and exlude any incompatible renditions.
         *
         * @private
         */},{key:"tryToCreateSourceBuffers_",value:function tryToCreateSourceBuffers_(){// media source is not ready yet or sourceBuffers are already
// created.
if(this.mediaSource.readyState!=='open'||this.sourceUpdater_.hasCreatedSourceBuffers()){return;}if(!this.areMediaTypesKnown_()){return;}var codecs=this.getCodecsOrExclude_();// no codecs means that the playlist was excluded
if(!codecs){return;}this.sourceUpdater_.createSourceBuffers(codecs);var codecString=[codecs.video,codecs.audio].filter(Boolean).join(',');this.excludeIncompatibleVariants_(codecString);}/**
         * Excludes playlists with codecs that are unsupported by the muxer and browser.
         */},{key:"excludeUnsupportedVariants_",value:function excludeUnsupportedVariants_(){var _this232=this;var playlists=this.main().playlists;var ids=[];// TODO: why don't we have a property to loop through all
// playlist? Why did we ever mix indexes and keys?
Object.keys(playlists).forEach(function(key){var variant=playlists[key];// check if we already processed this playlist.
if(ids.indexOf(variant.id)!==-1){return;}ids.push(variant.id);var codecs=codecsForPlaylist(_this232.main,variant);var unsupported=[];if(codecs.audio&&!muxerSupportsCodec(codecs.audio)&&!browserSupportsCodec(codecs.audio)){unsupported.push("audio codec ".concat(codecs.audio));}if(codecs.video&&!muxerSupportsCodec(codecs.video)&&!browserSupportsCodec(codecs.video)){unsupported.push("video codec ".concat(codecs.video));}if(codecs.text&&codecs.text==='stpp.ttml.im1t'){unsupported.push("text codec ".concat(codecs.text));}if(unsupported.length){variant.excludeUntil=Infinity;_this232.logger_("excluding ".concat(variant.id," for unsupported: ").concat(unsupported.join(', ')));}});}/**
         * Exclude playlists that are known to be codec or
         * stream-incompatible with the SourceBuffer configuration. For
         * instance, Media Source Extensions would cause the video element to
         * stall waiting for video data if you switched from a variant with
         * video and audio to an audio-only one.
         *
         * @param {Object} media a media playlist compatible with the current
         * set of SourceBuffers. Variants in the current main playlist that
         * do not appear to have compatible codec or stream configurations
         * will be excluded from the default playlist selection algorithm
         * indefinitely.
         * @private
         */},{key:"excludeIncompatibleVariants_",value:function excludeIncompatibleVariants_(codecString){var _this233=this;var ids=[];var playlists=this.main().playlists;var codecs=unwrapCodecList(parseCodecs(codecString));var codecCount_=codecCount(codecs);var videoDetails=codecs.video&&parseCodecs(codecs.video)[0]||null;var audioDetails=codecs.audio&&parseCodecs(codecs.audio)[0]||null;Object.keys(playlists).forEach(function(key){var variant=playlists[key];// check if we already processed this playlist.
// or it if it is already excluded forever.
if(ids.indexOf(variant.id)!==-1||variant.excludeUntil===Infinity){return;}ids.push(variant.id);var exclusionReasons=[];// get codecs from the playlist for this variant
var variantCodecs=codecsForPlaylist(_this233.mainPlaylistLoader_.main,variant);var variantCodecCount=codecCount(variantCodecs);// if no codecs are listed, we cannot determine that this
// variant is incompatible. Wait for mux.js to probe
if(!variantCodecs.audio&&!variantCodecs.video){return;}// TODO: we can support this by removing the
// old media source and creating a new one, but it will take some work.
// The number of streams cannot change
if(variantCodecCount!==codecCount_){exclusionReasons.push("codec count \"".concat(variantCodecCount,"\" !== \"").concat(codecCount_,"\""));}// only exclude playlists by codec change, if codecs cannot switch
// during playback.
if(!_this233.sourceUpdater_.canChangeType()){var variantVideoDetails=variantCodecs.video&&parseCodecs(variantCodecs.video)[0]||null;var variantAudioDetails=variantCodecs.audio&&parseCodecs(variantCodecs.audio)[0]||null;// the video codec cannot change
if(variantVideoDetails&&videoDetails&&variantVideoDetails.type.toLowerCase()!==videoDetails.type.toLowerCase()){exclusionReasons.push("video codec \"".concat(variantVideoDetails.type,"\" !== \"").concat(videoDetails.type,"\""));}// the audio codec cannot change
if(variantAudioDetails&&audioDetails&&variantAudioDetails.type.toLowerCase()!==audioDetails.type.toLowerCase()){exclusionReasons.push("audio codec \"".concat(variantAudioDetails.type,"\" !== \"").concat(audioDetails.type,"\""));}}if(exclusionReasons.length){variant.excludeUntil=Infinity;_this233.logger_("excluding ".concat(variant.id,": ").concat(exclusionReasons.join(' && ')));}});}},{key:"updateAdCues_",value:function updateAdCues_(media){var offset=0;var seekable=this.seekable();if(seekable.length){offset=seekable.start(0);}updateAdCues(media,this.cueTagsTrack_,offset);}/**
         * Calculates the desired forward buffer length based on current time
         *
         * @return {number} Desired forward buffer length in seconds
         */},{key:"goalBufferLength",value:function goalBufferLength(){var currentTime=this.tech_.currentTime();var initial=Config.GOAL_BUFFER_LENGTH;var rate=Config.GOAL_BUFFER_LENGTH_RATE;var max=Math.max(initial,Config.MAX_GOAL_BUFFER_LENGTH);return Math.min(initial+currentTime*rate,max);}/**
         * Calculates the desired buffer low water line based on current time
         *
         * @return {number} Desired buffer low water line in seconds
         */},{key:"bufferLowWaterLine",value:function bufferLowWaterLine(){var currentTime=this.tech_.currentTime();var initial=Config.BUFFER_LOW_WATER_LINE;var rate=Config.BUFFER_LOW_WATER_LINE_RATE;var max=Math.max(initial,Config.MAX_BUFFER_LOW_WATER_LINE);var newMax=Math.max(initial,Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);return Math.min(initial+currentTime*rate,this.bufferBasedABR?newMax:max);}},{key:"bufferHighWaterLine",value:function bufferHighWaterLine(){return Config.BUFFER_HIGH_WATER_LINE;}},{key:"addDateRangesToTextTrack_",value:function addDateRangesToTextTrack_(dateRanges){createMetadataTrackIfNotExists(this.inbandTextTracks_,'com.apple.streaming',this.tech_);addDateRangeMetadata({inbandTextTracks:this.inbandTextTracks_,dateRanges:dateRanges});}},{key:"addMetadataToTextTrack",value:function addMetadataToTextTrack(dispatchType,metadataArray,videoDuration){var timestampOffset=this.sourceUpdater_.videoBuffer?this.sourceUpdater_.videoTimestampOffset():this.sourceUpdater_.audioTimestampOffset();// There's potentially an issue where we could double add metadata if there's a muxed
// audio/video source with a metadata track, and an alt audio with a metadata track.
// However, this probably won't happen, and if it does it can be handled then.
createMetadataTrackIfNotExists(this.inbandTextTracks_,dispatchType,this.tech_);addMetadata({inbandTextTracks:this.inbandTextTracks_,metadataArray:metadataArray,timestampOffset:timestampOffset,videoDuration:videoDuration});}/**
         * Utility for getting the pathway or service location from an HLS or DASH playlist.
         *
         * @param {Object} playlist for getting pathway from.
         * @return the pathway attribute of a playlist
         */},{key:"pathwayAttribute_",value:function pathwayAttribute_(playlist){return playlist.attributes['PATHWAY-ID']||playlist.attributes.serviceLocation;}/**
         * Initialize available pathways and apply the tag properties.
         */},{key:"initContentSteeringController_",value:function initContentSteeringController_(){var _this234=this;var main=this.main();if(!main.contentSteering){return;}var _iterator19=_createForOfIteratorHelper(main.playlists),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var playlist=_step19.value;this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}this.contentSteeringController_.assignTagProperties(main.uri,main.contentSteering);// request the steering manifest immediately if queryBeforeStart is set.
if(this.contentSteeringController_.queryBeforeStart){// When queryBeforeStart is true, initial request should omit steering parameters.
this.contentSteeringController_.requestSteeringManifest(true);return;}// otherwise start content steering after playback starts
this.tech_.one('canplay',function(){_this234.contentSteeringController_.requestSteeringManifest();});}/**
         * Reset the content steering controller and re-init.
         */},{key:"resetContentSteeringController_",value:function resetContentSteeringController_(){this.contentSteeringController_.clearAvailablePathways();this.contentSteeringController_.dispose();this.initContentSteeringController_();}/**
         * Attaches the listeners for content steering.
         */},{key:"attachContentSteeringListeners_",value:function attachContentSteeringListeners_(){var _this235=this;this.contentSteeringController_.on('content-steering',this.excludeThenChangePathway_.bind(this));if(this.sourceType_==='dash'){this.mainPlaylistLoader_.on('loadedplaylist',function(){var main=_this235.main();// check if steering tag or pathways changed.
var didDashTagChange=_this235.contentSteeringController_.didDASHTagChange(main.uri,main.contentSteering);var didPathwaysChange=function didPathwaysChange(){var availablePathways=_this235.contentSteeringController_.getAvailablePathways();var newPathways=[];var _iterator20=_createForOfIteratorHelper(main.playlists),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var playlist=_step20.value;var serviceLocation=playlist.attributes.serviceLocation;if(serviceLocation){newPathways.push(serviceLocation);if(!availablePathways.has(serviceLocation)){return true;}}}// If we have no new serviceLocations and previously had availablePathways
}catch(err){_iterator20.e(err);}finally{_iterator20.f();}if(!newPathways.length&&availablePathways.size){return true;}return false;};if(didDashTagChange||didPathwaysChange()){_this235.resetContentSteeringController_();}});}}/**
         * Simple exclude and change playlist logic for content steering.
         */},{key:"excludeThenChangePathway_",value:function excludeThenChangePathway_(){var _this236=this;var currentPathway=this.contentSteeringController_.getPathway();if(!currentPathway){return;}this.handlePathwayClones_();var main=this.main();var playlists=main.playlists;var ids=new Set();var didEnablePlaylists=false;Object.keys(playlists).forEach(function(key){var variant=playlists[key];var pathwayId=_this236.pathwayAttribute_(variant);var differentPathwayId=pathwayId&&currentPathway!==pathwayId;var steeringExclusion=variant.excludeUntil===Infinity&&variant.lastExcludeReason_==='content-steering';if(steeringExclusion&&!differentPathwayId){delete variant.excludeUntil;delete variant.lastExcludeReason_;didEnablePlaylists=true;}var noExcludeUntil=!variant.excludeUntil&&variant.excludeUntil!==Infinity;var shouldExclude=!ids.has(variant.id)&&differentPathwayId&&noExcludeUntil;if(!shouldExclude){return;}ids.add(variant.id);variant.excludeUntil=Infinity;variant.lastExcludeReason_='content-steering';// TODO: kind of spammy, maybe move this.
_this236.logger_("excluding ".concat(variant.id," for ").concat(variant.lastExcludeReason_));});if(this.contentSteeringController_.manifestType_==='DASH'){Object.keys(this.mediaTypes_).forEach(function(key){var type=_this236.mediaTypes_[key];if(type.activePlaylistLoader){var currentPlaylist=type.activePlaylistLoader.media_;// Check if the current media playlist matches the current CDN
if(currentPlaylist&&currentPlaylist.attributes.serviceLocation!==currentPathway){didEnablePlaylists=true;}}});}if(didEnablePlaylists){this.changeSegmentPathway_();}}/**
         * Add, update, or delete playlists and media groups for
         * the pathway clones for HLS Content Steering.
         *
         * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/
         *
         * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and
         * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or
         * `STABLE-RENDITION-ID` values.
         */},{key:"handlePathwayClones_",value:function handlePathwayClones_(){var _this237=this;var main=this.main();var playlists=main.playlists;var currentPathwayClones=this.contentSteeringController_.currentPathwayClones;var nextPathwayClones=this.contentSteeringController_.nextPathwayClones;var hasClones=currentPathwayClones&&currentPathwayClones.size||nextPathwayClones&&nextPathwayClones.size;if(!hasClones){return;}var _iterator21=_createForOfIteratorHelper(currentPathwayClones.entries()),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var _step21$value=_slicedToArray(_step21.value,2),id=_step21$value[0],_clone5=_step21$value[1];var newClone=nextPathwayClones.get(id);// Delete the old pathway clone.
if(!newClone){this.mainPlaylistLoader_.updateOrDeleteClone(_clone5);this.contentSteeringController_.excludePathway(id);}}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}var _iterator22=_createForOfIteratorHelper(nextPathwayClones.entries()),_step22;try{var _loop6=function _loop6(){var _step22$value=_slicedToArray(_step22.value,2),id=_step22$value[0],clone=_step22$value[1];var oldClone=currentPathwayClones.get(id);// Create a new pathway if it is a new pathway clone object.
if(!oldClone){var playlistsToClone=playlists.filter(function(p){return p.attributes['PATHWAY-ID']===clone['BASE-ID'];});playlistsToClone.forEach(function(p){_this237.mainPlaylistLoader_.addClonePathway(clone,p);});_this237.contentSteeringController_.addAvailablePathway(id);return"continue";}// There have not been changes to the pathway clone object, so skip.
if(_this237.equalPathwayClones_(oldClone,clone)){return"continue";}// Update a preexisting cloned pathway.
// True is set for the update flag.
_this237.mainPlaylistLoader_.updateOrDeleteClone(clone,true);_this237.contentSteeringController_.addAvailablePathway(id);};for(_iterator22.s();!(_step22=_iterator22.n()).done;){var _ret2=_loop6();if(_ret2==="continue")continue;}// Deep copy contents of next to current pathways.
}catch(err){_iterator22.e(err);}finally{_iterator22.f();}this.contentSteeringController_.currentPathwayClones=new Map(JSON.parse(JSON.stringify(_toConsumableArray(nextPathwayClones))));}/**
         * Determines whether two pathway clone objects are equivalent.
         *
         * @param {Object} a The first pathway clone object.
         * @param {Object} b The second pathway clone object.
         * @return {boolean} True if the pathway clone objects are equal, false otherwise.
         */},{key:"equalPathwayClones_",value:function equalPathwayClones_(a,b){if(a['BASE-ID']!==b['BASE-ID']||a.ID!==b.ID||a['URI-REPLACEMENT'].HOST!==b['URI-REPLACEMENT'].HOST){return false;}var aParams=a['URI-REPLACEMENT'].PARAMS;var bParams=b['URI-REPLACEMENT'].PARAMS;// We need to iterate through both lists of params because one could be
// missing a parameter that the other has.
for(var _p3 in aParams){if(aParams[_p3]!==bParams[_p3]){return false;}}for(var _p4 in bParams){if(aParams[_p4]!==bParams[_p4]){return false;}}return true;}/**
         * Changes the current playlists for audio, video and subtitles after a new pathway
         * is chosen from content steering.
         */},{key:"changeSegmentPathway_",value:function changeSegmentPathway_(){var nextPlaylist=this.selectPlaylist();this.pauseLoading();// Switch audio and text track playlists if necessary in DASH
if(this.contentSteeringController_.manifestType_==='DASH'){this.switchMediaForDASHContentSteering_();}this.switchMedia_(nextPlaylist,'content-steering');}/**
         * Iterates through playlists and check their keyId set and compare with the
         * keyStatusMap, only enable playlists that have a usable key. If the playlist
         * has no keyId leave it enabled by default.
         */},{key:"excludeNonUsablePlaylistsByKeyId_",value:function excludeNonUsablePlaylistsByKeyId_(){var _this238=this;if(!this.mainPlaylistLoader_||!this.mainPlaylistLoader_.main){return;}var nonUsableKeyStatusCount=0;var NON_USABLE='non-usable';this.mainPlaylistLoader_.main.playlists.forEach(function(playlist){var keyIdSet=_this238.mainPlaylistLoader_.getKeyIdSet(playlist);// If the playlist doesn't have keyIDs lets not exclude it.
if(!keyIdSet||!keyIdSet.size){return;}keyIdSet.forEach(function(key){var USABLE='usable';var hasUsableKeyStatus=_this238.keyStatusMap_.has(key)&&_this238.keyStatusMap_.get(key)===USABLE;var nonUsableExclusion=playlist.lastExcludeReason_===NON_USABLE&&playlist.excludeUntil===Infinity;if(!hasUsableKeyStatus){// Only exclude playlists that haven't already been excluded as non-usable.
if(playlist.excludeUntil!==Infinity&&playlist.lastExcludeReason_!==NON_USABLE){playlist.excludeUntil=Infinity;playlist.lastExcludeReason_=NON_USABLE;_this238.logger_("excluding playlist ".concat(playlist.id," because the key ID ").concat(key," doesn't exist in the keyStatusMap or is not ").concat(USABLE));}// count all nonUsableKeyStatus
nonUsableKeyStatusCount++;}else if(hasUsableKeyStatus&&nonUsableExclusion){delete playlist.excludeUntil;delete playlist.lastExcludeReason_;_this238.logger_("enabling playlist ".concat(playlist.id," because key ID ").concat(key," is ").concat(USABLE));}});});// If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.
if(nonUsableKeyStatusCount>=this.mainPlaylistLoader_.main.playlists.length){this.mainPlaylistLoader_.main.playlists.forEach(function(playlist){var isNonHD=playlist&&playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.height<720;var excludedForNonUsableKey=playlist.excludeUntil===Infinity&&playlist.lastExcludeReason_===NON_USABLE;if(isNonHD&&excludedForNonUsableKey){// Only delete the excludeUntil so we don't try and re-exclude these playlists.
delete playlist.excludeUntil;videojs.log.warn("enabling non-HD playlist ".concat(playlist.id," because all playlists were excluded due to ").concat(NON_USABLE," key IDs"));}});}}/**
         * Adds a keystatus to the keystatus map, tries to convert to string if necessary.
         *
         * @param {any} keyId the keyId to add a status for
         * @param {string} status the status of the keyId
         */},{key:"addKeyStatus_",value:function addKeyStatus_(keyId,status){var isString=typeof keyId==='string';var keyIdHexString=isString?keyId:bufferToHexString(keyId);var formattedKeyIdString=keyIdHexString.slice(0,32).toLowerCase();this.logger_("KeyStatus '".concat(status,"' with key ID ").concat(formattedKeyIdString," added to the keyStatusMap"));this.keyStatusMap_.set(formattedKeyIdString,status);}/**
         * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.
         *
         * @param {any} keyId the keyId from the keystatuschange event
         * @param {string} status the key status string
         */},{key:"updatePlaylistByKeyStatus",value:function updatePlaylistByKeyStatus(keyId,status){this.addKeyStatus_(keyId,status);if(!this.waitingForFastQualityPlaylistReceived_){this.excludeNonUsableThenChangePlaylist_();}// Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.
this.mainPlaylistLoader_.off('loadedplaylist',this.excludeNonUsableThenChangePlaylist_.bind(this));this.mainPlaylistLoader_.on('loadedplaylist',this.excludeNonUsableThenChangePlaylist_.bind(this));}},{key:"excludeNonUsableThenChangePlaylist_",value:function excludeNonUsableThenChangePlaylist_(){this.excludeNonUsablePlaylistsByKeyId_();this.fastQualityChange_();}}]);return PlaylistController;}(videojs.EventTarget);/**
       * Returns a function that acts as the Enable/disable playlist function.
       *
       * @param {PlaylistLoader} loader - The main playlist loader
       * @param {string} playlistID - id of the playlist
       * @param {Function} changePlaylistFn - A function to be called after a
       * playlist's enabled-state has been changed. Will NOT be called if a
       * playlist's enabled-state is unchanged
       * @param {boolean=} enable - Value to set the playlist enabled-state to
       * or if undefined returns the current enabled-state for the playlist
       * @return {Function} Function for setting/getting enabled
       */var enableFunction=function enableFunction(loader,playlistID,changePlaylistFn){return function(enable){var playlist=loader.main.playlists[playlistID];var incompatible=isIncompatible(playlist);var currentlyEnabled=isEnabled(playlist);if(typeof enable==='undefined'){return currentlyEnabled;}if(enable){delete playlist.disabled;}else{playlist.disabled=true;}if(enable!==currentlyEnabled&&!incompatible){// Ensure the outside world knows about our changes
changePlaylistFn(playlist);if(enable){loader.trigger('renditionenabled');}else{loader.trigger('renditiondisabled');}}return enable;};};/**
       * The representation object encapsulates the publicly visible information
       * in a media playlist along with a setter/getter-type function (enabled)
       * for changing the enabled-state of a particular playlist entry
       *
       * @class Representation
       */var Representation=/*#__PURE__*/_createClass(function Representation(vhsHandler,playlist,id){_classCallCheck(this,Representation);var pc=vhsHandler.playlistController_;var qualityChangeFunction=pc.fastQualityChange_.bind(pc);// some playlist attributes are optional
if(playlist.attributes){var resolution=playlist.attributes.RESOLUTION;this.width=resolution&&resolution.width;this.height=resolution&&resolution.height;this.bandwidth=playlist.attributes.BANDWIDTH;this.frameRate=playlist.attributes['FRAME-RATE'];}this.codecs=codecsForPlaylist(pc.main(),playlist);this.playlist=playlist;// The id is simply the ordinality of the media playlist
// within the main playlist
this.id=id;// Partially-apply the enableFunction to create a playlist-
// specific variant
this.enabled=enableFunction(vhsHandler.playlists,playlist.id,qualityChangeFunction);});/**
       * A mixin function that adds the `representations` api to an instance
       * of the VhsHandler class
       *
       * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the
       * representation API into
       */var renditionSelectionMixin=function renditionSelectionMixin(vhsHandler){// Add a single API-specific function to the VhsHandler instance
vhsHandler.representations=function(){var main=vhsHandler.playlistController_.main();var playlists=isAudioOnly(main)?vhsHandler.playlistController_.getAudioTrackPlaylists_():main.playlists;if(!playlists){return[];}return playlists.filter(function(media){return!isIncompatible(media);}).map(function(e,i){return new Representation(vhsHandler,e,e.id);});};};/**
       * @file playback-watcher.js
       *
       * Playback starts, and now my watch begins. It shall not end until my death. I shall
       * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns
       * and win no glory. I shall live and die at my post. I am the corrector of the underflow.
       * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge
       * my life and honor to the Playback Watch, for this Player and all the Players to come.
       */var timerCancelEvents=['seeking','seeked','pause','playing','error'];/**
       * @class PlaybackWatcher
       */var PlaybackWatcher=/*#__PURE__*/function(){/**
         * Represents an PlaybackWatcher object.
         *
         * @class
         * @param {Object} options an object that includes the tech and settings
         */function PlaybackWatcher(options){var _this239=this;_classCallCheck(this,PlaybackWatcher);this.playlistController_=options.playlistController;this.tech_=options.tech;this.seekable=options.seekable;this.allowSeeksWithinUnsafeLiveWindow=options.allowSeeksWithinUnsafeLiveWindow;this.liveRangeSafeTimeDelta=options.liveRangeSafeTimeDelta;this.media=options.media;this.consecutiveUpdates=0;this.lastRecordedTime=null;this.checkCurrentTimeTimeout_=null;this.logger_=logger('PlaybackWatcher');this.logger_('initialize');var playHandler=function playHandler(){return _this239.monitorCurrentTime_();};var canPlayHandler=function canPlayHandler(){return _this239.monitorCurrentTime_();};var waitingHandler=function waitingHandler(){return _this239.techWaiting_();};var cancelTimerHandler=function cancelTimerHandler(){return _this239.resetTimeUpdate_();};var pc=this.playlistController_;var loaderTypes=['main','subtitle','audio'];var loaderChecks={};loaderTypes.forEach(function(type){loaderChecks[type]={reset:function reset(){return _this239.resetSegmentDownloads_(type);},updateend:function updateend(){return _this239.checkSegmentDownloads_(type);}};pc["".concat(type,"SegmentLoader_")].on('appendsdone',loaderChecks[type].updateend);// If a rendition switch happens during a playback stall where the buffer
// isn't changing we want to reset. We cannot assume that the new rendition
// will also be stalled, until after new appends.
pc["".concat(type,"SegmentLoader_")].on('playlistupdate',loaderChecks[type].reset);// Playback stalls should not be detected right after seeking.
// This prevents one segment playlists (single vtt or single segment content)
// from being detected as stalling. As the buffer will not change in those cases, since
// the buffer is the entire video duration.
_this239.tech_.on(['seeked','seeking'],loaderChecks[type].reset);});/**
           * We check if a seek was into a gap through the following steps:
           * 1. We get a seeking event and we do not get a seeked event. This means that
           *    a seek was attempted but not completed.
           * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already
           *    removed everything from our buffer and appended a segment, and should be ready
           *    to check for gaps.
           */var setSeekingHandlers=function setSeekingHandlers(fn){['main','audio'].forEach(function(type){pc["".concat(type,"SegmentLoader_")][fn]('appended',_this239.seekingAppendCheck_);});};this.seekingAppendCheck_=function(){if(_this239.fixesBadSeeks_()){_this239.consecutiveUpdates=0;_this239.lastRecordedTime=_this239.tech_.currentTime();setSeekingHandlers('off');}};this.clearSeekingAppendCheck_=function(){return setSeekingHandlers('off');};this.watchForBadSeeking_=function(){_this239.clearSeekingAppendCheck_();setSeekingHandlers('on');};this.tech_.on('seeked',this.clearSeekingAppendCheck_);this.tech_.on('seeking',this.watchForBadSeeking_);this.tech_.on('waiting',waitingHandler);this.tech_.on(timerCancelEvents,cancelTimerHandler);this.tech_.on('canplay',canPlayHandler);/*
            An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case
            is surfaced in one of two ways:
             1)  The `waiting` event is fired before the player has buffered content, making it impossible
                to find or skip the gap. The `waiting` event is followed by a `play` event. On first play
                we can check if playback is stalled due to a gap, and skip the gap if necessary.
            2)  A source with a gap at the beginning of the stream is loaded programatically while the player
                is in a playing state. To catch this case, it's important that our one-time play listener is setup
                even if the player is in a playing state
          */this.tech_.one('play',playHandler);// Define the dispose function to clean up our events
this.dispose=function(){_this239.clearSeekingAppendCheck_();_this239.logger_('dispose');_this239.tech_.off('waiting',waitingHandler);_this239.tech_.off(timerCancelEvents,cancelTimerHandler);_this239.tech_.off('canplay',canPlayHandler);_this239.tech_.off('play',playHandler);_this239.tech_.off('seeking',_this239.watchForBadSeeking_);_this239.tech_.off('seeked',_this239.clearSeekingAppendCheck_);loaderTypes.forEach(function(type){pc["".concat(type,"SegmentLoader_")].off('appendsdone',loaderChecks[type].updateend);pc["".concat(type,"SegmentLoader_")].off('playlistupdate',loaderChecks[type].reset);_this239.tech_.off(['seeked','seeking'],loaderChecks[type].reset);});if(_this239.checkCurrentTimeTimeout_){window_1.clearTimeout(_this239.checkCurrentTimeTimeout_);}_this239.resetTimeUpdate_();};}/**
         * Periodically check current time to see if playback stopped
         *
         * @private
         */_createClass(PlaybackWatcher,[{key:"monitorCurrentTime_",value:function monitorCurrentTime_(){this.checkCurrentTime_();if(this.checkCurrentTimeTimeout_){window_1.clearTimeout(this.checkCurrentTimeTimeout_);}// 42 = 24 fps // 250 is what Webkit uses // FF uses 15
this.checkCurrentTimeTimeout_=window_1.setTimeout(this.monitorCurrentTime_.bind(this),250);}/**
         * Reset stalled download stats for a specific type of loader
         *
         * @param {string} type
         *        The segment loader type to check.
         *
         * @listens SegmentLoader#playlistupdate
         * @listens Tech#seeking
         * @listens Tech#seeked
         */},{key:"resetSegmentDownloads_",value:function resetSegmentDownloads_(type){var loader=this.playlistController_["".concat(type,"SegmentLoader_")];if(this["".concat(type,"StalledDownloads_")]>0){this.logger_("resetting possible stalled download count for ".concat(type," loader"));}this["".concat(type,"StalledDownloads_")]=0;this["".concat(type,"Buffered_")]=loader.buffered_();}/**
         * Checks on every segment `appendsdone` to see
         * if segment appends are making progress. If they are not
         * and we are still downloading bytes. We exclude the playlist.
         *
         * @param {string} type
         *        The segment loader type to check.
         *
         * @listens SegmentLoader#appendsdone
         */},{key:"checkSegmentDownloads_",value:function checkSegmentDownloads_(type){var pc=this.playlistController_;var loader=pc["".concat(type,"SegmentLoader_")];var buffered=loader.buffered_();var isBufferedDifferent=isRangeDifferent(this["".concat(type,"Buffered_")],buffered);this["".concat(type,"Buffered_")]=buffered;// if another watcher is going to fix the issue or
// the buffered value for this loader changed
// appends are working
if(isBufferedDifferent){this.resetSegmentDownloads_(type);return;}this["".concat(type,"StalledDownloads_")]++;this.logger_("found #".concat(this["".concat(type,"StalledDownloads_")]," ").concat(type," appends that did not increase buffer (possible stalled download)"),{playlistId:loader.playlist_&&loader.playlist_.id,buffered:timeRangesToArray(buffered)});// after 10 possibly stalled appends with no reset, exclude
if(this["".concat(type,"StalledDownloads_")]<10){return;}this.logger_("".concat(type," loader stalled download exclusion"));this.resetSegmentDownloads_(type);this.tech_.trigger({type:'usage',name:"vhs-".concat(type,"-download-exclusion")});if(type==='subtitle'){return;}// TODO: should we exclude audio tracks rather than main tracks
// when type is audio?
pc.excludePlaylist({error:{message:"Excessive ".concat(type," segment downloading detected.")},playlistExclusionDuration:Infinity});}/**
         * The purpose of this function is to emulate the "waiting" event on
         * browsers that do not emit it when they are waiting for more
         * data to continue playback
         *
         * @private
         */},{key:"checkCurrentTime_",value:function checkCurrentTime_(){if(this.tech_.paused()||this.tech_.seeking()){return;}var currentTime=this.tech_.currentTime();var buffered=this.tech_.buffered();if(this.lastRecordedTime===currentTime&&(!buffered.length||currentTime+SAFE_TIME_DELTA>=buffered.end(buffered.length-1))){// If current time is at the end of the final buffered region, then any playback
// stall is most likely caused by buffering in a low bandwidth environment. The tech
// should fire a `waiting` event in this scenario, but due to browser and tech
// inconsistencies. Calling `techWaiting_` here allows us to simulate
// responding to a native `waiting` event when the tech fails to emit one.
return this.techWaiting_();}if(this.consecutiveUpdates>=5&&currentTime===this.lastRecordedTime){this.consecutiveUpdates++;this.waiting_();}else if(currentTime===this.lastRecordedTime){this.consecutiveUpdates++;}else{this.consecutiveUpdates=0;this.lastRecordedTime=currentTime;}}/**
         * Resets the 'timeupdate' mechanism designed to detect that we are stalled
         *
         * @private
         */},{key:"resetTimeUpdate_",value:function resetTimeUpdate_(){this.consecutiveUpdates=0;}/**
         * Fixes situations where there's a bad seek
         *
         * @return {boolean} whether an action was taken to fix the seek
         * @private
         */},{key:"fixesBadSeeks_",value:function fixesBadSeeks_(){var seeking=this.tech_.seeking();if(!seeking){return false;}// TODO: It's possible that these seekable checks should be moved out of this function
// and into a function that runs on seekablechange. It's also possible that we only need
// afterSeekableWindow as the buffered check at the bottom is good enough to handle before
// seekable range.
var seekable=this.seekable();var currentTime=this.tech_.currentTime();var isAfterSeekableRange=this.afterSeekableWindow_(seekable,currentTime,this.media(),this.allowSeeksWithinUnsafeLiveWindow);var seekTo;if(isAfterSeekableRange){var seekableEnd=seekable.end(seekable.length-1);// sync to live point (if VOD, our seekable was updated and we're simply adjusting)
seekTo=seekableEnd;}if(this.beforeSeekableWindow_(seekable,currentTime)){var seekableStart=seekable.start(0);// sync to the beginning of the live window
// provide a buffer of .1 seconds to handle rounding/imprecise numbers
seekTo=seekableStart+(// if the playlist is too short and the seekable range is an exact time (can
// happen in live with a 3 segment playlist), then don't use a time delta
seekableStart===seekable.end(0)?0:SAFE_TIME_DELTA);}if(typeof seekTo!=='undefined'){this.logger_("Trying to seek outside of seekable at time ".concat(currentTime," with ")+"seekable range ".concat(printableRange(seekable),". Seeking to ")+"".concat(seekTo,"."));this.tech_.setCurrentTime(seekTo);return true;}var sourceUpdater=this.playlistController_.sourceUpdater_;var buffered=this.tech_.buffered();var audioBuffered=sourceUpdater.audioBuffer?sourceUpdater.audioBuffered():null;var videoBuffered=sourceUpdater.videoBuffer?sourceUpdater.videoBuffered():null;var media=this.media();// verify that at least two segment durations or one part duration have been
// appended before checking for a gap.
var minAppendedDuration=media.partTargetDuration?media.partTargetDuration:(media.targetDuration-TIME_FUDGE_FACTOR)*2;// verify that at least two segment durations have been
// appended before checking for a gap.
var bufferedToCheck=[audioBuffered,videoBuffered];for(var _i200=0;_i200<bufferedToCheck.length;_i200++){// skip null buffered
if(!bufferedToCheck[_i200]){continue;}var timeAhead=timeAheadOf(bufferedToCheck[_i200],currentTime);// if we are less than two video/audio segment durations or one part
// duration behind we haven't appended enough to call this a bad seek.
if(timeAhead<minAppendedDuration){return false;}}var nextRange=findNextRange(buffered,currentTime);// we have appended enough content, but we don't have anything buffered
// to seek over the gap
if(nextRange.length===0){return false;}seekTo=nextRange.start(0)+SAFE_TIME_DELTA;this.logger_("Buffered region starts (".concat(nextRange.start(0),") ")+" just beyond seek point (".concat(currentTime,"). Seeking to ").concat(seekTo,"."));this.tech_.setCurrentTime(seekTo);return true;}/**
         * Handler for situations when we determine the player is waiting.
         *
         * @private
         */},{key:"waiting_",value:function waiting_(){if(this.techWaiting_()){return;}// All tech waiting checks failed. Use last resort correction
var currentTime=this.tech_.currentTime();var buffered=this.tech_.buffered();var currentRange=findRange(buffered,currentTime);// Sometimes the player can stall for unknown reasons within a contiguous buffered
// region with no indication that anything is amiss (seen in Firefox). Seeking to
// currentTime is usually enough to kickstart the player. This checks that the player
// is currently within a buffered region before attempting a corrective seek.
// Chrome does not appear to continue `timeupdate` events after a `waiting` event
// until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also
// make sure there is ~3 seconds of forward buffer before taking any corrective action
// to avoid triggering an `unknownwaiting` event when the network is slow.
if(currentRange.length&&currentTime+3<=currentRange.end(0)){this.resetTimeUpdate_();this.tech_.setCurrentTime(currentTime);this.logger_("Stopped at ".concat(currentTime," while inside a buffered region ")+"[".concat(currentRange.start(0)," -> ").concat(currentRange.end(0),"]. Attempting to resume ")+'playback by seeking to the current time.');// unknown waiting corrections may be useful for monitoring QoS
this.tech_.trigger({type:'usage',name:'vhs-unknown-waiting'});return;}}/**
         * Handler for situations when the tech fires a `waiting` event
         *
         * @return {boolean}
         *         True if an action (or none) was needed to correct the waiting. False if no
         *         checks passed
         * @private
         */},{key:"techWaiting_",value:function techWaiting_(){var seekable=this.seekable();var currentTime=this.tech_.currentTime();if(this.tech_.seeking()){// Tech is seeking or already waiting on another action, no action needed
return true;}if(this.beforeSeekableWindow_(seekable,currentTime)){var livePoint=seekable.end(seekable.length-1);this.logger_("Fell out of live window at time ".concat(currentTime,". Seeking to ")+"live point (seekable end) ".concat(livePoint));this.resetTimeUpdate_();this.tech_.setCurrentTime(livePoint);// live window resyncs may be useful for monitoring QoS
this.tech_.trigger({type:'usage',name:'vhs-live-resync'});return true;}var sourceUpdater=this.tech_.vhs.playlistController_.sourceUpdater_;var buffered=this.tech_.buffered();var videoUnderflow=this.videoUnderflow_({audioBuffered:sourceUpdater.audioBuffered(),videoBuffered:sourceUpdater.videoBuffered(),currentTime:currentTime});if(videoUnderflow){// Even though the video underflowed and was stuck in a gap, the audio overplayed
// the gap, leading currentTime into a buffered range. Seeking to currentTime
// allows the video to catch up to the audio position without losing any audio
// (only suffering ~3 seconds of frozen video and a pause in audio playback).
this.resetTimeUpdate_();this.tech_.setCurrentTime(currentTime);// video underflow may be useful for monitoring QoS
this.tech_.trigger({type:'usage',name:'vhs-video-underflow'});return true;}var nextRange=findNextRange(buffered,currentTime);// check for gap
if(nextRange.length>0){this.logger_("Stopped at ".concat(currentTime," and seeking to ").concat(nextRange.start(0)));this.resetTimeUpdate_();this.skipTheGap_(currentTime);return true;}// All checks failed. Returning false to indicate failure to correct waiting
return false;}},{key:"afterSeekableWindow_",value:function afterSeekableWindow_(seekable,currentTime,playlist){var allowSeeksWithinUnsafeLiveWindow=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(!seekable.length){// we can't make a solid case if there's no seekable, default to false
return false;}var allowedEnd=seekable.end(seekable.length-1)+SAFE_TIME_DELTA;var isLive=!playlist.endList;var isLLHLS=typeof playlist.partTargetDuration==='number';if(isLive&&(isLLHLS||allowSeeksWithinUnsafeLiveWindow)){allowedEnd=seekable.end(seekable.length-1)+playlist.targetDuration*3;}if(currentTime>allowedEnd){return true;}return false;}},{key:"beforeSeekableWindow_",value:function beforeSeekableWindow_(seekable,currentTime){if(seekable.length&&// can't fall before 0 and 0 seekable start identifies VOD stream
seekable.start(0)>0&&currentTime<seekable.start(0)-this.liveRangeSafeTimeDelta){return true;}return false;}},{key:"videoUnderflow_",value:function videoUnderflow_(_ref219){var videoBuffered=_ref219.videoBuffered,audioBuffered=_ref219.audioBuffered,currentTime=_ref219.currentTime;// audio only content will not have video underflow :)
if(!videoBuffered){return;}var gap;// find a gap in demuxed content.
if(videoBuffered.length&&audioBuffered.length){// in Chrome audio will continue to play for ~3s when we run out of video
// so we have to check that the video buffer did have some buffer in the
// past.
var lastVideoRange=findRange(videoBuffered,currentTime-3);var videoRange=findRange(videoBuffered,currentTime);var audioRange=findRange(audioBuffered,currentTime);if(audioRange.length&&!videoRange.length&&lastVideoRange.length){gap={start:lastVideoRange.end(0),end:audioRange.end(0)};}// find a gap in muxed content.
}else{var nextRange=findNextRange(videoBuffered,currentTime);// Even if there is no available next range, there is still a possibility we are
// stuck in a gap due to video underflow.
if(!nextRange.length){gap=this.gapFromVideoUnderflow_(videoBuffered,currentTime);}}if(gap){this.logger_("Encountered a gap in video from ".concat(gap.start," to ").concat(gap.end,". ")+"Seeking to current time ".concat(currentTime));return true;}return false;}/**
         * Timer callback. If playback still has not proceeded, then we seek
         * to the start of the next buffered region.
         *
         * @private
         */},{key:"skipTheGap_",value:function skipTheGap_(scheduledCurrentTime){var buffered=this.tech_.buffered();var currentTime=this.tech_.currentTime();var nextRange=findNextRange(buffered,currentTime);this.resetTimeUpdate_();if(nextRange.length===0||currentTime!==scheduledCurrentTime){return;}this.logger_('skipTheGap_:','currentTime:',currentTime,'scheduled currentTime:',scheduledCurrentTime,'nextRange start:',nextRange.start(0));// only seek if we still have not played
this.tech_.setCurrentTime(nextRange.start(0)+TIME_FUDGE_FACTOR);this.tech_.trigger({type:'usage',name:'vhs-gap-skip'});}},{key:"gapFromVideoUnderflow_",value:function gapFromVideoUnderflow_(buffered,currentTime){// At least in Chrome, if there is a gap in the video buffer, the audio will continue
// playing for ~3 seconds after the video gap starts. This is done to account for
// video buffer underflow/underrun (note that this is not done when there is audio
// buffer underflow/underrun -- in that case the video will stop as soon as it
// encounters the gap, as audio stalls are more noticeable/jarring to a user than
// video stalls). The player's time will reflect the playthrough of audio, so the
// time will appear as if we are in a buffered region, even if we are stuck in a
// "gap."
//
// Example:
// video buffer:   0 => 10.1, 10.2 => 20
// audio buffer:   0 => 20
// overall buffer: 0 => 10.1, 10.2 => 20
// current time: 13
//
// Chrome's video froze at 10 seconds, where the video buffer encountered the gap,
// however, the audio continued playing until it reached ~3 seconds past the gap
// (13 seconds), at which point it stops as well. Since current time is past the
// gap, findNextRange will return no ranges.
//
// To check for this issue, we see if there is a gap that starts somewhere within
// a 3 second range (3 seconds +/- 1 second) back from our current time.
var gaps=findGaps(buffered);for(var _i201=0;_i201<gaps.length;_i201++){var start=gaps.start(_i201);var _end9=gaps.end(_i201);// gap is starts no more than 4 seconds back
if(currentTime-start<4&&currentTime-start>2){return{start:start,end:_end9};}}return null;}}]);return PlaybackWatcher;}();var defaultOptions={errorInterval:30,getSource:function getSource(next){var tech=this.tech({IWillNotUseThisInPlugins:true});var sourceObj=tech.currentSource_||this.currentSource();return next(sourceObj);}};/**
       * Main entry point for the plugin
       *
       * @param {Player} player a reference to a videojs Player instance
       * @param {Object} [options] an object with plugin options
       * @private
       */var initPlugin=function initPlugin(player,options){var lastCalled=0;var seekTo=0;var localOptions=merge(defaultOptions,options);player.ready(function(){player.trigger({type:'usage',name:'vhs-error-reload-initialized'});});/**
         * Player modifications to perform that must wait until `loadedmetadata`
         * has been triggered
         *
         * @private
         */var loadedMetadataHandler=function loadedMetadataHandler(){if(seekTo){player.currentTime(seekTo);}};/**
         * Set the source on the player element, play, and seek if necessary
         *
         * @param {Object} sourceObj An object specifying the source url and mime-type to play
         * @private
         */var setSource=function setSource(sourceObj){if(sourceObj===null||sourceObj===undefined){return;}seekTo=player.duration()!==Infinity&&player.currentTime()||0;player.one('loadedmetadata',loadedMetadataHandler);player.src(sourceObj);player.trigger({type:'usage',name:'vhs-error-reload'});player.play();};/**
         * Attempt to get a source from either the built-in getSource function
         * or a custom function provided via the options
         *
         * @private
         */var errorHandler=function errorHandler(){// Do not attempt to reload the source if a source-reload occurred before
// 'errorInterval' time has elapsed since the last source-reload
if(Date.now()-lastCalled<localOptions.errorInterval*1000){player.trigger({type:'usage',name:'vhs-error-reload-canceled'});return;}if(!localOptions.getSource||typeof localOptions.getSource!=='function'){videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');return;}lastCalled=Date.now();return localOptions.getSource.call(player,setSource);};/**
         * Unbind any event handlers that were bound by the plugin
         *
         * @private
         */var cleanupEvents=function cleanupEvents(){player.off('loadedmetadata',loadedMetadataHandler);player.off('error',errorHandler);player.off('dispose',cleanupEvents);};/**
         * Cleanup before re-initializing the plugin
         *
         * @param {Object} [newOptions] an object with plugin options
         * @private
         */var reinitPlugin=function reinitPlugin(newOptions){cleanupEvents();initPlugin(player,newOptions);};player.on('error',errorHandler);player.on('dispose',cleanupEvents);// Overwrite the plugin function so that we can correctly cleanup before
// initializing the plugin
player.reloadSourceOnError=reinitPlugin;};/**
       * Reload the source when an error is detected as long as there
       * wasn't an error previously within the last 30 seconds
       *
       * @param {Object} [options] an object with plugin options
       */var reloadSourceOnError=function reloadSourceOnError(options){initPlugin(this,options);};var version$4="3.12.2";var version$3="7.0.3";var version$2="1.3.0";var version$1="7.1.0";var _version="4.0.1";/**
       * @file videojs-http-streaming.js
       *
       * The main file for the VHS project.
       * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE
       */var Vhs={PlaylistLoader:PlaylistLoader,Playlist:Playlist,utils:utils,STANDARD_PLAYLIST_SELECTOR:lastBandwidthSelector,INITIAL_PLAYLIST_SELECTOR:lowestBitrateCompatibleVariantSelector,lastBandwidthSelector:lastBandwidthSelector,movingAverageBandwidthSelector:movingAverageBandwidthSelector,comparePlaylistBandwidth:comparePlaylistBandwidth,comparePlaylistResolution:comparePlaylistResolution,xhr:xhrFactory()};// Define getter/setters for config properties
Object.keys(Config).forEach(function(prop){Object.defineProperty(Vhs,prop,{get:function get(){videojs.log.warn("using Vhs.".concat(prop," is UNSAFE be sure you know what you are doing"));return Config[prop];},set:function set(value){videojs.log.warn("using Vhs.".concat(prop," is UNSAFE be sure you know what you are doing"));if(typeof value!=='number'||value<0){videojs.log.warn("value of Vhs.".concat(prop," must be greater than or equal to 0"));return;}Config[prop]=value;}});});var LOCAL_STORAGE_KEY='videojs-vhs';/**
       * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.
       *
       * @param {QualityLevelList} qualityLevels The QualityLevelList to update.
       * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.
       * @function handleVhsMediaChange
       */var handleVhsMediaChange=function handleVhsMediaChange(qualityLevels,playlistLoader){var newPlaylist=playlistLoader.media();var selectedIndex=-1;for(var _i202=0;_i202<qualityLevels.length;_i202++){if(qualityLevels[_i202].id===newPlaylist.id){selectedIndex=_i202;break;}}qualityLevels.selectedIndex_=selectedIndex;qualityLevels.trigger({selectedIndex:selectedIndex,type:'change'});};/**
       * Adds quality levels to list once playlist metadata is available
       *
       * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.
       * @param {Object} vhs Vhs object to listen to for media events.
       * @function handleVhsLoadedMetadata
       */var handleVhsLoadedMetadata=function handleVhsLoadedMetadata(qualityLevels,vhs){vhs.representations().forEach(function(rep){qualityLevels.addQualityLevel(rep);});handleVhsMediaChange(qualityLevels,vhs.playlists);};// VHS is a source handler, not a tech. Make sure attempts to use it
// as one do not cause exceptions.
Vhs.canPlaySource=function(){return videojs.log.warn('VHS is no longer a tech. Please remove it from '+'your player\'s techOrder.');};var emeKeySystems=function emeKeySystems(keySystemOptions,mainPlaylist,audioPlaylist){if(!keySystemOptions){return keySystemOptions;}var codecs={};if(mainPlaylist&&mainPlaylist.attributes&&mainPlaylist.attributes.CODECS){codecs=unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));}if(audioPlaylist&&audioPlaylist.attributes&&audioPlaylist.attributes.CODECS){codecs.audio=audioPlaylist.attributes.CODECS;}var videoContentType=getMimeForCodec(codecs.video);var audioContentType=getMimeForCodec(codecs.audio);// upsert the content types based on the selected playlist
var keySystemContentTypes={};for(var keySystem in keySystemOptions){keySystemContentTypes[keySystem]={};if(audioContentType){keySystemContentTypes[keySystem].audioContentType=audioContentType;}if(videoContentType){keySystemContentTypes[keySystem].videoContentType=videoContentType;}// Default to using the video playlist's PSSH even though they may be different, as
// videojs-contrib-eme will only accept one in the options.
//
// This shouldn't be an issue for most cases as early intialization will handle all
// unique PSSH values, and if they aren't, then encrypted events should have the
// specific information needed for the unique license.
if(mainPlaylist.contentProtection&&mainPlaylist.contentProtection[keySystem]&&mainPlaylist.contentProtection[keySystem].pssh){keySystemContentTypes[keySystem].pssh=mainPlaylist.contentProtection[keySystem].pssh;}// videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'
// so we need to prevent overwriting the URL entirely
if(typeof keySystemOptions[keySystem]==='string'){keySystemContentTypes[keySystem].url=keySystemOptions[keySystem];}}return merge(keySystemOptions,keySystemContentTypes);};/**
       * @typedef {Object} KeySystems
       *
       * keySystems configuration for https://github.com/videojs/videojs-contrib-eme
       * Note: not all options are listed here.
       *
       * @property {Uint8Array} [pssh]
       *           Protection System Specific Header
       */ /**
       * Goes through all the playlists and collects an array of KeySystems options objects
       * containing each playlist's keySystems and their pssh values, if available.
       *
       * @param {Object[]} playlists
       *        The playlists to look through
       * @param {string[]} keySystems
       *        The keySystems to collect pssh values for
       *
       * @return {KeySystems[]}
       *         An array of KeySystems objects containing available key systems and their
       *         pssh values
       */var getAllPsshKeySystemsOptions=function getAllPsshKeySystemsOptions(playlists,keySystems){return playlists.reduce(function(keySystemsArr,playlist){if(!playlist.contentProtection){return keySystemsArr;}var keySystemsOptions=keySystems.reduce(function(keySystemsObj,keySystem){var keySystemOptions=playlist.contentProtection[keySystem];if(keySystemOptions&&keySystemOptions.pssh){keySystemsObj[keySystem]={pssh:keySystemOptions.pssh};}return keySystemsObj;},{});if(Object.keys(keySystemsOptions).length){keySystemsArr.push(keySystemsOptions);}return keySystemsArr;},[]);};/**
       * Returns a promise that waits for the
       * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.
       *
       * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11
       * browsers.
       *
       * As per the above ticket, this is particularly important for Chrome, where, if
       * unencrypted content is appended before encrypted content and the key session has not
       * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached
       * during playback.
       *
       * @param {Object} player
       *        The player instance
       * @param {Object[]} sourceKeySystems
       *        The key systems options from the player source
       * @param {Object} [audioMedia]
       *        The active audio media playlist (optional)
       * @param {Object[]} mainPlaylists
       *        The playlists found on the main playlist object
       *
       * @return {Object}
       *         Promise that resolves when the key session has been created
       */var waitForKeySessionCreation=function waitForKeySessionCreation(_ref220){var player=_ref220.player,sourceKeySystems=_ref220.sourceKeySystems,audioMedia=_ref220.audioMedia,mainPlaylists=_ref220.mainPlaylists;if(!player.eme.initializeMediaKeys){return Promise.resolve();}// TODO should all audio PSSH values be initialized for DRM?
//
// All unique video rendition pssh values are initialized for DRM, but here only
// the initial audio playlist license is initialized. In theory, an encrypted
// event should be fired if the user switches to an alternative audio playlist
// where a license is required, but this case hasn't yet been tested. In addition, there
// may be many alternate audio playlists unlikely to be used (e.g., multiple different
// languages).
var playlists=audioMedia?mainPlaylists.concat([audioMedia]):mainPlaylists;var keySystemsOptionsArr=getAllPsshKeySystemsOptions(playlists,Object.keys(sourceKeySystems));var initializationFinishedPromises=[];var keySessionCreatedPromises=[];// Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The
// only place where it should not be deduped is for ms-prefixed APIs, but
// the existence of modern EME APIs in addition to
// ms-prefixed APIs on Edge should prevent this from being a concern.
// initializeMediaKeys also won't use the webkit-prefixed APIs.
keySystemsOptionsArr.forEach(function(keySystemsOptions){keySessionCreatedPromises.push(new Promise(function(resolve,reject){player.tech_.one('keysessioncreated',resolve);}));initializationFinishedPromises.push(new Promise(function(resolve,reject){player.eme.initializeMediaKeys({keySystems:keySystemsOptions},function(err){if(err){reject(err);return;}resolve();});}));});// The reasons Promise.race is chosen over Promise.any:
//
// * Promise.any is only available in Safari 14+.
// * None of these promises are expected to reject. If they do reject, it might be
//   better here for the race to surface the rejection, rather than mask it by using
//   Promise.any.
return Promise.race([// If a session was previously created, these will all finish resolving without
// creating a new session, otherwise it will take until the end of all license
// requests, which is why the key session check is used (to make setup much faster).
Promise.all(initializationFinishedPromises),// Once a single session is created, the browser knows DRM will be used.
Promise.race(keySessionCreatedPromises)]);};/**
       * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and
       * there are keySystems on the source, sets up source options to prepare the source for
       * eme.
       *
       * @param {Object} player
       *        The player instance
       * @param {Object[]} sourceKeySystems
       *        The key systems options from the player source
       * @param {Object} media
       *        The active media playlist
       * @param {Object} [audioMedia]
       *        The active audio media playlist (optional)
       *
       * @return {boolean}
       *         Whether or not options were configured and EME is available
       */var setupEmeOptions=function setupEmeOptions(_ref221){var player=_ref221.player,sourceKeySystems=_ref221.sourceKeySystems,media=_ref221.media,audioMedia=_ref221.audioMedia;var sourceOptions=emeKeySystems(sourceKeySystems,media,audioMedia);if(!sourceOptions){return false;}player.currentSource().keySystems=sourceOptions;// eme handles the rest of the setup, so if it is missing
// do nothing.
if(sourceOptions&&!player.eme){videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');return false;}return true;};var getVhsLocalStorage=function getVhsLocalStorage(){if(!window_1.localStorage){return null;}var storedObject=window_1.localStorage.getItem(LOCAL_STORAGE_KEY);if(!storedObject){return null;}try{return JSON.parse(storedObject);}catch(e){// someone may have tampered with the value
return null;}};var updateVhsLocalStorage=function updateVhsLocalStorage(options){if(!window_1.localStorage){return false;}var objectToStore=getVhsLocalStorage();objectToStore=objectToStore?merge(objectToStore,options):options;try{window_1.localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(objectToStore));}catch(e){// Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where
// storage is set to 0).
// https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions
// No need to perform any operation.
return false;}return objectToStore;};/**
       * Parses VHS-supported media types from data URIs. See
       * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
       * for information on data URIs.
       *
       * @param {string} dataUri
       *        The data URI
       *
       * @return {string|Object}
       *         The parsed object/string, or the original string if no supported media type
       *         was found
       */var expandDataUri=function expandDataUri(dataUri){if(dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,')===0){return JSON.parse(dataUri.substring(dataUri.indexOf(',')+1));}// no known case for this data URI, return the string as-is
return dataUri;};/**
       * Adds a request hook to an xhr object
       *
       * @param {Object} xhr object to add the onRequest hook to
       * @param {function} callback hook function for an xhr request
       */var addOnRequestHook=function addOnRequestHook(xhr,callback){if(!xhr._requestCallbackSet){xhr._requestCallbackSet=new Set();}xhr._requestCallbackSet.add(callback);};/**
       * Adds a response hook to an xhr object
       *
       * @param {Object} xhr object to add the onResponse hook to
       * @param {function} callback hook function for an xhr response
       */var addOnResponseHook=function addOnResponseHook(xhr,callback){if(!xhr._responseCallbackSet){xhr._responseCallbackSet=new Set();}xhr._responseCallbackSet.add(callback);};/**
       * Removes a request hook on an xhr object, deletes the onRequest set if empty.
       *
       * @param {Object} xhr object to remove the onRequest hook from
       * @param {function} callback hook function to remove
       */var removeOnRequestHook=function removeOnRequestHook(xhr,callback){if(!xhr._requestCallbackSet){return;}xhr._requestCallbackSet.delete(callback);if(!xhr._requestCallbackSet.size){delete xhr._requestCallbackSet;}};/**
       * Removes a response hook on an xhr object, deletes the onResponse set if empty.
       *
       * @param {Object} xhr object to remove the onResponse hook from
       * @param {function} callback hook function to remove
       */var removeOnResponseHook=function removeOnResponseHook(xhr,callback){if(!xhr._responseCallbackSet){return;}xhr._responseCallbackSet.delete(callback);if(!xhr._responseCallbackSet.size){delete xhr._responseCallbackSet;}};/**
       * Whether the browser has built-in HLS support.
       */Vhs.supportsNativeHls=function(){if(!document_1||!document_1.createElement){return false;}var video=document_1.createElement('video');// native HLS is definitely not supported if HTML5 video isn't
if(!videojs.getTech('Html5').isSupported()){return false;}// HLS manifests can go by many mime-types
var canPlay=[// Apple santioned
'application/vnd.apple.mpegurl',// Apple sanctioned for backwards compatibility
'audio/mpegurl',// Very common
'audio/x-mpegurl',// Very common
'application/x-mpegurl',// Included for completeness
'video/x-mpegurl','video/mpegurl','application/mpegurl'];return canPlay.some(function(canItPlay){return /maybe|probably/i.test(video.canPlayType(canItPlay));});}();Vhs.supportsNativeDash=function(){if(!document_1||!document_1.createElement||!videojs.getTech('Html5').isSupported()){return false;}return /maybe|probably/i.test(document_1.createElement('video').canPlayType('application/dash+xml'));}();Vhs.supportsTypeNatively=function(type){if(type==='hls'){return Vhs.supportsNativeHls;}if(type==='dash'){return Vhs.supportsNativeDash;}return false;};/**
       * VHS is a source handler, not a tech. Make sure attempts to use it
       * as one do not cause exceptions.
       */Vhs.isSupported=function(){return videojs.log.warn('VHS is no longer a tech. Please remove it from '+'your player\'s techOrder.');};/**
       * A global function for setting an onRequest hook
       *
       * @param {function} callback for request modifiction
       */Vhs.xhr.onRequest=function(callback){addOnRequestHook(Vhs.xhr,callback);};/**
       * A global function for setting an onResponse hook
       *
       * @param {callback} callback for response data retrieval
       */Vhs.xhr.onResponse=function(callback){addOnResponseHook(Vhs.xhr,callback);};/**
       * Deletes a global onRequest callback if it exists
       *
       * @param {function} callback to delete from the global set
       */Vhs.xhr.offRequest=function(callback){removeOnRequestHook(Vhs.xhr,callback);};/**
       * Deletes a global onResponse callback if it exists
       *
       * @param {function} callback to delete from the global set
       */Vhs.xhr.offResponse=function(callback){removeOnResponseHook(Vhs.xhr,callback);};var Component=videojs.getComponent('Component');/**
       * The Vhs Handler object, where we orchestrate all of the parts
       * of VHS to interact with video.js
       *
       * @class VhsHandler
       * @extends videojs.Component
       * @param {Object} source the soruce object
       * @param {Tech} tech the parent tech object
       * @param {Object} options optional and required options
       */var VhsHandler=/*#__PURE__*/function(_Component){_inherits(VhsHandler,_Component);var _super106=_createSuper(VhsHandler);function VhsHandler(source,tech,options){var _this240;_classCallCheck(this,VhsHandler);_this240=_super106.call(this,tech,options.vhs);// if a tech level `initialBandwidth` option was passed
// use that over the VHS level `bandwidth` option
if(typeof options.initialBandwidth==='number'){_this240.options_.bandwidth=options.initialBandwidth;}_this240.logger_=logger('VhsHandler');// we need access to the player in some cases,
// so, get it from Video.js via the `playerId`
if(tech.options_&&tech.options_.playerId){var _player=videojs.getPlayer(tech.options_.playerId);_this240.player_=_player;}_this240.tech_=tech;_this240.source_=source;_this240.stats={};_this240.ignoreNextSeekingEvent_=false;_this240.setOptions_();if(_this240.options_.overrideNative&&tech.overrideNativeAudioTracks&&tech.overrideNativeVideoTracks){tech.overrideNativeAudioTracks(true);tech.overrideNativeVideoTracks(true);}else if(_this240.options_.overrideNative&&(tech.featuresNativeVideoTracks||tech.featuresNativeAudioTracks)){// overriding native VHS only works if audio tracks have been emulated
// error early if we're misconfigured
throw new Error('Overriding native VHS requires emulated tracks. '+'See https://git.io/vMpjB');}// listen for fullscreenchange events for this player so that we
// can adjust our quality selection quickly
_this240.on(document_1,['fullscreenchange','webkitfullscreenchange','mozfullscreenchange','MSFullscreenChange'],function(event){var fullscreenElement=document_1.fullscreenElement||document_1.webkitFullscreenElement||document_1.mozFullScreenElement||document_1.msFullscreenElement;if(fullscreenElement&&fullscreenElement.contains(_this240.tech_.el())){_this240.playlistController_.fastQualityChange_();}else{// When leaving fullscreen, since the in page pixel dimensions should be smaller
// than full screen, see if there should be a rendition switch down to preserve
// bandwidth.
_this240.playlistController_.checkABR_();}});_this240.on(_this240.tech_,'seeking',function(){if(this.ignoreNextSeekingEvent_){this.ignoreNextSeekingEvent_=false;return;}this.setCurrentTime(this.tech_.currentTime());});_this240.on(_this240.tech_,'error',function(){// verify that the error was real and we are loaded
// enough to have pc loaded.
if(this.tech_.error()&&this.playlistController_){this.playlistController_.pauseLoading();}});_this240.on(_this240.tech_,'play',_this240.play);return _this240;}/**
         * Set VHS options based on options from configuration, as well as partial
         * options to be passed at a later time.
         *
         * @param {Object} options A partial chunk of config options
         */_createClass(VhsHandler,[{key:"setOptions_",value:function setOptions_(){var _this241=this;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.options_=merge(this.options_,options);// defaults
this.options_.withCredentials=this.options_.withCredentials||false;this.options_.limitRenditionByPlayerDimensions=this.options_.limitRenditionByPlayerDimensions===false?false:true;this.options_.useDevicePixelRatio=this.options_.useDevicePixelRatio||false;this.options_.useBandwidthFromLocalStorage=typeof this.source_.useBandwidthFromLocalStorage!=='undefined'?this.source_.useBandwidthFromLocalStorage:this.options_.useBandwidthFromLocalStorage||false;this.options_.useForcedSubtitles=this.options_.useForcedSubtitles||false;this.options_.useNetworkInformationApi=this.options_.useNetworkInformationApi||false;this.options_.useDtsForTimestampOffset=this.options_.useDtsForTimestampOffset||false;this.options_.customTagParsers=this.options_.customTagParsers||[];this.options_.customTagMappers=this.options_.customTagMappers||[];this.options_.cacheEncryptionKeys=this.options_.cacheEncryptionKeys||false;this.options_.llhls=this.options_.llhls===false?false:true;this.options_.bufferBasedABR=this.options_.bufferBasedABR||false;if(typeof this.options_.playlistExclusionDuration!=='number'){this.options_.playlistExclusionDuration=60;}if(typeof this.options_.bandwidth!=='number'){if(this.options_.useBandwidthFromLocalStorage){var storedObject=getVhsLocalStorage();if(storedObject&&storedObject.bandwidth){this.options_.bandwidth=storedObject.bandwidth;this.tech_.trigger({type:'usage',name:'vhs-bandwidth-from-local-storage'});}if(storedObject&&storedObject.throughput){this.options_.throughput=storedObject.throughput;this.tech_.trigger({type:'usage',name:'vhs-throughput-from-local-storage'});}}}// if bandwidth was not set by options or pulled from local storage, start playlist
// selection at a reasonable bandwidth
if(typeof this.options_.bandwidth!=='number'){this.options_.bandwidth=Config.INITIAL_BANDWIDTH;}// If the bandwidth number is unchanged from the initial setting
// then this takes precedence over the enableLowInitialPlaylist option
this.options_.enableLowInitialPlaylist=this.options_.enableLowInitialPlaylist&&this.options_.bandwidth===Config.INITIAL_BANDWIDTH;// grab options passed to player.src
['withCredentials','useDevicePixelRatio','customPixelRatio','limitRenditionByPlayerDimensions','bandwidth','customTagParsers','customTagMappers','cacheEncryptionKeys','playlistSelector','initialPlaylistSelector','bufferBasedABR','liveRangeSafeTimeDelta','llhls','useForcedSubtitles','useNetworkInformationApi','useDtsForTimestampOffset','exactManifestTimings','leastPixelDiffSelector'].forEach(function(option){if(typeof _this241.source_[option]!=='undefined'){_this241.options_[option]=_this241.source_[option];}});this.limitRenditionByPlayerDimensions=this.options_.limitRenditionByPlayerDimensions;this.useDevicePixelRatio=this.options_.useDevicePixelRatio;var customPixelRatio=this.options_.customPixelRatio;// Ensure the custom pixel ratio is a number greater than or equal to 0
if(typeof customPixelRatio==='number'&&customPixelRatio>=0){this.customPixelRatio=customPixelRatio;}}// alias for public method to set options
},{key:"setOptions",value:function setOptions(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.setOptions_(options);}/**
         * called when player.src gets called, handle a new source
         *
         * @param {Object} src the source object to handle
         */},{key:"src",value:function src(_src3,type){var _this242=this;// do nothing if the src is falsey
if(!_src3){return;}this.setOptions_();// add main playlist controller options
this.options_.src=expandDataUri(this.source_.src);this.options_.tech=this.tech_;this.options_.externVhs=Vhs;this.options_.sourceType=simpleTypeFromSourceType(type);// Whenever we seek internally, we should update the tech
this.options_.seekTo=function(time){_this242.tech_.setCurrentTime(time);};this.playlistController_=new PlaylistController(this.options_);var playbackWatcherOptions=merge({liveRangeSafeTimeDelta:SAFE_TIME_DELTA},this.options_,{seekable:function seekable(){return _this242.seekable();},media:function media(){return _this242.playlistController_.media();},playlistController:this.playlistController_});this.playbackWatcher_=new PlaybackWatcher(playbackWatcherOptions);this.playlistController_.on('error',function(){var player=videojs.players[_this242.tech_.options_.playerId];var error=_this242.playlistController_.error;if(_typeof(error)==='object'&&!error.code){error.code=3;}else if(typeof error==='string'){error={message:error,code:3};}player.error(error);});var defaultSelector=this.options_.bufferBasedABR?Vhs.movingAverageBandwidthSelector(0.55):Vhs.STANDARD_PLAYLIST_SELECTOR;// `this` in selectPlaylist should be the VhsHandler for backwards
// compatibility with < v2
this.playlistController_.selectPlaylist=this.selectPlaylist?this.selectPlaylist.bind(this):defaultSelector.bind(this);this.playlistController_.selectInitialPlaylist=Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this);// re-expose some internal objects for backwards compatibility with < v2
this.playlists=this.playlistController_.mainPlaylistLoader_;this.mediaSource=this.playlistController_.mediaSource;// Proxy assignment of some properties to the main playlist
// controller. Using a custom property for backwards compatibility
// with < v2
Object.defineProperties(this,{selectPlaylist:{get:function get(){return this.playlistController_.selectPlaylist;},set:function set(selectPlaylist){this.playlistController_.selectPlaylist=selectPlaylist.bind(this);}},throughput:{get:function get(){return this.playlistController_.mainSegmentLoader_.throughput.rate;},set:function set(throughput){this.playlistController_.mainSegmentLoader_.throughput.rate=throughput;// By setting `count` to 1 the throughput value becomes the starting value
// for the cumulative average
this.playlistController_.mainSegmentLoader_.throughput.count=1;}},bandwidth:{get:function get(){var playerBandwidthEst=this.playlistController_.mainSegmentLoader_.bandwidth;var networkInformation=window_1.navigator.connection||window_1.navigator.mozConnection||window_1.navigator.webkitConnection;var tenMbpsAsBitsPerSecond=10e6;if(this.options_.useNetworkInformationApi&&networkInformation){// downlink returns Mbps
// https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink
var networkInfoBandwidthEstBitsPerSec=networkInformation.downlink*1000*1000;// downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player
// estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that
// high quality streams are not filtered out.
if(networkInfoBandwidthEstBitsPerSec>=tenMbpsAsBitsPerSecond&&playerBandwidthEst>=tenMbpsAsBitsPerSecond){playerBandwidthEst=Math.max(playerBandwidthEst,networkInfoBandwidthEstBitsPerSec);}else{playerBandwidthEst=networkInfoBandwidthEstBitsPerSec;}}return playerBandwidthEst;},set:function set(bandwidth){this.playlistController_.mainSegmentLoader_.bandwidth=bandwidth;// setting the bandwidth manually resets the throughput counter
// `count` is set to zero that current value of `rate` isn't included
// in the cumulative average
this.playlistController_.mainSegmentLoader_.throughput={rate:0,count:0};}},/**
             * `systemBandwidth` is a combination of two serial processes bit-rates. The first
             * is the network bitrate provided by `bandwidth` and the second is the bitrate of
             * the entire process after that - decryption, transmuxing, and appending - provided
             * by `throughput`.
             *
             * Since the two process are serial, the overall system bandwidth is given by:
             *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)
             */systemBandwidth:{get:function get(){var invBandwidth=1/(this.bandwidth||1);var invThroughput;if(this.throughput>0){invThroughput=1/this.throughput;}else{invThroughput=0;}var systemBitrate=Math.floor(1/(invBandwidth+invThroughput));return systemBitrate;},set:function set(){videojs.log.error('The "systemBandwidth" property is read-only');}}});if(this.options_.bandwidth){this.bandwidth=this.options_.bandwidth;}if(this.options_.throughput){this.throughput=this.options_.throughput;}Object.defineProperties(this.stats,{bandwidth:{get:function get(){return _this242.bandwidth||0;},enumerable:true},mediaRequests:{get:function get(){return _this242.playlistController_.mediaRequests_()||0;},enumerable:true},mediaRequestsAborted:{get:function get(){return _this242.playlistController_.mediaRequestsAborted_()||0;},enumerable:true},mediaRequestsTimedout:{get:function get(){return _this242.playlistController_.mediaRequestsTimedout_()||0;},enumerable:true},mediaRequestsErrored:{get:function get(){return _this242.playlistController_.mediaRequestsErrored_()||0;},enumerable:true},mediaTransferDuration:{get:function get(){return _this242.playlistController_.mediaTransferDuration_()||0;},enumerable:true},mediaBytesTransferred:{get:function get(){return _this242.playlistController_.mediaBytesTransferred_()||0;},enumerable:true},mediaSecondsLoaded:{get:function get(){return _this242.playlistController_.mediaSecondsLoaded_()||0;},enumerable:true},mediaAppends:{get:function get(){return _this242.playlistController_.mediaAppends_()||0;},enumerable:true},mainAppendsToLoadedData:{get:function get(){return _this242.playlistController_.mainAppendsToLoadedData_()||0;},enumerable:true},audioAppendsToLoadedData:{get:function get(){return _this242.playlistController_.audioAppendsToLoadedData_()||0;},enumerable:true},appendsToLoadedData:{get:function get(){return _this242.playlistController_.appendsToLoadedData_()||0;},enumerable:true},timeToLoadedData:{get:function get(){return _this242.playlistController_.timeToLoadedData_()||0;},enumerable:true},buffered:{get:function get(){return timeRangesToArray(_this242.tech_.buffered());},enumerable:true},currentTime:{get:function get(){return _this242.tech_.currentTime();},enumerable:true},currentSource:{get:function get(){return _this242.tech_.currentSource_;},enumerable:true},currentTech:{get:function get(){return _this242.tech_.name_;},enumerable:true},duration:{get:function get(){return _this242.tech_.duration();},enumerable:true},main:{get:function get(){return _this242.playlists.main;},enumerable:true},playerDimensions:{get:function get(){return _this242.tech_.currentDimensions();},enumerable:true},seekable:{get:function get(){return timeRangesToArray(_this242.tech_.seekable());},enumerable:true},timestamp:{get:function get(){return Date.now();},enumerable:true},videoPlaybackQuality:{get:function get(){return _this242.tech_.getVideoPlaybackQuality();},enumerable:true}});this.tech_.one('canplay',this.playlistController_.setupFirstPlay.bind(this.playlistController_));this.tech_.on('bandwidthupdate',function(){if(_this242.options_.useBandwidthFromLocalStorage){updateVhsLocalStorage({bandwidth:_this242.bandwidth,throughput:Math.round(_this242.throughput)});}});this.playlistController_.on('selectedinitialmedia',function(){// Add the manual rendition mix-in to VhsHandler
renditionSelectionMixin(_this242);});this.playlistController_.sourceUpdater_.on('createdsourcebuffers',function(){_this242.setupEme_();});// the bandwidth of the primary segment loader is our best
// estimate of overall bandwidth
this.on(this.playlistController_,'progress',function(){this.tech_.trigger('progress');});// In the live case, we need to ignore the very first `seeking` event since
// that will be the result of the seek-to-live behavior
this.on(this.playlistController_,'firstplay',function(){this.ignoreNextSeekingEvent_=true;});this.setupQualityLevels_();// do nothing if the tech has been disposed already
// this can occur if someone sets the src in player.ready(), for instance
if(!this.tech_.el()){return;}this.mediaSourceUrl_=window_1.URL.createObjectURL(this.playlistController_.mediaSource);this.tech_.src(this.mediaSourceUrl_);}},{key:"createKeySessions_",value:function createKeySessions_(){var _this243=this;var audioPlaylistLoader=this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;this.logger_('waiting for EME key session creation');waitForKeySessionCreation({player:this.player_,sourceKeySystems:this.source_.keySystems,audioMedia:audioPlaylistLoader&&audioPlaylistLoader.media(),mainPlaylists:this.playlists.main.playlists}).then(function(){_this243.logger_('created EME key session');_this243.playlistController_.sourceUpdater_.initializedEme();}).catch(function(err){_this243.logger_('error while creating EME key session',err);_this243.player_.error({message:'Failed to initialize media keys for EME',code:3,metadata:{errorType:videojs.Error.EMEKeySessionCreationError}});});}},{key:"handleWaitingForKey_",value:function handleWaitingForKey_(){// If waitingforkey is fired, it's possible that the data that's necessary to retrieve
// the key is in the manifest. While this should've happened on initial source load, it
// may happen again in live streams where the keys change, and the manifest info
// reflects the update.
//
// Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's
// already requested keys for, we don't have to worry about this generating extraneous
// requests.
this.logger_('waitingforkey fired, attempting to create any new key sessions');this.createKeySessions_();}/**
         * If necessary and EME is available, sets up EME options and waits for key session
         * creation.
         *
         * This function also updates the source updater so taht it can be used, as for some
         * browsers, EME must be configured before content is appended (if appending unencrypted
         * content before encrypted content).
         */},{key:"setupEme_",value:function setupEme_(){var _this244=this;var audioPlaylistLoader=this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;var didSetupEmeOptions=setupEmeOptions({player:this.player_,sourceKeySystems:this.source_.keySystems,media:this.playlists.media(),audioMedia:audioPlaylistLoader&&audioPlaylistLoader.media()});this.player_.tech_.on('keystatuschange',function(e){_this244.playlistController_.updatePlaylistByKeyStatus(e.keyId,e.status);});this.handleWaitingForKey_=this.handleWaitingForKey_.bind(this);this.player_.tech_.on('waitingforkey',this.handleWaitingForKey_);if(!didSetupEmeOptions){// If EME options were not set up, we've done all we could to initialize EME.
this.playlistController_.sourceUpdater_.initializedEme();return;}this.createKeySessions_();}/**
         * Initializes the quality levels and sets listeners to update them.
         *
         * @method setupQualityLevels_
         * @private
         */},{key:"setupQualityLevels_",value:function setupQualityLevels_(){var _this245=this;var player=videojs.players[this.tech_.options_.playerId];// if there isn't a player or there isn't a qualityLevels plugin
// or qualityLevels_ listeners have already been setup, do nothing.
if(!player||!player.qualityLevels||this.qualityLevels_){return;}this.qualityLevels_=player.qualityLevels();this.playlistController_.on('selectedinitialmedia',function(){handleVhsLoadedMetadata(_this245.qualityLevels_,_this245);});this.playlists.on('mediachange',function(){handleVhsMediaChange(_this245.qualityLevels_,_this245.playlists);});}/**
         * return the version
         */},{key:"version",value:/**
         * return the version
         */function version(){return this.constructor.version();}},{key:"canChangeType",value:function canChangeType(){return SourceUpdater.canChangeType();}/**
         * Begin playing the video.
         */},{key:"play",value:function play(){this.playlistController_.play();}/**
         * a wrapper around the function in PlaylistController
         */},{key:"setCurrentTime",value:function setCurrentTime(currentTime){this.playlistController_.setCurrentTime(currentTime);}/**
         * a wrapper around the function in PlaylistController
         */},{key:"duration",value:function duration(){return this.playlistController_.duration();}/**
         * a wrapper around the function in PlaylistController
         */},{key:"seekable",value:function seekable(){return this.playlistController_.seekable();}/**
         * Abort all outstanding work and cleanup.
         */},{key:"dispose",value:function dispose(){if(this.playbackWatcher_){this.playbackWatcher_.dispose();}if(this.playlistController_){this.playlistController_.dispose();}if(this.qualityLevels_){this.qualityLevels_.dispose();}if(this.tech_&&this.tech_.vhs){delete this.tech_.vhs;}if(this.mediaSourceUrl_&&window_1.URL.revokeObjectURL){window_1.URL.revokeObjectURL(this.mediaSourceUrl_);this.mediaSourceUrl_=null;}if(this.tech_){this.tech_.off('waitingforkey',this.handleWaitingForKey_);}_get(_getPrototypeOf(VhsHandler.prototype),"dispose",this).call(this);}},{key:"convertToProgramTime",value:function convertToProgramTime(time,callback){return getProgramTime({playlist:this.playlistController_.media(),time:time,callback:callback});}// the player must be playing before calling this
},{key:"seekToProgramTime",value:function seekToProgramTime(programTime,callback){var pauseAfterSeek=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var retryCount=arguments.length>3&&arguments[3]!==undefined?arguments[3]:2;return _seekToProgramTime({programTime:programTime,playlist:this.playlistController_.media(),retryCount:retryCount,pauseAfterSeek:pauseAfterSeek,seekTo:this.options_.seekTo,tech:this.options_.tech,callback:callback});}/**
         * Adds the onRequest, onResponse, offRequest and offResponse functions
         * to the VhsHandler xhr Object.
         */},{key:"setupXhrHooks_",value:function setupXhrHooks_(){var _this246=this;/**
           * A player function for setting an onRequest hook
           *
           * @param {function} callback for request modifiction
           */this.xhr.onRequest=function(callback){addOnRequestHook(_this246.xhr,callback);};/**
           * A player function for setting an onResponse hook
           *
           * @param {callback} callback for response data retrieval
           */this.xhr.onResponse=function(callback){addOnResponseHook(_this246.xhr,callback);};/**
           * Deletes a player onRequest callback if it exists
           *
           * @param {function} callback to delete from the player set
           */this.xhr.offRequest=function(callback){removeOnRequestHook(_this246.xhr,callback);};/**
           * Deletes a player onResponse callback if it exists
           *
           * @param {function} callback to delete from the player set
           */this.xhr.offResponse=function(callback){removeOnResponseHook(_this246.xhr,callback);};// Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.
// This allows hooks to be set before the source is set to vhs when handleSource is called.
this.player_.trigger('xhr-hooks-ready');}}],[{key:"version",value:function version(){return{'@videojs/http-streaming':version$4,'mux.js':version$3,'mpd-parser':version$2,'m3u8-parser':version$1,'aes-decrypter':_version};}}]);return VhsHandler;}(Component);/**
       * The Source Handler object, which informs video.js what additional
       * MIME types are supported and sets up playback. It is registered
       * automatically to the appropriate tech based on the capabilities of
       * the browser it is running in. It is not necessary to use or modify
       * this object in normal usage.
       */var VhsSourceHandler={name:'videojs-http-streaming',VERSION:version$4,canHandleSource:function canHandleSource(srcObj){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var localOptions=merge(videojs.options,options);return VhsSourceHandler.canPlayType(srcObj.type,localOptions);},handleSource:function handleSource(source,tech){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var localOptions=merge(videojs.options,options);tech.vhs=new VhsHandler(source,tech,localOptions);tech.vhs.xhr=xhrFactory();tech.vhs.setupXhrHooks_();tech.vhs.src(source.src,source.type);return tech.vhs;},canPlayType:function canPlayType(type,options){var simpleType=simpleTypeFromSourceType(type);if(!simpleType){return'';}var overrideNative=VhsSourceHandler.getOverrideNative(options);var supportsTypeNatively=Vhs.supportsTypeNatively(simpleType);var canUseMsePlayback=!supportsTypeNatively||overrideNative;return canUseMsePlayback?'maybe':'';},getOverrideNative:function getOverrideNative(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$vhs=options.vhs,vhs=_options$vhs===void 0?{}:_options$vhs;var defaultOverrideNative=!(videojs.browser.IS_ANY_SAFARI||videojs.browser.IS_IOS);var _vhs$overrideNative=vhs.overrideNative,overrideNative=_vhs$overrideNative===void 0?defaultOverrideNative:_vhs$overrideNative;return overrideNative;}};/**
       * Check to see if the native MediaSource object exists and supports
       * an MP4 container with both H.264 video and AAC-LC audio.
       *
       * @return {boolean} if  native media sources are supported
       */var supportsNativeMediaSources=function supportsNativeMediaSources(){return browserSupportsCodec('avc1.4d400d,mp4a.40.2');};// register source handlers with the appropriate techs
if(supportsNativeMediaSources()){videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler,0);}videojs.VhsHandler=VhsHandler;videojs.VhsSourceHandler=VhsSourceHandler;videojs.Vhs=Vhs;if(!videojs.use){videojs.registerComponent('Vhs',Vhs);}videojs.options.vhs=videojs.options.vhs||{};if(!videojs.getPlugin||!videojs.getPlugin('reloadSourceOnError')){videojs.registerPlugin('reloadSourceOnError',reloadSourceOnError);}function a(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===n&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=t:i.appendChild(document.createTextNode(t));}}a(".styles-module_carousel-base__3keqD {\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\toutline: none;\n}\n\n.styles-module_item-provider__YgMwz {\n\toverflow: hidden;\n\twidth: 100%;\n\tcursor: pointer;\n}\n\n.styles-module_item-container__a8zaY img {\n\t-webkit-user-select: none;\n\t        user-select: none;\n\t-webkit-user-drag: none;\n}\n\n.styles-module_item-tracker__3bypy {\n\theight: 100%;\n\tdisplay: flex;\n}\n\n.styles-module_carousel-arrow__26sRw {\n\tz-index: 1;\n}\n");var h;!function(t){t[t.Right=-1]="Right",t[t.Left=1]="Left";}(h||(h={}));var E="styles-module_sliderBase__swkx1",x="styles-module_slider__o0fqa",C="styles-module_sliding__3T6T6";a(".styles-module_sliderBase__swkx1 {\n\twidth: 100%;\n\tposition: relative;\n}\n\n.styles-module_slider__o0fqa {\n\tdisplay: flex;\n\toverflow-x: auto;\n\tscrollbar-width: none; /* Firefox 64 */\n\t-ms-overflow-style: none; /* Internet Explorer 11 */\n}\n\n.styles-module_slider__o0fqa::-webkit-scrollbar {\n\t/** WebKit */\n\tdisplay: none;\n}\n\n.styles-module_slider__o0fqa > * {\n\tflex: 0 0 auto;\n}\n\n.styles-module_sliding__3T6T6 > * {\n\tpointer-events: none;\n}\n");var R=exports('a2',function(n){var i=n.children,s=n.className,a=n.leftIcon,l=n.rightIcon,c=s$1(null),u=l$4(!1),f=u[0],d=u[1],m=l$4({startX:0,scrollLeft:0}),v=m[0],g=m[1],p=function p(){var t=c.current;return{left:!!t&&t.scrollLeft>0,right:!!t&&t.scrollWidth>t.scrollLeft+t.offsetWidth};},w=l$4(p()),y=w[0],_=w[1],L=function L(t){_(p());},k=F$5(function(t){null!==t&&(Object.defineProperty(c,"current",{value:t}),_(p()),t.addEventListener("scroll",L));},[c,i]),b=function b(t){d(!1),_(p()),c.current.classList.remove(C);},R=function R(t){var e=function(t){for(var e,n,r=c.current,i=t===h.Left?r.scrollLeft+r.offsetWidth:r.scrollLeft,o=0,s=0,a=Array.from(r.children);s<a.length;s++){var l=a[s],u=(e=l,n=void 0,n=getComputedStyle(e),e.offsetWidth+(parseInt(n.marginLeft,10)||0)+(parseInt(n.marginRight,10)||0));if((o+=u)>=i){var f=t===h.Left?o-i:u;return(r.offsetWidth-f)*t;}}return r.offsetWidth;}(t),n=c.current.scrollLeft;T(500,e,n);},T=function T(t,e,n){for(var r=0,i=0;r<=t;i++){window.setTimeout(M,r,i*e/100+n),r+=t/100;}},M=function M(t){c.current.scrollLeft=t;},I=function I(e,n,r){return t$4.createElement("div",{"data-arrow":n,onClick:function onClick(){return R(e);}},null!=r?r:t$4.createElement("button",null));};return t$4.createElement("div",{className:E+" "+s,"data-testid":"carousel"},y.left&&I(h.Right,"left",a),y.right&&I(h.Left,"right",l),t$4.createElement("div",{ref:k,onMouseDown:function onMouseDown(t){d(!0),g({startX:t.pageX-c.current.offsetLeft,scrollLeft:c.current.scrollLeft});},onMouseLeave:b,onMouseUp:b,onMouseMove:function onMouseMove(t){if(f){t.preventDefault(),c.current.classList.add(C);var e=t.pageX-c.current.offsetLeft-v.startX;c.current.scrollLeft=v.scrollLeft-e;}},className:x},i));});}};});})();
